// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/ai/assistants/v1/runs/run_service.proto

package runs

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	v1 "github.com/yandex-cloud/go-genproto/yandex/cloud/ai/assistants/v1"
	threads "github.com/yandex-cloud/go-genproto/yandex/cloud/ai/assistants/v1/threads"
	common "github.com/yandex-cloud/go-genproto/yandex/cloud/ai/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum representing events that can occur in the stream.
type StreamEvent_EventType int32

const (
	// Unspecified event type.
	StreamEvent_EVENT_TYPE_UNSPECIFIED StreamEvent_EventType = 0
	// Partial message is available.
	StreamEvent_PARTIAL_MESSAGE StreamEvent_EventType = 1
	// Run has failed due to an error.
	StreamEvent_ERROR StreamEvent_EventType = 2
	// The run has completed.
	StreamEvent_DONE StreamEvent_EventType = 3
	// The run is waiting for tool calls to be executed and their results to be submitted.
	StreamEvent_TOOL_CALLS StreamEvent_EventType = 4
)

// Enum value maps for StreamEvent_EventType.
var (
	StreamEvent_EventType_name = map[int32]string{
		0: "EVENT_TYPE_UNSPECIFIED",
		1: "PARTIAL_MESSAGE",
		2: "ERROR",
		3: "DONE",
		4: "TOOL_CALLS",
	}
	StreamEvent_EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED": 0,
		"PARTIAL_MESSAGE":        1,
		"ERROR":                  2,
		"DONE":                   3,
		"TOOL_CALLS":             4,
	}
)

func (x StreamEvent_EventType) Enum() *StreamEvent_EventType {
	p := new(StreamEvent_EventType)
	*p = x
	return p
}

func (x StreamEvent_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamEvent_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_enumTypes[0].Descriptor()
}

func (StreamEvent_EventType) Type() protoreflect.EnumType {
	return &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_enumTypes[0]
}

func (x StreamEvent_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamEvent_EventType.Descriptor instead.
func (StreamEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescGZIP(), []int{8, 0}
}

// Request message for creating a new run.
type CreateRunRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the assistant for which the run is being created
	AssistantId string `protobuf:"bytes,1,opt,name=assistant_id,json=assistantId,proto3" json:"assistant_id,omitempty"`
	// ID of the thread associated with the run.
	ThreadId string `protobuf:"bytes,2,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	// Set of key-value pairs to label the run.
	Labels map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Additional messages that will be written to the thread before the run starts.
	AdditionalMessages []*threads.MessageData `protobuf:"bytes,4,rep,name=additional_messages,json=additionalMessages,proto3" json:"additional_messages,omitempty"`
	// Configuration options for truncating the prompt when the token count exceeds a specified limit.
	// If specified, these options will override the assistant's prompt truncation settings for this run.
	CustomPromptTruncationOptions *v1.PromptTruncationOptions `protobuf:"bytes,5,opt,name=custom_prompt_truncation_options,json=customPromptTruncationOptions,proto3" json:"custom_prompt_truncation_options,omitempty"`
	// Configuration options for completion generation.
	// If specified, these options will override the assistant's completion settings for this run.
	CustomCompletionOptions *v1.CompletionOptions `protobuf:"bytes,6,opt,name=custom_completion_options,json=customCompletionOptions,proto3" json:"custom_completion_options,omitempty"`
	// Enables streaming of intermediate events, such as partial messages.
	Stream bool `protobuf:"varint,7,opt,name=stream,proto3" json:"stream,omitempty"`
	// List of tools that are available for the assistant to use in this run.
	Tools []*v1.Tool `protobuf:"bytes,8,rep,name=tools,proto3" json:"tools,omitempty"`
	// Specifies the format of the model's response.
	CustomResponseFormat *v1.ResponseFormat `protobuf:"bytes,9,opt,name=custom_response_format,json=customResponseFormat,proto3" json:"custom_response_format,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CreateRunRequest) Reset() {
	*x = CreateRunRequest{}
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRunRequest) ProtoMessage() {}

func (x *CreateRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRunRequest.ProtoReflect.Descriptor instead.
func (*CreateRunRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRunRequest) GetAssistantId() string {
	if x != nil {
		return x.AssistantId
	}
	return ""
}

func (x *CreateRunRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *CreateRunRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateRunRequest) GetAdditionalMessages() []*threads.MessageData {
	if x != nil {
		return x.AdditionalMessages
	}
	return nil
}

func (x *CreateRunRequest) GetCustomPromptTruncationOptions() *v1.PromptTruncationOptions {
	if x != nil {
		return x.CustomPromptTruncationOptions
	}
	return nil
}

func (x *CreateRunRequest) GetCustomCompletionOptions() *v1.CompletionOptions {
	if x != nil {
		return x.CustomCompletionOptions
	}
	return nil
}

func (x *CreateRunRequest) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

func (x *CreateRunRequest) GetTools() []*v1.Tool {
	if x != nil {
		return x.Tools
	}
	return nil
}

func (x *CreateRunRequest) GetCustomResponseFormat() *v1.ResponseFormat {
	if x != nil {
		return x.CustomResponseFormat
	}
	return nil
}

// Request message for listing to a run events.
type ListenRunRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the run to listen to.
	RunId string `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	// Starting index for events. If provided, listening will start from this event.
	EventsStartIdx *wrapperspb.Int64Value `protobuf:"bytes,2,opt,name=events_start_idx,json=eventsStartIdx,proto3" json:"events_start_idx,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListenRunRequest) Reset() {
	*x = ListenRunRequest{}
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListenRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenRunRequest) ProtoMessage() {}

func (x *ListenRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenRunRequest.ProtoReflect.Descriptor instead.
func (*ListenRunRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListenRunRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *ListenRunRequest) GetEventsStartIdx() *wrapperspb.Int64Value {
	if x != nil {
		return x.EventsStartIdx
	}
	return nil
}

type AttachRunRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the run to listen to.
	RunId string `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	// Starting index for events. If provided, listening will start from this event.
	EventsStartIdx *wrapperspb.Int64Value `protobuf:"bytes,2,opt,name=events_start_idx,json=eventsStartIdx,proto3" json:"events_start_idx,omitempty"`
	// Event to submit to the run.
	//
	// Types that are valid to be assigned to Event:
	//
	//	*AttachRunRequest_ToolResultList
	Event         isAttachRunRequest_Event `protobuf_oneof:"Event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachRunRequest) Reset() {
	*x = AttachRunRequest{}
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachRunRequest) ProtoMessage() {}

func (x *AttachRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachRunRequest.ProtoReflect.Descriptor instead.
func (*AttachRunRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescGZIP(), []int{2}
}

func (x *AttachRunRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *AttachRunRequest) GetEventsStartIdx() *wrapperspb.Int64Value {
	if x != nil {
		return x.EventsStartIdx
	}
	return nil
}

func (x *AttachRunRequest) GetEvent() isAttachRunRequest_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *AttachRunRequest) GetToolResultList() *v1.ToolResultList {
	if x != nil {
		if x, ok := x.Event.(*AttachRunRequest_ToolResultList); ok {
			return x.ToolResultList
		}
	}
	return nil
}

type isAttachRunRequest_Event interface {
	isAttachRunRequest_Event()
}

type AttachRunRequest_ToolResultList struct {
	// A list of tool results to submit to the run, such as the output of a function call.
	ToolResultList *v1.ToolResultList `protobuf:"bytes,3,opt,name=tool_result_list,json=toolResultList,proto3,oneof"`
}

func (*AttachRunRequest_ToolResultList) isAttachRunRequest_Event() {}

// Request message for retrieving a specific run by its ID.
type GetRunRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the run to retrieve.
	RunId         string `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRunRequest) Reset() {
	*x = GetRunRequest{}
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunRequest) ProtoMessage() {}

func (x *GetRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunRequest.ProtoReflect.Descriptor instead.
func (*GetRunRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetRunRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

// Request message for retrieving the last run associated with a specific thread.
type GetLastRunByThreadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the thread for which the last run is being fetched.
	ThreadId      string `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLastRunByThreadRequest) Reset() {
	*x = GetLastRunByThreadRequest{}
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLastRunByThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastRunByThreadRequest) ProtoMessage() {}

func (x *GetLastRunByThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastRunByThreadRequest.ProtoReflect.Descriptor instead.
func (*GetLastRunByThreadRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetLastRunByThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

// Request message for listing runs.
type ListRunsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Folder ID from which to list runs.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Maximum number of threads to return per page.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Token to retrieve the next page of results.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRunsRequest) Reset() {
	*x = ListRunsRequest{}
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRunsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRunsRequest) ProtoMessage() {}

func (x *ListRunsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRunsRequest.ProtoReflect.Descriptor instead.
func (*ListRunsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListRunsRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListRunsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRunsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response message for the list operation.
type ListRunsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of runs in the specified folder.
	Runs []*Run `protobuf:"bytes,1,rep,name=runs,proto3" json:"runs,omitempty"`
	// Token to retrieve the next page of results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRunsResponse) Reset() {
	*x = ListRunsResponse{}
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRunsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRunsResponse) ProtoMessage() {}

func (x *ListRunsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRunsResponse.ProtoReflect.Descriptor instead.
func (*ListRunsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListRunsResponse) GetRuns() []*Run {
	if x != nil {
		return x.Runs
	}
	return nil
}

func (x *ListRunsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Represents the cursor position in a stream of events.
type StreamCursor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Index of the current event in the stream.
	CurrentEventIdx int64 `protobuf:"varint,1,opt,name=current_event_idx,json=currentEventIdx,proto3" json:"current_event_idx,omitempty"`
	// The number of user events received so far.
	NumUserEventsReceived int64 `protobuf:"varint,2,opt,name=num_user_events_received,json=numUserEventsReceived,proto3" json:"num_user_events_received,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *StreamCursor) Reset() {
	*x = StreamCursor{}
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCursor) ProtoMessage() {}

func (x *StreamCursor) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCursor.ProtoReflect.Descriptor instead.
func (*StreamCursor) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescGZIP(), []int{7}
}

func (x *StreamCursor) GetCurrentEventIdx() int64 {
	if x != nil {
		return x.CurrentEventIdx
	}
	return 0
}

func (x *StreamCursor) GetNumUserEventsReceived() int64 {
	if x != nil {
		return x.NumUserEventsReceived
	}
	return 0
}

// Represents an event in the stream of a run.
type StreamEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of event.
	EventType StreamEvent_EventType `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=yandex.cloud.ai.assistants.v1.runs.StreamEvent_EventType" json:"event_type,omitempty"`
	// The current position in the stream.
	StreamCursor *StreamCursor `protobuf:"bytes,2,opt,name=stream_cursor,json=streamCursor,proto3" json:"stream_cursor,omitempty"`
	// Event data, which can be one of several types.
	//
	// Types that are valid to be assigned to EventData:
	//
	//	*StreamEvent_Error
	//	*StreamEvent_PartialMessage
	//	*StreamEvent_CompletedMessage
	//	*StreamEvent_ToolCallList
	EventData     isStreamEvent_EventData `protobuf_oneof:"EventData"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEvent) Reset() {
	*x = StreamEvent{}
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent) ProtoMessage() {}

func (x *StreamEvent) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent.ProtoReflect.Descriptor instead.
func (*StreamEvent) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescGZIP(), []int{8}
}

func (x *StreamEvent) GetEventType() StreamEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return StreamEvent_EVENT_TYPE_UNSPECIFIED
}

func (x *StreamEvent) GetStreamCursor() *StreamCursor {
	if x != nil {
		return x.StreamCursor
	}
	return nil
}

func (x *StreamEvent) GetEventData() isStreamEvent_EventData {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *StreamEvent) GetError() *common.Error {
	if x != nil {
		if x, ok := x.EventData.(*StreamEvent_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *StreamEvent) GetPartialMessage() *threads.MessageContent {
	if x != nil {
		if x, ok := x.EventData.(*StreamEvent_PartialMessage); ok {
			return x.PartialMessage
		}
	}
	return nil
}

func (x *StreamEvent) GetCompletedMessage() *threads.Message {
	if x != nil {
		if x, ok := x.EventData.(*StreamEvent_CompletedMessage); ok {
			return x.CompletedMessage
		}
	}
	return nil
}

func (x *StreamEvent) GetToolCallList() *v1.ToolCallList {
	if x != nil {
		if x, ok := x.EventData.(*StreamEvent_ToolCallList); ok {
			return x.ToolCallList
		}
	}
	return nil
}

type isStreamEvent_EventData interface {
	isStreamEvent_EventData()
}

type StreamEvent_Error struct {
	// Error information if the run has failed.
	Error *common.Error `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type StreamEvent_PartialMessage struct {
	// Partially generated message.
	PartialMessage *threads.MessageContent `protobuf:"bytes,4,opt,name=partial_message,json=partialMessage,proto3,oneof"`
}

type StreamEvent_CompletedMessage struct {
	// Final message generated by an assistant if a run has completed successfully.
	CompletedMessage *threads.Message `protobuf:"bytes,5,opt,name=completed_message,json=completedMessage,proto3,oneof"`
}

type StreamEvent_ToolCallList struct {
	// A list of tool calls requested by the assistant.
	ToolCallList *v1.ToolCallList `protobuf:"bytes,6,opt,name=tool_call_list,json=toolCallList,proto3,oneof"`
}

func (*StreamEvent_Error) isStreamEvent_EventData() {}

func (*StreamEvent_PartialMessage) isStreamEvent_EventData() {}

func (*StreamEvent_CompletedMessage) isStreamEvent_EventData() {}

func (*StreamEvent_ToolCallList) isStreamEvent_EventData() {}

type SubmitToRunRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the run to submit to.
	RunId string `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	// Event to submit to the run.
	//
	// Types that are valid to be assigned to Event:
	//
	//	*SubmitToRunRequest_ToolResultList
	Event         isSubmitToRunRequest_Event `protobuf_oneof:"Event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitToRunRequest) Reset() {
	*x = SubmitToRunRequest{}
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitToRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitToRunRequest) ProtoMessage() {}

func (x *SubmitToRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitToRunRequest.ProtoReflect.Descriptor instead.
func (*SubmitToRunRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescGZIP(), []int{9}
}

func (x *SubmitToRunRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *SubmitToRunRequest) GetEvent() isSubmitToRunRequest_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *SubmitToRunRequest) GetToolResultList() *v1.ToolResultList {
	if x != nil {
		if x, ok := x.Event.(*SubmitToRunRequest_ToolResultList); ok {
			return x.ToolResultList
		}
	}
	return nil
}

type isSubmitToRunRequest_Event interface {
	isSubmitToRunRequest_Event()
}

type SubmitToRunRequest_ToolResultList struct {
	// A list of tool results to submit to the run, such as the output of a function call.
	ToolResultList *v1.ToolResultList `protobuf:"bytes,2,opt,name=tool_result_list,json=toolResultList,proto3,oneof"`
}

func (*SubmitToRunRequest_ToolResultList) isSubmitToRunRequest_Event() {}

type SubmitToRunResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitToRunResponse) Reset() {
	*x = SubmitToRunResponse{}
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitToRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitToRunResponse) ProtoMessage() {}

func (x *SubmitToRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitToRunResponse.ProtoReflect.Descriptor instead.
func (*SubmitToRunResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescGZIP(), []int{10}
}

var File_yandex_cloud_ai_assistants_v1_runs_run_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDesc = "" +
	"\n" +
	"4yandex/cloud/ai/assistants/v1/runs/run_service.proto\x12\"yandex.cloud.ai.assistants.v1.runs\x1a#yandex/cloud/ai/common/common.proto\x1a*yandex/cloud/ai/assistants/v1/common.proto\x1a3yandex/cloud/ai/assistants/v1/threads/message.proto\x1a,yandex/cloud/ai/assistants/v1/runs/run.proto\x1a\x1dyandex/cloud/validation.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\xff\x05\n" +
	"\x10CreateRunRequest\x12'\n" +
	"\fassistant_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\vassistantId\x12!\n" +
	"\tthread_id\x18\x02 \x01(\tB\x04\xe8\xc71\x01R\bthreadId\x12X\n" +
	"\x06labels\x18\x03 \x03(\v2@.yandex.cloud.ai.assistants.v1.runs.CreateRunRequest.LabelsEntryR\x06labels\x12c\n" +
	"\x13additional_messages\x18\x04 \x03(\v22.yandex.cloud.ai.assistants.v1.threads.MessageDataR\x12additionalMessages\x12\x7f\n" +
	" custom_prompt_truncation_options\x18\x05 \x01(\v26.yandex.cloud.ai.assistants.v1.PromptTruncationOptionsR\x1dcustomPromptTruncationOptions\x12l\n" +
	"\x19custom_completion_options\x18\x06 \x01(\v20.yandex.cloud.ai.assistants.v1.CompletionOptionsR\x17customCompletionOptions\x12\x16\n" +
	"\x06stream\x18\a \x01(\bR\x06stream\x129\n" +
	"\x05tools\x18\b \x03(\v2#.yandex.cloud.ai.assistants.v1.ToolR\x05tools\x12c\n" +
	"\x16custom_response_format\x18\t \x01(\v2-.yandex.cloud.ai.assistants.v1.ResponseFormatR\x14customResponseFormat\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"v\n" +
	"\x10ListenRunRequest\x12\x1b\n" +
	"\x06run_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x05runId\x12E\n" +
	"\x10events_start_idx\x18\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x0eeventsStartIdx\"\xda\x01\n" +
	"\x10AttachRunRequest\x12\x1b\n" +
	"\x06run_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x05runId\x12E\n" +
	"\x10events_start_idx\x18\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\x0eeventsStartIdx\x12Y\n" +
	"\x10tool_result_list\x18\x03 \x01(\v2-.yandex.cloud.ai.assistants.v1.ToolResultListH\x00R\x0etoolResultListB\a\n" +
	"\x05Event\",\n" +
	"\rGetRunRequest\x12\x1b\n" +
	"\x06run_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x05runId\">\n" +
	"\x19GetLastRunByThreadRequest\x12!\n" +
	"\tthread_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bthreadId\"p\n" +
	"\x0fListRunsRequest\x12!\n" +
	"\tfolder_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bfolderId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"w\n" +
	"\x10ListRunsResponse\x12;\n" +
	"\x04runs\x18\x01 \x03(\v2'.yandex.cloud.ai.assistants.v1.runs.RunR\x04runs\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"s\n" +
	"\fStreamCursor\x12*\n" +
	"\x11current_event_idx\x18\x01 \x01(\x03R\x0fcurrentEventIdx\x127\n" +
	"\x18num_user_events_received\x18\x02 \x01(\x03R\x15numUserEventsReceived\"\xfb\x04\n" +
	"\vStreamEvent\x12X\n" +
	"\n" +
	"event_type\x18\x01 \x01(\x0e29.yandex.cloud.ai.assistants.v1.runs.StreamEvent.EventTypeR\teventType\x12U\n" +
	"\rstream_cursor\x18\x02 \x01(\v20.yandex.cloud.ai.assistants.v1.runs.StreamCursorR\fstreamCursor\x125\n" +
	"\x05error\x18\x03 \x01(\v2\x1d.yandex.cloud.ai.common.ErrorH\x00R\x05error\x12`\n" +
	"\x0fpartial_message\x18\x04 \x01(\v25.yandex.cloud.ai.assistants.v1.threads.MessageContentH\x00R\x0epartialMessage\x12]\n" +
	"\x11completed_message\x18\x05 \x01(\v2..yandex.cloud.ai.assistants.v1.threads.MessageH\x00R\x10completedMessage\x12S\n" +
	"\x0etool_call_list\x18\x06 \x01(\v2+.yandex.cloud.ai.assistants.v1.ToolCallListH\x00R\ftoolCallList\"a\n" +
	"\tEventType\x12\x1a\n" +
	"\x16EVENT_TYPE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fPARTIAL_MESSAGE\x10\x01\x12\t\n" +
	"\x05ERROR\x10\x02\x12\b\n" +
	"\x04DONE\x10\x03\x12\x0e\n" +
	"\n" +
	"TOOL_CALLS\x10\x04B\v\n" +
	"\tEventData\"\x95\x01\n" +
	"\x12SubmitToRunRequest\x12\x1b\n" +
	"\x06run_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x05runId\x12Y\n" +
	"\x10tool_result_list\x18\x02 \x01(\v2-.yandex.cloud.ai.assistants.v1.ToolResultListH\x00R\x0etoolResultListB\a\n" +
	"\x05Event\"\x15\n" +
	"\x13SubmitToRunResponse2\x86\b\n" +
	"\n" +
	"RunService\x12\x87\x01\n" +
	"\x06Create\x124.yandex.cloud.ai.assistants.v1.runs.CreateRunRequest\x1a'.yandex.cloud.ai.assistants.v1.runs.Run\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/assistants/v1/runs\x12\x95\x01\n" +
	"\x06Listen\x124.yandex.cloud.ai.assistants.v1.runs.ListenRunRequest\x1a/.yandex.cloud.ai.assistants.v1.runs.StreamEvent\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/assistants/v1/runs/listen0\x01\x12s\n" +
	"\x06Attach\x124.yandex.cloud.ai.assistants.v1.runs.AttachRunRequest\x1a/.yandex.cloud.ai.assistants.v1.runs.StreamEvent(\x010\x01\x12\x87\x01\n" +
	"\x03Get\x121.yandex.cloud.ai.assistants.v1.runs.GetRunRequest\x1a'.yandex.cloud.ai.assistants.v1.runs.Run\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/assistants/v1/runs/{run_id}\x12\xa2\x01\n" +
	"\x0fGetLastByThread\x12=.yandex.cloud.ai.assistants.v1.runs.GetLastRunByThreadRequest\x1a'.yandex.cloud.ai.assistants.v1.runs.Run\"'\x82\xd3\xe4\x93\x02!\x12\x1f/assistants/v1/runs:getByThread\x12\x8e\x01\n" +
	"\x04List\x123.yandex.cloud.ai.assistants.v1.runs.ListRunsRequest\x1a4.yandex.cloud.ai.assistants.v1.runs.ListRunsResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/assistants/v1/runs\x12\xa0\x01\n" +
	"\x06Submit\x126.yandex.cloud.ai.assistants.v1.runs.SubmitToRunRequest\x1a7.yandex.cloud.ai.assistants.v1.runs.SubmitToRunResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*2\x1a/assistants/v1/runs/submitBu\n" +
	"&yandex.cloud.api.ai.assistants.v1.runsZKgithub.com/yandex-cloud/go-genproto/yandex/cloud/ai/assistants/v1/runs;runsb\x06proto3"

var (
	file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescData []byte
)

func file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDesc), len(file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDesc)))
	})
	return file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDescData
}

var file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_goTypes = []any{
	(StreamEvent_EventType)(0),         // 0: yandex.cloud.ai.assistants.v1.runs.StreamEvent.EventType
	(*CreateRunRequest)(nil),           // 1: yandex.cloud.ai.assistants.v1.runs.CreateRunRequest
	(*ListenRunRequest)(nil),           // 2: yandex.cloud.ai.assistants.v1.runs.ListenRunRequest
	(*AttachRunRequest)(nil),           // 3: yandex.cloud.ai.assistants.v1.runs.AttachRunRequest
	(*GetRunRequest)(nil),              // 4: yandex.cloud.ai.assistants.v1.runs.GetRunRequest
	(*GetLastRunByThreadRequest)(nil),  // 5: yandex.cloud.ai.assistants.v1.runs.GetLastRunByThreadRequest
	(*ListRunsRequest)(nil),            // 6: yandex.cloud.ai.assistants.v1.runs.ListRunsRequest
	(*ListRunsResponse)(nil),           // 7: yandex.cloud.ai.assistants.v1.runs.ListRunsResponse
	(*StreamCursor)(nil),               // 8: yandex.cloud.ai.assistants.v1.runs.StreamCursor
	(*StreamEvent)(nil),                // 9: yandex.cloud.ai.assistants.v1.runs.StreamEvent
	(*SubmitToRunRequest)(nil),         // 10: yandex.cloud.ai.assistants.v1.runs.SubmitToRunRequest
	(*SubmitToRunResponse)(nil),        // 11: yandex.cloud.ai.assistants.v1.runs.SubmitToRunResponse
	nil,                                // 12: yandex.cloud.ai.assistants.v1.runs.CreateRunRequest.LabelsEntry
	(*threads.MessageData)(nil),        // 13: yandex.cloud.ai.assistants.v1.threads.MessageData
	(*v1.PromptTruncationOptions)(nil), // 14: yandex.cloud.ai.assistants.v1.PromptTruncationOptions
	(*v1.CompletionOptions)(nil),       // 15: yandex.cloud.ai.assistants.v1.CompletionOptions
	(*v1.Tool)(nil),                    // 16: yandex.cloud.ai.assistants.v1.Tool
	(*v1.ResponseFormat)(nil),          // 17: yandex.cloud.ai.assistants.v1.ResponseFormat
	(*wrapperspb.Int64Value)(nil),      // 18: google.protobuf.Int64Value
	(*v1.ToolResultList)(nil),          // 19: yandex.cloud.ai.assistants.v1.ToolResultList
	(*Run)(nil),                        // 20: yandex.cloud.ai.assistants.v1.runs.Run
	(*common.Error)(nil),               // 21: yandex.cloud.ai.common.Error
	(*threads.MessageContent)(nil),     // 22: yandex.cloud.ai.assistants.v1.threads.MessageContent
	(*threads.Message)(nil),            // 23: yandex.cloud.ai.assistants.v1.threads.Message
	(*v1.ToolCallList)(nil),            // 24: yandex.cloud.ai.assistants.v1.ToolCallList
}
var file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_depIdxs = []int32{
	12, // 0: yandex.cloud.ai.assistants.v1.runs.CreateRunRequest.labels:type_name -> yandex.cloud.ai.assistants.v1.runs.CreateRunRequest.LabelsEntry
	13, // 1: yandex.cloud.ai.assistants.v1.runs.CreateRunRequest.additional_messages:type_name -> yandex.cloud.ai.assistants.v1.threads.MessageData
	14, // 2: yandex.cloud.ai.assistants.v1.runs.CreateRunRequest.custom_prompt_truncation_options:type_name -> yandex.cloud.ai.assistants.v1.PromptTruncationOptions
	15, // 3: yandex.cloud.ai.assistants.v1.runs.CreateRunRequest.custom_completion_options:type_name -> yandex.cloud.ai.assistants.v1.CompletionOptions
	16, // 4: yandex.cloud.ai.assistants.v1.runs.CreateRunRequest.tools:type_name -> yandex.cloud.ai.assistants.v1.Tool
	17, // 5: yandex.cloud.ai.assistants.v1.runs.CreateRunRequest.custom_response_format:type_name -> yandex.cloud.ai.assistants.v1.ResponseFormat
	18, // 6: yandex.cloud.ai.assistants.v1.runs.ListenRunRequest.events_start_idx:type_name -> google.protobuf.Int64Value
	18, // 7: yandex.cloud.ai.assistants.v1.runs.AttachRunRequest.events_start_idx:type_name -> google.protobuf.Int64Value
	19, // 8: yandex.cloud.ai.assistants.v1.runs.AttachRunRequest.tool_result_list:type_name -> yandex.cloud.ai.assistants.v1.ToolResultList
	20, // 9: yandex.cloud.ai.assistants.v1.runs.ListRunsResponse.runs:type_name -> yandex.cloud.ai.assistants.v1.runs.Run
	0,  // 10: yandex.cloud.ai.assistants.v1.runs.StreamEvent.event_type:type_name -> yandex.cloud.ai.assistants.v1.runs.StreamEvent.EventType
	8,  // 11: yandex.cloud.ai.assistants.v1.runs.StreamEvent.stream_cursor:type_name -> yandex.cloud.ai.assistants.v1.runs.StreamCursor
	21, // 12: yandex.cloud.ai.assistants.v1.runs.StreamEvent.error:type_name -> yandex.cloud.ai.common.Error
	22, // 13: yandex.cloud.ai.assistants.v1.runs.StreamEvent.partial_message:type_name -> yandex.cloud.ai.assistants.v1.threads.MessageContent
	23, // 14: yandex.cloud.ai.assistants.v1.runs.StreamEvent.completed_message:type_name -> yandex.cloud.ai.assistants.v1.threads.Message
	24, // 15: yandex.cloud.ai.assistants.v1.runs.StreamEvent.tool_call_list:type_name -> yandex.cloud.ai.assistants.v1.ToolCallList
	19, // 16: yandex.cloud.ai.assistants.v1.runs.SubmitToRunRequest.tool_result_list:type_name -> yandex.cloud.ai.assistants.v1.ToolResultList
	1,  // 17: yandex.cloud.ai.assistants.v1.runs.RunService.Create:input_type -> yandex.cloud.ai.assistants.v1.runs.CreateRunRequest
	2,  // 18: yandex.cloud.ai.assistants.v1.runs.RunService.Listen:input_type -> yandex.cloud.ai.assistants.v1.runs.ListenRunRequest
	3,  // 19: yandex.cloud.ai.assistants.v1.runs.RunService.Attach:input_type -> yandex.cloud.ai.assistants.v1.runs.AttachRunRequest
	4,  // 20: yandex.cloud.ai.assistants.v1.runs.RunService.Get:input_type -> yandex.cloud.ai.assistants.v1.runs.GetRunRequest
	5,  // 21: yandex.cloud.ai.assistants.v1.runs.RunService.GetLastByThread:input_type -> yandex.cloud.ai.assistants.v1.runs.GetLastRunByThreadRequest
	6,  // 22: yandex.cloud.ai.assistants.v1.runs.RunService.List:input_type -> yandex.cloud.ai.assistants.v1.runs.ListRunsRequest
	10, // 23: yandex.cloud.ai.assistants.v1.runs.RunService.Submit:input_type -> yandex.cloud.ai.assistants.v1.runs.SubmitToRunRequest
	20, // 24: yandex.cloud.ai.assistants.v1.runs.RunService.Create:output_type -> yandex.cloud.ai.assistants.v1.runs.Run
	9,  // 25: yandex.cloud.ai.assistants.v1.runs.RunService.Listen:output_type -> yandex.cloud.ai.assistants.v1.runs.StreamEvent
	9,  // 26: yandex.cloud.ai.assistants.v1.runs.RunService.Attach:output_type -> yandex.cloud.ai.assistants.v1.runs.StreamEvent
	20, // 27: yandex.cloud.ai.assistants.v1.runs.RunService.Get:output_type -> yandex.cloud.ai.assistants.v1.runs.Run
	20, // 28: yandex.cloud.ai.assistants.v1.runs.RunService.GetLastByThread:output_type -> yandex.cloud.ai.assistants.v1.runs.Run
	7,  // 29: yandex.cloud.ai.assistants.v1.runs.RunService.List:output_type -> yandex.cloud.ai.assistants.v1.runs.ListRunsResponse
	11, // 30: yandex.cloud.ai.assistants.v1.runs.RunService.Submit:output_type -> yandex.cloud.ai.assistants.v1.runs.SubmitToRunResponse
	24, // [24:31] is the sub-list for method output_type
	17, // [17:24] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_init() }
func file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_init() {
	if File_yandex_cloud_ai_assistants_v1_runs_run_service_proto != nil {
		return
	}
	file_yandex_cloud_ai_assistants_v1_runs_run_proto_init()
	file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[2].OneofWrappers = []any{
		(*AttachRunRequest_ToolResultList)(nil),
	}
	file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[8].OneofWrappers = []any{
		(*StreamEvent_Error)(nil),
		(*StreamEvent_PartialMessage)(nil),
		(*StreamEvent_CompletedMessage)(nil),
		(*StreamEvent_ToolCallList)(nil),
	}
	file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes[9].OneofWrappers = []any{
		(*SubmitToRunRequest_ToolResultList)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDesc), len(file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_ai_assistants_v1_runs_run_service_proto = out.File
	file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_goTypes = nil
	file_yandex_cloud_ai_assistants_v1_runs_run_service_proto_depIdxs = nil
}

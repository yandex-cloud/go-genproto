// Code generated by protoc-gen-goext. DO NOT EDIT.

package runs

import (
	v1 "github.com/yandex-cloud/go-genproto/yandex/cloud/ai/assistants/v1"
	threads "github.com/yandex-cloud/go-genproto/yandex/cloud/ai/assistants/v1/threads"
	common "github.com/yandex-cloud/go-genproto/yandex/cloud/ai/common"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

func (m *CreateRunRequest) SetAssistantId(v string) {
	m.AssistantId = v
}

func (m *CreateRunRequest) SetThreadId(v string) {
	m.ThreadId = v
}

func (m *CreateRunRequest) SetLabels(v map[string]string) {
	m.Labels = v
}

func (m *CreateRunRequest) SetAdditionalMessages(v []*threads.MessageData) {
	m.AdditionalMessages = v
}

func (m *CreateRunRequest) SetCustomPromptTruncationOptions(v *v1.PromptTruncationOptions) {
	m.CustomPromptTruncationOptions = v
}

func (m *CreateRunRequest) SetCustomCompletionOptions(v *v1.CompletionOptions) {
	m.CustomCompletionOptions = v
}

func (m *CreateRunRequest) SetStream(v bool) {
	m.Stream = v
}

func (m *CreateRunRequest) SetTools(v []*v1.Tool) {
	m.Tools = v
}

func (m *ListenRunRequest) SetRunId(v string) {
	m.RunId = v
}

func (m *ListenRunRequest) SetEventsStartIdx(v *wrapperspb.Int64Value) {
	m.EventsStartIdx = v
}

type AttachRunRequest_Event = isAttachRunRequest_Event

func (m *AttachRunRequest) SetEvent(v AttachRunRequest_Event) {
	m.Event = v
}

func (m *AttachRunRequest) SetRunId(v string) {
	m.RunId = v
}

func (m *AttachRunRequest) SetEventsStartIdx(v *wrapperspb.Int64Value) {
	m.EventsStartIdx = v
}

func (m *AttachRunRequest) SetToolResultList(v *v1.ToolResultList) {
	m.Event = &AttachRunRequest_ToolResultList{
		ToolResultList: v,
	}
}

func (m *GetRunRequest) SetRunId(v string) {
	m.RunId = v
}

func (m *GetLastRunByThreadRequest) SetThreadId(v string) {
	m.ThreadId = v
}

func (m *ListRunsRequest) SetFolderId(v string) {
	m.FolderId = v
}

func (m *ListRunsRequest) SetPageSize(v int64) {
	m.PageSize = v
}

func (m *ListRunsRequest) SetPageToken(v string) {
	m.PageToken = v
}

func (m *ListRunsResponse) SetRuns(v []*Run) {
	m.Runs = v
}

func (m *ListRunsResponse) SetNextPageToken(v string) {
	m.NextPageToken = v
}

func (m *StreamCursor) SetCurrentEventIdx(v int64) {
	m.CurrentEventIdx = v
}

func (m *StreamCursor) SetNumUserEventsReceived(v int64) {
	m.NumUserEventsReceived = v
}

type StreamEvent_EventData = isStreamEvent_EventData

func (m *StreamEvent) SetEventData(v StreamEvent_EventData) {
	m.EventData = v
}

func (m *StreamEvent) SetEventType(v StreamEvent_EventType) {
	m.EventType = v
}

func (m *StreamEvent) SetStreamCursor(v *StreamCursor) {
	m.StreamCursor = v
}

func (m *StreamEvent) SetError(v *common.Error) {
	m.EventData = &StreamEvent_Error{
		Error: v,
	}
}

func (m *StreamEvent) SetPartialMessage(v *threads.MessageContent) {
	m.EventData = &StreamEvent_PartialMessage{
		PartialMessage: v,
	}
}

func (m *StreamEvent) SetCompletedMessage(v *threads.Message) {
	m.EventData = &StreamEvent_CompletedMessage{
		CompletedMessage: v,
	}
}

func (m *StreamEvent) SetToolCallList(v *v1.ToolCallList) {
	m.EventData = &StreamEvent_ToolCallList{
		ToolCallList: v,
	}
}

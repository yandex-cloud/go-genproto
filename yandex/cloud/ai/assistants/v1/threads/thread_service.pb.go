// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/ai/assistants/v1/threads/thread_service.proto

package threads

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	v1 "github.com/yandex-cloud/go-genproto/yandex/cloud/ai/assistants/v1"
	common "github.com/yandex-cloud/go-genproto/yandex/cloud/ai/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for creating a new thread.
type CreateThreadRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	FolderId string                 `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// List of messages to initialize the thread.
	Messages []*MessageData `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	// Name of the thread.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the thread.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Default user ID that will be used as the author for thread messages if no other author is specified.
	DefaultMessageAuthorId string `protobuf:"bytes,5,opt,name=default_message_author_id,json=defaultMessageAuthorId,proto3" json:"default_message_author_id,omitempty"`
	// Expiration configuration for the thread.
	ExpirationConfig *common.ExpirationConfig `protobuf:"bytes,6,opt,name=expiration_config,json=expirationConfig,proto3" json:"expiration_config,omitempty"`
	// Set of key-value pairs to label the thread.
	Labels map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// List of tools that are available for assistants to use in this thread.
	Tools         []*v1.Tool `protobuf:"bytes,8,rep,name=tools,proto3" json:"tools,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateThreadRequest) Reset() {
	*x = CreateThreadRequest{}
	mi := &file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateThreadRequest) ProtoMessage() {}

func (x *CreateThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateThreadRequest.ProtoReflect.Descriptor instead.
func (*CreateThreadRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateThreadRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *CreateThreadRequest) GetMessages() []*MessageData {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *CreateThreadRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateThreadRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateThreadRequest) GetDefaultMessageAuthorId() string {
	if x != nil {
		return x.DefaultMessageAuthorId
	}
	return ""
}

func (x *CreateThreadRequest) GetExpirationConfig() *common.ExpirationConfig {
	if x != nil {
		return x.ExpirationConfig
	}
	return nil
}

func (x *CreateThreadRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateThreadRequest) GetTools() []*v1.Tool {
	if x != nil {
		return x.Tools
	}
	return nil
}

// Request message for retrieving a thread by ID.
type GetThreadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the thread to retrieve.
	ThreadId      string `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThreadRequest) Reset() {
	*x = GetThreadRequest{}
	mi := &file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThreadRequest) ProtoMessage() {}

func (x *GetThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThreadRequest.ProtoReflect.Descriptor instead.
func (*GetThreadRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

// Request message for updating an existing thread.
type UpdateThreadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the thread to update.
	ThreadId string `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	// Field mask specifying which fields to update.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// New name for the thread.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// New description for the thread.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// New expiration configuration for the thread.
	ExpirationConfig *common.ExpirationConfig `protobuf:"bytes,5,opt,name=expiration_config,json=expirationConfig,proto3" json:"expiration_config,omitempty"`
	// New set of labels for the thread.
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// A new list of tools that are available for assistants to use in this thread.
	Tools         []*v1.Tool `protobuf:"bytes,7,rep,name=tools,proto3" json:"tools,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateThreadRequest) Reset() {
	*x = UpdateThreadRequest{}
	mi := &file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateThreadRequest) ProtoMessage() {}

func (x *UpdateThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateThreadRequest.ProtoReflect.Descriptor instead.
func (*UpdateThreadRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *UpdateThreadRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateThreadRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateThreadRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateThreadRequest) GetExpirationConfig() *common.ExpirationConfig {
	if x != nil {
		return x.ExpirationConfig
	}
	return nil
}

func (x *UpdateThreadRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateThreadRequest) GetTools() []*v1.Tool {
	if x != nil {
		return x.Tools
	}
	return nil
}

// Request message for deleting a thread by ID.
type DeleteThreadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the thread to delete.
	ThreadId      string `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteThreadRequest) Reset() {
	*x = DeleteThreadRequest{}
	mi := &file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteThreadRequest) ProtoMessage() {}

func (x *DeleteThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteThreadRequest.ProtoReflect.Descriptor instead.
func (*DeleteThreadRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

// Response message for the delete operation.
type DeleteThreadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteThreadResponse) Reset() {
	*x = DeleteThreadResponse{}
	mi := &file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteThreadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteThreadResponse) ProtoMessage() {}

func (x *DeleteThreadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteThreadResponse.ProtoReflect.Descriptor instead.
func (*DeleteThreadResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDescGZIP(), []int{4}
}

// Request message for listing threads in a specific folder.
type ListThreadsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Folder ID from which to list threads.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Maximum number of threads to return per page.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Token to retrieve the next page of results.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListThreadsRequest) Reset() {
	*x = ListThreadsRequest{}
	mi := &file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListThreadsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThreadsRequest) ProtoMessage() {}

func (x *ListThreadsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThreadsRequest.ProtoReflect.Descriptor instead.
func (*ListThreadsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListThreadsRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListThreadsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListThreadsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response message for the list operation.
type ListThreadsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of threads in the specified folder.
	Threads []*Thread `protobuf:"bytes,1,rep,name=threads,proto3" json:"threads,omitempty"`
	// Token to retrieve the next page of results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListThreadsResponse) Reset() {
	*x = ListThreadsResponse{}
	mi := &file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListThreadsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThreadsResponse) ProtoMessage() {}

func (x *ListThreadsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThreadsResponse.ProtoReflect.Descriptor instead.
func (*ListThreadsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListThreadsResponse) GetThreads() []*Thread {
	if x != nil {
		return x.Threads
	}
	return nil
}

func (x *ListThreadsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_yandex_cloud_ai_assistants_v1_threads_thread_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDesc = "" +
	"\n" +
	":yandex/cloud/ai/assistants/v1/threads/thread_service.proto\x12%yandex.cloud.ai.assistants.v1.threads\x1a#yandex/cloud/ai/common/common.proto\x1a*yandex/cloud/ai/assistants/v1/common.proto\x1a3yandex/cloud/ai/assistants/v1/threads/message.proto\x1a2yandex/cloud/ai/assistants/v1/threads/thread.proto\x1a\x1dyandex/cloud/validation.proto\x1a\x1cgoogle/api/annotations.proto\x1a google/protobuf/field_mask.proto\"\xa6\x04\n" +
	"\x13CreateThreadRequest\x12!\n" +
	"\tfolder_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bfolderId\x12N\n" +
	"\bmessages\x18\x02 \x03(\v22.yandex.cloud.ai.assistants.v1.threads.MessageDataR\bmessages\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x129\n" +
	"\x19default_message_author_id\x18\x05 \x01(\tR\x16defaultMessageAuthorId\x12U\n" +
	"\x11expiration_config\x18\x06 \x01(\v2(.yandex.cloud.ai.common.ExpirationConfigR\x10expirationConfig\x12^\n" +
	"\x06labels\x18\a \x03(\v2F.yandex.cloud.ai.assistants.v1.threads.CreateThreadRequest.LabelsEntryR\x06labels\x129\n" +
	"\x05tools\x18\b \x03(\v2#.yandex.cloud.ai.assistants.v1.ToolR\x05tools\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"5\n" +
	"\x10GetThreadRequest\x12!\n" +
	"\tthread_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bthreadId\"\xde\x03\n" +
	"\x13UpdateThreadRequest\x12!\n" +
	"\tthread_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bthreadId\x12A\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskB\x04\xe8\xc71\x01R\n" +
	"updateMask\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12U\n" +
	"\x11expiration_config\x18\x05 \x01(\v2(.yandex.cloud.ai.common.ExpirationConfigR\x10expirationConfig\x12^\n" +
	"\x06labels\x18\x06 \x03(\v2F.yandex.cloud.ai.assistants.v1.threads.UpdateThreadRequest.LabelsEntryR\x06labels\x129\n" +
	"\x05tools\x18\a \x03(\v2#.yandex.cloud.ai.assistants.v1.ToolR\x05tools\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"8\n" +
	"\x13DeleteThreadRequest\x12!\n" +
	"\tthread_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bthreadId\"\x16\n" +
	"\x14DeleteThreadResponse\"s\n" +
	"\x12ListThreadsRequest\x12!\n" +
	"\tfolder_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bfolderId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"\x86\x01\n" +
	"\x13ListThreadsResponse\x12G\n" +
	"\athreads\x18\x01 \x03(\v2-.yandex.cloud.ai.assistants.v1.threads.ThreadR\athreads\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken2\xb9\x06\n" +
	"\rThreadService\x12\x96\x01\n" +
	"\x06Create\x12:.yandex.cloud.ai.assistants.v1.threads.CreateThreadRequest\x1a-.yandex.cloud.ai.assistants.v1.threads.Thread\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/assistants/v1/threads\x12\x99\x01\n" +
	"\x03Get\x127.yandex.cloud.ai.assistants.v1.threads.GetThreadRequest\x1a-.yandex.cloud.ai.assistants.v1.threads.Thread\"*\x82\xd3\xe4\x93\x02$\x12\"/assistants/v1/threads/{thread_id}\x12\xa2\x01\n" +
	"\x06Update\x12:.yandex.cloud.ai.assistants.v1.threads.UpdateThreadRequest\x1a-.yandex.cloud.ai.assistants.v1.threads.Thread\"-\x82\xd3\xe4\x93\x02':\x01*2\"/assistants/v1/threads/{thread_id}\x12\xad\x01\n" +
	"\x06Delete\x12:.yandex.cloud.ai.assistants.v1.threads.DeleteThreadRequest\x1a;.yandex.cloud.ai.assistants.v1.threads.DeleteThreadResponse\"*\x82\xd3\xe4\x93\x02$*\"/assistants/v1/threads/{thread_id}\x12\x9d\x01\n" +
	"\x04List\x129.yandex.cloud.ai.assistants.v1.threads.ListThreadsRequest\x1a:.yandex.cloud.ai.assistants.v1.threads.ListThreadsResponse\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/assistants/v1/threadsB~\n" +
	")yandex.cloud.api.ai.assistants.v1.threadsZQgithub.com/yandex-cloud/go-genproto/yandex/cloud/ai/assistants/v1/threads;threadsb\x06proto3"

var (
	file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDescData []byte
)

func file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDesc), len(file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDesc)))
	})
	return file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDescData
}

var file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_goTypes = []any{
	(*CreateThreadRequest)(nil),     // 0: yandex.cloud.ai.assistants.v1.threads.CreateThreadRequest
	(*GetThreadRequest)(nil),        // 1: yandex.cloud.ai.assistants.v1.threads.GetThreadRequest
	(*UpdateThreadRequest)(nil),     // 2: yandex.cloud.ai.assistants.v1.threads.UpdateThreadRequest
	(*DeleteThreadRequest)(nil),     // 3: yandex.cloud.ai.assistants.v1.threads.DeleteThreadRequest
	(*DeleteThreadResponse)(nil),    // 4: yandex.cloud.ai.assistants.v1.threads.DeleteThreadResponse
	(*ListThreadsRequest)(nil),      // 5: yandex.cloud.ai.assistants.v1.threads.ListThreadsRequest
	(*ListThreadsResponse)(nil),     // 6: yandex.cloud.ai.assistants.v1.threads.ListThreadsResponse
	nil,                             // 7: yandex.cloud.ai.assistants.v1.threads.CreateThreadRequest.LabelsEntry
	nil,                             // 8: yandex.cloud.ai.assistants.v1.threads.UpdateThreadRequest.LabelsEntry
	(*MessageData)(nil),             // 9: yandex.cloud.ai.assistants.v1.threads.MessageData
	(*common.ExpirationConfig)(nil), // 10: yandex.cloud.ai.common.ExpirationConfig
	(*v1.Tool)(nil),                 // 11: yandex.cloud.ai.assistants.v1.Tool
	(*fieldmaskpb.FieldMask)(nil),   // 12: google.protobuf.FieldMask
	(*Thread)(nil),                  // 13: yandex.cloud.ai.assistants.v1.threads.Thread
}
var file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_depIdxs = []int32{
	9,  // 0: yandex.cloud.ai.assistants.v1.threads.CreateThreadRequest.messages:type_name -> yandex.cloud.ai.assistants.v1.threads.MessageData
	10, // 1: yandex.cloud.ai.assistants.v1.threads.CreateThreadRequest.expiration_config:type_name -> yandex.cloud.ai.common.ExpirationConfig
	7,  // 2: yandex.cloud.ai.assistants.v1.threads.CreateThreadRequest.labels:type_name -> yandex.cloud.ai.assistants.v1.threads.CreateThreadRequest.LabelsEntry
	11, // 3: yandex.cloud.ai.assistants.v1.threads.CreateThreadRequest.tools:type_name -> yandex.cloud.ai.assistants.v1.Tool
	12, // 4: yandex.cloud.ai.assistants.v1.threads.UpdateThreadRequest.update_mask:type_name -> google.protobuf.FieldMask
	10, // 5: yandex.cloud.ai.assistants.v1.threads.UpdateThreadRequest.expiration_config:type_name -> yandex.cloud.ai.common.ExpirationConfig
	8,  // 6: yandex.cloud.ai.assistants.v1.threads.UpdateThreadRequest.labels:type_name -> yandex.cloud.ai.assistants.v1.threads.UpdateThreadRequest.LabelsEntry
	11, // 7: yandex.cloud.ai.assistants.v1.threads.UpdateThreadRequest.tools:type_name -> yandex.cloud.ai.assistants.v1.Tool
	13, // 8: yandex.cloud.ai.assistants.v1.threads.ListThreadsResponse.threads:type_name -> yandex.cloud.ai.assistants.v1.threads.Thread
	0,  // 9: yandex.cloud.ai.assistants.v1.threads.ThreadService.Create:input_type -> yandex.cloud.ai.assistants.v1.threads.CreateThreadRequest
	1,  // 10: yandex.cloud.ai.assistants.v1.threads.ThreadService.Get:input_type -> yandex.cloud.ai.assistants.v1.threads.GetThreadRequest
	2,  // 11: yandex.cloud.ai.assistants.v1.threads.ThreadService.Update:input_type -> yandex.cloud.ai.assistants.v1.threads.UpdateThreadRequest
	3,  // 12: yandex.cloud.ai.assistants.v1.threads.ThreadService.Delete:input_type -> yandex.cloud.ai.assistants.v1.threads.DeleteThreadRequest
	5,  // 13: yandex.cloud.ai.assistants.v1.threads.ThreadService.List:input_type -> yandex.cloud.ai.assistants.v1.threads.ListThreadsRequest
	13, // 14: yandex.cloud.ai.assistants.v1.threads.ThreadService.Create:output_type -> yandex.cloud.ai.assistants.v1.threads.Thread
	13, // 15: yandex.cloud.ai.assistants.v1.threads.ThreadService.Get:output_type -> yandex.cloud.ai.assistants.v1.threads.Thread
	13, // 16: yandex.cloud.ai.assistants.v1.threads.ThreadService.Update:output_type -> yandex.cloud.ai.assistants.v1.threads.Thread
	4,  // 17: yandex.cloud.ai.assistants.v1.threads.ThreadService.Delete:output_type -> yandex.cloud.ai.assistants.v1.threads.DeleteThreadResponse
	6,  // 18: yandex.cloud.ai.assistants.v1.threads.ThreadService.List:output_type -> yandex.cloud.ai.assistants.v1.threads.ListThreadsResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_init() }
func file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_init() {
	if File_yandex_cloud_ai_assistants_v1_threads_thread_service_proto != nil {
		return
	}
	file_yandex_cloud_ai_assistants_v1_threads_message_proto_init()
	file_yandex_cloud_ai_assistants_v1_threads_thread_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDesc), len(file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_ai_assistants_v1_threads_thread_service_proto = out.File
	file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_goTypes = nil
	file_yandex_cloud_ai_assistants_v1_threads_thread_service_proto_depIdxs = nil
}

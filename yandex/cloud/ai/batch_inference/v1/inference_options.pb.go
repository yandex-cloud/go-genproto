// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: yandex/cloud/ai/batch_inference/v1/inference_options.proto

package fomo

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReasoningOptions_ReasoningMode int32

const (
	ReasoningOptions_REASONING_MODE_UNSPECIFIED ReasoningOptions_ReasoningMode = 0
	ReasoningOptions_DISABLED                   ReasoningOptions_ReasoningMode = 1
	ReasoningOptions_ENABLED_HIDDEN             ReasoningOptions_ReasoningMode = 2
)

// Enum value maps for ReasoningOptions_ReasoningMode.
var (
	ReasoningOptions_ReasoningMode_name = map[int32]string{
		0: "REASONING_MODE_UNSPECIFIED",
		1: "DISABLED",
		2: "ENABLED_HIDDEN",
	}
	ReasoningOptions_ReasoningMode_value = map[string]int32{
		"REASONING_MODE_UNSPECIFIED": 0,
		"DISABLED":                   1,
		"ENABLED_HIDDEN":             2,
	}
)

func (x ReasoningOptions_ReasoningMode) Enum() *ReasoningOptions_ReasoningMode {
	p := new(ReasoningOptions_ReasoningMode)
	*p = x
	return p
}

func (x ReasoningOptions_ReasoningMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReasoningOptions_ReasoningMode) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_enumTypes[0].Descriptor()
}

func (ReasoningOptions_ReasoningMode) Type() protoreflect.EnumType {
	return &file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_enumTypes[0]
}

func (x ReasoningOptions_ReasoningMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReasoningOptions_ReasoningMode.Descriptor instead.
func (ReasoningOptions_ReasoningMode) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_rawDescGZIP(), []int{2, 0}
}

type BatchCompletionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelUri           string             `protobuf:"bytes,1,opt,name=model_uri,json=modelUri,proto3" json:"model_uri,omitempty"`
	SourceDatasetId    string             `protobuf:"bytes,2,opt,name=source_dataset_id,json=sourceDatasetId,proto3" json:"source_dataset_id,omitempty"`
	CompletionOptions  *CompletionOptions `protobuf:"bytes,3,opt,name=completion_options,json=completionOptions,proto3" json:"completion_options,omitempty"`
	DataLoggingEnabled bool               `protobuf:"varint,4,opt,name=data_logging_enabled,json=dataLoggingEnabled,proto3" json:"data_logging_enabled,omitempty"`
	// Unsupported
	//
	// Types that are assignable to StructuredOutput:
	//
	//	*BatchCompletionRequest_JsonObject
	//	*BatchCompletionRequest_JsonSchema
	StructuredOutput isBatchCompletionRequest_StructuredOutput `protobuf_oneof:"StructuredOutput"`
}

func (x *BatchCompletionRequest) Reset() {
	*x = BatchCompletionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCompletionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCompletionRequest) ProtoMessage() {}

func (x *BatchCompletionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCompletionRequest.ProtoReflect.Descriptor instead.
func (*BatchCompletionRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_rawDescGZIP(), []int{0}
}

func (x *BatchCompletionRequest) GetModelUri() string {
	if x != nil {
		return x.ModelUri
	}
	return ""
}

func (x *BatchCompletionRequest) GetSourceDatasetId() string {
	if x != nil {
		return x.SourceDatasetId
	}
	return ""
}

func (x *BatchCompletionRequest) GetCompletionOptions() *CompletionOptions {
	if x != nil {
		return x.CompletionOptions
	}
	return nil
}

func (x *BatchCompletionRequest) GetDataLoggingEnabled() bool {
	if x != nil {
		return x.DataLoggingEnabled
	}
	return false
}

func (m *BatchCompletionRequest) GetStructuredOutput() isBatchCompletionRequest_StructuredOutput {
	if m != nil {
		return m.StructuredOutput
	}
	return nil
}

func (x *BatchCompletionRequest) GetJsonObject() bool {
	if x, ok := x.GetStructuredOutput().(*BatchCompletionRequest_JsonObject); ok {
		return x.JsonObject
	}
	return false
}

func (x *BatchCompletionRequest) GetJsonSchema() *JsonSchema {
	if x, ok := x.GetStructuredOutput().(*BatchCompletionRequest_JsonSchema); ok {
		return x.JsonSchema
	}
	return nil
}

type isBatchCompletionRequest_StructuredOutput interface {
	isBatchCompletionRequest_StructuredOutput()
}

type BatchCompletionRequest_JsonObject struct {
	JsonObject bool `protobuf:"varint,5,opt,name=json_object,json=jsonObject,proto3,oneof"`
}

type BatchCompletionRequest_JsonSchema struct {
	JsonSchema *JsonSchema `protobuf:"bytes,6,opt,name=json_schema,json=jsonSchema,proto3,oneof"`
}

func (*BatchCompletionRequest_JsonObject) isBatchCompletionRequest_StructuredOutput() {}

func (*BatchCompletionRequest_JsonSchema) isBatchCompletionRequest_StructuredOutput() {}

type CompletionOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Temperature      *wrapperspb.DoubleValue `protobuf:"bytes,1,opt,name=temperature,proto3" json:"temperature,omitempty"`
	MaxTokens        *wrapperspb.Int64Value  `protobuf:"bytes,2,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"`
	ReasoningOptions *ReasoningOptions       `protobuf:"bytes,3,opt,name=reasoning_options,json=reasoningOptions,proto3" json:"reasoning_options,omitempty"`
}

func (x *CompletionOptions) Reset() {
	*x = CompletionOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompletionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletionOptions) ProtoMessage() {}

func (x *CompletionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletionOptions.ProtoReflect.Descriptor instead.
func (*CompletionOptions) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_rawDescGZIP(), []int{1}
}

func (x *CompletionOptions) GetTemperature() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Temperature
	}
	return nil
}

func (x *CompletionOptions) GetMaxTokens() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxTokens
	}
	return nil
}

func (x *CompletionOptions) GetReasoningOptions() *ReasoningOptions {
	if x != nil {
		return x.ReasoningOptions
	}
	return nil
}

type ReasoningOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode ReasoningOptions_ReasoningMode `protobuf:"varint,1,opt,name=mode,proto3,enum=yandex.cloud.ai.batch_inference.v1.ReasoningOptions_ReasoningMode" json:"mode,omitempty"`
}

func (x *ReasoningOptions) Reset() {
	*x = ReasoningOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReasoningOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReasoningOptions) ProtoMessage() {}

func (x *ReasoningOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReasoningOptions.ProtoReflect.Descriptor instead.
func (*ReasoningOptions) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_rawDescGZIP(), []int{2}
}

func (x *ReasoningOptions) GetMode() ReasoningOptions_ReasoningMode {
	if x != nil {
		return x.Mode
	}
	return ReasoningOptions_REASONING_MODE_UNSPECIFIED
}

type JsonSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema *structpb.Struct `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *JsonSchema) Reset() {
	*x = JsonSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonSchema) ProtoMessage() {}

func (x *JsonSchema) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonSchema.ProtoReflect.Descriptor instead.
func (*JsonSchema) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_rawDescGZIP(), []int{3}
}

func (x *JsonSchema) GetSchema() *structpb.Struct {
	if x != nil {
		return x.Schema
	}
	return nil
}

var File_yandex_cloud_ai_batch_inference_v1_inference_options_proto protoreflect.FileDescriptor

var file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_rawDesc = []byte{
	0x0a, 0x3a, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61,
	0x69, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x03,
	0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0xc7, 0x31,
	0x01, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x55, 0x72, 0x69, 0x12, 0x30, 0x0a, 0x11, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52, 0x0f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x64, 0x0a,
	0x12, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x6f, 0x67, 0x67,
	0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0a, 0x6a, 0x73,
	0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x51, 0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52,
	0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x42, 0x12, 0x0a, 0x10, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0xf2, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36,
	0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x12, 0x61, 0x0a, 0x11, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x10, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0xbd, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x69,
	0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x69, 0x2e, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x22, 0x51, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f,
	0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x48, 0x49, 0x44, 0x44,
	0x45, 0x4e, 0x10, 0x02, 0x22, 0x3d, 0x0a, 0x0a, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x42, 0x75, 0x0a, 0x26, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x69, 0x2e, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x5a, 0x4b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x61, 0x69, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x66, 0x6f, 0x6d, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_rawDescOnce sync.Once
	file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_rawDescData = file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_rawDesc
)

func file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_rawDescGZIP() []byte {
	file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_rawDescData)
	})
	return file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_rawDescData
}

var file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_goTypes = []any{
	(ReasoningOptions_ReasoningMode)(0), // 0: yandex.cloud.ai.batch_inference.v1.ReasoningOptions.ReasoningMode
	(*BatchCompletionRequest)(nil),      // 1: yandex.cloud.ai.batch_inference.v1.BatchCompletionRequest
	(*CompletionOptions)(nil),           // 2: yandex.cloud.ai.batch_inference.v1.CompletionOptions
	(*ReasoningOptions)(nil),            // 3: yandex.cloud.ai.batch_inference.v1.ReasoningOptions
	(*JsonSchema)(nil),                  // 4: yandex.cloud.ai.batch_inference.v1.JsonSchema
	(*wrapperspb.DoubleValue)(nil),      // 5: google.protobuf.DoubleValue
	(*wrapperspb.Int64Value)(nil),       // 6: google.protobuf.Int64Value
	(*structpb.Struct)(nil),             // 7: google.protobuf.Struct
}
var file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_depIdxs = []int32{
	2, // 0: yandex.cloud.ai.batch_inference.v1.BatchCompletionRequest.completion_options:type_name -> yandex.cloud.ai.batch_inference.v1.CompletionOptions
	4, // 1: yandex.cloud.ai.batch_inference.v1.BatchCompletionRequest.json_schema:type_name -> yandex.cloud.ai.batch_inference.v1.JsonSchema
	5, // 2: yandex.cloud.ai.batch_inference.v1.CompletionOptions.temperature:type_name -> google.protobuf.DoubleValue
	6, // 3: yandex.cloud.ai.batch_inference.v1.CompletionOptions.max_tokens:type_name -> google.protobuf.Int64Value
	3, // 4: yandex.cloud.ai.batch_inference.v1.CompletionOptions.reasoning_options:type_name -> yandex.cloud.ai.batch_inference.v1.ReasoningOptions
	0, // 5: yandex.cloud.ai.batch_inference.v1.ReasoningOptions.mode:type_name -> yandex.cloud.ai.batch_inference.v1.ReasoningOptions.ReasoningMode
	7, // 6: yandex.cloud.ai.batch_inference.v1.JsonSchema.schema:type_name -> google.protobuf.Struct
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_init() }
func file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_init() {
	if File_yandex_cloud_ai_batch_inference_v1_inference_options_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BatchCompletionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CompletionOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ReasoningOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*JsonSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_msgTypes[0].OneofWrappers = []any{
		(*BatchCompletionRequest_JsonObject)(nil),
		(*BatchCompletionRequest_JsonSchema)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_msgTypes,
	}.Build()
	File_yandex_cloud_ai_batch_inference_v1_inference_options_proto = out.File
	file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_rawDesc = nil
	file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_goTypes = nil
	file_yandex_cloud_ai_batch_inference_v1_inference_options_proto_depIdxs = nil
}

// Code generated by protoc-gen-goext. DO NOT EDIT.

package fomo

func (m *ListTuningsRequest) SetFolderId(v string) {
	m.FolderId = v
}

func (m *ListTuningsRequest) SetPageSize(v int64) {
	m.PageSize = v
}

func (m *ListTuningsRequest) SetPageToken(v string) {
	m.PageToken = v
}

func (m *ListTuningsResponse) SetTuningTasks(v []*TuningTask) {
	m.TuningTasks = v
}

func (m *ListTuningsResponse) SetNextPageToken(v string) {
	m.NextPageToken = v
}

func (m *DescribeTuningRequest) SetTuningTaskId(v string) {
	m.TuningTaskId = v
}

func (m *DescribeTuningResponse) SetTuningTask(v *TuningTask) {
	m.TuningTask = v
}

func (m *CancelTuningRequest) SetTuningTaskId(v string) {
	m.TuningTaskId = v
}

func (m *CancelTuningResponse) SetTuningTaskId(v string) {
	m.TuningTaskId = v
}

func (m *TuningResponse) SetTuningTaskId(v string) {
	m.TuningTaskId = v
}

func (m *TuningResponse) SetStatus(v TuningTask_Status) {
	m.Status = v
}

func (m *TuningResponse) SetTargetModelUri(v string) {
	m.TargetModelUri = v
}

func (m *TuningMetadata) SetTuningTaskId(v string) {
	m.TuningTaskId = v
}

func (m *TuningMetadata) SetStatus(v TuningTask_Status) {
	m.Status = v
}

type TuningRequest_TuningParams = isTuningRequest_TuningParams

func (m *TuningRequest) SetTuningParams(v TuningRequest_TuningParams) {
	m.TuningParams = v
}

func (m *TuningRequest) SetBaseModelUri(v string) {
	m.BaseModelUri = v
}

func (m *TuningRequest) SetTrainDatasets(v []*TuningRequest_WeightedDataset) {
	m.TrainDatasets = v
}

func (m *TuningRequest) SetValidationDatasets(v []*TuningRequest_WeightedDataset) {
	m.ValidationDatasets = v
}

func (m *TuningRequest) SetTextToTextCompletion(v *TextToTextCompletionTuningParams) {
	m.TuningParams = &TuningRequest_TextToTextCompletion{
		TextToTextCompletion: v,
	}
}

func (m *TuningRequest) SetName(v string) {
	m.Name = v
}

func (m *TuningRequest) SetDescription(v string) {
	m.Description = v
}

func (m *TuningRequest) SetLabels(v map[string]string) {
	m.Labels = v
}

func (m *TuningRequest_WeightedDataset) SetDatasetId(v string) {
	m.DatasetId = v
}

func (m *TuningRequest_WeightedDataset) SetWeight(v float64) {
	m.Weight = v
}

type TextToTextCompletionTuningParams_TuningType = isTextToTextCompletionTuningParams_TuningType

func (m *TextToTextCompletionTuningParams) SetTuningType(v TextToTextCompletionTuningParams_TuningType) {
	m.TuningType = v
}

func (m *TextToTextCompletionTuningParams) SetSeed(v int64) {
	m.Seed = v
}

func (m *TextToTextCompletionTuningParams) SetLr(v float64) {
	m.Lr = v
}

func (m *TextToTextCompletionTuningParams) SetNSamples(v int64) {
	m.NSamples = v
}

func (m *TextToTextCompletionTuningParams) SetAdditionalArguments(v string) {
	m.AdditionalArguments = v
}

func (m *TextToTextCompletionTuningParams) SetLora(v *TuningTypeLora) {
	m.TuningType = &TextToTextCompletionTuningParams_Lora{
		Lora: v,
	}
}

func (m *TextToTextCompletionTuningParams) SetPromptTune(v *TuningTypePromptTune) {
	m.TuningType = &TextToTextCompletionTuningParams_PromptTune{
		PromptTune: v,
	}
}

func (m *TextToTextCompletionTuningParams) SetScheduler(v *TextToTextCompletionTuningParams_Scheduler) {
	m.Scheduler = v
}

func (m *TextToTextCompletionTuningParams) SetOptimizer(v *TextToTextCompletionTuningParams_Optimizer) {
	m.Optimizer = v
}

type TextToTextCompletionTuningParams_Scheduler_Type = isTextToTextCompletionTuningParams_Scheduler_Type

func (m *TextToTextCompletionTuningParams_Scheduler) SetType(v TextToTextCompletionTuningParams_Scheduler_Type) {
	m.Type = v
}

func (m *TextToTextCompletionTuningParams_Scheduler) SetLinear(v *SchedulerLinear) {
	m.Type = &TextToTextCompletionTuningParams_Scheduler_Linear{
		Linear: v,
	}
}

func (m *TextToTextCompletionTuningParams_Scheduler) SetConstant(v *SchedulerConstant) {
	m.Type = &TextToTextCompletionTuningParams_Scheduler_Constant{
		Constant: v,
	}
}

func (m *TextToTextCompletionTuningParams_Scheduler) SetCosine(v *SchedulerCosine) {
	m.Type = &TextToTextCompletionTuningParams_Scheduler_Cosine{
		Cosine: v,
	}
}

func (m *TextToTextCompletionTuningParams_Scheduler) SetWarmupRatio(v float64) {
	m.WarmupRatio = v
}

type TextToTextCompletionTuningParams_Optimizer_Type = isTextToTextCompletionTuningParams_Optimizer_Type

func (m *TextToTextCompletionTuningParams_Optimizer) SetType(v TextToTextCompletionTuningParams_Optimizer_Type) {
	m.Type = v
}

func (m *TextToTextCompletionTuningParams_Optimizer) SetAdamw(v *OptimizerAdamw) {
	m.Type = &TextToTextCompletionTuningParams_Optimizer_Adamw{
		Adamw: v,
	}
}

func (m *GetMetricsUrlRequest) SetTaskId(v string) {
	m.TaskId = v
}

func (m *GetMetricsUrlResponse) SetLoadUrl(v string) {
	m.LoadUrl = v
}

func (m *GetOptionsRequest) SetTaskId(v string) {
	m.TaskId = v
}

type GetOptionsResponse_TuningParams = isGetOptionsResponse_TuningParams

func (m *GetOptionsResponse) SetTuningParams(v GetOptionsResponse_TuningParams) {
	m.TuningParams = v
}

func (m *GetOptionsResponse) SetTaskId(v string) {
	m.TaskId = v
}

func (m *GetOptionsResponse) SetBaseModelUri(v string) {
	m.BaseModelUri = v
}

func (m *GetOptionsResponse) SetTrainDatasets(v []*TuningRequest_WeightedDataset) {
	m.TrainDatasets = v
}

func (m *GetOptionsResponse) SetValidationDatasets(v []*TuningRequest_WeightedDataset) {
	m.ValidationDatasets = v
}

func (m *GetOptionsResponse) SetTextToTextCompletion(v *TextToTextCompletionTuningParams) {
	m.TuningParams = &GetOptionsResponse_TextToTextCompletion{
		TextToTextCompletion: v,
	}
}

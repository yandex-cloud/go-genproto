// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: yandex/cloud/apploadbalancer/v1/rate_limit.proto

package apploadbalancer

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RateLimit is a set of settings for global rate limiting.
type RateLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// AllRequests is a rate limit configuration applied to all incoming requests.
	AllRequests *RateLimit_Limit `protobuf:"bytes,3,opt,name=all_requests,json=allRequests,proto3" json:"all_requests,omitempty"`
	// RequestsPerIp is a rate limit configuration applied separately for each set of requests
	// grouped by client IP address.
	RequestsPerIp *RateLimit_Limit `protobuf:"bytes,4,opt,name=requests_per_ip,json=requestsPerIp,proto3" json:"requests_per_ip,omitempty"`
}

func (x *RateLimit) Reset() {
	*x = RateLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimit) ProtoMessage() {}

func (x *RateLimit) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimit.ProtoReflect.Descriptor instead.
func (*RateLimit) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_rawDescGZIP(), []int{0}
}

func (x *RateLimit) GetAllRequests() *RateLimit_Limit {
	if x != nil {
		return x.AllRequests
	}
	return nil
}

func (x *RateLimit) GetRequestsPerIp() *RateLimit_Limit {
	if x != nil {
		return x.RequestsPerIp
	}
	return nil
}

// Limit is a rate limit value settings.
type RateLimit_Limit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Rate:
	//
	//	*RateLimit_Limit_PerSecond
	//	*RateLimit_Limit_PerMinute
	Rate isRateLimit_Limit_Rate `protobuf_oneof:"rate"`
}

func (x *RateLimit_Limit) Reset() {
	*x = RateLimit_Limit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateLimit_Limit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimit_Limit) ProtoMessage() {}

func (x *RateLimit_Limit) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimit_Limit.ProtoReflect.Descriptor instead.
func (*RateLimit_Limit) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_rawDescGZIP(), []int{0, 0}
}

func (m *RateLimit_Limit) GetRate() isRateLimit_Limit_Rate {
	if m != nil {
		return m.Rate
	}
	return nil
}

func (x *RateLimit_Limit) GetPerSecond() int64 {
	if x, ok := x.GetRate().(*RateLimit_Limit_PerSecond); ok {
		return x.PerSecond
	}
	return 0
}

func (x *RateLimit_Limit) GetPerMinute() int64 {
	if x, ok := x.GetRate().(*RateLimit_Limit_PerMinute); ok {
		return x.PerMinute
	}
	return 0
}

type isRateLimit_Limit_Rate interface {
	isRateLimit_Limit_Rate()
}

type RateLimit_Limit_PerSecond struct {
	// PerSecond is a limit value specified with per second time unit.
	PerSecond int64 `protobuf:"varint,1,opt,name=per_second,json=perSecond,proto3,oneof"`
}

type RateLimit_Limit_PerMinute struct {
	// PerMinute is a limit value specified with per minute time unit.
	PerMinute int64 `protobuf:"varint,2,opt,name=per_minute,json=perMinute,proto3,oneof"`
}

func (*RateLimit_Limit_PerSecond) isRateLimit_Limit_Rate() {}

func (*RateLimit_Limit_PerMinute) isRateLimit_Limit_Rate() {}

var File_yandex_cloud_apploadbalancer_v1_rate_limit_proto protoreflect.FileDescriptor

var file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_rawDesc = []byte{
	0x0a, 0x30, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61,
	0x70, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x1d, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa3, 0x02, 0x0a, 0x09, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x53, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x58, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x50, 0x65, 0x72, 0x49, 0x70, 0x1a,
	0x67, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xfa, 0xc7,
	0x31, 0x02, 0x3e, 0x30, 0x48, 0x00, 0x52, 0x09, 0x70, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xfa, 0xc7, 0x31, 0x02, 0x3e, 0x30, 0x48, 0x00, 0x52,
	0x09, 0x70, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x42, 0x0c, 0x0a, 0x04, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x04, 0xc0, 0xc1, 0x31, 0x01, 0x42, 0x7a, 0x0a, 0x23, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x5a,
	0x53, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x72, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x70, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_rawDescOnce sync.Once
	file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_rawDescData = file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_rawDesc
)

func file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_rawDescGZIP() []byte {
	file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_rawDescData)
	})
	return file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_rawDescData
}

var file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_goTypes = []any{
	(*RateLimit)(nil),       // 0: yandex.cloud.apploadbalancer.v1.RateLimit
	(*RateLimit_Limit)(nil), // 1: yandex.cloud.apploadbalancer.v1.RateLimit.Limit
}
var file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_depIdxs = []int32{
	1, // 0: yandex.cloud.apploadbalancer.v1.RateLimit.all_requests:type_name -> yandex.cloud.apploadbalancer.v1.RateLimit.Limit
	1, // 1: yandex.cloud.apploadbalancer.v1.RateLimit.requests_per_ip:type_name -> yandex.cloud.apploadbalancer.v1.RateLimit.Limit
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_init() }
func file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_init() {
	if File_yandex_cloud_apploadbalancer_v1_rate_limit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RateLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RateLimit_Limit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_msgTypes[1].OneofWrappers = []any{
		(*RateLimit_Limit_PerSecond)(nil),
		(*RateLimit_Limit_PerMinute)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_msgTypes,
	}.Build()
	File_yandex_cloud_apploadbalancer_v1_rate_limit_proto = out.File
	file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_rawDesc = nil
	file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_goTypes = nil
	file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_depIdxs = nil
}

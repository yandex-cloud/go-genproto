// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/apploadbalancer/v1/virtual_host_service.proto

package apploadbalancer

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetVirtualHostRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the HTTP router that the virtual host belongs to.
	//
	// To get the HTTP router ID, make a [HttpRouterService.List] request.
	HttpRouterId string `protobuf:"bytes,1,opt,name=http_router_id,json=httpRouterId,proto3" json:"http_router_id,omitempty"`
	// Name of the virtual host to return.
	//
	// To get the virtual host name, make a [VirtualHostService.List] request.
	VirtualHostName string `protobuf:"bytes,2,opt,name=virtual_host_name,json=virtualHostName,proto3" json:"virtual_host_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetVirtualHostRequest) Reset() {
	*x = GetVirtualHostRequest{}
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVirtualHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualHostRequest) ProtoMessage() {}

func (x *GetVirtualHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualHostRequest.ProtoReflect.Descriptor instead.
func (*GetVirtualHostRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetVirtualHostRequest) GetHttpRouterId() string {
	if x != nil {
		return x.HttpRouterId
	}
	return ""
}

func (x *GetVirtualHostRequest) GetVirtualHostName() string {
	if x != nil {
		return x.VirtualHostName
	}
	return ""
}

type ListVirtualHostsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the HTTP router to list virtual hosts in.
	//
	// To get the HTTP router ID, make a [HttpRouterService.List] request.
	HttpRouterId string `protobuf:"bytes,1,opt,name=http_router_id,json=httpRouterId,proto3" json:"http_router_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than `page_size`, the service returns a [ListVirtualHostsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set `page_token` to the
	// [ListVirtualHostsResponse.next_page_token] returned by a previous list request.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVirtualHostsRequest) Reset() {
	*x = ListVirtualHostsRequest{}
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualHostsRequest) ProtoMessage() {}

func (x *ListVirtualHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtualHostsRequest.ProtoReflect.Descriptor instead.
func (*ListVirtualHostsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListVirtualHostsRequest) GetHttpRouterId() string {
	if x != nil {
		return x.HttpRouterId
	}
	return ""
}

func (x *ListVirtualHostsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListVirtualHostsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListVirtualHostsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of virtual hosts of the specified HTTP router.
	VirtualHosts []*VirtualHost `protobuf:"bytes,1,rep,name=virtual_hosts,json=virtualHosts,proto3" json:"virtual_hosts,omitempty"`
	// Token for getting the next page of the list. If the number of results is greater than
	// the specified [ListVirtualHostsRequest.page_size], use `next_page_token` as the value
	// for the [ListVirtualHostsRequest.page_token] parameter in the next list request.
	//
	// Each subsequent page will have its own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVirtualHostsResponse) Reset() {
	*x = ListVirtualHostsResponse{}
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualHostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualHostsResponse) ProtoMessage() {}

func (x *ListVirtualHostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtualHostsResponse.ProtoReflect.Descriptor instead.
func (*ListVirtualHostsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListVirtualHostsResponse) GetVirtualHosts() []*VirtualHost {
	if x != nil {
		return x.VirtualHosts
	}
	return nil
}

func (x *ListVirtualHostsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateVirtualHostRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the HTTP router to create a virtual host in.
	//
	// To get the HTTP router ID, make a [HttpRouterService.List] request.
	HttpRouterId string `protobuf:"bytes,1,opt,name=http_router_id,json=httpRouterId,proto3" json:"http_router_id,omitempty"`
	// Name of the virtual host. The name must be unique within the HTTP router and cannot be changed after creation.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// List of domains that are attributed to the virtual host.
	//
	// The host is selected to process the request received by the load balancer
	// if the domain specified in the HTTP/1.1 `Host` header or the HTTP/2 `:authority` pseudo-header matches a domain
	// specified in the host.
	//
	// A wildcard asterisk character (`*`) matches 0 or more characters.
	//
	// If not specified, all domains are attributed to the host, which is the same as specifying a `*` value.
	// An HTTP router must not contain more than one virtual host to which all domains are attributed.
	Authority []string `protobuf:"bytes,3,rep,name=authority,proto3" json:"authority,omitempty"`
	// Routes of the virtual host.
	//
	// A route contains a set of conditions (predicates) that are used by the load balancer to select the route
	// for the request and an action on the request.
	// For details about the concept, see [documentation](/docs/application-load-balancer/concepts/http-router#routes).
	//
	// The order of routes matters: the first route whose predicate matches the request is selected.
	// The most specific routes should be at the top of the list, so that they are not overridden.
	// For example, if the first HTTP route is configured, via [HttpRoute.match], to match paths prefixed with just `/`,
	// other routes are never matched.
	Routes []*Route `protobuf:"bytes,5,rep,name=routes,proto3" json:"routes,omitempty"`
	// Modifications that are made to the headers of incoming HTTP requests before they are forwarded to backends.
	ModifyRequestHeaders []*HeaderModification `protobuf:"bytes,6,rep,name=modify_request_headers,json=modifyRequestHeaders,proto3" json:"modify_request_headers,omitempty"`
	// Modifications that are made to the headers of HTTP responses received from backends
	// before responses are forwarded to clients.
	ModifyResponseHeaders []*HeaderModification `protobuf:"bytes,7,rep,name=modify_response_headers,json=modifyResponseHeaders,proto3" json:"modify_response_headers,omitempty"`
	// Route options for the virtual host.
	RouteOptions *RouteOptions `protobuf:"bytes,8,opt,name=route_options,json=routeOptions,proto3" json:"route_options,omitempty"`
	// RateLimit is a rate limit configuration applied for a whole virtual host.
	RateLimit     *RateLimit `protobuf:"bytes,9,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVirtualHostRequest) Reset() {
	*x = CreateVirtualHostRequest{}
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVirtualHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualHostRequest) ProtoMessage() {}

func (x *CreateVirtualHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtualHostRequest.ProtoReflect.Descriptor instead.
func (*CreateVirtualHostRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateVirtualHostRequest) GetHttpRouterId() string {
	if x != nil {
		return x.HttpRouterId
	}
	return ""
}

func (x *CreateVirtualHostRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVirtualHostRequest) GetAuthority() []string {
	if x != nil {
		return x.Authority
	}
	return nil
}

func (x *CreateVirtualHostRequest) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *CreateVirtualHostRequest) GetModifyRequestHeaders() []*HeaderModification {
	if x != nil {
		return x.ModifyRequestHeaders
	}
	return nil
}

func (x *CreateVirtualHostRequest) GetModifyResponseHeaders() []*HeaderModification {
	if x != nil {
		return x.ModifyResponseHeaders
	}
	return nil
}

func (x *CreateVirtualHostRequest) GetRouteOptions() *RouteOptions {
	if x != nil {
		return x.RouteOptions
	}
	return nil
}

func (x *CreateVirtualHostRequest) GetRateLimit() *RateLimit {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

type CreateVirtualHostMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the HTTP router that the virtual host is being created in.
	HttpRouterId string `protobuf:"bytes,1,opt,name=http_router_id,json=httpRouterId,proto3" json:"http_router_id,omitempty"`
	// Name of the virtual host that is being created.
	VirtualHostName string `protobuf:"bytes,2,opt,name=virtual_host_name,json=virtualHostName,proto3" json:"virtual_host_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateVirtualHostMetadata) Reset() {
	*x = CreateVirtualHostMetadata{}
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVirtualHostMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualHostMetadata) ProtoMessage() {}

func (x *CreateVirtualHostMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtualHostMetadata.ProtoReflect.Descriptor instead.
func (*CreateVirtualHostMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateVirtualHostMetadata) GetHttpRouterId() string {
	if x != nil {
		return x.HttpRouterId
	}
	return ""
}

func (x *CreateVirtualHostMetadata) GetVirtualHostName() string {
	if x != nil {
		return x.VirtualHostName
	}
	return ""
}

type UpdateVirtualHostRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the HTTP router to update a virtual host in.
	//
	// To get the HTTP router ID, make a [HttpRouterService.List] request.
	HttpRouterId string `protobuf:"bytes,1,opt,name=http_router_id,json=httpRouterId,proto3" json:"http_router_id,omitempty"`
	// Name of the virtual host.
	//
	// Used only to refer to the virtual host. The name of a host cannot be changed.
	//
	// To get the virtual host name, make a [VirtualHostService.List] request.
	VirtualHostName string `protobuf:"bytes,2,opt,name=virtual_host_name,json=virtualHostName,proto3" json:"virtual_host_name,omitempty"`
	// Field mask that specifies which attributes of the virtual host should be updated.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// New list of domains to attribute to the virtual host.
	//
	// The host is selected to process the request received by the load balancer
	// if the domain specified in the HTTP/1.1 `Host` header or the HTTP/2 `:authority` pseudo-header matches a domain
	// specified in the host.
	//
	// A wildcard asterisk character (`*`) matches 0 or more characters.
	//
	// Existing list of domains is completely replaced by the specified list.
	//
	// If not specified, all domains are attributed to the host, which is the same as specifying a `*` value.
	// An HTTP router must not contain more than one virtual host to which all domains are attributed.
	Authority []string `protobuf:"bytes,4,rep,name=authority,proto3" json:"authority,omitempty"`
	// New list of routes of the virtual host.
	//
	// A route contains a set of conditions (predicates) that are used by the load balancer to select the route
	// for the request and an action on the request.
	// For details about the concept, see [documentation](/docs/application-load-balancer/concepts/http-router#routes).
	//
	// The order of routes matters: the first route whose predicate matches the request is selected.
	// The most specific routes should be at the top of the list, so that they are not overridden.
	// For example, if the first HTTP route is configured, via [HttpRoute.match], to match paths prefixed with just `/`,
	// other routes are never matched.
	//
	// Existing list of routes is completely replaced by the specified list, so if you just want to remove a route,
	// make a [VirtualHostService.RemoveRoute] request.
	Routes []*Route `protobuf:"bytes,6,rep,name=routes,proto3" json:"routes,omitempty"`
	// New list of modifications that are made to the headers of incoming HTTP requests
	// before they are forwarded to backends.
	//
	// Existing list of modifications is completely replaced by the specified list.
	ModifyRequestHeaders []*HeaderModification `protobuf:"bytes,7,rep,name=modify_request_headers,json=modifyRequestHeaders,proto3" json:"modify_request_headers,omitempty"`
	// New list of modifications that are made to the headers of HTTP responses received from backends
	// before responses are forwarded to clients.
	//
	// Existing list of modifications is completely replaced by the specified list.
	ModifyResponseHeaders []*HeaderModification `protobuf:"bytes,8,rep,name=modify_response_headers,json=modifyResponseHeaders,proto3" json:"modify_response_headers,omitempty"`
	// New route options for the virtual host.
	RouteOptions *RouteOptions `protobuf:"bytes,9,opt,name=route_options,json=routeOptions,proto3" json:"route_options,omitempty"`
	// RateLimit is a rate limit configuration applied for a whole virtual host.
	RateLimit     *RateLimit `protobuf:"bytes,10,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVirtualHostRequest) Reset() {
	*x = UpdateVirtualHostRequest{}
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVirtualHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtualHostRequest) ProtoMessage() {}

func (x *UpdateVirtualHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVirtualHostRequest.ProtoReflect.Descriptor instead.
func (*UpdateVirtualHostRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateVirtualHostRequest) GetHttpRouterId() string {
	if x != nil {
		return x.HttpRouterId
	}
	return ""
}

func (x *UpdateVirtualHostRequest) GetVirtualHostName() string {
	if x != nil {
		return x.VirtualHostName
	}
	return ""
}

func (x *UpdateVirtualHostRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateVirtualHostRequest) GetAuthority() []string {
	if x != nil {
		return x.Authority
	}
	return nil
}

func (x *UpdateVirtualHostRequest) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *UpdateVirtualHostRequest) GetModifyRequestHeaders() []*HeaderModification {
	if x != nil {
		return x.ModifyRequestHeaders
	}
	return nil
}

func (x *UpdateVirtualHostRequest) GetModifyResponseHeaders() []*HeaderModification {
	if x != nil {
		return x.ModifyResponseHeaders
	}
	return nil
}

func (x *UpdateVirtualHostRequest) GetRouteOptions() *RouteOptions {
	if x != nil {
		return x.RouteOptions
	}
	return nil
}

func (x *UpdateVirtualHostRequest) GetRateLimit() *RateLimit {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

type UpdateVirtualHostMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the HTTP router that the virtual host is being updated in.
	HttpRouterId string `protobuf:"bytes,1,opt,name=http_router_id,json=httpRouterId,proto3" json:"http_router_id,omitempty"`
	// Name of the virtual host that is being updated.
	VirtualHostName string `protobuf:"bytes,2,opt,name=virtual_host_name,json=virtualHostName,proto3" json:"virtual_host_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateVirtualHostMetadata) Reset() {
	*x = UpdateVirtualHostMetadata{}
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVirtualHostMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtualHostMetadata) ProtoMessage() {}

func (x *UpdateVirtualHostMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVirtualHostMetadata.ProtoReflect.Descriptor instead.
func (*UpdateVirtualHostMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateVirtualHostMetadata) GetHttpRouterId() string {
	if x != nil {
		return x.HttpRouterId
	}
	return ""
}

func (x *UpdateVirtualHostMetadata) GetVirtualHostName() string {
	if x != nil {
		return x.VirtualHostName
	}
	return ""
}

type DeleteVirtualHostRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the HTTP router to delete a virtual host from.
	//
	// To get the HTTP router ID, make a [HttpRouterService.List] request.
	HttpRouterId string `protobuf:"bytes,1,opt,name=http_router_id,json=httpRouterId,proto3" json:"http_router_id,omitempty"`
	// Name of the virtual host to delete.
	//
	// To get the virtual host name, make a [VirtualHostService.List] request.
	VirtualHostName string `protobuf:"bytes,2,opt,name=virtual_host_name,json=virtualHostName,proto3" json:"virtual_host_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeleteVirtualHostRequest) Reset() {
	*x = DeleteVirtualHostRequest{}
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVirtualHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtualHostRequest) ProtoMessage() {}

func (x *DeleteVirtualHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVirtualHostRequest.ProtoReflect.Descriptor instead.
func (*DeleteVirtualHostRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteVirtualHostRequest) GetHttpRouterId() string {
	if x != nil {
		return x.HttpRouterId
	}
	return ""
}

func (x *DeleteVirtualHostRequest) GetVirtualHostName() string {
	if x != nil {
		return x.VirtualHostName
	}
	return ""
}

type DeleteVirtualHostMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the HTTP router that the virtual host is being deleted from.
	HttpRouterId string `protobuf:"bytes,1,opt,name=http_router_id,json=httpRouterId,proto3" json:"http_router_id,omitempty"`
	// Name of the virtual host that is being deleted.
	VirtualHostName string `protobuf:"bytes,2,opt,name=virtual_host_name,json=virtualHostName,proto3" json:"virtual_host_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeleteVirtualHostMetadata) Reset() {
	*x = DeleteVirtualHostMetadata{}
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVirtualHostMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtualHostMetadata) ProtoMessage() {}

func (x *DeleteVirtualHostMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVirtualHostMetadata.ProtoReflect.Descriptor instead.
func (*DeleteVirtualHostMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteVirtualHostMetadata) GetHttpRouterId() string {
	if x != nil {
		return x.HttpRouterId
	}
	return ""
}

func (x *DeleteVirtualHostMetadata) GetVirtualHostName() string {
	if x != nil {
		return x.VirtualHostName
	}
	return ""
}

type RemoveRouteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the HTTP router to delete a route from.
	//
	// To get the HTTP router ID, make a [HttpRouterService.List] request.
	HttpRouterId string `protobuf:"bytes,1,opt,name=http_router_id,json=httpRouterId,proto3" json:"http_router_id,omitempty"`
	// Name of the virtual host to delete a route from.
	//
	// To get the virtual host name, make a [VirtualHostService.List] request.
	VirtualHostName string `protobuf:"bytes,2,opt,name=virtual_host_name,json=virtualHostName,proto3" json:"virtual_host_name,omitempty"`
	// Name of the route to delete.
	//
	// To get the route name, make a [VirtualHostService.Get] request.
	RouteName     string `protobuf:"bytes,3,opt,name=route_name,json=routeName,proto3" json:"route_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveRouteRequest) Reset() {
	*x = RemoveRouteRequest{}
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRouteRequest) ProtoMessage() {}

func (x *RemoveRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRouteRequest.ProtoReflect.Descriptor instead.
func (*RemoveRouteRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveRouteRequest) GetHttpRouterId() string {
	if x != nil {
		return x.HttpRouterId
	}
	return ""
}

func (x *RemoveRouteRequest) GetVirtualHostName() string {
	if x != nil {
		return x.VirtualHostName
	}
	return ""
}

func (x *RemoveRouteRequest) GetRouteName() string {
	if x != nil {
		return x.RouteName
	}
	return ""
}

type RemoveRouteMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the HTTP router that the route is being deleted from.
	HttpRouterId string `protobuf:"bytes,1,opt,name=http_router_id,json=httpRouterId,proto3" json:"http_router_id,omitempty"`
	// Name of the virtual host that the route is being deleted from.
	VirtualHostName string `protobuf:"bytes,2,opt,name=virtual_host_name,json=virtualHostName,proto3" json:"virtual_host_name,omitempty"`
	// Name of the route that is being deleted.
	RouteName     string `protobuf:"bytes,3,opt,name=route_name,json=routeName,proto3" json:"route_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveRouteMetadata) Reset() {
	*x = RemoveRouteMetadata{}
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveRouteMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRouteMetadata) ProtoMessage() {}

func (x *RemoveRouteMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRouteMetadata.ProtoReflect.Descriptor instead.
func (*RemoveRouteMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveRouteMetadata) GetHttpRouterId() string {
	if x != nil {
		return x.HttpRouterId
	}
	return ""
}

func (x *RemoveRouteMetadata) GetVirtualHostName() string {
	if x != nil {
		return x.VirtualHostName
	}
	return ""
}

func (x *RemoveRouteMetadata) GetRouteName() string {
	if x != nil {
		return x.RouteName
	}
	return ""
}

type UpdateRouteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the HTTP router to update a route in.
	//
	// To get the HTTP router ID, make a [HttpRouterService.List] request.
	HttpRouterId string `protobuf:"bytes,1,opt,name=http_router_id,json=httpRouterId,proto3" json:"http_router_id,omitempty"`
	// Name of the virtual host to update a route in.
	//
	// To get the virtual host name, make a [VirtualHostService.List] request.
	VirtualHostName string `protobuf:"bytes,2,opt,name=virtual_host_name,json=virtualHostName,proto3" json:"virtual_host_name,omitempty"`
	// Name of the route to update.
	//
	// To get the route name, make a [VirtualHostService.Get] request.
	RouteName string `protobuf:"bytes,3,opt,name=route_name,json=routeName,proto3" json:"route_name,omitempty"`
	// Field mask that specifies which attributes of the route should be updated.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,4,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// New settings of the route.
	//
	// Types that are valid to be assigned to Route:
	//
	//	*UpdateRouteRequest_Http
	//	*UpdateRouteRequest_Grpc
	Route isUpdateRouteRequest_Route `protobuf_oneof:"route"`
	// New route options for the route.
	RouteOptions *RouteOptions `protobuf:"bytes,7,opt,name=route_options,json=routeOptions,proto3" json:"route_options,omitempty"`
	// Whether set to 'true' disable security profile for the route.
	DisableSecurityProfile bool `protobuf:"varint,8,opt,name=disable_security_profile,json=disableSecurityProfile,proto3" json:"disable_security_profile,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateRouteRequest) Reset() {
	*x = UpdateRouteRequest{}
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRouteRequest) ProtoMessage() {}

func (x *UpdateRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRouteRequest.ProtoReflect.Descriptor instead.
func (*UpdateRouteRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateRouteRequest) GetHttpRouterId() string {
	if x != nil {
		return x.HttpRouterId
	}
	return ""
}

func (x *UpdateRouteRequest) GetVirtualHostName() string {
	if x != nil {
		return x.VirtualHostName
	}
	return ""
}

func (x *UpdateRouteRequest) GetRouteName() string {
	if x != nil {
		return x.RouteName
	}
	return ""
}

func (x *UpdateRouteRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateRouteRequest) GetRoute() isUpdateRouteRequest_Route {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *UpdateRouteRequest) GetHttp() *HttpRoute {
	if x != nil {
		if x, ok := x.Route.(*UpdateRouteRequest_Http); ok {
			return x.Http
		}
	}
	return nil
}

func (x *UpdateRouteRequest) GetGrpc() *GrpcRoute {
	if x != nil {
		if x, ok := x.Route.(*UpdateRouteRequest_Grpc); ok {
			return x.Grpc
		}
	}
	return nil
}

func (x *UpdateRouteRequest) GetRouteOptions() *RouteOptions {
	if x != nil {
		return x.RouteOptions
	}
	return nil
}

func (x *UpdateRouteRequest) GetDisableSecurityProfile() bool {
	if x != nil {
		return x.DisableSecurityProfile
	}
	return false
}

type isUpdateRouteRequest_Route interface {
	isUpdateRouteRequest_Route()
}

type UpdateRouteRequest_Http struct {
	// New settings of the HTTP route.
	Http *HttpRoute `protobuf:"bytes,5,opt,name=http,proto3,oneof"`
}

type UpdateRouteRequest_Grpc struct {
	// New settings of the gRPC route.
	Grpc *GrpcRoute `protobuf:"bytes,6,opt,name=grpc,proto3,oneof"`
}

func (*UpdateRouteRequest_Http) isUpdateRouteRequest_Route() {}

func (*UpdateRouteRequest_Grpc) isUpdateRouteRequest_Route() {}

type UpdateRouteMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the HTTP router that the route is being updated in.
	HttpRouterId string `protobuf:"bytes,1,opt,name=http_router_id,json=httpRouterId,proto3" json:"http_router_id,omitempty"`
	// Name of the virtual host that the route is being updated in.
	VirtualHostName string `protobuf:"bytes,2,opt,name=virtual_host_name,json=virtualHostName,proto3" json:"virtual_host_name,omitempty"`
	// Name of the route that is being updated.
	RouteName     string `protobuf:"bytes,3,opt,name=route_name,json=routeName,proto3" json:"route_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRouteMetadata) Reset() {
	*x = UpdateRouteMetadata{}
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRouteMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRouteMetadata) ProtoMessage() {}

func (x *UpdateRouteMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRouteMetadata.ProtoReflect.Descriptor instead.
func (*UpdateRouteMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateRouteMetadata) GetHttpRouterId() string {
	if x != nil {
		return x.HttpRouterId
	}
	return ""
}

func (x *UpdateRouteMetadata) GetVirtualHostName() string {
	if x != nil {
		return x.VirtualHostName
	}
	return ""
}

func (x *UpdateRouteMetadata) GetRouteName() string {
	if x != nil {
		return x.RouteName
	}
	return ""
}

var File_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDesc = "" +
	"\n" +
	":yandex/cloud/apploadbalancer/v1/virtual_host_service.proto\x12\x1fyandex.cloud.apploadbalancer.v1\x1a\x1cgoogle/api/annotations.proto\x1a google/protobuf/field_mask.proto\x1a yandex/cloud/api/operation.proto\x1a0yandex/cloud/apploadbalancer/v1/rate_limit.proto\x1a2yandex/cloud/apploadbalancer/v1/virtual_host.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\"\x9b\x01\n" +
	"\x15GetVirtualHostRequest\x12*\n" +
	"\x0ehttp_router_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\fhttpRouterId\x12V\n" +
	"\x11virtual_host_name\x18\x02 \x01(\tB*\xe8\xc71\x01\xf2\xc71\"([a-z]([-a-z0-9]{0,61}[a-z0-9])?)?R\x0fvirtualHostName\"\x98\x01\n" +
	"\x17ListVirtualHostsRequest\x12*\n" +
	"\x0ehttp_router_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\fhttpRouterId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\"\x95\x01\n" +
	"\x18ListVirtualHostsResponse\x12Q\n" +
	"\rvirtual_hosts\x18\x01 \x03(\v2,.yandex.cloud.apploadbalancer.v1.VirtualHostR\fvirtualHosts\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xdd\x04\n" +
	"\x18CreateVirtualHostRequest\x12*\n" +
	"\x0ehttp_router_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\fhttpRouterId\x12:\n" +
	"\x04name\x18\x02 \x01(\tB&\xf2\xc71\"([a-z]([-a-z0-9]{0,61}[a-z0-9])?)?R\x04name\x12\x1c\n" +
	"\tauthority\x18\x03 \x03(\tR\tauthority\x12>\n" +
	"\x06routes\x18\x05 \x03(\v2&.yandex.cloud.apploadbalancer.v1.RouteR\x06routes\x12i\n" +
	"\x16modify_request_headers\x18\x06 \x03(\v23.yandex.cloud.apploadbalancer.v1.HeaderModificationR\x14modifyRequestHeaders\x12k\n" +
	"\x17modify_response_headers\x18\a \x03(\v23.yandex.cloud.apploadbalancer.v1.HeaderModificationR\x15modifyResponseHeaders\x12R\n" +
	"\rroute_options\x18\b \x01(\v2-.yandex.cloud.apploadbalancer.v1.RouteOptionsR\frouteOptions\x12I\n" +
	"\n" +
	"rate_limit\x18\t \x01(\v2*.yandex.cloud.apploadbalancer.v1.RateLimitR\trateLimitJ\x04\b\x04\x10\x05\"s\n" +
	"\x19CreateVirtualHostMetadata\x12*\n" +
	"\x0ehttp_router_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\fhttpRouterId\x12*\n" +
	"\x11virtual_host_name\x18\x02 \x01(\tR\x0fvirtualHostName\"\x90\x05\n" +
	"\x18UpdateVirtualHostRequest\x12*\n" +
	"\x0ehttp_router_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\fhttpRouterId\x120\n" +
	"\x11virtual_host_name\x18\x02 \x01(\tB\x04\xe8\xc71\x01R\x0fvirtualHostName\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12\x1c\n" +
	"\tauthority\x18\x04 \x03(\tR\tauthority\x12>\n" +
	"\x06routes\x18\x06 \x03(\v2&.yandex.cloud.apploadbalancer.v1.RouteR\x06routes\x12i\n" +
	"\x16modify_request_headers\x18\a \x03(\v23.yandex.cloud.apploadbalancer.v1.HeaderModificationR\x14modifyRequestHeaders\x12k\n" +
	"\x17modify_response_headers\x18\b \x03(\v23.yandex.cloud.apploadbalancer.v1.HeaderModificationR\x15modifyResponseHeaders\x12R\n" +
	"\rroute_options\x18\t \x01(\v2-.yandex.cloud.apploadbalancer.v1.RouteOptionsR\frouteOptions\x12I\n" +
	"\n" +
	"rate_limit\x18\n" +
	" \x01(\v2*.yandex.cloud.apploadbalancer.v1.RateLimitR\trateLimitJ\x04\b\x05\x10\x06\"m\n" +
	"\x19UpdateVirtualHostMetadata\x12$\n" +
	"\x0ehttp_router_id\x18\x01 \x01(\tR\fhttpRouterId\x12*\n" +
	"\x11virtual_host_name\x18\x02 \x01(\tR\x0fvirtualHostName\"\x9e\x01\n" +
	"\x18DeleteVirtualHostRequest\x12*\n" +
	"\x0ehttp_router_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\fhttpRouterId\x12V\n" +
	"\x11virtual_host_name\x18\x02 \x01(\tB*\xe8\xc71\x01\xf2\xc71\"([a-z]([-a-z0-9]{0,61}[a-z0-9])?)?R\x0fvirtualHostName\"m\n" +
	"\x19DeleteVirtualHostMetadata\x12$\n" +
	"\x0ehttp_router_id\x18\x01 \x01(\tR\fhttpRouterId\x12*\n" +
	"\x11virtual_host_name\x18\x02 \x01(\tR\x0fvirtualHostName\"\x97\x01\n" +
	"\x12RemoveRouteRequest\x12*\n" +
	"\x0ehttp_router_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\fhttpRouterId\x120\n" +
	"\x11virtual_host_name\x18\x02 \x01(\tB\x04\xe8\xc71\x01R\x0fvirtualHostName\x12#\n" +
	"\n" +
	"route_name\x18\x03 \x01(\tB\x04\xe8\xc71\x01R\trouteName\"\x86\x01\n" +
	"\x13RemoveRouteMetadata\x12$\n" +
	"\x0ehttp_router_id\x18\x01 \x01(\tR\fhttpRouterId\x12*\n" +
	"\x11virtual_host_name\x18\x02 \x01(\tR\x0fvirtualHostName\x12\x1d\n" +
	"\n" +
	"route_name\x18\x03 \x01(\tR\trouteName\"\xf5\x03\n" +
	"\x12UpdateRouteRequest\x12*\n" +
	"\x0ehttp_router_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\fhttpRouterId\x120\n" +
	"\x11virtual_host_name\x18\x02 \x01(\tB\x04\xe8\xc71\x01R\x0fvirtualHostName\x12#\n" +
	"\n" +
	"route_name\x18\x03 \x01(\tB\x04\xe8\xc71\x01R\trouteName\x12;\n" +
	"\vupdate_mask\x18\x04 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12@\n" +
	"\x04http\x18\x05 \x01(\v2*.yandex.cloud.apploadbalancer.v1.HttpRouteH\x00R\x04http\x12@\n" +
	"\x04grpc\x18\x06 \x01(\v2*.yandex.cloud.apploadbalancer.v1.GrpcRouteH\x00R\x04grpc\x12R\n" +
	"\rroute_options\x18\a \x01(\v2-.yandex.cloud.apploadbalancer.v1.RouteOptionsR\frouteOptions\x128\n" +
	"\x18disable_security_profile\x18\b \x01(\bR\x16disableSecurityProfileB\r\n" +
	"\x05route\x12\x04\xc0\xc11\x01\"\x86\x01\n" +
	"\x13UpdateRouteMetadata\x12$\n" +
	"\x0ehttp_router_id\x18\x01 \x01(\tR\fhttpRouterId\x12*\n" +
	"\x11virtual_host_name\x18\x02 \x01(\tR\x0fvirtualHostName\x12\x1d\n" +
	"\n" +
	"route_name\x18\x03 \x01(\tR\trouteName2\xe2\f\n" +
	"\x12VirtualHostService\x12\xc6\x01\n" +
	"\x03Get\x126.yandex.cloud.apploadbalancer.v1.GetVirtualHostRequest\x1a,.yandex.cloud.apploadbalancer.v1.VirtualHost\"Y\x82\xd3\xe4\x93\x02S\x12Q/apploadbalancer/v1/httpRouters/{http_router_id}/virtualHosts/{virtual_host_name}\x12\xc2\x01\n" +
	"\x04List\x128.yandex.cloud.apploadbalancer.v1.ListVirtualHostsRequest\x1a9.yandex.cloud.apploadbalancer.v1.ListVirtualHostsResponse\"E\x82\xd3\xe4\x93\x02?\x12=/apploadbalancer/v1/httpRouters/{http_router_id}/virtualHosts\x12\xdc\x01\n" +
	"\x06Create\x129.yandex.cloud.apploadbalancer.v1.CreateVirtualHostRequest\x1a!.yandex.cloud.operation.Operation\"t\xb2\xd2*(\n" +
	"\x19CreateVirtualHostMetadata\x12\vVirtualHost\x82\xd3\xe4\x93\x02B:\x01*\"=/apploadbalancer/v1/httpRouters/{http_router_id}/virtualHosts\x12\xf1\x01\n" +
	"\x06Update\x129.yandex.cloud.apploadbalancer.v1.UpdateVirtualHostRequest\x1a!.yandex.cloud.operation.Operation\"\x88\x01\xb2\xd2*(\n" +
	"\x19UpdateVirtualHostMetadata\x12\vVirtualHost\x82\xd3\xe4\x93\x02V:\x01*2Q/apploadbalancer/v1/httpRouters/{http_router_id}/virtualHosts/{virtual_host_name}\x12\xf8\x01\n" +
	"\x06Delete\x129.yandex.cloud.apploadbalancer.v1.DeleteVirtualHostRequest\x1a!.yandex.cloud.operation.Operation\"\x8f\x01\xb2\xd2*2\n" +
	"\x19DeleteVirtualHostMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02S*Q/apploadbalancer/v1/httpRouters/{http_router_id}/virtualHosts/{virtual_host_name}\x12\xf6\x01\n" +
	"\vRemoveRoute\x123.yandex.cloud.apploadbalancer.v1.RemoveRouteRequest\x1a!.yandex.cloud.operation.Operation\"\x8e\x01\xb2\xd2*\"\n" +
	"\x13RemoveRouteMetadata\x12\vVirtualHost\x82\xd3\xe4\x93\x02b:\x01*\"]/apploadbalancer/v1/httpRouters/{http_router_id}/virtualHosts/{virtual_host_name}:removeRoute\x12\xf6\x01\n" +
	"\vUpdateRoute\x123.yandex.cloud.apploadbalancer.v1.UpdateRouteRequest\x1a!.yandex.cloud.operation.Operation\"\x8e\x01\xb2\xd2*\"\n" +
	"\x13UpdateRouteMetadata\x12\vVirtualHost\x82\xd3\xe4\x93\x02b:\x01*\"]/apploadbalancer/v1/httpRouters/{http_router_id}/virtualHosts/{virtual_host_name}:updateRouteBz\n" +
	"#yandex.cloud.api.apploadbalancer.v1ZSgithub.com/yandex-cloud/go-genproto/yandex/cloud/apploadbalancer/v1;apploadbalancerb\x06proto3"

var (
	file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescData []byte
)

func file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDesc), len(file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDesc)))
	})
	return file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDescData
}

var file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_goTypes = []any{
	(*GetVirtualHostRequest)(nil),     // 0: yandex.cloud.apploadbalancer.v1.GetVirtualHostRequest
	(*ListVirtualHostsRequest)(nil),   // 1: yandex.cloud.apploadbalancer.v1.ListVirtualHostsRequest
	(*ListVirtualHostsResponse)(nil),  // 2: yandex.cloud.apploadbalancer.v1.ListVirtualHostsResponse
	(*CreateVirtualHostRequest)(nil),  // 3: yandex.cloud.apploadbalancer.v1.CreateVirtualHostRequest
	(*CreateVirtualHostMetadata)(nil), // 4: yandex.cloud.apploadbalancer.v1.CreateVirtualHostMetadata
	(*UpdateVirtualHostRequest)(nil),  // 5: yandex.cloud.apploadbalancer.v1.UpdateVirtualHostRequest
	(*UpdateVirtualHostMetadata)(nil), // 6: yandex.cloud.apploadbalancer.v1.UpdateVirtualHostMetadata
	(*DeleteVirtualHostRequest)(nil),  // 7: yandex.cloud.apploadbalancer.v1.DeleteVirtualHostRequest
	(*DeleteVirtualHostMetadata)(nil), // 8: yandex.cloud.apploadbalancer.v1.DeleteVirtualHostMetadata
	(*RemoveRouteRequest)(nil),        // 9: yandex.cloud.apploadbalancer.v1.RemoveRouteRequest
	(*RemoveRouteMetadata)(nil),       // 10: yandex.cloud.apploadbalancer.v1.RemoveRouteMetadata
	(*UpdateRouteRequest)(nil),        // 11: yandex.cloud.apploadbalancer.v1.UpdateRouteRequest
	(*UpdateRouteMetadata)(nil),       // 12: yandex.cloud.apploadbalancer.v1.UpdateRouteMetadata
	(*VirtualHost)(nil),               // 13: yandex.cloud.apploadbalancer.v1.VirtualHost
	(*Route)(nil),                     // 14: yandex.cloud.apploadbalancer.v1.Route
	(*HeaderModification)(nil),        // 15: yandex.cloud.apploadbalancer.v1.HeaderModification
	(*RouteOptions)(nil),              // 16: yandex.cloud.apploadbalancer.v1.RouteOptions
	(*RateLimit)(nil),                 // 17: yandex.cloud.apploadbalancer.v1.RateLimit
	(*fieldmaskpb.FieldMask)(nil),     // 18: google.protobuf.FieldMask
	(*HttpRoute)(nil),                 // 19: yandex.cloud.apploadbalancer.v1.HttpRoute
	(*GrpcRoute)(nil),                 // 20: yandex.cloud.apploadbalancer.v1.GrpcRoute
	(*operation.Operation)(nil),       // 21: yandex.cloud.operation.Operation
}
var file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_depIdxs = []int32{
	13, // 0: yandex.cloud.apploadbalancer.v1.ListVirtualHostsResponse.virtual_hosts:type_name -> yandex.cloud.apploadbalancer.v1.VirtualHost
	14, // 1: yandex.cloud.apploadbalancer.v1.CreateVirtualHostRequest.routes:type_name -> yandex.cloud.apploadbalancer.v1.Route
	15, // 2: yandex.cloud.apploadbalancer.v1.CreateVirtualHostRequest.modify_request_headers:type_name -> yandex.cloud.apploadbalancer.v1.HeaderModification
	15, // 3: yandex.cloud.apploadbalancer.v1.CreateVirtualHostRequest.modify_response_headers:type_name -> yandex.cloud.apploadbalancer.v1.HeaderModification
	16, // 4: yandex.cloud.apploadbalancer.v1.CreateVirtualHostRequest.route_options:type_name -> yandex.cloud.apploadbalancer.v1.RouteOptions
	17, // 5: yandex.cloud.apploadbalancer.v1.CreateVirtualHostRequest.rate_limit:type_name -> yandex.cloud.apploadbalancer.v1.RateLimit
	18, // 6: yandex.cloud.apploadbalancer.v1.UpdateVirtualHostRequest.update_mask:type_name -> google.protobuf.FieldMask
	14, // 7: yandex.cloud.apploadbalancer.v1.UpdateVirtualHostRequest.routes:type_name -> yandex.cloud.apploadbalancer.v1.Route
	15, // 8: yandex.cloud.apploadbalancer.v1.UpdateVirtualHostRequest.modify_request_headers:type_name -> yandex.cloud.apploadbalancer.v1.HeaderModification
	15, // 9: yandex.cloud.apploadbalancer.v1.UpdateVirtualHostRequest.modify_response_headers:type_name -> yandex.cloud.apploadbalancer.v1.HeaderModification
	16, // 10: yandex.cloud.apploadbalancer.v1.UpdateVirtualHostRequest.route_options:type_name -> yandex.cloud.apploadbalancer.v1.RouteOptions
	17, // 11: yandex.cloud.apploadbalancer.v1.UpdateVirtualHostRequest.rate_limit:type_name -> yandex.cloud.apploadbalancer.v1.RateLimit
	18, // 12: yandex.cloud.apploadbalancer.v1.UpdateRouteRequest.update_mask:type_name -> google.protobuf.FieldMask
	19, // 13: yandex.cloud.apploadbalancer.v1.UpdateRouteRequest.http:type_name -> yandex.cloud.apploadbalancer.v1.HttpRoute
	20, // 14: yandex.cloud.apploadbalancer.v1.UpdateRouteRequest.grpc:type_name -> yandex.cloud.apploadbalancer.v1.GrpcRoute
	16, // 15: yandex.cloud.apploadbalancer.v1.UpdateRouteRequest.route_options:type_name -> yandex.cloud.apploadbalancer.v1.RouteOptions
	0,  // 16: yandex.cloud.apploadbalancer.v1.VirtualHostService.Get:input_type -> yandex.cloud.apploadbalancer.v1.GetVirtualHostRequest
	1,  // 17: yandex.cloud.apploadbalancer.v1.VirtualHostService.List:input_type -> yandex.cloud.apploadbalancer.v1.ListVirtualHostsRequest
	3,  // 18: yandex.cloud.apploadbalancer.v1.VirtualHostService.Create:input_type -> yandex.cloud.apploadbalancer.v1.CreateVirtualHostRequest
	5,  // 19: yandex.cloud.apploadbalancer.v1.VirtualHostService.Update:input_type -> yandex.cloud.apploadbalancer.v1.UpdateVirtualHostRequest
	7,  // 20: yandex.cloud.apploadbalancer.v1.VirtualHostService.Delete:input_type -> yandex.cloud.apploadbalancer.v1.DeleteVirtualHostRequest
	9,  // 21: yandex.cloud.apploadbalancer.v1.VirtualHostService.RemoveRoute:input_type -> yandex.cloud.apploadbalancer.v1.RemoveRouteRequest
	11, // 22: yandex.cloud.apploadbalancer.v1.VirtualHostService.UpdateRoute:input_type -> yandex.cloud.apploadbalancer.v1.UpdateRouteRequest
	13, // 23: yandex.cloud.apploadbalancer.v1.VirtualHostService.Get:output_type -> yandex.cloud.apploadbalancer.v1.VirtualHost
	2,  // 24: yandex.cloud.apploadbalancer.v1.VirtualHostService.List:output_type -> yandex.cloud.apploadbalancer.v1.ListVirtualHostsResponse
	21, // 25: yandex.cloud.apploadbalancer.v1.VirtualHostService.Create:output_type -> yandex.cloud.operation.Operation
	21, // 26: yandex.cloud.apploadbalancer.v1.VirtualHostService.Update:output_type -> yandex.cloud.operation.Operation
	21, // 27: yandex.cloud.apploadbalancer.v1.VirtualHostService.Delete:output_type -> yandex.cloud.operation.Operation
	21, // 28: yandex.cloud.apploadbalancer.v1.VirtualHostService.RemoveRoute:output_type -> yandex.cloud.operation.Operation
	21, // 29: yandex.cloud.apploadbalancer.v1.VirtualHostService.UpdateRoute:output_type -> yandex.cloud.operation.Operation
	23, // [23:30] is the sub-list for method output_type
	16, // [16:23] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_init() }
func file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_init() {
	if File_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto != nil {
		return
	}
	file_yandex_cloud_apploadbalancer_v1_rate_limit_proto_init()
	file_yandex_cloud_apploadbalancer_v1_virtual_host_proto_init()
	file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes[11].OneofWrappers = []any{
		(*UpdateRouteRequest_Http)(nil),
		(*UpdateRouteRequest_Grpc)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDesc), len(file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto = out.File
	file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_goTypes = nil
	file_yandex_cloud_apploadbalancer_v1_virtual_host_service_proto_depIdxs = nil
}

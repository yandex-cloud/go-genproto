// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/baremetal/v1alpha/private_subnet_service.proto

package baremetal

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPrivateSubnetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PrivateSubnet resource to return.
	//
	// To get the private subnet ID use a [PrivateSubnetService.List] request.
	PrivateSubnetId string `protobuf:"bytes,2,opt,name=private_subnet_id,json=privateSubnetId,proto3" json:"private_subnet_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetPrivateSubnetRequest) Reset() {
	*x = GetPrivateSubnetRequest{}
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPrivateSubnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivateSubnetRequest) ProtoMessage() {}

func (x *GetPrivateSubnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivateSubnetRequest.ProtoReflect.Descriptor instead.
func (*GetPrivateSubnetRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetPrivateSubnetRequest) GetPrivateSubnetId() string {
	if x != nil {
		return x.PrivateSubnetId
	}
	return ""
}

type ListPrivateSubnetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to list private subnets in.
	//
	// To get the folder ID use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is greater than `page_size`,
	// the service returns a [ListConfigurationsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value is 20.
	PageSize int64 `protobuf:"varint,100,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set `page_token` to the
	// [ListConfigurationsResponse.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,101,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// By which column the listing should be ordered and in which direction,
	// format is "createdAt desc". "id asc" if omitted.
	// Supported fields: ["id", "name", "createdAt"].
	// Both snake_case and camelCase are supported for fields.
	OrderBy string `protobuf:"bytes,102,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	// A filter expression that filters resources listed in the response.
	// The expression consists of one or more conditions united by `AND` operator: `<condition1> [AND <condition2> [<...> AND <conditionN>]]`.
	//
	// Each condition has the form `<field> <operator> <value>`, where:
	// 1. `<field>` is the field name. Currently you can use filtering only on the limited number of fields.
	// 2. `<operator>` is a logical operator, one of `=` (equal), `:` (substring).
	// 3. `<value>` represents a value.
	// String values should be written in double (`"`) or single (`'`) quotes. C-style escape sequences are supported (`\"` turns to `"`, `\'` to `'`, `\\` to backslash).
	// Example: "key1='value' AND key2='value'"
	// Supported operators: ["AND"].
	// Supported fields: ["id", "name", "zoneId", "hardwarePoolId"].
	// Both snake_case and camelCase are supported for fields.
	Filter        string `protobuf:"bytes,103,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrivateSubnetRequest) Reset() {
	*x = ListPrivateSubnetRequest{}
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrivateSubnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrivateSubnetRequest) ProtoMessage() {}

func (x *ListPrivateSubnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrivateSubnetRequest.ProtoReflect.Descriptor instead.
func (*ListPrivateSubnetRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListPrivateSubnetRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListPrivateSubnetRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPrivateSubnetRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListPrivateSubnetRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListPrivateSubnetRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListPrivateSubnetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of PrivateSubnet resources.
	PrivateSubnets []*PrivateSubnet `protobuf:"bytes,2,rep,name=private_subnets,json=privateSubnets,proto3" json:"private_subnets,omitempty"`
	// Token for getting the next page of the list. If the number of results is greater than
	// [ListImagesRequest.page_size], use `next_page_token` as the value
	// for the [ListImagesRequest.page_token] parameter in the next list request.
	//
	// Each subsequent page will have its own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,100,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrivateSubnetResponse) Reset() {
	*x = ListPrivateSubnetResponse{}
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrivateSubnetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrivateSubnetResponse) ProtoMessage() {}

func (x *ListPrivateSubnetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrivateSubnetResponse.ProtoReflect.Descriptor instead.
func (*ListPrivateSubnetResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListPrivateSubnetResponse) GetPrivateSubnets() []*PrivateSubnet {
	if x != nil {
		return x.PrivateSubnets
	}
	return nil
}

func (x *ListPrivateSubnetResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreatePrivateSubnetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the private subnet.
	// The name must be unique within the folder.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the private subnet.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// ID of the hardware pool where the private subnet resides.
	//
	// To get a list of available hardware pools, use the [HardwarePoolService.List] request.
	HardwarePoolId string `protobuf:"bytes,3,opt,name=hardware_pool_id,json=hardwarePoolId,proto3" json:"hardware_pool_id,omitempty"`
	// VRF options. Optional.
	VrfOptionsSpec *VrfOptionsSpec `protobuf:"bytes,4,opt,name=vrf_options_spec,json=vrfOptionsSpec,proto3" json:"vrf_options_spec,omitempty"`
	// ID of the folder to create a private subnet in.
	//
	// To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,5,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Resource labels as `key:value` pairs.
	Labels        map[string]string `protobuf:"bytes,200,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePrivateSubnetRequest) Reset() {
	*x = CreatePrivateSubnetRequest{}
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePrivateSubnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrivateSubnetRequest) ProtoMessage() {}

func (x *CreatePrivateSubnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrivateSubnetRequest.ProtoReflect.Descriptor instead.
func (*CreatePrivateSubnetRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePrivateSubnetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePrivateSubnetRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePrivateSubnetRequest) GetHardwarePoolId() string {
	if x != nil {
		return x.HardwarePoolId
	}
	return ""
}

func (x *CreatePrivateSubnetRequest) GetVrfOptionsSpec() *VrfOptionsSpec {
	if x != nil {
		return x.VrfOptionsSpec
	}
	return nil
}

func (x *CreatePrivateSubnetRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *CreatePrivateSubnetRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type VrfOptionsSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the VRF to create private subnet in.
	//
	// To get the VRF ID, use a [VrfService.List] request.
	VrfId string `protobuf:"bytes,1,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	// CIDR block.
	// The range of internal addresses that are defined for this private subnet, as
	// specified in [RFC1918](https://datatracker.ietf.org/doc/html/rfc1918#section-3).
	// For example, 10.0.0.0/22 or 192.168.0.0/24.
	Cidr string `protobuf:"bytes,2,opt,name=cidr,proto3" json:"cidr,omitempty"`
	// DHCP options for the subnet.
	// The absence or null value indicates that DHCP is disabled.
	DhcpOptions *DhcpOptionsSpec `protobuf:"bytes,3,opt,name=dhcp_options,json=dhcpOptions,proto3" json:"dhcp_options,omitempty"`
	// Gateway IP address for the subnet.
	GatewayIp     string `protobuf:"bytes,4,opt,name=gateway_ip,json=gatewayIp,proto3" json:"gateway_ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VrfOptionsSpec) Reset() {
	*x = VrfOptionsSpec{}
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VrfOptionsSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VrfOptionsSpec) ProtoMessage() {}

func (x *VrfOptionsSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VrfOptionsSpec.ProtoReflect.Descriptor instead.
func (*VrfOptionsSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescGZIP(), []int{4}
}

func (x *VrfOptionsSpec) GetVrfId() string {
	if x != nil {
		return x.VrfId
	}
	return ""
}

func (x *VrfOptionsSpec) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *VrfOptionsSpec) GetDhcpOptions() *DhcpOptionsSpec {
	if x != nil {
		return x.DhcpOptions
	}
	return nil
}

func (x *VrfOptionsSpec) GetGatewayIp() string {
	if x != nil {
		return x.GatewayIp
	}
	return ""
}

// DHCP options for the private subnet.
type DhcpOptionsSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Start IP address of the DHCP range (inclusive).
	// The absence or null value indicates that calculation will be performed based on CIDR.
	StartIp string `protobuf:"bytes,1,opt,name=start_ip,json=startIp,proto3" json:"start_ip,omitempty"`
	// End IP address of the DHCP range (inclusive).
	// The absence or null value indicates that calculation will be performed based on CIDR.
	EndIp         string `protobuf:"bytes,2,opt,name=end_ip,json=endIp,proto3" json:"end_ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DhcpOptionsSpec) Reset() {
	*x = DhcpOptionsSpec{}
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DhcpOptionsSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DhcpOptionsSpec) ProtoMessage() {}

func (x *DhcpOptionsSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DhcpOptionsSpec.ProtoReflect.Descriptor instead.
func (*DhcpOptionsSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescGZIP(), []int{5}
}

func (x *DhcpOptionsSpec) GetStartIp() string {
	if x != nil {
		return x.StartIp
	}
	return ""
}

func (x *DhcpOptionsSpec) GetEndIp() string {
	if x != nil {
		return x.EndIp
	}
	return ""
}

type CreatePrivateSubnetMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the private subnet that is being created.
	PrivateSubnetId string `protobuf:"bytes,2,opt,name=private_subnet_id,json=privateSubnetId,proto3" json:"private_subnet_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreatePrivateSubnetMetadata) Reset() {
	*x = CreatePrivateSubnetMetadata{}
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePrivateSubnetMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrivateSubnetMetadata) ProtoMessage() {}

func (x *CreatePrivateSubnetMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrivateSubnetMetadata.ProtoReflect.Descriptor instead.
func (*CreatePrivateSubnetMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreatePrivateSubnetMetadata) GetPrivateSubnetId() string {
	if x != nil {
		return x.PrivateSubnetId
	}
	return ""
}

type UpdatePrivateSubnetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PrivateSubnet resource to update.
	//
	// To get the private subnet ID, use a [PrivateSubnetService.List] request.
	PrivateSubnetId string `protobuf:"bytes,1,opt,name=private_subnet_id,json=privateSubnetId,proto3" json:"private_subnet_id,omitempty"`
	// Field mask that specifies which fields of the PrivateSubnet resource are going to be updated.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// Name of the private subnet.
	// The name must be unique within the folder.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the private subnet.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// VRF options. Optional.
	VrfOptionsSpec *VrfOptionsSpec `protobuf:"bytes,5,opt,name=vrf_options_spec,json=vrfOptionsSpec,proto3" json:"vrf_options_spec,omitempty"`
	// Resource labels as `key:value` pairs.
	//
	// Existing set of `labels` is completely replaced by the provided set.
	Labels        map[string]string `protobuf:"bytes,200,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePrivateSubnetRequest) Reset() {
	*x = UpdatePrivateSubnetRequest{}
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePrivateSubnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrivateSubnetRequest) ProtoMessage() {}

func (x *UpdatePrivateSubnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrivateSubnetRequest.ProtoReflect.Descriptor instead.
func (*UpdatePrivateSubnetRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePrivateSubnetRequest) GetPrivateSubnetId() string {
	if x != nil {
		return x.PrivateSubnetId
	}
	return ""
}

func (x *UpdatePrivateSubnetRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdatePrivateSubnetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePrivateSubnetRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdatePrivateSubnetRequest) GetVrfOptionsSpec() *VrfOptionsSpec {
	if x != nil {
		return x.VrfOptionsSpec
	}
	return nil
}

func (x *UpdatePrivateSubnetRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type UpdatePrivateSubnetMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PrivateSubnet resource that is being updated.
	PrivateSubnetId string `protobuf:"bytes,2,opt,name=private_subnet_id,json=privateSubnetId,proto3" json:"private_subnet_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdatePrivateSubnetMetadata) Reset() {
	*x = UpdatePrivateSubnetMetadata{}
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePrivateSubnetMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrivateSubnetMetadata) ProtoMessage() {}

func (x *UpdatePrivateSubnetMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrivateSubnetMetadata.ProtoReflect.Descriptor instead.
func (*UpdatePrivateSubnetMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdatePrivateSubnetMetadata) GetPrivateSubnetId() string {
	if x != nil {
		return x.PrivateSubnetId
	}
	return ""
}

type DeletePrivateSubnetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the private subnet to delete.
	//
	// To get the private subnet ID, use a [PrivateSubnetService.List] request.
	PrivateSubnetId string `protobuf:"bytes,2,opt,name=private_subnet_id,json=privateSubnetId,proto3" json:"private_subnet_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeletePrivateSubnetRequest) Reset() {
	*x = DeletePrivateSubnetRequest{}
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePrivateSubnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePrivateSubnetRequest) ProtoMessage() {}

func (x *DeletePrivateSubnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePrivateSubnetRequest.ProtoReflect.Descriptor instead.
func (*DeletePrivateSubnetRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePrivateSubnetRequest) GetPrivateSubnetId() string {
	if x != nil {
		return x.PrivateSubnetId
	}
	return ""
}

type DeletePrivateSubnetMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PrivateSubnet resource that is being deleted.
	PrivateSubnetId string `protobuf:"bytes,2,opt,name=private_subnet_id,json=privateSubnetId,proto3" json:"private_subnet_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeletePrivateSubnetMetadata) Reset() {
	*x = DeletePrivateSubnetMetadata{}
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePrivateSubnetMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePrivateSubnetMetadata) ProtoMessage() {}

func (x *DeletePrivateSubnetMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePrivateSubnetMetadata.ProtoReflect.Descriptor instead.
func (*DeletePrivateSubnetMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeletePrivateSubnetMetadata) GetPrivateSubnetId() string {
	if x != nil {
		return x.PrivateSubnetId
	}
	return ""
}

type ListPrivateSubnetOperationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PrivateSubnet resource to list operations for.
	PrivateSubnetId string `protobuf:"bytes,2,opt,name=private_subnet_id,json=privateSubnetId,proto3" json:"private_subnet_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is greater than `page_size`,
	// the service returns a [ListImageOperationsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value is 20.
	PageSize int64 `protobuf:"varint,100,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set `page_token` to the
	// [ListPrivateSubnetOperationsResponse.next_page_token] returned by a previous list request.
	PageToken     string `protobuf:"bytes,101,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrivateSubnetOperationsRequest) Reset() {
	*x = ListPrivateSubnetOperationsRequest{}
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrivateSubnetOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrivateSubnetOperationsRequest) ProtoMessage() {}

func (x *ListPrivateSubnetOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrivateSubnetOperationsRequest.ProtoReflect.Descriptor instead.
func (*ListPrivateSubnetOperationsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListPrivateSubnetOperationsRequest) GetPrivateSubnetId() string {
	if x != nil {
		return x.PrivateSubnetId
	}
	return ""
}

func (x *ListPrivateSubnetOperationsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPrivateSubnetOperationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListPrivateSubnetOperationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of operations for the specified PrivateSubnet resource.
	Operations []*operation.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	// Token for getting the next page of the list. If the number of results is greater than
	// [ListImageOperationsRequest.page_size], use `next_page_token` as the value
	// for the [ListImageOperationsRequest.page_token] parameter in the next list request.
	//
	// Each subsequent page will have its own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,100,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrivateSubnetOperationsResponse) Reset() {
	*x = ListPrivateSubnetOperationsResponse{}
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrivateSubnetOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrivateSubnetOperationsResponse) ProtoMessage() {}

func (x *ListPrivateSubnetOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrivateSubnetOperationsResponse.ProtoReflect.Descriptor instead.
func (*ListPrivateSubnetOperationsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListPrivateSubnetOperationsResponse) GetOperations() []*operation.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ListPrivateSubnetOperationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDesc = "" +
	"\n" +
	";yandex/cloud/baremetal/v1alpha/private_subnet_service.proto\x12\x1eyandex.cloud.baremetal.v1alpha\x1a\x1cgoogle/api/annotations.proto\x1a google/protobuf/field_mask.proto\x1a yandex/cloud/api/operation.proto\x1a3yandex/cloud/baremetal/v1alpha/private_subnet.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\"e\n" +
	"\x17GetPrivateSubnetRequest\x12D\n" +
	"\x11private_subnet_id\x18\x02 \x01(\tB\x18\xf2\xc71\x0e[a-z][a-z0-9]*\x8a\xc81\x0220R\x0fprivateSubnetIdJ\x04\b\x01\x10\x02\"\xd5\x01\n" +
	"\x18ListPrivateSubnetRequest\x129\n" +
	"\tfolder_id\x18\x01 \x01(\tB\x1c\xf2\xc71\x10[a-z][a-z0-9.-]*\x8a\xc81\x04<=50R\bfolderId\x12&\n" +
	"\tpage_size\x18d \x01(\x03B\t\xfa\xc71\x05<=100R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18e \x01(\tR\tpageToken\x12\x19\n" +
	"\border_by\x18f \x01(\tR\aorderBy\x12\x16\n" +
	"\x06filter\x18g \x01(\tR\x06filterJ\x04\b\x02\x10d\"\xa7\x01\n" +
	"\x19ListPrivateSubnetResponse\x12V\n" +
	"\x0fprivate_subnets\x18\x02 \x03(\v2-.yandex.cloud.baremetal.v1alpha.PrivateSubnetR\x0eprivateSubnets\x12&\n" +
	"\x0fnext_page_token\x18d \x01(\tR\rnextPageTokenJ\x04\b\x01\x10\x02J\x04\b\x03\x10d\"\xb0\x04\n" +
	"\x1aCreatePrivateSubnetRequest\x12:\n" +
	"\x04name\x18\x01 \x01(\tB&\xf2\xc71\x1a[a-z]([-a-z0-9]*[a-z0-9])?\x8a\xc81\x042-63R\x04name\x12,\n" +
	"\vdescription\x18\x02 \x01(\tB\n" +
	"\x8a\xc81\x06<=1024R\vdescription\x122\n" +
	"\x10hardware_pool_id\x18\x03 \x01(\tB\b\x8a\xc81\x04<=20R\x0ehardwarePoolId\x12X\n" +
	"\x10vrf_options_spec\x18\x04 \x01(\v2..yandex.cloud.baremetal.v1alpha.VrfOptionsSpecR\x0evrfOptionsSpec\x129\n" +
	"\tfolder_id\x18\x05 \x01(\tB\x1c\xf2\xc71\x10[a-z][a-z0-9.-]*\x8a\xc81\x04<=50R\bfolderId\x12\x9c\x01\n" +
	"\x06labels\x18\xc8\x01 \x03(\v2F.yandex.cloud.baremetal.v1alpha.CreatePrivateSubnetRequest.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x041-63R\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01J\x05\b\x06\x10\xc8\x01\"\xae\x01\n" +
	"\x0eVrfOptionsSpec\x12\x15\n" +
	"\x06vrf_id\x18\x01 \x01(\tR\x05vrfId\x12\x12\n" +
	"\x04cidr\x18\x02 \x01(\tR\x04cidr\x12R\n" +
	"\fdhcp_options\x18\x03 \x01(\v2/.yandex.cloud.baremetal.v1alpha.DhcpOptionsSpecR\vdhcpOptions\x12\x1d\n" +
	"\n" +
	"gateway_ip\x18\x04 \x01(\tR\tgatewayIp\"C\n" +
	"\x0fDhcpOptionsSpec\x12\x19\n" +
	"\bstart_ip\x18\x01 \x01(\tR\astartIp\x12\x15\n" +
	"\x06end_ip\x18\x02 \x01(\tR\x05endIp\"O\n" +
	"\x1bCreatePrivateSubnetMetadata\x12*\n" +
	"\x11private_subnet_id\x18\x02 \x01(\tR\x0fprivateSubnetIdJ\x04\b\x01\x10\x02\"\xc4\x04\n" +
	"\x1aUpdatePrivateSubnetRequest\x12D\n" +
	"\x11private_subnet_id\x18\x01 \x01(\tB\x18\xf2\xc71\x0e[a-z][a-z0-9]*\x8a\xc81\x0220R\x0fprivateSubnetId\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12:\n" +
	"\x04name\x18\x03 \x01(\tB&\xf2\xc71\x1a[a-z]([-a-z0-9]*[a-z0-9])?\x8a\xc81\x042-63R\x04name\x12,\n" +
	"\vdescription\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=1024R\vdescription\x12X\n" +
	"\x10vrf_options_spec\x18\x05 \x01(\v2..yandex.cloud.baremetal.v1alpha.VrfOptionsSpecR\x0evrfOptionsSpec\x12\x9c\x01\n" +
	"\x06labels\x18\xc8\x01 \x03(\v2F.yandex.cloud.baremetal.v1alpha.UpdatePrivateSubnetRequest.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x041-63R\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01J\x05\b\x06\x10\xc8\x01\"O\n" +
	"\x1bUpdatePrivateSubnetMetadata\x12*\n" +
	"\x11private_subnet_id\x18\x02 \x01(\tR\x0fprivateSubnetIdJ\x04\b\x01\x10\x02\"h\n" +
	"\x1aDeletePrivateSubnetRequest\x12D\n" +
	"\x11private_subnet_id\x18\x02 \x01(\tB\x18\xf2\xc71\x0e[a-z][a-z0-9]*\x8a\xc81\x0220R\x0fprivateSubnetIdJ\x04\b\x01\x10\x02\"O\n" +
	"\x1bDeletePrivateSubnetMetadata\x12*\n" +
	"\x11private_subnet_id\x18\x02 \x01(\tR\x0fprivateSubnetIdJ\x04\b\x01\x10\x02\"\xbd\x01\n" +
	"\"ListPrivateSubnetOperationsRequest\x12D\n" +
	"\x11private_subnet_id\x18\x02 \x01(\tB\x18\xf2\xc71\x0e[a-z][a-z0-9]*\x8a\xc81\x0220R\x0fprivateSubnetId\x12&\n" +
	"\tpage_size\x18d \x01(\x03B\t\xfa\xc71\x05<=100R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18e \x01(\tR\tpageTokenJ\x04\b\x01\x10\x02J\x04\b\x03\x10d\"\x96\x01\n" +
	"#ListPrivateSubnetOperationsResponse\x12A\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2!.yandex.cloud.operation.OperationR\n" +
	"operations\x12&\n" +
	"\x0fnext_page_token\x18d \x01(\tR\rnextPageTokenJ\x04\b\x02\x10d2\xd9\t\n" +
	"\x14PrivateSubnetService\x12\xac\x01\n" +
	"\x03Get\x127.yandex.cloud.baremetal.v1alpha.GetPrivateSubnetRequest\x1a-.yandex.cloud.baremetal.v1alpha.PrivateSubnet\"=\x82\xd3\xe4\x93\x027\x125/baremetal/v1alpha/privateSubnets/{private_subnet_id}\x12\xa6\x01\n" +
	"\x04List\x128.yandex.cloud.baremetal.v1alpha.ListPrivateSubnetRequest\x1a9.yandex.cloud.baremetal.v1alpha.ListPrivateSubnetResponse\")\x82\xd3\xe4\x93\x02#\x12!/baremetal/v1alpha/privateSubnets\x12\xc5\x01\n" +
	"\x06Create\x12:.yandex.cloud.baremetal.v1alpha.CreatePrivateSubnetRequest\x1a!.yandex.cloud.operation.Operation\"\\\xb2\xd2*,\n" +
	"\x1bCreatePrivateSubnetMetadata\x12\rPrivateSubnet\x82\xd3\xe4\x93\x02&:\x01*\"!/baremetal/v1alpha/privateSubnets\x12\xd9\x01\n" +
	"\x06Update\x12:.yandex.cloud.baremetal.v1alpha.UpdatePrivateSubnetRequest\x1a!.yandex.cloud.operation.Operation\"p\xb2\xd2*,\n" +
	"\x1bUpdatePrivateSubnetMetadata\x12\rPrivateSubnet\x82\xd3\xe4\x93\x02::\x01*25/baremetal/v1alpha/privateSubnets/{private_subnet_id}\x12\xde\x01\n" +
	"\x06Delete\x12:.yandex.cloud.baremetal.v1alpha.DeletePrivateSubnetRequest\x1a!.yandex.cloud.operation.Operation\"u\xb2\xd2*4\n" +
	"\x1bDeletePrivateSubnetMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x027*5/baremetal/v1alpha/privateSubnets/{private_subnet_id}\x12\xe3\x01\n" +
	"\x0eListOperations\x12B.yandex.cloud.baremetal.v1alpha.ListPrivateSubnetOperationsRequest\x1aC.yandex.cloud.baremetal.v1alpha.ListPrivateSubnetOperationsResponse\"H\x82\xd3\xe4\x93\x02B\x12@/baremetal/v1alpha/privateSubnets/{private_subnet_id}/operationsBr\n" +
	"\"yandex.cloud.api.baremetal.v1alphaZLgithub.com/yandex-cloud/go-genproto/yandex/cloud/baremetal/v1alpha;baremetalb\x06proto3"

var (
	file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescData []byte
)

func file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDesc), len(file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDesc)))
	})
	return file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDescData
}

var file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_goTypes = []any{
	(*GetPrivateSubnetRequest)(nil),             // 0: yandex.cloud.baremetal.v1alpha.GetPrivateSubnetRequest
	(*ListPrivateSubnetRequest)(nil),            // 1: yandex.cloud.baremetal.v1alpha.ListPrivateSubnetRequest
	(*ListPrivateSubnetResponse)(nil),           // 2: yandex.cloud.baremetal.v1alpha.ListPrivateSubnetResponse
	(*CreatePrivateSubnetRequest)(nil),          // 3: yandex.cloud.baremetal.v1alpha.CreatePrivateSubnetRequest
	(*VrfOptionsSpec)(nil),                      // 4: yandex.cloud.baremetal.v1alpha.VrfOptionsSpec
	(*DhcpOptionsSpec)(nil),                     // 5: yandex.cloud.baremetal.v1alpha.DhcpOptionsSpec
	(*CreatePrivateSubnetMetadata)(nil),         // 6: yandex.cloud.baremetal.v1alpha.CreatePrivateSubnetMetadata
	(*UpdatePrivateSubnetRequest)(nil),          // 7: yandex.cloud.baremetal.v1alpha.UpdatePrivateSubnetRequest
	(*UpdatePrivateSubnetMetadata)(nil),         // 8: yandex.cloud.baremetal.v1alpha.UpdatePrivateSubnetMetadata
	(*DeletePrivateSubnetRequest)(nil),          // 9: yandex.cloud.baremetal.v1alpha.DeletePrivateSubnetRequest
	(*DeletePrivateSubnetMetadata)(nil),         // 10: yandex.cloud.baremetal.v1alpha.DeletePrivateSubnetMetadata
	(*ListPrivateSubnetOperationsRequest)(nil),  // 11: yandex.cloud.baremetal.v1alpha.ListPrivateSubnetOperationsRequest
	(*ListPrivateSubnetOperationsResponse)(nil), // 12: yandex.cloud.baremetal.v1alpha.ListPrivateSubnetOperationsResponse
	nil,                           // 13: yandex.cloud.baremetal.v1alpha.CreatePrivateSubnetRequest.LabelsEntry
	nil,                           // 14: yandex.cloud.baremetal.v1alpha.UpdatePrivateSubnetRequest.LabelsEntry
	(*PrivateSubnet)(nil),         // 15: yandex.cloud.baremetal.v1alpha.PrivateSubnet
	(*fieldmaskpb.FieldMask)(nil), // 16: google.protobuf.FieldMask
	(*operation.Operation)(nil),   // 17: yandex.cloud.operation.Operation
}
var file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_depIdxs = []int32{
	15, // 0: yandex.cloud.baremetal.v1alpha.ListPrivateSubnetResponse.private_subnets:type_name -> yandex.cloud.baremetal.v1alpha.PrivateSubnet
	4,  // 1: yandex.cloud.baremetal.v1alpha.CreatePrivateSubnetRequest.vrf_options_spec:type_name -> yandex.cloud.baremetal.v1alpha.VrfOptionsSpec
	13, // 2: yandex.cloud.baremetal.v1alpha.CreatePrivateSubnetRequest.labels:type_name -> yandex.cloud.baremetal.v1alpha.CreatePrivateSubnetRequest.LabelsEntry
	5,  // 3: yandex.cloud.baremetal.v1alpha.VrfOptionsSpec.dhcp_options:type_name -> yandex.cloud.baremetal.v1alpha.DhcpOptionsSpec
	16, // 4: yandex.cloud.baremetal.v1alpha.UpdatePrivateSubnetRequest.update_mask:type_name -> google.protobuf.FieldMask
	4,  // 5: yandex.cloud.baremetal.v1alpha.UpdatePrivateSubnetRequest.vrf_options_spec:type_name -> yandex.cloud.baremetal.v1alpha.VrfOptionsSpec
	14, // 6: yandex.cloud.baremetal.v1alpha.UpdatePrivateSubnetRequest.labels:type_name -> yandex.cloud.baremetal.v1alpha.UpdatePrivateSubnetRequest.LabelsEntry
	17, // 7: yandex.cloud.baremetal.v1alpha.ListPrivateSubnetOperationsResponse.operations:type_name -> yandex.cloud.operation.Operation
	0,  // 8: yandex.cloud.baremetal.v1alpha.PrivateSubnetService.Get:input_type -> yandex.cloud.baremetal.v1alpha.GetPrivateSubnetRequest
	1,  // 9: yandex.cloud.baremetal.v1alpha.PrivateSubnetService.List:input_type -> yandex.cloud.baremetal.v1alpha.ListPrivateSubnetRequest
	3,  // 10: yandex.cloud.baremetal.v1alpha.PrivateSubnetService.Create:input_type -> yandex.cloud.baremetal.v1alpha.CreatePrivateSubnetRequest
	7,  // 11: yandex.cloud.baremetal.v1alpha.PrivateSubnetService.Update:input_type -> yandex.cloud.baremetal.v1alpha.UpdatePrivateSubnetRequest
	9,  // 12: yandex.cloud.baremetal.v1alpha.PrivateSubnetService.Delete:input_type -> yandex.cloud.baremetal.v1alpha.DeletePrivateSubnetRequest
	11, // 13: yandex.cloud.baremetal.v1alpha.PrivateSubnetService.ListOperations:input_type -> yandex.cloud.baremetal.v1alpha.ListPrivateSubnetOperationsRequest
	15, // 14: yandex.cloud.baremetal.v1alpha.PrivateSubnetService.Get:output_type -> yandex.cloud.baremetal.v1alpha.PrivateSubnet
	2,  // 15: yandex.cloud.baremetal.v1alpha.PrivateSubnetService.List:output_type -> yandex.cloud.baremetal.v1alpha.ListPrivateSubnetResponse
	17, // 16: yandex.cloud.baremetal.v1alpha.PrivateSubnetService.Create:output_type -> yandex.cloud.operation.Operation
	17, // 17: yandex.cloud.baremetal.v1alpha.PrivateSubnetService.Update:output_type -> yandex.cloud.operation.Operation
	17, // 18: yandex.cloud.baremetal.v1alpha.PrivateSubnetService.Delete:output_type -> yandex.cloud.operation.Operation
	12, // 19: yandex.cloud.baremetal.v1alpha.PrivateSubnetService.ListOperations:output_type -> yandex.cloud.baremetal.v1alpha.ListPrivateSubnetOperationsResponse
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_init() }
func file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_init() {
	if File_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto != nil {
		return
	}
	file_yandex_cloud_baremetal_v1alpha_private_subnet_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDesc), len(file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto = out.File
	file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_goTypes = nil
	file_yandex_cloud_baremetal_v1alpha_private_subnet_service_proto_depIdxs = nil
}

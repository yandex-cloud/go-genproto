// Code generated by protoc-gen-goext. DO NOT EDIT.

package baremetal

import (
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
)

func (m *GetServerRequest) SetServerId(v string) {
	m.ServerId = v
}

func (m *ListServerRequest) SetFolderId(v string) {
	m.FolderId = v
}

func (m *ListServerRequest) SetPageSize(v int64) {
	m.PageSize = v
}

func (m *ListServerRequest) SetPageToken(v string) {
	m.PageToken = v
}

func (m *ListServerRequest) SetOrderBy(v string) {
	m.OrderBy = v
}

func (m *ListServerRequest) SetFilter(v string) {
	m.Filter = v
}

func (m *ListServerResponse) SetServers(v []*Server) {
	m.Servers = v
}

func (m *ListServerResponse) SetNextPageToken(v string) {
	m.NextPageToken = v
}

func (m *CreateServerRequest) SetFolderId(v string) {
	m.FolderId = v
}

func (m *CreateServerRequest) SetName(v string) {
	m.Name = v
}

func (m *CreateServerRequest) SetDescription(v string) {
	m.Description = v
}

func (m *CreateServerRequest) SetHardwarePoolId(v string) {
	m.HardwarePoolId = v
}

func (m *CreateServerRequest) SetConfigurationId(v string) {
	m.ConfigurationId = v
}

func (m *CreateServerRequest) SetRentalPeriodId(v string) {
	m.RentalPeriodId = v
}

func (m *CreateServerRequest) SetNetworkInterfaces(v []*NetworkInterfaceSpec) {
	m.NetworkInterfaces = v
}

func (m *CreateServerRequest) SetOsSettingsSpec(v *OsSettingsSpec) {
	m.OsSettingsSpec = v
}

func (m *CreateServerRequest) SetLabels(v map[string]string) {
	m.Labels = v
}

func (m *CreateServerMetadata) SetServerId(v string) {
	m.ServerId = v
}

func (m *UpdateServerRequest) SetServerId(v string) {
	m.ServerId = v
}

func (m *UpdateServerRequest) SetUpdateMask(v *fieldmaskpb.FieldMask) {
	m.UpdateMask = v
}

func (m *UpdateServerRequest) SetName(v string) {
	m.Name = v
}

func (m *UpdateServerRequest) SetDescription(v string) {
	m.Description = v
}

func (m *UpdateServerRequest) SetNetworkInterfaces(v []*NetworkInterfaceSpec) {
	m.NetworkInterfaces = v
}

func (m *UpdateServerRequest) SetLabels(v map[string]string) {
	m.Labels = v
}

type NetworkInterfaceSpec_Subnet = isNetworkInterfaceSpec_Subnet

func (m *NetworkInterfaceSpec) SetSubnet(v NetworkInterfaceSpec_Subnet) {
	m.Subnet = v
}

func (m *NetworkInterfaceSpec) SetId(v string) {
	m.Id = v
}

func (m *NetworkInterfaceSpec) SetPrivateSubnet(v *PrivateSubnetNetworkInterface) {
	m.Subnet = &NetworkInterfaceSpec_PrivateSubnet{
		PrivateSubnet: v,
	}
}

func (m *NetworkInterfaceSpec) SetPublicSubnet(v *PublicSubnetNetworkInterface) {
	m.Subnet = &NetworkInterfaceSpec_PublicSubnet{
		PublicSubnet: v,
	}
}

func (m *UpdateServerMetadata) SetServerId(v string) {
	m.ServerId = v
}

func (m *DeleteServerRequest) SetServerId(v string) {
	m.ServerId = v
}

func (m *DeleteServerMetadata) SetServerId(v string) {
	m.ServerId = v
}

func (m *PowerOffServerRequest) SetServerId(v string) {
	m.ServerId = v
}

func (m *PowerOffServerMetadata) SetServerId(v string) {
	m.ServerId = v
}

func (m *PowerOnServerRequest) SetServerId(v string) {
	m.ServerId = v
}

func (m *PowerOnServerMetadata) SetServerId(v string) {
	m.ServerId = v
}

func (m *RebootServerRequest) SetServerId(v string) {
	m.ServerId = v
}

func (m *RebootServerMetadata) SetServerId(v string) {
	m.ServerId = v
}

func (m *ReinstallServerRequest) SetServerId(v string) {
	m.ServerId = v
}

func (m *ReinstallServerRequest) SetOsSettingsSpec(v *OsSettingsSpec) {
	m.OsSettingsSpec = v
}

func (m *ReinstallServerMetadata) SetServerId(v string) {
	m.ServerId = v
}

func (m *ListServerOperationsRequest) SetServerId(v string) {
	m.ServerId = v
}

func (m *ListServerOperationsRequest) SetPageSize(v int64) {
	m.PageSize = v
}

func (m *ListServerOperationsRequest) SetPageToken(v string) {
	m.PageToken = v
}

func (m *ListServerOperationsResponse) SetOperations(v []*operation.Operation) {
	m.Operations = v
}

func (m *ListServerOperationsResponse) SetNextPageToken(v string) {
	m.NextPageToken = v
}

func (m *BatchCreateServersRequest) SetFolderId(v string) {
	m.FolderId = v
}

func (m *BatchCreateServersRequest) SetName(v string) {
	m.Name = v
}

func (m *BatchCreateServersRequest) SetDescription(v string) {
	m.Description = v
}

func (m *BatchCreateServersRequest) SetHardwarePoolId(v string) {
	m.HardwarePoolId = v
}

func (m *BatchCreateServersRequest) SetConfigurationId(v string) {
	m.ConfigurationId = v
}

func (m *BatchCreateServersRequest) SetRentalPeriodId(v string) {
	m.RentalPeriodId = v
}

func (m *BatchCreateServersRequest) SetNetworkInterfaces(v []*NetworkInterfaceSpec) {
	m.NetworkInterfaces = v
}

func (m *BatchCreateServersRequest) SetOsSettingsSpec(v *OsSettingsSpec) {
	m.OsSettingsSpec = v
}

func (m *BatchCreateServersRequest) SetLabels(v map[string]string) {
	m.Labels = v
}

func (m *BatchCreateServersRequest) SetCount(v int64) {
	m.Count = v
}

func (m *BatchCreateServersResponse) SetServers(v []*Server) {
	m.Servers = v
}

func (m *BatchCreateServersMetadata) SetServerIds(v []string) {
	m.ServerIds = v
}

func (m *QuarantineServerMetadata) SetServerId(v string) {
	m.ServerId = v
}

func (m *StartProlongationRequest) SetServerId(v string) {
	m.ServerId = v
}

func (m *StopProlongationRequest) SetServerId(v string) {
	m.ServerId = v
}

func (m *ServerSetProlongationMetadata) SetServerId(v string) {
	m.ServerId = v
}

type OsSettingsSpec_SshKey = isOsSettingsSpec_SshKey

func (m *OsSettingsSpec) SetSshKey(v OsSettingsSpec_SshKey) {
	m.SshKey = v
}

type OsSettingsSpec_Password = isOsSettingsSpec_Password

func (m *OsSettingsSpec) SetPassword(v OsSettingsSpec_Password) {
	m.Password = v
}

func (m *OsSettingsSpec) SetImageId(v string) {
	m.ImageId = v
}

func (m *OsSettingsSpec) SetStorages(v []*Storage) {
	m.Storages = v
}

func (m *OsSettingsSpec) SetSshPublicKey(v string) {
	m.SshKey = &OsSettingsSpec_SshPublicKey{
		SshPublicKey: v,
	}
}

func (m *OsSettingsSpec) SetUserSshId(v string) {
	m.SshKey = &OsSettingsSpec_UserSshId{
		UserSshId: v,
	}
}

func (m *OsSettingsSpec) SetPasswordPlainText(v string) {
	m.Password = &OsSettingsSpec_PasswordPlainText{
		PasswordPlainText: v,
	}
}

func (m *OsSettingsSpec) SetPasswordLockboxSecret(v *LockboxSecret) {
	m.Password = &OsSettingsSpec_PasswordLockboxSecret{
		PasswordLockboxSecret: v,
	}
}

func (m *LockboxSecret) SetSecretId(v string) {
	m.SecretId = v
}

func (m *LockboxSecret) SetVersionId(v string) {
	m.VersionId = v
}

func (m *LockboxSecret) SetKey(v string) {
	m.Key = v
}

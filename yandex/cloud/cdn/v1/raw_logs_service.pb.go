// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/cdn/v1/raw_logs_service.proto

package cdn

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActivateRawLogsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of CDN resource to switch logs storage for..
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// Raw logs settings.
	Settings      *RawLogsSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivateRawLogsRequest) Reset() {
	*x = ActivateRawLogsRequest{}
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivateRawLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateRawLogsRequest) ProtoMessage() {}

func (x *ActivateRawLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateRawLogsRequest.ProtoReflect.Descriptor instead.
func (*ActivateRawLogsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDescGZIP(), []int{0}
}

func (x *ActivateRawLogsRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ActivateRawLogsRequest) GetSettings() *RawLogsSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type ActivateRawLogsMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of resource with activated raw logs.
	ResourceId    string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivateRawLogsMetadata) Reset() {
	*x = ActivateRawLogsMetadata{}
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivateRawLogsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateRawLogsMetadata) ProtoMessage() {}

func (x *ActivateRawLogsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateRawLogsMetadata.ProtoReflect.Descriptor instead.
func (*ActivateRawLogsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDescGZIP(), []int{1}
}

func (x *ActivateRawLogsMetadata) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type ActivateRawLogsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Raw logs status.
	Status RawLogsStatus `protobuf:"varint,1,opt,name=status,proto3,enum=yandex.cloud.cdn.v1.RawLogsStatus" json:"status,omitempty"`
	// Raw logs settings.
	Settings      *RawLogsSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivateRawLogsResponse) Reset() {
	*x = ActivateRawLogsResponse{}
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivateRawLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateRawLogsResponse) ProtoMessage() {}

func (x *ActivateRawLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateRawLogsResponse.ProtoReflect.Descriptor instead.
func (*ActivateRawLogsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDescGZIP(), []int{2}
}

func (x *ActivateRawLogsResponse) GetStatus() RawLogsStatus {
	if x != nil {
		return x.Status
	}
	return RawLogsStatus_RAW_LOGS_STATUS_UNSPECIFIED
}

func (x *ActivateRawLogsResponse) GetSettings() *RawLogsSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type DeactivateRawLogsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of CDN resource to deactivate Raw Logs for.
	ResourceId    string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeactivateRawLogsRequest) Reset() {
	*x = DeactivateRawLogsRequest{}
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeactivateRawLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateRawLogsRequest) ProtoMessage() {}

func (x *DeactivateRawLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateRawLogsRequest.ProtoReflect.Descriptor instead.
func (*DeactivateRawLogsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeactivateRawLogsRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type DeactivateRawLogsMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of CDN resource.
	ResourceId    string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeactivateRawLogsMetadata) Reset() {
	*x = DeactivateRawLogsMetadata{}
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeactivateRawLogsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateRawLogsMetadata) ProtoMessage() {}

func (x *DeactivateRawLogsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateRawLogsMetadata.ProtoReflect.Descriptor instead.
func (*DeactivateRawLogsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeactivateRawLogsMetadata) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type GetRawLogsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of CDN resource to request status and settings.
	ResourceId    string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRawLogsRequest) Reset() {
	*x = GetRawLogsRequest{}
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRawLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRawLogsRequest) ProtoMessage() {}

func (x *GetRawLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRawLogsRequest.ProtoReflect.Descriptor instead.
func (*GetRawLogsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetRawLogsRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type GetRawLogsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Raw logs status.
	Status RawLogsStatus `protobuf:"varint,1,opt,name=status,proto3,enum=yandex.cloud.cdn.v1.RawLogsStatus" json:"status,omitempty"`
	// Raw logs settings.
	Settings      *RawLogsSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRawLogsResponse) Reset() {
	*x = GetRawLogsResponse{}
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRawLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRawLogsResponse) ProtoMessage() {}

func (x *GetRawLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRawLogsResponse.ProtoReflect.Descriptor instead.
func (*GetRawLogsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetRawLogsResponse) GetStatus() RawLogsStatus {
	if x != nil {
		return x.Status
	}
	return RawLogsStatus_RAW_LOGS_STATUS_UNSPECIFIED
}

func (x *GetRawLogsResponse) GetSettings() *RawLogsSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdateRawLogsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of CDN resource.
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// Raw logs settings.
	Settings      *RawLogsSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRawLogsRequest) Reset() {
	*x = UpdateRawLogsRequest{}
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRawLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRawLogsRequest) ProtoMessage() {}

func (x *UpdateRawLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRawLogsRequest.ProtoReflect.Descriptor instead.
func (*UpdateRawLogsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateRawLogsRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *UpdateRawLogsRequest) GetSettings() *RawLogsSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdateRawLogsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Raw logs status.
	Status RawLogsStatus `protobuf:"varint,1,opt,name=status,proto3,enum=yandex.cloud.cdn.v1.RawLogsStatus" json:"status,omitempty"`
	// Raw logs settings.
	Settings      *RawLogsSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRawLogsResponse) Reset() {
	*x = UpdateRawLogsResponse{}
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRawLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRawLogsResponse) ProtoMessage() {}

func (x *UpdateRawLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRawLogsResponse.ProtoReflect.Descriptor instead.
func (*UpdateRawLogsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateRawLogsResponse) GetStatus() RawLogsStatus {
	if x != nil {
		return x.Status
	}
	return RawLogsStatus_RAW_LOGS_STATUS_UNSPECIFIED
}

func (x *UpdateRawLogsResponse) GetSettings() *RawLogsSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdateRawLogsMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of CDN resource.
	ResourceId    string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRawLogsMetadata) Reset() {
	*x = UpdateRawLogsMetadata{}
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRawLogsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRawLogsMetadata) ProtoMessage() {}

func (x *UpdateRawLogsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRawLogsMetadata.ProtoReflect.Descriptor instead.
func (*UpdateRawLogsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateRawLogsMetadata) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

var File_yandex_cloud_cdn_v1_raw_logs_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDesc = "" +
	"\n" +
	"*yandex/cloud/cdn/v1/raw_logs_service.proto\x12\x13yandex.cloud.cdn.v1\x1a\x1cgoogle/api/annotations.proto\x1a yandex/cloud/api/operation.proto\x1a\"yandex/cloud/cdn/v1/raw_logs.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\"\x89\x01\n" +
	"\x16ActivateRawLogsRequest\x12-\n" +
	"\vresource_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"resourceId\x12@\n" +
	"\bsettings\x18\x02 \x01(\v2$.yandex.cloud.cdn.v1.RawLogsSettingsR\bsettings\":\n" +
	"\x17ActivateRawLogsMetadata\x12\x1f\n" +
	"\vresource_id\x18\x01 \x01(\tR\n" +
	"resourceId\"\x97\x01\n" +
	"\x17ActivateRawLogsResponse\x12:\n" +
	"\x06status\x18\x01 \x01(\x0e2\".yandex.cloud.cdn.v1.RawLogsStatusR\x06status\x12@\n" +
	"\bsettings\x18\x02 \x01(\v2$.yandex.cloud.cdn.v1.RawLogsSettingsR\bsettings\"I\n" +
	"\x18DeactivateRawLogsRequest\x12-\n" +
	"\vresource_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"resourceId\"<\n" +
	"\x19DeactivateRawLogsMetadata\x12\x1f\n" +
	"\vresource_id\x18\x01 \x01(\tR\n" +
	"resourceId\"B\n" +
	"\x11GetRawLogsRequest\x12-\n" +
	"\vresource_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"resourceId\"\x92\x01\n" +
	"\x12GetRawLogsResponse\x12:\n" +
	"\x06status\x18\x01 \x01(\x0e2\".yandex.cloud.cdn.v1.RawLogsStatusR\x06status\x12@\n" +
	"\bsettings\x18\x02 \x01(\v2$.yandex.cloud.cdn.v1.RawLogsSettingsR\bsettings\"\x87\x01\n" +
	"\x14UpdateRawLogsRequest\x12-\n" +
	"\vresource_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"resourceId\x12@\n" +
	"\bsettings\x18\x02 \x01(\v2$.yandex.cloud.cdn.v1.RawLogsSettingsR\bsettings\"\x95\x01\n" +
	"\x15UpdateRawLogsResponse\x12:\n" +
	"\x06status\x18\x01 \x01(\x0e2\".yandex.cloud.cdn.v1.RawLogsStatusR\x06status\x12@\n" +
	"\bsettings\x18\x02 \x01(\v2$.yandex.cloud.cdn.v1.RawLogsSettingsR\bsettings\"8\n" +
	"\x15UpdateRawLogsMetadata\x12\x1f\n" +
	"\vresource_id\x18\x01 \x01(\tR\n" +
	"resourceId2\xba\x05\n" +
	"\x0eRawLogsService\x12\xb5\x01\n" +
	"\bActivate\x12+.yandex.cloud.cdn.v1.ActivateRawLogsRequest\x1a!.yandex.cloud.operation.Operation\"Y\xb2\xd2*2\n" +
	"\x17ActivateRawLogsMetadata\x12\x17ActivateRawLogsResponse\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/cdn/v1/rawLogs:activate\x12\xbb\x01\n" +
	"\n" +
	"Deactivate\x12-.yandex.cloud.cdn.v1.DeactivateRawLogsRequest\x1a!.yandex.cloud.operation.Operation\"[\xb2\xd2*2\n" +
	"\x19DeactivateRawLogsMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02\x1f\"\x1d/cdn/v1/rawLogs/{resource_id}\x12}\n" +
	"\x03Get\x12&.yandex.cloud.cdn.v1.GetRawLogsRequest\x1a'.yandex.cloud.cdn.v1.GetRawLogsResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/cdn/v1/rawLogs/{resource_id}\x12\xb2\x01\n" +
	"\x06Update\x12).yandex.cloud.cdn.v1.UpdateRawLogsRequest\x1a!.yandex.cloud.operation.Operation\"Z\xb2\xd2*.\n" +
	"\x15UpdateRawLogsMetadata\x12\x15UpdateRawLogsResponse\x82\xd3\xe4\x93\x02\":\x01*2\x1d/cdn/v1/rawLogs/{resource_id}BV\n" +
	"\x17yandex.cloud.api.cdn.v1Z;github.com/yandex-cloud/go-genproto/yandex/cloud/cdn/v1;cdnb\x06proto3"

var (
	file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDescData []byte
)

func file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDesc), len(file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDesc)))
	})
	return file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDescData
}

var file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_yandex_cloud_cdn_v1_raw_logs_service_proto_goTypes = []any{
	(*ActivateRawLogsRequest)(nil),    // 0: yandex.cloud.cdn.v1.ActivateRawLogsRequest
	(*ActivateRawLogsMetadata)(nil),   // 1: yandex.cloud.cdn.v1.ActivateRawLogsMetadata
	(*ActivateRawLogsResponse)(nil),   // 2: yandex.cloud.cdn.v1.ActivateRawLogsResponse
	(*DeactivateRawLogsRequest)(nil),  // 3: yandex.cloud.cdn.v1.DeactivateRawLogsRequest
	(*DeactivateRawLogsMetadata)(nil), // 4: yandex.cloud.cdn.v1.DeactivateRawLogsMetadata
	(*GetRawLogsRequest)(nil),         // 5: yandex.cloud.cdn.v1.GetRawLogsRequest
	(*GetRawLogsResponse)(nil),        // 6: yandex.cloud.cdn.v1.GetRawLogsResponse
	(*UpdateRawLogsRequest)(nil),      // 7: yandex.cloud.cdn.v1.UpdateRawLogsRequest
	(*UpdateRawLogsResponse)(nil),     // 8: yandex.cloud.cdn.v1.UpdateRawLogsResponse
	(*UpdateRawLogsMetadata)(nil),     // 9: yandex.cloud.cdn.v1.UpdateRawLogsMetadata
	(*RawLogsSettings)(nil),           // 10: yandex.cloud.cdn.v1.RawLogsSettings
	(RawLogsStatus)(0),                // 11: yandex.cloud.cdn.v1.RawLogsStatus
	(*operation.Operation)(nil),       // 12: yandex.cloud.operation.Operation
}
var file_yandex_cloud_cdn_v1_raw_logs_service_proto_depIdxs = []int32{
	10, // 0: yandex.cloud.cdn.v1.ActivateRawLogsRequest.settings:type_name -> yandex.cloud.cdn.v1.RawLogsSettings
	11, // 1: yandex.cloud.cdn.v1.ActivateRawLogsResponse.status:type_name -> yandex.cloud.cdn.v1.RawLogsStatus
	10, // 2: yandex.cloud.cdn.v1.ActivateRawLogsResponse.settings:type_name -> yandex.cloud.cdn.v1.RawLogsSettings
	11, // 3: yandex.cloud.cdn.v1.GetRawLogsResponse.status:type_name -> yandex.cloud.cdn.v1.RawLogsStatus
	10, // 4: yandex.cloud.cdn.v1.GetRawLogsResponse.settings:type_name -> yandex.cloud.cdn.v1.RawLogsSettings
	10, // 5: yandex.cloud.cdn.v1.UpdateRawLogsRequest.settings:type_name -> yandex.cloud.cdn.v1.RawLogsSettings
	11, // 6: yandex.cloud.cdn.v1.UpdateRawLogsResponse.status:type_name -> yandex.cloud.cdn.v1.RawLogsStatus
	10, // 7: yandex.cloud.cdn.v1.UpdateRawLogsResponse.settings:type_name -> yandex.cloud.cdn.v1.RawLogsSettings
	0,  // 8: yandex.cloud.cdn.v1.RawLogsService.Activate:input_type -> yandex.cloud.cdn.v1.ActivateRawLogsRequest
	3,  // 9: yandex.cloud.cdn.v1.RawLogsService.Deactivate:input_type -> yandex.cloud.cdn.v1.DeactivateRawLogsRequest
	5,  // 10: yandex.cloud.cdn.v1.RawLogsService.Get:input_type -> yandex.cloud.cdn.v1.GetRawLogsRequest
	7,  // 11: yandex.cloud.cdn.v1.RawLogsService.Update:input_type -> yandex.cloud.cdn.v1.UpdateRawLogsRequest
	12, // 12: yandex.cloud.cdn.v1.RawLogsService.Activate:output_type -> yandex.cloud.operation.Operation
	12, // 13: yandex.cloud.cdn.v1.RawLogsService.Deactivate:output_type -> yandex.cloud.operation.Operation
	6,  // 14: yandex.cloud.cdn.v1.RawLogsService.Get:output_type -> yandex.cloud.cdn.v1.GetRawLogsResponse
	12, // 15: yandex.cloud.cdn.v1.RawLogsService.Update:output_type -> yandex.cloud.operation.Operation
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_yandex_cloud_cdn_v1_raw_logs_service_proto_init() }
func file_yandex_cloud_cdn_v1_raw_logs_service_proto_init() {
	if File_yandex_cloud_cdn_v1_raw_logs_service_proto != nil {
		return
	}
	file_yandex_cloud_cdn_v1_raw_logs_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDesc), len(file_yandex_cloud_cdn_v1_raw_logs_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_cdn_v1_raw_logs_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_cdn_v1_raw_logs_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_cdn_v1_raw_logs_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_cdn_v1_raw_logs_service_proto = out.File
	file_yandex_cloud_cdn_v1_raw_logs_service_proto_goTypes = nil
	file_yandex_cloud_cdn_v1_raw_logs_service_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/certificatemanager/v1/certificate_content_service.proto

package certificatemanager

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PrivateKeyFormat int32

const (
	PrivateKeyFormat_PRIVATE_KEY_FORMAT_UNSPECIFIED PrivateKeyFormat = 0
	PrivateKeyFormat_PKCS1                          PrivateKeyFormat = 1
	PrivateKeyFormat_PKCS8                          PrivateKeyFormat = 2
)

// Enum value maps for PrivateKeyFormat.
var (
	PrivateKeyFormat_name = map[int32]string{
		0: "PRIVATE_KEY_FORMAT_UNSPECIFIED",
		1: "PKCS1",
		2: "PKCS8",
	}
	PrivateKeyFormat_value = map[string]int32{
		"PRIVATE_KEY_FORMAT_UNSPECIFIED": 0,
		"PKCS1":                          1,
		"PKCS8":                          2,
	}
)

func (x PrivateKeyFormat) Enum() *PrivateKeyFormat {
	p := new(PrivateKeyFormat)
	*p = x
	return p
}

func (x PrivateKeyFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrivateKeyFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_enumTypes[0].Descriptor()
}

func (PrivateKeyFormat) Type() protoreflect.EnumType {
	return &file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_enumTypes[0]
}

func (x PrivateKeyFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrivateKeyFormat.Descriptor instead.
func (PrivateKeyFormat) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDescGZIP(), []int{0}
}

type GetCertificateContentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the certificate.
	CertificateId string `protobuf:"bytes,1,opt,name=certificate_id,json=certificateId,proto3" json:"certificate_id,omitempty"`
	// PEM-encoded certificate chain content of the certificate.
	CertificateChain []string `protobuf:"bytes,3,rep,name=certificate_chain,json=certificateChain,proto3" json:"certificate_chain,omitempty"`
	// PEM-encoded private key content of the certificate.
	PrivateKey    string `protobuf:"bytes,4,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCertificateContentResponse) Reset() {
	*x = GetCertificateContentResponse{}
	mi := &file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCertificateContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertificateContentResponse) ProtoMessage() {}

func (x *GetCertificateContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertificateContentResponse.ProtoReflect.Descriptor instead.
func (*GetCertificateContentResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetCertificateContentResponse) GetCertificateId() string {
	if x != nil {
		return x.CertificateId
	}
	return ""
}

func (x *GetCertificateContentResponse) GetCertificateChain() []string {
	if x != nil {
		return x.CertificateChain
	}
	return nil
}

func (x *GetCertificateContentResponse) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

type GetCertificateContentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the certificate to download content.
	CertificateId string `protobuf:"bytes,1,opt,name=certificate_id,json=certificateId,proto3" json:"certificate_id,omitempty"`
	// Optional ID of the version.
	VersionId string `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// Desired format of private key
	PrivateKeyFormat PrivateKeyFormat `protobuf:"varint,3,opt,name=private_key_format,json=privateKeyFormat,proto3,enum=yandex.cloud.certificatemanager.v1.PrivateKeyFormat" json:"private_key_format,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetCertificateContentRequest) Reset() {
	*x = GetCertificateContentRequest{}
	mi := &file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCertificateContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertificateContentRequest) ProtoMessage() {}

func (x *GetCertificateContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertificateContentRequest.ProtoReflect.Descriptor instead.
func (*GetCertificateContentRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetCertificateContentRequest) GetCertificateId() string {
	if x != nil {
		return x.CertificateId
	}
	return ""
}

func (x *GetCertificateContentRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *GetCertificateContentRequest) GetPrivateKeyFormat() PrivateKeyFormat {
	if x != nil {
		return x.PrivateKeyFormat
	}
	return PrivateKeyFormat_PRIVATE_KEY_FORMAT_UNSPECIFIED
}

type GetExCertificateContentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Identifier:
	//
	//	*GetExCertificateContentRequest_CertificateId
	//	*GetExCertificateContentRequest_FolderAndName
	Identifier       isGetExCertificateContentRequest_Identifier `protobuf_oneof:"identifier"`
	VersionId        string                                      `protobuf:"bytes,21,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	PrivateKeyFormat PrivateKeyFormat                            `protobuf:"varint,22,opt,name=private_key_format,json=privateKeyFormat,proto3,enum=yandex.cloud.certificatemanager.v1.PrivateKeyFormat" json:"private_key_format,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetExCertificateContentRequest) Reset() {
	*x = GetExCertificateContentRequest{}
	mi := &file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExCertificateContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExCertificateContentRequest) ProtoMessage() {}

func (x *GetExCertificateContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExCertificateContentRequest.ProtoReflect.Descriptor instead.
func (*GetExCertificateContentRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetExCertificateContentRequest) GetIdentifier() isGetExCertificateContentRequest_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *GetExCertificateContentRequest) GetCertificateId() string {
	if x != nil {
		if x, ok := x.Identifier.(*GetExCertificateContentRequest_CertificateId); ok {
			return x.CertificateId
		}
	}
	return ""
}

func (x *GetExCertificateContentRequest) GetFolderAndName() *FolderAndName {
	if x != nil {
		if x, ok := x.Identifier.(*GetExCertificateContentRequest_FolderAndName); ok {
			return x.FolderAndName
		}
	}
	return nil
}

func (x *GetExCertificateContentRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *GetExCertificateContentRequest) GetPrivateKeyFormat() PrivateKeyFormat {
	if x != nil {
		return x.PrivateKeyFormat
	}
	return PrivateKeyFormat_PRIVATE_KEY_FORMAT_UNSPECIFIED
}

type isGetExCertificateContentRequest_Identifier interface {
	isGetExCertificateContentRequest_Identifier()
}

type GetExCertificateContentRequest_CertificateId struct {
	CertificateId string `protobuf:"bytes,1,opt,name=certificate_id,json=certificateId,proto3,oneof"`
}

type GetExCertificateContentRequest_FolderAndName struct {
	FolderAndName *FolderAndName `protobuf:"bytes,2,opt,name=folder_and_name,json=folderAndName,proto3,oneof"`
}

func (*GetExCertificateContentRequest_CertificateId) isGetExCertificateContentRequest_Identifier() {}

func (*GetExCertificateContentRequest_FolderAndName) isGetExCertificateContentRequest_Identifier() {}

type GetExCertificateContentResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CertificateId    string                 `protobuf:"bytes,1,opt,name=certificate_id,json=certificateId,proto3" json:"certificate_id,omitempty"`
	VersionId        string                 `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	CertificateChain []string               `protobuf:"bytes,3,rep,name=certificate_chain,json=certificateChain,proto3" json:"certificate_chain,omitempty"`
	PrivateKey       string                 `protobuf:"bytes,4,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetExCertificateContentResponse) Reset() {
	*x = GetExCertificateContentResponse{}
	mi := &file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExCertificateContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExCertificateContentResponse) ProtoMessage() {}

func (x *GetExCertificateContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExCertificateContentResponse.ProtoReflect.Descriptor instead.
func (*GetExCertificateContentResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetExCertificateContentResponse) GetCertificateId() string {
	if x != nil {
		return x.CertificateId
	}
	return ""
}

func (x *GetExCertificateContentResponse) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *GetExCertificateContentResponse) GetCertificateChain() []string {
	if x != nil {
		return x.CertificateChain
	}
	return nil
}

func (x *GetExCertificateContentResponse) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

type FolderAndName struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FolderId        string                 `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	CertificateName string                 `protobuf:"bytes,2,opt,name=certificate_name,json=certificateName,proto3" json:"certificate_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FolderAndName) Reset() {
	*x = FolderAndName{}
	mi := &file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FolderAndName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderAndName) ProtoMessage() {}

func (x *FolderAndName) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FolderAndName.ProtoReflect.Descriptor instead.
func (*FolderAndName) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDescGZIP(), []int{4}
}

func (x *FolderAndName) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *FolderAndName) GetCertificateName() string {
	if x != nil {
		return x.CertificateName
	}
	return ""
}

var File_yandex_cloud_certificatemanager_v1_certificate_content_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDesc = "" +
	"\n" +
	"Dyandex/cloud/certificatemanager/v1/certificate_content_service.proto\x12\"yandex.cloud.certificatemanager.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1dyandex/cloud/validation.proto\"\x9a\x01\n" +
	"\x1dGetCertificateContentResponse\x12%\n" +
	"\x0ecertificate_id\x18\x01 \x01(\tR\rcertificateId\x12+\n" +
	"\x11certificate_chain\x18\x03 \x03(\tR\x10certificateChain\x12\x1f\n" +
	"\vprivate_key\x18\x04 \x01(\tR\n" +
	"privateKeyJ\x04\b\x02\x10\x03\"\xc8\x01\n" +
	"\x1cGetCertificateContentRequest\x12%\n" +
	"\x0ecertificate_id\x18\x01 \x01(\tR\rcertificateId\x12\x1d\n" +
	"\n" +
	"version_id\x18\x02 \x01(\tR\tversionId\x12b\n" +
	"\x12private_key_format\x18\x03 \x01(\x0e24.yandex.cloud.certificatemanager.v1.PrivateKeyFormatR\x10privateKeyFormat\"\xd7\x02\n" +
	"\x1eGetExCertificateContentRequest\x121\n" +
	"\x0ecertificate_id\x18\x01 \x01(\tB\b\x8a\xc81\x04<=50H\x00R\rcertificateId\x12[\n" +
	"\x0ffolder_and_name\x18\x02 \x01(\v21.yandex.cloud.certificatemanager.v1.FolderAndNameH\x00R\rfolderAndName\x12'\n" +
	"\n" +
	"version_id\x18\x15 \x01(\tB\b\x8a\xc81\x04<=50R\tversionId\x12b\n" +
	"\x12private_key_format\x18\x16 \x01(\x0e24.yandex.cloud.certificatemanager.v1.PrivateKeyFormatR\x10privateKeyFormatB\x12\n" +
	"\n" +
	"identifier\x12\x04\xc0\xc11\x01J\x04\b\x03\x10\x15\"\xb5\x01\n" +
	"\x1fGetExCertificateContentResponse\x12%\n" +
	"\x0ecertificate_id\x18\x01 \x01(\tR\rcertificateId\x12\x1d\n" +
	"\n" +
	"version_id\x18\x02 \x01(\tR\tversionId\x12+\n" +
	"\x11certificate_chain\x18\x03 \x03(\tR\x10certificateChain\x12\x1f\n" +
	"\vprivate_key\x18\x04 \x01(\tR\n" +
	"privateKey\"t\n" +
	"\rFolderAndName\x12)\n" +
	"\tfolder_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x128\n" +
	"\x10certificate_name\x18\x02 \x01(\tB\r\xe8\xc71\x01\x8a\xc81\x05<=100R\x0fcertificateName*L\n" +
	"\x10PrivateKeyFormat\x12\"\n" +
	"\x1ePRIVATE_KEY_FORMAT_UNSPECIFIED\x10\x00\x12\t\n" +
	"\x05PKCS1\x10\x01\x12\t\n" +
	"\x05PKCS8\x10\x022\xb9\x03\n" +
	"\x19CertificateContentService\x12\xd4\x01\n" +
	"\x03Get\x12@.yandex.cloud.certificatemanager.v1.GetCertificateContentRequest\x1aA.yandex.cloud.certificatemanager.v1.GetCertificateContentResponse\"H\x82\xd3\xe4\x93\x02B\x12@/certificate-manager/v1/certificates/{certificate_id}:getContent\x12\xc4\x01\n" +
	"\x05GetEx\x12B.yandex.cloud.certificatemanager.v1.GetExCertificateContentRequest\x1aC.yandex.cloud.certificatemanager.v1.GetExCertificateContentResponse\"2\x82\xd3\xe4\x93\x02,\x12*/certificate-manager/v1/certificates:getExB\x83\x01\n" +
	"&yandex.cloud.api.certificatemanager.v1ZYgithub.com/yandex-cloud/go-genproto/yandex/cloud/certificatemanager/v1;certificatemanagerb\x06proto3"

var (
	file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDescData []byte
)

func file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDesc), len(file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDesc)))
	})
	return file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDescData
}

var file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_goTypes = []any{
	(PrivateKeyFormat)(0),                   // 0: yandex.cloud.certificatemanager.v1.PrivateKeyFormat
	(*GetCertificateContentResponse)(nil),   // 1: yandex.cloud.certificatemanager.v1.GetCertificateContentResponse
	(*GetCertificateContentRequest)(nil),    // 2: yandex.cloud.certificatemanager.v1.GetCertificateContentRequest
	(*GetExCertificateContentRequest)(nil),  // 3: yandex.cloud.certificatemanager.v1.GetExCertificateContentRequest
	(*GetExCertificateContentResponse)(nil), // 4: yandex.cloud.certificatemanager.v1.GetExCertificateContentResponse
	(*FolderAndName)(nil),                   // 5: yandex.cloud.certificatemanager.v1.FolderAndName
}
var file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_depIdxs = []int32{
	0, // 0: yandex.cloud.certificatemanager.v1.GetCertificateContentRequest.private_key_format:type_name -> yandex.cloud.certificatemanager.v1.PrivateKeyFormat
	5, // 1: yandex.cloud.certificatemanager.v1.GetExCertificateContentRequest.folder_and_name:type_name -> yandex.cloud.certificatemanager.v1.FolderAndName
	0, // 2: yandex.cloud.certificatemanager.v1.GetExCertificateContentRequest.private_key_format:type_name -> yandex.cloud.certificatemanager.v1.PrivateKeyFormat
	2, // 3: yandex.cloud.certificatemanager.v1.CertificateContentService.Get:input_type -> yandex.cloud.certificatemanager.v1.GetCertificateContentRequest
	3, // 4: yandex.cloud.certificatemanager.v1.CertificateContentService.GetEx:input_type -> yandex.cloud.certificatemanager.v1.GetExCertificateContentRequest
	1, // 5: yandex.cloud.certificatemanager.v1.CertificateContentService.Get:output_type -> yandex.cloud.certificatemanager.v1.GetCertificateContentResponse
	4, // 6: yandex.cloud.certificatemanager.v1.CertificateContentService.GetEx:output_type -> yandex.cloud.certificatemanager.v1.GetExCertificateContentResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_init() }
func file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_init() {
	if File_yandex_cloud_certificatemanager_v1_certificate_content_service_proto != nil {
		return
	}
	file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_msgTypes[2].OneofWrappers = []any{
		(*GetExCertificateContentRequest_CertificateId)(nil),
		(*GetExCertificateContentRequest_FolderAndName)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDesc), len(file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_certificatemanager_v1_certificate_content_service_proto = out.File
	file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_goTypes = nil
	file_yandex_cloud_certificatemanager_v1_certificate_content_service_proto_depIdxs = nil
}

// Code generated by protoc-gen-goext. DO NOT EDIT.

package cic

import (
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

func (m *GetPrivateConnectionRequest) SetPrivateConnectionId(v string) {
	m.PrivateConnectionId = v
}

func (m *ListPrivateConnectionsRequest) SetFolderId(v string) {
	m.FolderId = v
}

func (m *ListPrivateConnectionsRequest) SetPageSize(v int64) {
	m.PageSize = v
}

func (m *ListPrivateConnectionsRequest) SetPageToken(v string) {
	m.PageToken = v
}

func (m *ListPrivateConnectionsRequest) SetFilter(v string) {
	m.Filter = v
}

func (m *ListPrivateConnectionsResponse) SetPrivateConnections(v []*PrivateConnection) {
	m.PrivateConnections = v
}

func (m *ListPrivateConnectionsResponse) SetNextPageToken(v string) {
	m.NextPageToken = v
}

func (m *CreatePrivateConnectionRequest) SetName(v string) {
	m.Name = v
}

func (m *CreatePrivateConnectionRequest) SetDescription(v string) {
	m.Description = v
}

func (m *CreatePrivateConnectionRequest) SetFolderId(v string) {
	m.FolderId = v
}

func (m *CreatePrivateConnectionRequest) SetRegionId(v string) {
	m.RegionId = v
}

func (m *CreatePrivateConnectionRequest) SetTrunkConnectionId(v string) {
	m.TrunkConnectionId = v
}

func (m *CreatePrivateConnectionRequest) SetVlanId(v *wrapperspb.Int64Value) {
	m.VlanId = v
}

func (m *CreatePrivateConnectionRequest) SetIpv4Peering(v *Peering) {
	m.Ipv4Peering = v
}

func (m *CreatePrivateConnectionRequest) SetIpv4StaticRoutes(v []*PrivateConnection_StaticRoute) {
	m.Ipv4StaticRoutes = v
}

func (m *CreatePrivateConnectionRequest) SetLabels(v map[string]string) {
	m.Labels = v
}

func (m *CreatePrivateConnectionMetadata) SetPrivateConnectionId(v string) {
	m.PrivateConnectionId = v
}

func (m *UpdatePrivateConnectionRequest) SetPrivateConnectionId(v string) {
	m.PrivateConnectionId = v
}

func (m *UpdatePrivateConnectionRequest) SetUpdateMask(v *fieldmaskpb.FieldMask) {
	m.UpdateMask = v
}

func (m *UpdatePrivateConnectionRequest) SetName(v string) {
	m.Name = v
}

func (m *UpdatePrivateConnectionRequest) SetDescription(v string) {
	m.Description = v
}

func (m *UpdatePrivateConnectionRequest) SetRegionId(v string) {
	m.RegionId = v
}

func (m *UpdatePrivateConnectionRequest) SetTrunkConnectionId(v string) {
	m.TrunkConnectionId = v
}

func (m *UpdatePrivateConnectionRequest) SetVlanId(v *wrapperspb.Int64Value) {
	m.VlanId = v
}

func (m *UpdatePrivateConnectionRequest) SetIpv4Peering(v *Peering) {
	m.Ipv4Peering = v
}

func (m *UpdatePrivateConnectionRequest) SetIpv4StaticRoutes(v []*PrivateConnection_StaticRoute) {
	m.Ipv4StaticRoutes = v
}

func (m *UpdatePrivateConnectionRequest) SetLabels(v map[string]string) {
	m.Labels = v
}

func (m *UpdatePrivateConnectionMetadata) SetPrivateConnectionId(v string) {
	m.PrivateConnectionId = v
}

func (m *DeletePrivateConnectionRequest) SetPrivateConnectionId(v string) {
	m.PrivateConnectionId = v
}

func (m *DeletePrivateConnectionMetadata) SetPrivateConnectionId(v string) {
	m.PrivateConnectionId = v
}

func (m *UpsertStaticRouteRequest) SetPrivateConnectionId(v string) {
	m.PrivateConnectionId = v
}

func (m *UpsertStaticRouteRequest) SetIpv4StaticRoutes(v []*PrivateConnection_StaticRoute) {
	m.Ipv4StaticRoutes = v
}

func (m *UpsertStaticRouteMetadata) SetPrivateConnectionId(v string) {
	m.PrivateConnectionId = v
}

func (m *RemoveStaticRouteRequest) SetPrivateConnectionId(v string) {
	m.PrivateConnectionId = v
}

func (m *RemoveStaticRouteRequest) SetIpv4StaticRoutes(v []*PrivateConnection_StaticRoute) {
	m.Ipv4StaticRoutes = v
}

func (m *RemoveStaticRouteMetadata) SetPrivateConnectionId(v string) {
	m.PrivateConnectionId = v
}

func (m *ListPrivateConnectionOperationsRequest) SetPrivateConnectionId(v string) {
	m.PrivateConnectionId = v
}

func (m *ListPrivateConnectionOperationsRequest) SetPageSize(v int64) {
	m.PageSize = v
}

func (m *ListPrivateConnectionOperationsRequest) SetPageToken(v string) {
	m.PageToken = v
}

func (m *ListPrivateConnectionOperationsResponse) SetOperations(v []*operation.Operation) {
	m.Operations = v
}

func (m *ListPrivateConnectionOperationsResponse) SetNextPageToken(v string) {
	m.NextPageToken = v
}

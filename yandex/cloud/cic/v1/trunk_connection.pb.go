// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: yandex/cloud/cic/v1/trunk_connection.proto

package cic

import (
	common "github.com/yandex-cloud/go-genproto/yandex/cloud/cic/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrunkConnection_Capacity int32

const (
	TrunkConnection_CAPACITY_UNSPECIFIED TrunkConnection_Capacity = 0
	TrunkConnection_CAPACITY_50_MBPS     TrunkConnection_Capacity = 1
	TrunkConnection_CAPACITY_100_MBPS    TrunkConnection_Capacity = 2
	TrunkConnection_CAPACITY_200_MBPS    TrunkConnection_Capacity = 3
	TrunkConnection_CAPACITY_300_MBPS    TrunkConnection_Capacity = 4
	TrunkConnection_CAPACITY_400_MBPS    TrunkConnection_Capacity = 5
	TrunkConnection_CAPACITY_500_MBPS    TrunkConnection_Capacity = 6
	TrunkConnection_CAPACITY_1_GBPS      TrunkConnection_Capacity = 7
	TrunkConnection_CAPACITY_2_GBPS      TrunkConnection_Capacity = 8
	TrunkConnection_CAPACITY_3_GBPS      TrunkConnection_Capacity = 9
	TrunkConnection_CAPACITY_4_GBPS      TrunkConnection_Capacity = 10
	TrunkConnection_CAPACITY_5_GBPS      TrunkConnection_Capacity = 11
	TrunkConnection_CAPACITY_10_GBPS     TrunkConnection_Capacity = 12
	TrunkConnection_CAPACITY_20_GBPS     TrunkConnection_Capacity = 13
	TrunkConnection_CAPACITY_30_GBPS     TrunkConnection_Capacity = 14
	TrunkConnection_CAPACITY_40_GBPS     TrunkConnection_Capacity = 15
	TrunkConnection_CAPACITY_50_GBPS     TrunkConnection_Capacity = 16
	TrunkConnection_CAPACITY_100_GBPS    TrunkConnection_Capacity = 17
)

// Enum value maps for TrunkConnection_Capacity.
var (
	TrunkConnection_Capacity_name = map[int32]string{
		0:  "CAPACITY_UNSPECIFIED",
		1:  "CAPACITY_50_MBPS",
		2:  "CAPACITY_100_MBPS",
		3:  "CAPACITY_200_MBPS",
		4:  "CAPACITY_300_MBPS",
		5:  "CAPACITY_400_MBPS",
		6:  "CAPACITY_500_MBPS",
		7:  "CAPACITY_1_GBPS",
		8:  "CAPACITY_2_GBPS",
		9:  "CAPACITY_3_GBPS",
		10: "CAPACITY_4_GBPS",
		11: "CAPACITY_5_GBPS",
		12: "CAPACITY_10_GBPS",
		13: "CAPACITY_20_GBPS",
		14: "CAPACITY_30_GBPS",
		15: "CAPACITY_40_GBPS",
		16: "CAPACITY_50_GBPS",
		17: "CAPACITY_100_GBPS",
	}
	TrunkConnection_Capacity_value = map[string]int32{
		"CAPACITY_UNSPECIFIED": 0,
		"CAPACITY_50_MBPS":     1,
		"CAPACITY_100_MBPS":    2,
		"CAPACITY_200_MBPS":    3,
		"CAPACITY_300_MBPS":    4,
		"CAPACITY_400_MBPS":    5,
		"CAPACITY_500_MBPS":    6,
		"CAPACITY_1_GBPS":      7,
		"CAPACITY_2_GBPS":      8,
		"CAPACITY_3_GBPS":      9,
		"CAPACITY_4_GBPS":      10,
		"CAPACITY_5_GBPS":      11,
		"CAPACITY_10_GBPS":     12,
		"CAPACITY_20_GBPS":     13,
		"CAPACITY_30_GBPS":     14,
		"CAPACITY_40_GBPS":     15,
		"CAPACITY_50_GBPS":     16,
		"CAPACITY_100_GBPS":    17,
	}
)

func (x TrunkConnection_Capacity) Enum() *TrunkConnection_Capacity {
	p := new(TrunkConnection_Capacity)
	*p = x
	return p
}

func (x TrunkConnection_Capacity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrunkConnection_Capacity) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_cic_v1_trunk_connection_proto_enumTypes[0].Descriptor()
}

func (TrunkConnection_Capacity) Type() protoreflect.EnumType {
	return &file_yandex_cloud_cic_v1_trunk_connection_proto_enumTypes[0]
}

func (x TrunkConnection_Capacity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrunkConnection_Capacity.Descriptor instead.
func (TrunkConnection_Capacity) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_cic_v1_trunk_connection_proto_rawDescGZIP(), []int{0, 0}
}

// A TrunkConnection resource.
type TrunkConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the trunkConnection.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the trunkConnection.
	// The name must be unique within the folder.
	// Value must match the regular expression “\|[a-zA-Z]([-_a-zA-Z0-9]{0,61}[a-zA-Z0-9])?“.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Optional description of the trunkConnection. 0-256 characters long.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// ID of the folder that the trunkConnection belongs to.
	FolderId string `protobuf:"bytes,5,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// ID of the region that the trunkConnection belongs to.
	RegionId string `protobuf:"bytes,6,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	// Special trunkConnection config
	//
	// Types that are assignable to Joint:
	//
	//	*TrunkConnection_SinglePortDirectJoint_
	//	*TrunkConnection_LagDirectJoint_
	//	*TrunkConnection_PartnerJointInfo_
	Joint isTrunkConnection_Joint `protobuf_oneof:"joint"`
	// ID of pointOfPresence that the trunkConnection is deployed on.
	// Optional.
	// If is not set scheduler selects it by himself.
	PointOfPresenceId *wrapperspb.StringValue `protobuf:"bytes,12,opt,name=point_of_presence_id,json=pointOfPresenceId,proto3" json:"point_of_presence_id,omitempty"`
	// Capacity of the trunkConnection
	Capacity TrunkConnection_Capacity `protobuf:"varint,22,opt,name=capacity,proto3,enum=yandex.cloud.cic.v1.TrunkConnection_Capacity" json:"capacity,omitempty"`
	// Resource labels, `key:value` pairs.
	// No more than 64 per resource.
	// The maximum string length in characters for each value is 63.
	// Each value must match the regular expression `[-_0-9a-z]*`.
	// The string length in characters for each key must be 1-63.
	// Each key must match the regular expression `[a-z][-_0-9a-z]*`.
	Labels map[string]string `protobuf:"bytes,23,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TrunkConnection) Reset() {
	*x = TrunkConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_cic_v1_trunk_connection_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrunkConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrunkConnection) ProtoMessage() {}

func (x *TrunkConnection) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_cic_v1_trunk_connection_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrunkConnection.ProtoReflect.Descriptor instead.
func (*TrunkConnection) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_cic_v1_trunk_connection_proto_rawDescGZIP(), []int{0}
}

func (x *TrunkConnection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TrunkConnection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TrunkConnection) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TrunkConnection) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *TrunkConnection) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (m *TrunkConnection) GetJoint() isTrunkConnection_Joint {
	if m != nil {
		return m.Joint
	}
	return nil
}

func (x *TrunkConnection) GetSinglePortDirectJoint() *TrunkConnection_SinglePortDirectJoint {
	if x, ok := x.GetJoint().(*TrunkConnection_SinglePortDirectJoint_); ok {
		return x.SinglePortDirectJoint
	}
	return nil
}

func (x *TrunkConnection) GetLagDirectJoint() *TrunkConnection_LagDirectJoint {
	if x, ok := x.GetJoint().(*TrunkConnection_LagDirectJoint_); ok {
		return x.LagDirectJoint
	}
	return nil
}

func (x *TrunkConnection) GetPartnerJointInfo() *TrunkConnection_PartnerJointInfo {
	if x, ok := x.GetJoint().(*TrunkConnection_PartnerJointInfo_); ok {
		return x.PartnerJointInfo
	}
	return nil
}

func (x *TrunkConnection) GetPointOfPresenceId() *wrapperspb.StringValue {
	if x != nil {
		return x.PointOfPresenceId
	}
	return nil
}

func (x *TrunkConnection) GetCapacity() TrunkConnection_Capacity {
	if x != nil {
		return x.Capacity
	}
	return TrunkConnection_CAPACITY_UNSPECIFIED
}

func (x *TrunkConnection) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type isTrunkConnection_Joint interface {
	isTrunkConnection_Joint()
}

type TrunkConnection_SinglePortDirectJoint_ struct {
	SinglePortDirectJoint *TrunkConnection_SinglePortDirectJoint `protobuf:"bytes,9,opt,name=single_port_direct_joint,json=singlePortDirectJoint,proto3,oneof"`
}

type TrunkConnection_LagDirectJoint_ struct {
	LagDirectJoint *TrunkConnection_LagDirectJoint `protobuf:"bytes,10,opt,name=lag_direct_joint,json=lagDirectJoint,proto3,oneof"`
}

type TrunkConnection_PartnerJointInfo_ struct {
	PartnerJointInfo *TrunkConnection_PartnerJointInfo `protobuf:"bytes,11,opt,name=partner_joint_info,json=partnerJointInfo,proto3,oneof"`
}

func (*TrunkConnection_SinglePortDirectJoint_) isTrunkConnection_Joint() {}

func (*TrunkConnection_LagDirectJoint_) isTrunkConnection_Joint() {}

func (*TrunkConnection_PartnerJointInfo_) isTrunkConnection_Joint() {}

// Config of trunkConnection that is deployed on partner joint.
type TrunkConnection_PartnerJointInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future using;
	ServiceKey string `protobuf:"bytes,3,opt,name=service_key,json=serviceKey,proto3" json:"service_key,omitempty"`
	// ID of partner that the trunkConnection is deployed on.
	// Optional.
	// If is not set scheduler selects it by himself.
	PartnerId *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=partner_id,json=partnerId,proto3" json:"partner_id,omitempty"`
}

func (x *TrunkConnection_PartnerJointInfo) Reset() {
	*x = TrunkConnection_PartnerJointInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_cic_v1_trunk_connection_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrunkConnection_PartnerJointInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrunkConnection_PartnerJointInfo) ProtoMessage() {}

func (x *TrunkConnection_PartnerJointInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_cic_v1_trunk_connection_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrunkConnection_PartnerJointInfo.ProtoReflect.Descriptor instead.
func (*TrunkConnection_PartnerJointInfo) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_cic_v1_trunk_connection_proto_rawDescGZIP(), []int{0, 1}
}

func (x *TrunkConnection_PartnerJointInfo) GetServiceKey() string {
	if x != nil {
		return x.ServiceKey
	}
	return ""
}

func (x *TrunkConnection_PartnerJointInfo) GetPartnerId() *wrapperspb.StringValue {
	if x != nil {
		return x.PartnerId
	}
	return nil
}

// Config of trunkConnection that is deployed on single port.
type TrunkConnection_SinglePortDirectJoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of transceiver that the trunkConnection is deployed on.
	TransceiverType common.TransceiverType `protobuf:"varint,1,opt,name=transceiver_type,json=transceiverType,proto3,enum=yandex.cloud.cic.v1.common.TransceiverType" json:"transceiver_type,omitempty"`
	// Name of port that the trunkConnection is deployed on.
	PortName *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=port_name,json=portName,proto3" json:"port_name,omitempty"`
	// Device name which is set in LLDP message.
	AccessDeviceName string `protobuf:"bytes,4,opt,name=access_device_name,json=accessDeviceName,proto3" json:"access_device_name,omitempty"`
}

func (x *TrunkConnection_SinglePortDirectJoint) Reset() {
	*x = TrunkConnection_SinglePortDirectJoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_cic_v1_trunk_connection_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrunkConnection_SinglePortDirectJoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrunkConnection_SinglePortDirectJoint) ProtoMessage() {}

func (x *TrunkConnection_SinglePortDirectJoint) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_cic_v1_trunk_connection_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrunkConnection_SinglePortDirectJoint.ProtoReflect.Descriptor instead.
func (*TrunkConnection_SinglePortDirectJoint) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_cic_v1_trunk_connection_proto_rawDescGZIP(), []int{0, 2}
}

func (x *TrunkConnection_SinglePortDirectJoint) GetTransceiverType() common.TransceiverType {
	if x != nil {
		return x.TransceiverType
	}
	return common.TransceiverType(0)
}

func (x *TrunkConnection_SinglePortDirectJoint) GetPortName() *wrapperspb.StringValue {
	if x != nil {
		return x.PortName
	}
	return nil
}

func (x *TrunkConnection_SinglePortDirectJoint) GetAccessDeviceName() string {
	if x != nil {
		return x.AccessDeviceName
	}
	return ""
}

// Config of trunkConnection that is deployed on lag.
type TrunkConnection_LagDirectJoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of transceiver that the trunkConnection is deployed on.
	TransceiverType common.TransceiverType `protobuf:"varint,1,opt,name=transceiver_type,json=transceiverType,proto3,enum=yandex.cloud.cic.v1.common.TransceiverType" json:"transceiver_type,omitempty"`
	// LAG allocation settings that the trunkConnection is deployed on.
	LagAllocationSettings *common.LagAllocationSettings `protobuf:"bytes,3,opt,name=lag_allocation_settings,json=lagAllocationSettings,proto3" json:"lag_allocation_settings,omitempty"`
	// Device name which is set in LLDP message.
	AccessDeviceName string `protobuf:"bytes,4,opt,name=access_device_name,json=accessDeviceName,proto3" json:"access_device_name,omitempty"`
}

func (x *TrunkConnection_LagDirectJoint) Reset() {
	*x = TrunkConnection_LagDirectJoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_cic_v1_trunk_connection_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrunkConnection_LagDirectJoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrunkConnection_LagDirectJoint) ProtoMessage() {}

func (x *TrunkConnection_LagDirectJoint) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_cic_v1_trunk_connection_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrunkConnection_LagDirectJoint.ProtoReflect.Descriptor instead.
func (*TrunkConnection_LagDirectJoint) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_cic_v1_trunk_connection_proto_rawDescGZIP(), []int{0, 3}
}

func (x *TrunkConnection_LagDirectJoint) GetTransceiverType() common.TransceiverType {
	if x != nil {
		return x.TransceiverType
	}
	return common.TransceiverType(0)
}

func (x *TrunkConnection_LagDirectJoint) GetLagAllocationSettings() *common.LagAllocationSettings {
	if x != nil {
		return x.LagAllocationSettings
	}
	return nil
}

func (x *TrunkConnection_LagDirectJoint) GetAccessDeviceName() string {
	if x != nil {
		return x.AccessDeviceName
	}
	return ""
}

var File_yandex_cloud_cic_v1_trunk_connection_proto protoreflect.FileDescriptor

var file_yandex_cloud_cic_v1_trunk_connection_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63,
	0x69, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x75, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x69, 0x63, 0x2e, 0x76,
	0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x31, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x63, 0x69, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x63, 0x69, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x6c, 0x61, 0x67, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b,
	0x0e, 0x0a, 0x0f, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x75, 0x0a, 0x18, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x63, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x6e, 0x6b,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x15, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x5f, 0x0a, 0x10, 0x6c, 0x61, 0x67,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x63, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x67, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x61, 0x67, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x65, 0x0a, 0x12, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x75,
	0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x10, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x4d, 0x0a, 0x14, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x66, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x49, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x63, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x69, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x76, 0x0a, 0x10, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x03, 0x1a, 0xde, 0x01, 0x0a, 0x15, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4a, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x56, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x69, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x70, 0x6f, 0x72,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x1a, 0x87, 0x02, 0x0a, 0x0e, 0x4c, 0x61,
	0x67, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x69, 0x0a, 0x17, 0x6c, 0x61, 0x67, 0x5f, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x67, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x15, 0x6c, 0x61, 0x67, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x2c, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x4a, 0x04, 0x08,
	0x02, 0x10, 0x03, 0x22, 0x9b, 0x03, 0x0a, 0x08, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x18, 0x0a, 0x14, 0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x41,
	0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x35, 0x30, 0x5f, 0x4d, 0x42, 0x50, 0x53, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x31, 0x30, 0x30,
	0x5f, 0x4d, 0x42, 0x50, 0x53, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x41, 0x50, 0x41, 0x43,
	0x49, 0x54, 0x59, 0x5f, 0x32, 0x30, 0x30, 0x5f, 0x4d, 0x42, 0x50, 0x53, 0x10, 0x03, 0x12, 0x15,
	0x0a, 0x11, 0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x33, 0x30, 0x30, 0x5f, 0x4d,
	0x42, 0x50, 0x53, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54,
	0x59, 0x5f, 0x34, 0x30, 0x30, 0x5f, 0x4d, 0x42, 0x50, 0x53, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11,
	0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x35, 0x30, 0x30, 0x5f, 0x4d, 0x42, 0x50,
	0x53, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x5f,
	0x31, 0x5f, 0x47, 0x42, 0x50, 0x53, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x50, 0x41,
	0x43, 0x49, 0x54, 0x59, 0x5f, 0x32, 0x5f, 0x47, 0x42, 0x50, 0x53, 0x10, 0x08, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x33, 0x5f, 0x47, 0x42, 0x50, 0x53,
	0x10, 0x09, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x34,
	0x5f, 0x47, 0x42, 0x50, 0x53, 0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x50, 0x41, 0x43,
	0x49, 0x54, 0x59, 0x5f, 0x35, 0x5f, 0x47, 0x42, 0x50, 0x53, 0x10, 0x0b, 0x12, 0x14, 0x0a, 0x10,
	0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x31, 0x30, 0x5f, 0x47, 0x42, 0x50, 0x53,
	0x10, 0x0c, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x32,
	0x30, 0x5f, 0x47, 0x42, 0x50, 0x53, 0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x41, 0x50, 0x41,
	0x43, 0x49, 0x54, 0x59, 0x5f, 0x33, 0x30, 0x5f, 0x47, 0x42, 0x50, 0x53, 0x10, 0x0e, 0x12, 0x14,
	0x0a, 0x10, 0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x34, 0x30, 0x5f, 0x47, 0x42,
	0x50, 0x53, 0x10, 0x0f, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54, 0x59,
	0x5f, 0x35, 0x30, 0x5f, 0x47, 0x42, 0x50, 0x53, 0x10, 0x10, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x41,
	0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x31, 0x30, 0x30, 0x5f, 0x47, 0x42, 0x50, 0x53, 0x10,
	0x11, 0x42, 0x07, 0x0a, 0x05, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05,
	0x4a, 0x04, 0x08, 0x07, 0x10, 0x09, 0x4a, 0x04, 0x08, 0x0d, 0x10, 0x16, 0x42, 0x56, 0x0a, 0x17,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63, 0x69, 0x63, 0x2f, 0x76, 0x31,
	0x3b, 0x63, 0x69, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_cic_v1_trunk_connection_proto_rawDescOnce sync.Once
	file_yandex_cloud_cic_v1_trunk_connection_proto_rawDescData = file_yandex_cloud_cic_v1_trunk_connection_proto_rawDesc
)

func file_yandex_cloud_cic_v1_trunk_connection_proto_rawDescGZIP() []byte {
	file_yandex_cloud_cic_v1_trunk_connection_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_cic_v1_trunk_connection_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_cic_v1_trunk_connection_proto_rawDescData)
	})
	return file_yandex_cloud_cic_v1_trunk_connection_proto_rawDescData
}

var file_yandex_cloud_cic_v1_trunk_connection_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_cic_v1_trunk_connection_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_yandex_cloud_cic_v1_trunk_connection_proto_goTypes = []any{
	(TrunkConnection_Capacity)(0),            // 0: yandex.cloud.cic.v1.TrunkConnection.Capacity
	(*TrunkConnection)(nil),                  // 1: yandex.cloud.cic.v1.TrunkConnection
	nil,                                      // 2: yandex.cloud.cic.v1.TrunkConnection.LabelsEntry
	(*TrunkConnection_PartnerJointInfo)(nil), // 3: yandex.cloud.cic.v1.TrunkConnection.PartnerJointInfo
	(*TrunkConnection_SinglePortDirectJoint)(nil), // 4: yandex.cloud.cic.v1.TrunkConnection.SinglePortDirectJoint
	(*TrunkConnection_LagDirectJoint)(nil),        // 5: yandex.cloud.cic.v1.TrunkConnection.LagDirectJoint
	(*wrapperspb.StringValue)(nil),                // 6: google.protobuf.StringValue
	(common.TransceiverType)(0),                   // 7: yandex.cloud.cic.v1.common.TransceiverType
	(*common.LagAllocationSettings)(nil),          // 8: yandex.cloud.cic.v1.common.LagAllocationSettings
}
var file_yandex_cloud_cic_v1_trunk_connection_proto_depIdxs = []int32{
	4,  // 0: yandex.cloud.cic.v1.TrunkConnection.single_port_direct_joint:type_name -> yandex.cloud.cic.v1.TrunkConnection.SinglePortDirectJoint
	5,  // 1: yandex.cloud.cic.v1.TrunkConnection.lag_direct_joint:type_name -> yandex.cloud.cic.v1.TrunkConnection.LagDirectJoint
	3,  // 2: yandex.cloud.cic.v1.TrunkConnection.partner_joint_info:type_name -> yandex.cloud.cic.v1.TrunkConnection.PartnerJointInfo
	6,  // 3: yandex.cloud.cic.v1.TrunkConnection.point_of_presence_id:type_name -> google.protobuf.StringValue
	0,  // 4: yandex.cloud.cic.v1.TrunkConnection.capacity:type_name -> yandex.cloud.cic.v1.TrunkConnection.Capacity
	2,  // 5: yandex.cloud.cic.v1.TrunkConnection.labels:type_name -> yandex.cloud.cic.v1.TrunkConnection.LabelsEntry
	6,  // 6: yandex.cloud.cic.v1.TrunkConnection.PartnerJointInfo.partner_id:type_name -> google.protobuf.StringValue
	7,  // 7: yandex.cloud.cic.v1.TrunkConnection.SinglePortDirectJoint.transceiver_type:type_name -> yandex.cloud.cic.v1.common.TransceiverType
	6,  // 8: yandex.cloud.cic.v1.TrunkConnection.SinglePortDirectJoint.port_name:type_name -> google.protobuf.StringValue
	7,  // 9: yandex.cloud.cic.v1.TrunkConnection.LagDirectJoint.transceiver_type:type_name -> yandex.cloud.cic.v1.common.TransceiverType
	8,  // 10: yandex.cloud.cic.v1.TrunkConnection.LagDirectJoint.lag_allocation_settings:type_name -> yandex.cloud.cic.v1.common.LagAllocationSettings
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_yandex_cloud_cic_v1_trunk_connection_proto_init() }
func file_yandex_cloud_cic_v1_trunk_connection_proto_init() {
	if File_yandex_cloud_cic_v1_trunk_connection_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_cic_v1_trunk_connection_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TrunkConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_cic_v1_trunk_connection_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TrunkConnection_PartnerJointInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_cic_v1_trunk_connection_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TrunkConnection_SinglePortDirectJoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_cic_v1_trunk_connection_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*TrunkConnection_LagDirectJoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yandex_cloud_cic_v1_trunk_connection_proto_msgTypes[0].OneofWrappers = []any{
		(*TrunkConnection_SinglePortDirectJoint_)(nil),
		(*TrunkConnection_LagDirectJoint_)(nil),
		(*TrunkConnection_PartnerJointInfo_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_cic_v1_trunk_connection_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_cic_v1_trunk_connection_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_cic_v1_trunk_connection_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_cic_v1_trunk_connection_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_cic_v1_trunk_connection_proto_msgTypes,
	}.Build()
	File_yandex_cloud_cic_v1_trunk_connection_proto = out.File
	file_yandex_cloud_cic_v1_trunk_connection_proto_rawDesc = nil
	file_yandex_cloud_cic_v1_trunk_connection_proto_goTypes = nil
	file_yandex_cloud_cic_v1_trunk_connection_proto_depIdxs = nil
}

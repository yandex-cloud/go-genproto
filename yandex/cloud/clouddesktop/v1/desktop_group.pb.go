// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: yandex/cloud/clouddesktop/v1/desktop_group.proto

package clouddesktop

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	access "github.com/yandex-cloud/go-genproto/yandex/cloud/access"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DesktopGroup_Status int32

const (
	DesktopGroup_STATUS_UNSPECIFIED DesktopGroup_Status = 0
	// Desktop group is being created.
	DesktopGroup_CREATING DesktopGroup_Status = 1
	// Desktop group is ready to use.
	DesktopGroup_ACTIVE DesktopGroup_Status = 2
	// Desktop group is being deleted.
	DesktopGroup_DELETING DesktopGroup_Status = 3
)

// Enum value maps for DesktopGroup_Status.
var (
	DesktopGroup_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "CREATING",
		2: "ACTIVE",
		3: "DELETING",
	}
	DesktopGroup_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"CREATING":           1,
		"ACTIVE":             2,
		"DELETING":           3,
	}
)

func (x DesktopGroup_Status) Enum() *DesktopGroup_Status {
	p := new(DesktopGroup_Status)
	*p = x
	return p
}

func (x DesktopGroup_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DesktopGroup_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_clouddesktop_v1_desktop_group_proto_enumTypes[0].Descriptor()
}

func (DesktopGroup_Status) Type() protoreflect.EnumType {
	return &file_yandex_cloud_clouddesktop_v1_desktop_group_proto_enumTypes[0]
}

func (x DesktopGroup_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DesktopGroup_Status.Descriptor instead.
func (DesktopGroup_Status) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDescGZIP(), []int{0, 0}
}

type DesktopGroupConfiguration_DesktopType int32

const (
	DesktopGroupConfiguration_DESKTOP_TYPE_UNSPECIFIED DesktopGroupConfiguration_DesktopType = 0
	DesktopGroupConfiguration_PERSISTENT               DesktopGroupConfiguration_DesktopType = 1
	DesktopGroupConfiguration_NON_PERSISTENT           DesktopGroupConfiguration_DesktopType = 2
)

// Enum value maps for DesktopGroupConfiguration_DesktopType.
var (
	DesktopGroupConfiguration_DesktopType_name = map[int32]string{
		0: "DESKTOP_TYPE_UNSPECIFIED",
		1: "PERSISTENT",
		2: "NON_PERSISTENT",
	}
	DesktopGroupConfiguration_DesktopType_value = map[string]int32{
		"DESKTOP_TYPE_UNSPECIFIED": 0,
		"PERSISTENT":               1,
		"NON_PERSISTENT":           2,
	}
)

func (x DesktopGroupConfiguration_DesktopType) Enum() *DesktopGroupConfiguration_DesktopType {
	p := new(DesktopGroupConfiguration_DesktopType)
	*p = x
	return p
}

func (x DesktopGroupConfiguration_DesktopType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DesktopGroupConfiguration_DesktopType) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_clouddesktop_v1_desktop_group_proto_enumTypes[1].Descriptor()
}

func (DesktopGroupConfiguration_DesktopType) Type() protoreflect.EnumType {
	return &file_yandex_cloud_clouddesktop_v1_desktop_group_proto_enumTypes[1]
}

func (x DesktopGroupConfiguration_DesktopType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DesktopGroupConfiguration_DesktopType.Descriptor instead.
func (DesktopGroupConfiguration_DesktopType) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDescGZIP(), []int{1, 0}
}

// A desktop group resource.
type DesktopGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Desktop group ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the folder that the desktop group belongs to.
	FolderId string `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Status of the desktop group.
	Status DesktopGroup_Status `protobuf:"varint,4,opt,name=status,proto3,enum=yandex.cloud.clouddesktop.v1.api.DesktopGroup_Status" json:"status,omitempty"`
	// Name of the desktop group.
	Name string `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the desktop group.
	Description string `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	// Resource specification of the desktop group.
	ResourcesSpec *ResourcesSpec `protobuf:"bytes,21,opt,name=resources_spec,json=resourcesSpec,proto3" json:"resources_spec,omitempty"`
	// Network interface specification of the desktop group.
	NetworkInterfaceSpec *NetworkInterfaceSpec `protobuf:"bytes,22,opt,name=network_interface_spec,json=networkInterfaceSpec,proto3" json:"network_interface_spec,omitempty"`
	// Labels of the desktop group.
	Labels map[string]string `protobuf:"bytes,23,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Boot disk specification of the desktop group.
	BootDiskSpec *DiskSpec `protobuf:"bytes,24,opt,name=boot_disk_spec,json=bootDiskSpec,proto3" json:"boot_disk_spec,omitempty"`
	// Data disk specification of the desktop group.
	DataDiskSpec *DiskSpec `protobuf:"bytes,25,opt,name=data_disk_spec,json=dataDiskSpec,proto3" json:"data_disk_spec,omitempty"`
	// Desktop group configuration.
	GroupConfig *DesktopGroupConfiguration `protobuf:"bytes,26,opt,name=group_config,json=groupConfig,proto3" json:"group_config,omitempty"`
}

func (x *DesktopGroup) Reset() {
	*x = DesktopGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_clouddesktop_v1_desktop_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DesktopGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopGroup) ProtoMessage() {}

func (x *DesktopGroup) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopGroup.ProtoReflect.Descriptor instead.
func (*DesktopGroup) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDescGZIP(), []int{0}
}

func (x *DesktopGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DesktopGroup) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *DesktopGroup) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DesktopGroup) GetStatus() DesktopGroup_Status {
	if x != nil {
		return x.Status
	}
	return DesktopGroup_STATUS_UNSPECIFIED
}

func (x *DesktopGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DesktopGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DesktopGroup) GetResourcesSpec() *ResourcesSpec {
	if x != nil {
		return x.ResourcesSpec
	}
	return nil
}

func (x *DesktopGroup) GetNetworkInterfaceSpec() *NetworkInterfaceSpec {
	if x != nil {
		return x.NetworkInterfaceSpec
	}
	return nil
}

func (x *DesktopGroup) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *DesktopGroup) GetBootDiskSpec() *DiskSpec {
	if x != nil {
		return x.BootDiskSpec
	}
	return nil
}

func (x *DesktopGroup) GetDataDiskSpec() *DiskSpec {
	if x != nil {
		return x.DataDiskSpec
	}
	return nil
}

func (x *DesktopGroup) GetGroupConfig() *DesktopGroupConfiguration {
	if x != nil {
		return x.GroupConfig
	}
	return nil
}

type DesktopGroupConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Minimum number of ready desktops.
	MinReadyDesktops int64 `protobuf:"varint,1,opt,name=min_ready_desktops,json=minReadyDesktops,proto3" json:"min_ready_desktops,omitempty"`
	// Maximum number of desktops.
	MaxDesktopsAmount int64 `protobuf:"varint,2,opt,name=max_desktops_amount,json=maxDesktopsAmount,proto3" json:"max_desktops_amount,omitempty"`
	// Type of the desktop.
	DesktopType DesktopGroupConfiguration_DesktopType `protobuf:"varint,3,opt,name=desktop_type,json=desktopType,proto3,enum=yandex.cloud.clouddesktop.v1.api.DesktopGroupConfiguration_DesktopType" json:"desktop_type,omitempty"`
	// List of members of the desktop group.
	Members []*access.Subject `protobuf:"bytes,4,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *DesktopGroupConfiguration) Reset() {
	*x = DesktopGroupConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_clouddesktop_v1_desktop_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DesktopGroupConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopGroupConfiguration) ProtoMessage() {}

func (x *DesktopGroupConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopGroupConfiguration.ProtoReflect.Descriptor instead.
func (*DesktopGroupConfiguration) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDescGZIP(), []int{1}
}

func (x *DesktopGroupConfiguration) GetMinReadyDesktops() int64 {
	if x != nil {
		return x.MinReadyDesktops
	}
	return 0
}

func (x *DesktopGroupConfiguration) GetMaxDesktopsAmount() int64 {
	if x != nil {
		return x.MaxDesktopsAmount
	}
	return 0
}

func (x *DesktopGroupConfiguration) GetDesktopType() DesktopGroupConfiguration_DesktopType {
	if x != nil {
		return x.DesktopType
	}
	return DesktopGroupConfiguration_DESKTOP_TYPE_UNSPECIFIED
}

func (x *DesktopGroupConfiguration) GetMembers() []*access.Subject {
	if x != nil {
		return x.Members
	}
	return nil
}

type ResourcesSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// RAM volume, in bytes.
	Memory int64 `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	// Number of CPU cores.
	Cores int64 `protobuf:"varint,2,opt,name=cores,proto3" json:"cores,omitempty"`
	// Baseline level of CPU performance with the ability to burst performance above that baseline level.
	// This field sets baseline performance for each core.
	CoreFraction int64 `protobuf:"varint,3,opt,name=core_fraction,json=coreFraction,proto3" json:"core_fraction,omitempty"`
}

func (x *ResourcesSpec) Reset() {
	*x = ResourcesSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_clouddesktop_v1_desktop_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcesSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcesSpec) ProtoMessage() {}

func (x *ResourcesSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcesSpec.ProtoReflect.Descriptor instead.
func (*ResourcesSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDescGZIP(), []int{2}
}

func (x *ResourcesSpec) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *ResourcesSpec) GetCores() int64 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *ResourcesSpec) GetCoreFraction() int64 {
	if x != nil {
		return x.CoreFraction
	}
	return 0
}

type NetworkInterfaceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the network interface specification.
	NetworkId string `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// List of subnet IDs.
	SubnetIds []string `protobuf:"bytes,2,rep,name=subnet_ids,json=subnetIds,proto3" json:"subnet_ids,omitempty"`
}

func (x *NetworkInterfaceSpec) Reset() {
	*x = NetworkInterfaceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_clouddesktop_v1_desktop_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInterfaceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceSpec) ProtoMessage() {}

func (x *NetworkInterfaceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceSpec.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDescGZIP(), []int{3}
}

func (x *NetworkInterfaceSpec) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *NetworkInterfaceSpec) GetSubnetIds() []string {
	if x != nil {
		return x.SubnetIds
	}
	return nil
}

var File_yandex_cloud_clouddesktop_v1_desktop_group_proto protoreflect.FileDescriptor

var file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDesc = []byte{
	0x0a, 0x30, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x20, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f,
	0x70, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xaa, 0x07, 0x0a, 0x0c, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x65, 0x73,
	0x6b, 0x74, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x6b,
	0x74, 0x6f, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x53, 0x70, 0x65, 0x63, 0x12, 0x6c, 0x0a, 0x16, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x14, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x52, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x17, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x50, 0x0a, 0x0e, 0x62, 0x6f, 0x6f, 0x74, 0x5f,
	0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0c, 0x62, 0x6f, 0x6f,
	0x74, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x12, 0x50, 0x0a, 0x0e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0c, 0x64,
	0x61, 0x74, 0x61, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5e, 0x0a, 0x0c, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x39, 0x0a, 0x0b, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x48, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x03,
	0x4a, 0x04, 0x08, 0x0d, 0x10, 0x15, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x0b, 0x22, 0x8e, 0x03, 0x0a,
	0x19, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x12, 0x6d, 0x69,
	0x6e, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xfa, 0xc7, 0x31, 0x05, 0x31, 0x2d, 0x35, 0x31,
	0x32, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x44, 0x65, 0x73, 0x6b, 0x74,
	0x6f, 0x70, 0x73, 0x12, 0x39, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x74,
	0x6f, 0x70, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x09, 0xfa, 0xc7, 0x31, 0x05, 0x30, 0x2d, 0x35, 0x31, 0x32, 0x52, 0x11, 0x6d, 0x61, 0x78,
	0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x6a,
	0x0a, 0x0c, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x08, 0x82, 0xc8, 0x31, 0x04, 0x30,
	0x2d, 0x31, 0x30, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x4f, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x44,
	0x45, 0x53, 0x4b, 0x54, 0x4f, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x45, 0x52,
	0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x4e,
	0x5f, 0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x22, 0x7f, 0x0a,
	0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1f,
	0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0xc7, 0x31, 0x03, 0x3e, 0x3d, 0x31, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12,
	0x1d, 0x0a, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0xc7, 0x31, 0x03, 0x3e, 0x3d, 0x31, 0x52, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x2e,
	0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xfa, 0xc7, 0x31, 0x05, 0x30, 0x2d, 0x31, 0x30, 0x30,
	0x52, 0x0c, 0x63, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x76,
	0x0a, 0x14, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2b, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe8, 0xc7, 0x31, 0x01,
	0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x12, 0x82, 0xc8, 0x31, 0x02, 0x3e, 0x30, 0x8a,
	0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x90, 0xc8, 0x31, 0x01, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x49, 0x64, 0x73, 0x42, 0x71, 0x0a, 0x20, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDescOnce sync.Once
	file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDescData = file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDesc
)

func file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDescGZIP() []byte {
	file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDescData)
	})
	return file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDescData
}

var file_yandex_cloud_clouddesktop_v1_desktop_group_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_yandex_cloud_clouddesktop_v1_desktop_group_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_yandex_cloud_clouddesktop_v1_desktop_group_proto_goTypes = []any{
	(DesktopGroup_Status)(0),                   // 0: yandex.cloud.clouddesktop.v1.api.DesktopGroup.Status
	(DesktopGroupConfiguration_DesktopType)(0), // 1: yandex.cloud.clouddesktop.v1.api.DesktopGroupConfiguration.DesktopType
	(*DesktopGroup)(nil),                       // 2: yandex.cloud.clouddesktop.v1.api.DesktopGroup
	(*DesktopGroupConfiguration)(nil),          // 3: yandex.cloud.clouddesktop.v1.api.DesktopGroupConfiguration
	(*ResourcesSpec)(nil),                      // 4: yandex.cloud.clouddesktop.v1.api.ResourcesSpec
	(*NetworkInterfaceSpec)(nil),               // 5: yandex.cloud.clouddesktop.v1.api.NetworkInterfaceSpec
	nil,                                        // 6: yandex.cloud.clouddesktop.v1.api.DesktopGroup.LabelsEntry
	(*timestamppb.Timestamp)(nil),              // 7: google.protobuf.Timestamp
	(*DiskSpec)(nil),                           // 8: yandex.cloud.clouddesktop.v1.api.DiskSpec
	(*access.Subject)(nil),                     // 9: yandex.cloud.access.Subject
}
var file_yandex_cloud_clouddesktop_v1_desktop_group_proto_depIdxs = []int32{
	7,  // 0: yandex.cloud.clouddesktop.v1.api.DesktopGroup.created_at:type_name -> google.protobuf.Timestamp
	0,  // 1: yandex.cloud.clouddesktop.v1.api.DesktopGroup.status:type_name -> yandex.cloud.clouddesktop.v1.api.DesktopGroup.Status
	4,  // 2: yandex.cloud.clouddesktop.v1.api.DesktopGroup.resources_spec:type_name -> yandex.cloud.clouddesktop.v1.api.ResourcesSpec
	5,  // 3: yandex.cloud.clouddesktop.v1.api.DesktopGroup.network_interface_spec:type_name -> yandex.cloud.clouddesktop.v1.api.NetworkInterfaceSpec
	6,  // 4: yandex.cloud.clouddesktop.v1.api.DesktopGroup.labels:type_name -> yandex.cloud.clouddesktop.v1.api.DesktopGroup.LabelsEntry
	8,  // 5: yandex.cloud.clouddesktop.v1.api.DesktopGroup.boot_disk_spec:type_name -> yandex.cloud.clouddesktop.v1.api.DiskSpec
	8,  // 6: yandex.cloud.clouddesktop.v1.api.DesktopGroup.data_disk_spec:type_name -> yandex.cloud.clouddesktop.v1.api.DiskSpec
	3,  // 7: yandex.cloud.clouddesktop.v1.api.DesktopGroup.group_config:type_name -> yandex.cloud.clouddesktop.v1.api.DesktopGroupConfiguration
	1,  // 8: yandex.cloud.clouddesktop.v1.api.DesktopGroupConfiguration.desktop_type:type_name -> yandex.cloud.clouddesktop.v1.api.DesktopGroupConfiguration.DesktopType
	9,  // 9: yandex.cloud.clouddesktop.v1.api.DesktopGroupConfiguration.members:type_name -> yandex.cloud.access.Subject
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_yandex_cloud_clouddesktop_v1_desktop_group_proto_init() }
func file_yandex_cloud_clouddesktop_v1_desktop_group_proto_init() {
	if File_yandex_cloud_clouddesktop_v1_desktop_group_proto != nil {
		return
	}
	file_yandex_cloud_clouddesktop_v1_disk_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_clouddesktop_v1_desktop_group_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*DesktopGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_clouddesktop_v1_desktop_group_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DesktopGroupConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_clouddesktop_v1_desktop_group_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ResourcesSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_clouddesktop_v1_desktop_group_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkInterfaceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_clouddesktop_v1_desktop_group_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_clouddesktop_v1_desktop_group_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_clouddesktop_v1_desktop_group_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_clouddesktop_v1_desktop_group_proto_msgTypes,
	}.Build()
	File_yandex_cloud_clouddesktop_v1_desktop_group_proto = out.File
	file_yandex_cloud_clouddesktop_v1_desktop_group_proto_rawDesc = nil
	file_yandex_cloud_clouddesktop_v1_desktop_group_proto_goTypes = nil
	file_yandex_cloud_clouddesktop_v1_desktop_group_proto_depIdxs = nil
}

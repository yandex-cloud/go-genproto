// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/clouddesktop/v1/desktop_image_service.proto

package clouddesktop

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListDesktopImagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to list desktop images in.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size],
	// the service returns a [ListDesktopImagesRequest.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value: 100.
	PageSize int64 `protobuf:"varint,21,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token] to the
	// [ListDesktopImagesRequest.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,22,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	// The expression must specify:
	// 1. The field name. Currently you can use filtering only on [DesktopImage.name] field.
	// 2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
	// 3. Value or a list of values to compare against the values of the field.
	Filter string `protobuf:"bytes,23,opt,name=filter,proto3" json:"filter,omitempty"`
	// Sorting the list by [DesktopImage.name], [DesktopImage.created_at] and [DesktopImage.status] fields.
	// The default sorting order is ascending.
	OrderBy       string `protobuf:"bytes,24,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDesktopImagesRequest) Reset() {
	*x = ListDesktopImagesRequest{}
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDesktopImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDesktopImagesRequest) ProtoMessage() {}

func (x *ListDesktopImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDesktopImagesRequest.ProtoReflect.Descriptor instead.
func (*ListDesktopImagesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListDesktopImagesRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListDesktopImagesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDesktopImagesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListDesktopImagesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListDesktopImagesRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListDesktopImagesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of desktop images.
	DesktopImages []*DesktopImage `protobuf:"bytes,1,rep,name=desktop_images,json=desktopImages,proto3" json:"desktop_images,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListDesktopImagesRequest.page_size], use
	// the [next_page_token] as the value
	// for the [ListDesktopImagesRequest.page_token] query parameter
	// in the next list request. Each subsequent list request will have its own
	// [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,22,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDesktopImagesResponse) Reset() {
	*x = ListDesktopImagesResponse{}
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDesktopImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDesktopImagesResponse) ProtoMessage() {}

func (x *ListDesktopImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDesktopImagesResponse.ProtoReflect.Descriptor instead.
func (*ListDesktopImagesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListDesktopImagesResponse) GetDesktopImages() []*DesktopImage {
	if x != nil {
		return x.DesktopImages
	}
	return nil
}

func (x *ListDesktopImagesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CopyDesktopImageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to copy the image to.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Name of the image.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// ID of the compute image to copy the image from.
	ImageId       string `protobuf:"bytes,8,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyDesktopImageRequest) Reset() {
	*x = CopyDesktopImageRequest{}
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyDesktopImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyDesktopImageRequest) ProtoMessage() {}

func (x *CopyDesktopImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyDesktopImageRequest.ProtoReflect.Descriptor instead.
func (*CopyDesktopImageRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescGZIP(), []int{2}
}

func (x *CopyDesktopImageRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *CopyDesktopImageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CopyDesktopImageRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type UpdateDesktopImageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of image to update.
	ImageId string `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	// Mask of fields that need to be update.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// New desktop image name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// New desktop image labels.
	Labels        map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDesktopImageRequest) Reset() {
	*x = UpdateDesktopImageRequest{}
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDesktopImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDesktopImageRequest) ProtoMessage() {}

func (x *UpdateDesktopImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDesktopImageRequest.ProtoReflect.Descriptor instead.
func (*UpdateDesktopImageRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateDesktopImageRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *UpdateDesktopImageRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateDesktopImageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDesktopImageRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type CopyFromDesktopRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to copy the image to.
	FolderId string `protobuf:"bytes,3,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Name of the image.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// ID of the desktop to copy the image from.
	DesktopId     string `protobuf:"bytes,8,opt,name=desktop_id,json=desktopId,proto3" json:"desktop_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyFromDesktopRequest) Reset() {
	*x = CopyFromDesktopRequest{}
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyFromDesktopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyFromDesktopRequest) ProtoMessage() {}

func (x *CopyFromDesktopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyFromDesktopRequest.ProtoReflect.Descriptor instead.
func (*CopyFromDesktopRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescGZIP(), []int{4}
}

func (x *CopyFromDesktopRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *CopyFromDesktopRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CopyFromDesktopRequest) GetDesktopId() string {
	if x != nil {
		return x.DesktopId
	}
	return ""
}

type CopyDesktopImageMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the new image.
	ImageId       string `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyDesktopImageMetadata) Reset() {
	*x = CopyDesktopImageMetadata{}
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyDesktopImageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyDesktopImageMetadata) ProtoMessage() {}

func (x *CopyDesktopImageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyDesktopImageMetadata.ProtoReflect.Descriptor instead.
func (*CopyDesktopImageMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescGZIP(), []int{5}
}

func (x *CopyDesktopImageMetadata) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type CopyFromDesktopMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the new image.
	ImageId       string `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyFromDesktopMetadata) Reset() {
	*x = CopyFromDesktopMetadata{}
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyFromDesktopMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyFromDesktopMetadata) ProtoMessage() {}

func (x *CopyFromDesktopMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyFromDesktopMetadata.ProtoReflect.Descriptor instead.
func (*CopyFromDesktopMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescGZIP(), []int{6}
}

func (x *CopyFromDesktopMetadata) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type DeleteDesktopImageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the image to delete.
	ImageId       string `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDesktopImageRequest) Reset() {
	*x = DeleteDesktopImageRequest{}
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDesktopImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDesktopImageRequest) ProtoMessage() {}

func (x *DeleteDesktopImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDesktopImageRequest.ProtoReflect.Descriptor instead.
func (*DeleteDesktopImageRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteDesktopImageRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type DeleteDesktopImageMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the image to delete.
	ImageId       string `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDesktopImageMetadata) Reset() {
	*x = DeleteDesktopImageMetadata{}
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDesktopImageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDesktopImageMetadata) ProtoMessage() {}

func (x *DeleteDesktopImageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDesktopImageMetadata.ProtoReflect.Descriptor instead.
func (*DeleteDesktopImageMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDesktopImageMetadata) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type GetDesktopImageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the image to get.
	ImageId       string `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDesktopImageRequest) Reset() {
	*x = GetDesktopImageRequest{}
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDesktopImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDesktopImageRequest) ProtoMessage() {}

func (x *GetDesktopImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDesktopImageRequest.ProtoReflect.Descriptor instead.
func (*GetDesktopImageRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetDesktopImageRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type UpdateDesktopImageMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageId       string                 `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDesktopImageMetadata) Reset() {
	*x = UpdateDesktopImageMetadata{}
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDesktopImageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDesktopImageMetadata) ProtoMessage() {}

func (x *UpdateDesktopImageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDesktopImageMetadata.ProtoReflect.Descriptor instead.
func (*UpdateDesktopImageMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateDesktopImageMetadata) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

var File_yandex_cloud_clouddesktop_v1_desktop_image_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDesc = "" +
	"\n" +
	"8yandex/cloud/clouddesktop/v1/desktop_image_service.proto\x12 yandex.cloud.clouddesktop.v1.api\x1a\x1cgoogle/api/annotations.proto\x1a yandex/cloud/api/operation.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\x1a0yandex/cloud/clouddesktop/v1/desktop_image.proto\x1a google/protobuf/field_mask.proto\"\xe8\x01\n" +
	"\x18ListDesktopImagesRequest\x12)\n" +
	"\tfolder_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x12'\n" +
	"\tpage_size\x18\x15 \x01(\x03B\n" +
	"\xfa\xc71\x060-1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x16 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x17 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\x12$\n" +
	"\border_by\x18\x18 \x01(\tB\t\x8a\xc81\x05<=100R\aorderByJ\x04\b\x02\x10\x15\"\xa0\x01\n" +
	"\x19ListDesktopImagesResponse\x12U\n" +
	"\x0edesktop_images\x18\x01 \x03(\v2..yandex.cloud.clouddesktop.v1.api.DesktopImageR\rdesktopImages\x12&\n" +
	"\x0fnext_page_token\x18\x16 \x01(\tR\rnextPageTokenJ\x04\b\x02\x10\x16\"\x95\x01\n" +
	"\x17CopyDesktopImageRequest\x12)\n" +
	"\tfolder_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x12 \n" +
	"\x04name\x18\x02 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x04name\x12'\n" +
	"\bimage_id\x18\b \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\aimageIdJ\x04\b\x03\x10\b\"\xf1\x02\n" +
	"\x19UpdateDesktopImageRequest\x12\x1f\n" +
	"\bimage_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\aimageId\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12\x1c\n" +
	"\x04name\x18\x03 \x01(\tB\b\x8a\xc81\x04<=50R\x04name\x12\x9c\x01\n" +
	"\x06labels\x18\x04 \x03(\v2G.yandex.cloud.clouddesktop.v1.api.UpdateDesktopImageRequest.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x041-63R\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x90\x01\n" +
	"\x16CopyFromDesktopRequest\x12%\n" +
	"\tfolder_id\x18\x03 \x01(\tB\b\x8a\xc81\x04<=50R\bfolderId\x12\x1c\n" +
	"\x04name\x18\x04 \x01(\tB\b\x8a\xc81\x04<=50R\x04name\x12+\n" +
	"\n" +
	"desktop_id\x18\b \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tdesktopIdJ\x04\b\x05\x10\b\"5\n" +
	"\x18CopyDesktopImageMetadata\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\"4\n" +
	"\x17CopyFromDesktopMetadata\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\"<\n" +
	"\x19DeleteDesktopImageRequest\x12\x1f\n" +
	"\bimage_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\aimageId\"7\n" +
	"\x1aDeleteDesktopImageMetadata\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\"9\n" +
	"\x16GetDesktopImageRequest\x12\x1f\n" +
	"\bimage_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\aimageId\"=\n" +
	"\x1aUpdateDesktopImageMetadata\x12\x1f\n" +
	"\bimage_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\aimageId2\xfe\b\n" +
	"\x13DesktopImageService\x12\xa1\x01\n" +
	"\x04List\x12:.yandex.cloud.clouddesktop.v1.api.ListDesktopImagesRequest\x1a;.yandex.cloud.clouddesktop.v1.api.ListDesktopImagesResponse\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/cloud-desktop/v1/images\x12\x9c\x01\n" +
	"\x03Get\x128.yandex.cloud.clouddesktop.v1.api.GetDesktopImageRequest\x1a..yandex.cloud.clouddesktop.v1.api.DesktopImage\"+\x82\xd3\xe4\x93\x02%\x12#/cloud-desktop/v1/images/{image_id}\x12\xba\x01\n" +
	"\x04Copy\x129.yandex.cloud.clouddesktop.v1.api.CopyDesktopImageRequest\x1a!.yandex.cloud.operation.Operation\"T\xb2\xd2*(\n" +
	"\x18CopyDesktopImageMetadata\x12\fDesktopImage\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/cloud-desktop/v1/images:copy\x12\xc6\x01\n" +
	"\x06Update\x12;.yandex.cloud.clouddesktop.v1.api.UpdateDesktopImageRequest\x1a!.yandex.cloud.operation.Operation\"\\\xb2\xd2**\n" +
	"\x1aUpdateDesktopImageMetadata\x12\fDesktopImage\x82\xd3\xe4\x93\x02(:\x01*2#/cloud-desktop/v1/images/{image_id}\x12\xce\x01\n" +
	"\x0fCopyFromDesktop\x128.yandex.cloud.clouddesktop.v1.api.CopyFromDesktopRequest\x1a!.yandex.cloud.operation.Operation\"^\xb2\xd2*'\n" +
	"\x17CopyFromDesktopMetadata\x12\fDesktopImage\x82\xd3\xe4\x93\x02-:\x01*\"(/cloud-desktop/v1/images:copyFromDesktop\x12\xcc\x01\n" +
	"\x06Delete\x12;.yandex.cloud.clouddesktop.v1.api.DeleteDesktopImageRequest\x1a!.yandex.cloud.operation.Operation\"b\xb2\xd2*3\n" +
	"\x1aDeleteDesktopImageMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02%*#/cloud-desktop/v1/images/{image_id}Bq\n" +
	" yandex.cloud.api.clouddesktop.v1ZMgithub.com/yandex-cloud/go-genproto/yandex/cloud/clouddesktop/v1;clouddesktopb\x06proto3"

var (
	file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescData []byte
)

func file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDesc), len(file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDesc)))
	})
	return file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDescData
}

var file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_goTypes = []any{
	(*ListDesktopImagesRequest)(nil),   // 0: yandex.cloud.clouddesktop.v1.api.ListDesktopImagesRequest
	(*ListDesktopImagesResponse)(nil),  // 1: yandex.cloud.clouddesktop.v1.api.ListDesktopImagesResponse
	(*CopyDesktopImageRequest)(nil),    // 2: yandex.cloud.clouddesktop.v1.api.CopyDesktopImageRequest
	(*UpdateDesktopImageRequest)(nil),  // 3: yandex.cloud.clouddesktop.v1.api.UpdateDesktopImageRequest
	(*CopyFromDesktopRequest)(nil),     // 4: yandex.cloud.clouddesktop.v1.api.CopyFromDesktopRequest
	(*CopyDesktopImageMetadata)(nil),   // 5: yandex.cloud.clouddesktop.v1.api.CopyDesktopImageMetadata
	(*CopyFromDesktopMetadata)(nil),    // 6: yandex.cloud.clouddesktop.v1.api.CopyFromDesktopMetadata
	(*DeleteDesktopImageRequest)(nil),  // 7: yandex.cloud.clouddesktop.v1.api.DeleteDesktopImageRequest
	(*DeleteDesktopImageMetadata)(nil), // 8: yandex.cloud.clouddesktop.v1.api.DeleteDesktopImageMetadata
	(*GetDesktopImageRequest)(nil),     // 9: yandex.cloud.clouddesktop.v1.api.GetDesktopImageRequest
	(*UpdateDesktopImageMetadata)(nil), // 10: yandex.cloud.clouddesktop.v1.api.UpdateDesktopImageMetadata
	nil,                                // 11: yandex.cloud.clouddesktop.v1.api.UpdateDesktopImageRequest.LabelsEntry
	(*DesktopImage)(nil),               // 12: yandex.cloud.clouddesktop.v1.api.DesktopImage
	(*fieldmaskpb.FieldMask)(nil),      // 13: google.protobuf.FieldMask
	(*operation.Operation)(nil),        // 14: yandex.cloud.operation.Operation
}
var file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_depIdxs = []int32{
	12, // 0: yandex.cloud.clouddesktop.v1.api.ListDesktopImagesResponse.desktop_images:type_name -> yandex.cloud.clouddesktop.v1.api.DesktopImage
	13, // 1: yandex.cloud.clouddesktop.v1.api.UpdateDesktopImageRequest.update_mask:type_name -> google.protobuf.FieldMask
	11, // 2: yandex.cloud.clouddesktop.v1.api.UpdateDesktopImageRequest.labels:type_name -> yandex.cloud.clouddesktop.v1.api.UpdateDesktopImageRequest.LabelsEntry
	0,  // 3: yandex.cloud.clouddesktop.v1.api.DesktopImageService.List:input_type -> yandex.cloud.clouddesktop.v1.api.ListDesktopImagesRequest
	9,  // 4: yandex.cloud.clouddesktop.v1.api.DesktopImageService.Get:input_type -> yandex.cloud.clouddesktop.v1.api.GetDesktopImageRequest
	2,  // 5: yandex.cloud.clouddesktop.v1.api.DesktopImageService.Copy:input_type -> yandex.cloud.clouddesktop.v1.api.CopyDesktopImageRequest
	3,  // 6: yandex.cloud.clouddesktop.v1.api.DesktopImageService.Update:input_type -> yandex.cloud.clouddesktop.v1.api.UpdateDesktopImageRequest
	4,  // 7: yandex.cloud.clouddesktop.v1.api.DesktopImageService.CopyFromDesktop:input_type -> yandex.cloud.clouddesktop.v1.api.CopyFromDesktopRequest
	7,  // 8: yandex.cloud.clouddesktop.v1.api.DesktopImageService.Delete:input_type -> yandex.cloud.clouddesktop.v1.api.DeleteDesktopImageRequest
	1,  // 9: yandex.cloud.clouddesktop.v1.api.DesktopImageService.List:output_type -> yandex.cloud.clouddesktop.v1.api.ListDesktopImagesResponse
	12, // 10: yandex.cloud.clouddesktop.v1.api.DesktopImageService.Get:output_type -> yandex.cloud.clouddesktop.v1.api.DesktopImage
	14, // 11: yandex.cloud.clouddesktop.v1.api.DesktopImageService.Copy:output_type -> yandex.cloud.operation.Operation
	14, // 12: yandex.cloud.clouddesktop.v1.api.DesktopImageService.Update:output_type -> yandex.cloud.operation.Operation
	14, // 13: yandex.cloud.clouddesktop.v1.api.DesktopImageService.CopyFromDesktop:output_type -> yandex.cloud.operation.Operation
	14, // 14: yandex.cloud.clouddesktop.v1.api.DesktopImageService.Delete:output_type -> yandex.cloud.operation.Operation
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_init() }
func file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_init() {
	if File_yandex_cloud_clouddesktop_v1_desktop_image_service_proto != nil {
		return
	}
	file_yandex_cloud_clouddesktop_v1_desktop_image_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDesc), len(file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_clouddesktop_v1_desktop_image_service_proto = out.File
	file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_goTypes = nil
	file_yandex_cloud_clouddesktop_v1_desktop_image_service_proto_depIdxs = nil
}

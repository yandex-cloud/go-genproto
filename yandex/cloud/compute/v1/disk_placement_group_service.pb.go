// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/compute/v1/disk_placement_group_service.proto

package compute

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	access "github.com/yandex-cloud/go-genproto/yandex/cloud/access"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDiskPlacementGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the placement group to return.
	// To get the placement group ID, use [DiskPlacementGroupService.List] request.
	DiskPlacementGroupId string `protobuf:"bytes,1,opt,name=disk_placement_group_id,json=diskPlacementGroupId,proto3" json:"disk_placement_group_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetDiskPlacementGroupRequest) Reset() {
	*x = GetDiskPlacementGroupRequest{}
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDiskPlacementGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiskPlacementGroupRequest) ProtoMessage() {}

func (x *GetDiskPlacementGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiskPlacementGroupRequest.ProtoReflect.Descriptor instead.
func (*GetDiskPlacementGroupRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetDiskPlacementGroupRequest) GetDiskPlacementGroupId() string {
	if x != nil {
		return x.DiskPlacementGroupId
	}
	return ""
}

type ListDiskPlacementGroupsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to list placement groups in.
	// To get the folder ID, use [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size],
	// the service returns a [ListDiskPlacementGroupsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results,
	// set [page_token] to the [ListDiskPlacementGroupsResponse.next_page_token]
	// returned by a previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	// The expression consists of one or more conditions united by `AND` operator: `<condition1> [AND <condition2> [<...> AND <conditionN>]]`.
	//
	// Each condition has the form `<field> <operator> <value>`, where:
	// 1. `<field>` is the field name. Currently you can use filtering only on the limited number of fields.
	// 2. `<operator>` is a logical operator, one of `=`, `!=`, `IN`, `NOT IN`.
	// 3. `<value>` represents a value.
	// String values should be written in double (`"`) or single (`'`) quotes. C-style escape sequences are supported (`\"` turns to `"`, `\'` to `'`, `\\` to backslash).
	Filter string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	// By which column the listing should be ordered and in which direction,
	// format is "createdAt desc". "id asc" if omitted.
	// The default sorting order is ascending
	OrderBy       string `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDiskPlacementGroupsRequest) Reset() {
	*x = ListDiskPlacementGroupsRequest{}
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDiskPlacementGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiskPlacementGroupsRequest) ProtoMessage() {}

func (x *ListDiskPlacementGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiskPlacementGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListDiskPlacementGroupsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListDiskPlacementGroupsRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListDiskPlacementGroupsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDiskPlacementGroupsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListDiskPlacementGroupsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListDiskPlacementGroupsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListDiskPlacementGroupsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Lists placement groups for the specified folder.
	DiskPlacementGroups []*DiskPlacementGroup `protobuf:"bytes,1,rep,name=disk_placement_groups,json=diskPlacementGroups,proto3" json:"disk_placement_groups,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListDiskPlacementGroupsRequest.page_size], use
	// [next_page_token] as the value
	// for the [ListDiskPlacementGroupsRequest.page_token] query parameter
	// in the next list request. Each subsequent list request will have its own
	// [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDiskPlacementGroupsResponse) Reset() {
	*x = ListDiskPlacementGroupsResponse{}
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDiskPlacementGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiskPlacementGroupsResponse) ProtoMessage() {}

func (x *ListDiskPlacementGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiskPlacementGroupsResponse.ProtoReflect.Descriptor instead.
func (*ListDiskPlacementGroupsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListDiskPlacementGroupsResponse) GetDiskPlacementGroups() []*DiskPlacementGroup {
	if x != nil {
		return x.DiskPlacementGroups
	}
	return nil
}

func (x *ListDiskPlacementGroupsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateDiskPlacementGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to create a placement group in.
	// To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Name of the placement group.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the placement group.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels as `key:value` pairs.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// ID of the availability zone where the placement group resides.
	// To get a list of available zones use the [yandex.cloud.compute.v1.ZoneService.List] request.
	ZoneId string `protobuf:"bytes,5,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// Placement strategy.
	//
	// Types that are valid to be assigned to PlacementStrategy:
	//
	//	*CreateDiskPlacementGroupRequest_SpreadPlacementStrategy
	//	*CreateDiskPlacementGroupRequest_PartitionPlacementStrategy
	PlacementStrategy isCreateDiskPlacementGroupRequest_PlacementStrategy `protobuf_oneof:"placement_strategy"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateDiskPlacementGroupRequest) Reset() {
	*x = CreateDiskPlacementGroupRequest{}
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDiskPlacementGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDiskPlacementGroupRequest) ProtoMessage() {}

func (x *CreateDiskPlacementGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDiskPlacementGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateDiskPlacementGroupRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDiskPlacementGroupRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *CreateDiskPlacementGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDiskPlacementGroupRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateDiskPlacementGroupRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateDiskPlacementGroupRequest) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *CreateDiskPlacementGroupRequest) GetPlacementStrategy() isCreateDiskPlacementGroupRequest_PlacementStrategy {
	if x != nil {
		return x.PlacementStrategy
	}
	return nil
}

func (x *CreateDiskPlacementGroupRequest) GetSpreadPlacementStrategy() *DiskSpreadPlacementStrategy {
	if x != nil {
		if x, ok := x.PlacementStrategy.(*CreateDiskPlacementGroupRequest_SpreadPlacementStrategy); ok {
			return x.SpreadPlacementStrategy
		}
	}
	return nil
}

func (x *CreateDiskPlacementGroupRequest) GetPartitionPlacementStrategy() *DiskPartitionPlacementStrategy {
	if x != nil {
		if x, ok := x.PlacementStrategy.(*CreateDiskPlacementGroupRequest_PartitionPlacementStrategy); ok {
			return x.PartitionPlacementStrategy
		}
	}
	return nil
}

type isCreateDiskPlacementGroupRequest_PlacementStrategy interface {
	isCreateDiskPlacementGroupRequest_PlacementStrategy()
}

type CreateDiskPlacementGroupRequest_SpreadPlacementStrategy struct {
	// Distribute disks over distinct failure domains.
	SpreadPlacementStrategy *DiskSpreadPlacementStrategy `protobuf:"bytes,6,opt,name=spread_placement_strategy,json=spreadPlacementStrategy,proto3,oneof"`
}

type CreateDiskPlacementGroupRequest_PartitionPlacementStrategy struct {
	// Distribute disks over partitions.
	PartitionPlacementStrategy *DiskPartitionPlacementStrategy `protobuf:"bytes,7,opt,name=partition_placement_strategy,json=partitionPlacementStrategy,proto3,oneof"`
}

func (*CreateDiskPlacementGroupRequest_SpreadPlacementStrategy) isCreateDiskPlacementGroupRequest_PlacementStrategy() {
}

func (*CreateDiskPlacementGroupRequest_PartitionPlacementStrategy) isCreateDiskPlacementGroupRequest_PlacementStrategy() {
}

type CreateDiskPlacementGroupMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the placement group that is being created.
	DiskPlacementGroupId string `protobuf:"bytes,1,opt,name=disk_placement_group_id,json=diskPlacementGroupId,proto3" json:"disk_placement_group_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CreateDiskPlacementGroupMetadata) Reset() {
	*x = CreateDiskPlacementGroupMetadata{}
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDiskPlacementGroupMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDiskPlacementGroupMetadata) ProtoMessage() {}

func (x *CreateDiskPlacementGroupMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDiskPlacementGroupMetadata.ProtoReflect.Descriptor instead.
func (*CreateDiskPlacementGroupMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDiskPlacementGroupMetadata) GetDiskPlacementGroupId() string {
	if x != nil {
		return x.DiskPlacementGroupId
	}
	return ""
}

type UpdateDiskPlacementGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the placement group to update.
	// To get the placement group ID, use an [DiskPlacementGroupService.List] request.
	DiskPlacementGroupId string `protobuf:"bytes,1,opt,name=disk_placement_group_id,json=diskPlacementGroupId,proto3" json:"disk_placement_group_id,omitempty"`
	// Field mask that specifies which fields of the DiskPlacementGroup resource are going to be updated.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// Name of the placement group.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the placement group.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels as `key:value` pairs.
	//
	// The existing set of `labels` is completely replaced by the provided set.
	Labels        map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDiskPlacementGroupRequest) Reset() {
	*x = UpdateDiskPlacementGroupRequest{}
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDiskPlacementGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDiskPlacementGroupRequest) ProtoMessage() {}

func (x *UpdateDiskPlacementGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDiskPlacementGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateDiskPlacementGroupRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDiskPlacementGroupRequest) GetDiskPlacementGroupId() string {
	if x != nil {
		return x.DiskPlacementGroupId
	}
	return ""
}

func (x *UpdateDiskPlacementGroupRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateDiskPlacementGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDiskPlacementGroupRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateDiskPlacementGroupRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type UpdateDiskPlacementGroupMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the placement group that is being updated.
	DiskPlacementGroupId string `protobuf:"bytes,1,opt,name=disk_placement_group_id,json=diskPlacementGroupId,proto3" json:"disk_placement_group_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *UpdateDiskPlacementGroupMetadata) Reset() {
	*x = UpdateDiskPlacementGroupMetadata{}
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDiskPlacementGroupMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDiskPlacementGroupMetadata) ProtoMessage() {}

func (x *UpdateDiskPlacementGroupMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDiskPlacementGroupMetadata.ProtoReflect.Descriptor instead.
func (*UpdateDiskPlacementGroupMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDiskPlacementGroupMetadata) GetDiskPlacementGroupId() string {
	if x != nil {
		return x.DiskPlacementGroupId
	}
	return ""
}

type DeleteDiskPlacementGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the placement group to delete.
	// To get the placement group ID, use [DiskPlacementGroupService.List] request.
	DiskPlacementGroupId string `protobuf:"bytes,1,opt,name=disk_placement_group_id,json=diskPlacementGroupId,proto3" json:"disk_placement_group_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DeleteDiskPlacementGroupRequest) Reset() {
	*x = DeleteDiskPlacementGroupRequest{}
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDiskPlacementGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDiskPlacementGroupRequest) ProtoMessage() {}

func (x *DeleteDiskPlacementGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDiskPlacementGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteDiskPlacementGroupRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteDiskPlacementGroupRequest) GetDiskPlacementGroupId() string {
	if x != nil {
		return x.DiskPlacementGroupId
	}
	return ""
}

type DeleteDiskPlacementGroupMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the placement group that is being deleted.
	DiskPlacementGroupId string `protobuf:"bytes,1,opt,name=disk_placement_group_id,json=diskPlacementGroupId,proto3" json:"disk_placement_group_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DeleteDiskPlacementGroupMetadata) Reset() {
	*x = DeleteDiskPlacementGroupMetadata{}
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDiskPlacementGroupMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDiskPlacementGroupMetadata) ProtoMessage() {}

func (x *DeleteDiskPlacementGroupMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDiskPlacementGroupMetadata.ProtoReflect.Descriptor instead.
func (*DeleteDiskPlacementGroupMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDiskPlacementGroupMetadata) GetDiskPlacementGroupId() string {
	if x != nil {
		return x.DiskPlacementGroupId
	}
	return ""
}

type ListDiskPlacementGroupDisksRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the placement group to list disks for.
	// To get the placement group ID, use [DiskPlacementGroupService.List] request.
	DiskPlacementGroupId string `protobuf:"bytes,1,opt,name=disk_placement_group_id,json=diskPlacementGroupId,proto3" json:"disk_placement_group_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size],
	// the service returns a [ListDiskPlacementGroupDisksResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results,
	// set [page_token] to the [ListDiskPlacementGroupDisksResponse.next_page_token]
	// returned by a previous list request.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDiskPlacementGroupDisksRequest) Reset() {
	*x = ListDiskPlacementGroupDisksRequest{}
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDiskPlacementGroupDisksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiskPlacementGroupDisksRequest) ProtoMessage() {}

func (x *ListDiskPlacementGroupDisksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiskPlacementGroupDisksRequest.ProtoReflect.Descriptor instead.
func (*ListDiskPlacementGroupDisksRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListDiskPlacementGroupDisksRequest) GetDiskPlacementGroupId() string {
	if x != nil {
		return x.DiskPlacementGroupId
	}
	return ""
}

func (x *ListDiskPlacementGroupDisksRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDiskPlacementGroupDisksRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListDiskPlacementGroupDisksResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Lists disks for the specified placement group.
	Disks []*Disk `protobuf:"bytes,1,rep,name=disks,proto3" json:"disks,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is more than [ListDiskPlacementGroupDisksRequest.page_size], use
	// [next_page_token] as the value
	// for the [ListDiskPlacementGroupDisksRequest.page_token] query parameter
	// in the next list request. Each subsequent list request will have its own
	// [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDiskPlacementGroupDisksResponse) Reset() {
	*x = ListDiskPlacementGroupDisksResponse{}
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDiskPlacementGroupDisksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiskPlacementGroupDisksResponse) ProtoMessage() {}

func (x *ListDiskPlacementGroupDisksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiskPlacementGroupDisksResponse.ProtoReflect.Descriptor instead.
func (*ListDiskPlacementGroupDisksResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListDiskPlacementGroupDisksResponse) GetDisks() []*Disk {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *ListDiskPlacementGroupDisksResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListDiskPlacementGroupOperationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the placement group to list operations for.
	// To get the placement group ID, use [DiskPlacementGroupService.List] request.
	DiskPlacementGroupId string `protobuf:"bytes,1,opt,name=disk_placement_group_id,json=diskPlacementGroupId,proto3" json:"disk_placement_group_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size], the service returns a [ListDiskPlacementGroupOperationsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token] to the
	// [ListDiskPlacementGroupOperationsResponse.next_page_token] returned by a previous list request.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDiskPlacementGroupOperationsRequest) Reset() {
	*x = ListDiskPlacementGroupOperationsRequest{}
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDiskPlacementGroupOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiskPlacementGroupOperationsRequest) ProtoMessage() {}

func (x *ListDiskPlacementGroupOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiskPlacementGroupOperationsRequest.ProtoReflect.Descriptor instead.
func (*ListDiskPlacementGroupOperationsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListDiskPlacementGroupOperationsRequest) GetDiskPlacementGroupId() string {
	if x != nil {
		return x.DiskPlacementGroupId
	}
	return ""
}

func (x *ListDiskPlacementGroupOperationsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDiskPlacementGroupOperationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListDiskPlacementGroupOperationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of operations for the specified placement group.
	Operations []*operation.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListDiskPlacementGroupOperationsRequest.page_size], use the [next_page_token] as the value
	// for the [ListDiskPlacementGroupOperationsRequest.page_token] query parameter in the next list request.
	// Each subsequent list request will have its own [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDiskPlacementGroupOperationsResponse) Reset() {
	*x = ListDiskPlacementGroupOperationsResponse{}
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDiskPlacementGroupOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiskPlacementGroupOperationsResponse) ProtoMessage() {}

func (x *ListDiskPlacementGroupOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiskPlacementGroupOperationsResponse.ProtoReflect.Descriptor instead.
func (*ListDiskPlacementGroupOperationsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListDiskPlacementGroupOperationsResponse) GetOperations() []*operation.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ListDiskPlacementGroupOperationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_yandex_cloud_compute_v1_disk_placement_group_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDesc = "" +
	"\n" +
	":yandex/cloud/compute/v1/disk_placement_group_service.proto\x12\x17yandex.cloud.compute.v1\x1a\x1cgoogle/api/annotations.proto\x1a google/protobuf/field_mask.proto\x1a yandex/cloud/access/access.proto\x1a yandex/cloud/api/operation.proto\x1a\"yandex/cloud/compute/v1/disk.proto\x1a2yandex/cloud/compute/v1/disk_placement_group.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\"c\n" +
	"\x1cGetDiskPlacementGroupRequest\x12C\n" +
	"\x17disk_placement_group_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x14diskPlacementGroupId\"\xe8\x01\n" +
	"\x1eListDiskPlacementGroupsRequest\x12)\n" +
	"\tfolder_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\x12$\n" +
	"\border_by\x18\x05 \x01(\tB\t\x8a\xc81\x05<=100R\aorderBy\"\xaa\x01\n" +
	"\x1fListDiskPlacementGroupsResponse\x12_\n" +
	"\x15disk_placement_groups\x18\x01 \x03(\v2+.yandex.cloud.compute.v1.DiskPlacementGroupR\x13diskPlacementGroups\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xc7\x05\n" +
	"\x1fCreateDiskPlacementGroupRequest\x12)\n" +
	"\tfolder_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x129\n" +
	"\x04name\x18\x02 \x01(\tB%\xf2\xc71!|[a-z]([-_a-z0-9]{0,61}[a-z0-9])?R\x04name\x12+\n" +
	"\vdescription\x18\x03 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\xa1\x01\n" +
	"\x06labels\x18\x04 \x03(\v2D.yandex.cloud.compute.v1.CreateDiskPlacementGroupRequest.LabelsEntryBC\xf2\xc71\x0f[-_./\\@0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x1c\x12\x14[a-z][-_./\\@0-9a-z]*\x1a\x041-63R\x06labels\x12%\n" +
	"\azone_id\x18\x05 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x06zoneId\x12r\n" +
	"\x19spread_placement_strategy\x18\x06 \x01(\v24.yandex.cloud.compute.v1.DiskSpreadPlacementStrategyH\x00R\x17spreadPlacementStrategy\x12{\n" +
	"\x1cpartition_placement_strategy\x18\a \x01(\v27.yandex.cloud.compute.v1.DiskPartitionPlacementStrategyH\x00R\x1apartitionPlacementStrategy\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x1a\n" +
	"\x12placement_strategy\x12\x04\xc0\xc11\x01\"Y\n" +
	" CreateDiskPlacementGroupMetadata\x125\n" +
	"\x17disk_placement_group_id\x18\x01 \x01(\tR\x14diskPlacementGroupId\"\xea\x03\n" +
	"\x1fUpdateDiskPlacementGroupRequest\x12C\n" +
	"\x17disk_placement_group_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x14diskPlacementGroupId\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x129\n" +
	"\x04name\x18\x03 \x01(\tB%\xf2\xc71!|[a-z]([-_a-z0-9]{0,61}[a-z0-9])?R\x04name\x12+\n" +
	"\vdescription\x18\x04 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\xa1\x01\n" +
	"\x06labels\x18\x05 \x03(\v2D.yandex.cloud.compute.v1.UpdateDiskPlacementGroupRequest.LabelsEntryBC\xf2\xc71\x0f[-_./\\@0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x1c\x12\x14[a-z][-_./\\@0-9a-z]*\x1a\x041-63R\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Y\n" +
	" UpdateDiskPlacementGroupMetadata\x125\n" +
	"\x17disk_placement_group_id\x18\x01 \x01(\tR\x14diskPlacementGroupId\"f\n" +
	"\x1fDeleteDiskPlacementGroupRequest\x12C\n" +
	"\x17disk_placement_group_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x14diskPlacementGroupId\"Y\n" +
	" DeleteDiskPlacementGroupMetadata\x125\n" +
	"\x17disk_placement_group_id\x18\x01 \x01(\tR\x14diskPlacementGroupId\"\xbc\x01\n" +
	"\"ListDiskPlacementGroupDisksRequest\x12C\n" +
	"\x17disk_placement_group_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x14diskPlacementGroupId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\"\x82\x01\n" +
	"#ListDiskPlacementGroupDisksResponse\x123\n" +
	"\x05disks\x18\x01 \x03(\v2\x1d.yandex.cloud.compute.v1.DiskR\x05disks\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xc1\x01\n" +
	"'ListDiskPlacementGroupOperationsRequest\x12C\n" +
	"\x17disk_placement_group_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x14diskPlacementGroupId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\"\x95\x01\n" +
	"(ListDiskPlacementGroupOperationsResponse\x12A\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2!.yandex.cloud.operation.OperationR\n" +
	"operations\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken2\x95\x11\n" +
	"\x19DiskPlacementGroupService\x12\xac\x01\n" +
	"\x03Get\x125.yandex.cloud.compute.v1.GetDiskPlacementGroupRequest\x1a+.yandex.cloud.compute.v1.DiskPlacementGroup\"A\x82\xd3\xe4\x93\x02;\x129/compute/v1/diskPlacementGroups/{disk_placement_group_id}\x12\xa2\x01\n" +
	"\x04List\x127.yandex.cloud.compute.v1.ListDiskPlacementGroupsRequest\x1a8.yandex.cloud.compute.v1.ListDiskPlacementGroupsResponse\"'\x82\xd3\xe4\x93\x02!\x12\x1f/compute/v1/diskPlacementGroups\x12\xcb\x01\n" +
	"\x06Create\x128.yandex.cloud.compute.v1.CreateDiskPlacementGroupRequest\x1a!.yandex.cloud.operation.Operation\"d\xb2\xd2*6\n" +
	" CreateDiskPlacementGroupMetadata\x12\x12DiskPlacementGroup\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/compute/v1/diskPlacementGroups\x12\xe5\x01\n" +
	"\x06Update\x128.yandex.cloud.compute.v1.UpdateDiskPlacementGroupRequest\x1a!.yandex.cloud.operation.Operation\"~\xb2\xd2*6\n" +
	" UpdateDiskPlacementGroupMetadata\x12\x12DiskPlacementGroup\x82\xd3\xe4\x93\x02>:\x01*29/compute/v1/diskPlacementGroups/{disk_placement_group_id}\x12\xe5\x01\n" +
	"\x06Delete\x128.yandex.cloud.compute.v1.DeleteDiskPlacementGroupRequest\x1a!.yandex.cloud.operation.Operation\"~\xb2\xd2*9\n" +
	" DeleteDiskPlacementGroupMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02;*9/compute/v1/diskPlacementGroups/{disk_placement_group_id}\x12\xcf\x01\n" +
	"\tListDisks\x12;.yandex.cloud.compute.v1.ListDiskPlacementGroupDisksRequest\x1a<.yandex.cloud.compute.v1.ListDiskPlacementGroupDisksResponse\"G\x82\xd3\xe4\x93\x02A\x12?/compute/v1/diskPlacementGroups/{disk_placement_group_id}/disks\x12\xe3\x01\n" +
	"\x0eListOperations\x12@.yandex.cloud.compute.v1.ListDiskPlacementGroupOperationsRequest\x1aA.yandex.cloud.compute.v1.ListDiskPlacementGroupOperationsResponse\"L\x82\xd3\xe4\x93\x02F\x12D/compute/v1/diskPlacementGroups/{disk_placement_group_id}/operations\x12\xbf\x01\n" +
	"\x12ListAccessBindings\x12..yandex.cloud.access.ListAccessBindingsRequest\x1a/.yandex.cloud.access.ListAccessBindingsResponse\"H\x82\xd3\xe4\x93\x02B\x12@/compute/v1/diskPlacementGroups/{resource_id}:listAccessBindings\x12\xfe\x01\n" +
	"\x11SetAccessBindings\x12-.yandex.cloud.access.SetAccessBindingsRequest\x1a!.yandex.cloud.operation.Operation\"\x96\x01\xb2\xd2*H\n" +
	" access.SetAccessBindingsMetadata\x12$access.AccessBindingsOperationResult\x82\xd3\xe4\x93\x02D:\x01*\"?/compute/v1/diskPlacementGroups/{resource_id}:setAccessBindings\x12\x8a\x02\n" +
	"\x14UpdateAccessBindings\x120.yandex.cloud.access.UpdateAccessBindingsRequest\x1a!.yandex.cloud.operation.Operation\"\x9c\x01\xb2\xd2*K\n" +
	"#access.UpdateAccessBindingsMetadata\x12$access.AccessBindingsOperationResult\x82\xd3\xe4\x93\x02G:\x01*\"B/compute/v1/diskPlacementGroups/{resource_id}:updateAccessBindingsBb\n" +
	"\x1byandex.cloud.api.compute.v1ZCgithub.com/yandex-cloud/go-genproto/yandex/cloud/compute/v1;computeb\x06proto3"

var (
	file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescData []byte
)

func file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDesc), len(file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDesc)))
	})
	return file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDescData
}

var file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_yandex_cloud_compute_v1_disk_placement_group_service_proto_goTypes = []any{
	(*GetDiskPlacementGroupRequest)(nil),             // 0: yandex.cloud.compute.v1.GetDiskPlacementGroupRequest
	(*ListDiskPlacementGroupsRequest)(nil),           // 1: yandex.cloud.compute.v1.ListDiskPlacementGroupsRequest
	(*ListDiskPlacementGroupsResponse)(nil),          // 2: yandex.cloud.compute.v1.ListDiskPlacementGroupsResponse
	(*CreateDiskPlacementGroupRequest)(nil),          // 3: yandex.cloud.compute.v1.CreateDiskPlacementGroupRequest
	(*CreateDiskPlacementGroupMetadata)(nil),         // 4: yandex.cloud.compute.v1.CreateDiskPlacementGroupMetadata
	(*UpdateDiskPlacementGroupRequest)(nil),          // 5: yandex.cloud.compute.v1.UpdateDiskPlacementGroupRequest
	(*UpdateDiskPlacementGroupMetadata)(nil),         // 6: yandex.cloud.compute.v1.UpdateDiskPlacementGroupMetadata
	(*DeleteDiskPlacementGroupRequest)(nil),          // 7: yandex.cloud.compute.v1.DeleteDiskPlacementGroupRequest
	(*DeleteDiskPlacementGroupMetadata)(nil),         // 8: yandex.cloud.compute.v1.DeleteDiskPlacementGroupMetadata
	(*ListDiskPlacementGroupDisksRequest)(nil),       // 9: yandex.cloud.compute.v1.ListDiskPlacementGroupDisksRequest
	(*ListDiskPlacementGroupDisksResponse)(nil),      // 10: yandex.cloud.compute.v1.ListDiskPlacementGroupDisksResponse
	(*ListDiskPlacementGroupOperationsRequest)(nil),  // 11: yandex.cloud.compute.v1.ListDiskPlacementGroupOperationsRequest
	(*ListDiskPlacementGroupOperationsResponse)(nil), // 12: yandex.cloud.compute.v1.ListDiskPlacementGroupOperationsResponse
	nil,                                        // 13: yandex.cloud.compute.v1.CreateDiskPlacementGroupRequest.LabelsEntry
	nil,                                        // 14: yandex.cloud.compute.v1.UpdateDiskPlacementGroupRequest.LabelsEntry
	(*DiskPlacementGroup)(nil),                 // 15: yandex.cloud.compute.v1.DiskPlacementGroup
	(*DiskSpreadPlacementStrategy)(nil),        // 16: yandex.cloud.compute.v1.DiskSpreadPlacementStrategy
	(*DiskPartitionPlacementStrategy)(nil),     // 17: yandex.cloud.compute.v1.DiskPartitionPlacementStrategy
	(*fieldmaskpb.FieldMask)(nil),              // 18: google.protobuf.FieldMask
	(*Disk)(nil),                               // 19: yandex.cloud.compute.v1.Disk
	(*operation.Operation)(nil),                // 20: yandex.cloud.operation.Operation
	(*access.ListAccessBindingsRequest)(nil),   // 21: yandex.cloud.access.ListAccessBindingsRequest
	(*access.SetAccessBindingsRequest)(nil),    // 22: yandex.cloud.access.SetAccessBindingsRequest
	(*access.UpdateAccessBindingsRequest)(nil), // 23: yandex.cloud.access.UpdateAccessBindingsRequest
	(*access.ListAccessBindingsResponse)(nil),  // 24: yandex.cloud.access.ListAccessBindingsResponse
}
var file_yandex_cloud_compute_v1_disk_placement_group_service_proto_depIdxs = []int32{
	15, // 0: yandex.cloud.compute.v1.ListDiskPlacementGroupsResponse.disk_placement_groups:type_name -> yandex.cloud.compute.v1.DiskPlacementGroup
	13, // 1: yandex.cloud.compute.v1.CreateDiskPlacementGroupRequest.labels:type_name -> yandex.cloud.compute.v1.CreateDiskPlacementGroupRequest.LabelsEntry
	16, // 2: yandex.cloud.compute.v1.CreateDiskPlacementGroupRequest.spread_placement_strategy:type_name -> yandex.cloud.compute.v1.DiskSpreadPlacementStrategy
	17, // 3: yandex.cloud.compute.v1.CreateDiskPlacementGroupRequest.partition_placement_strategy:type_name -> yandex.cloud.compute.v1.DiskPartitionPlacementStrategy
	18, // 4: yandex.cloud.compute.v1.UpdateDiskPlacementGroupRequest.update_mask:type_name -> google.protobuf.FieldMask
	14, // 5: yandex.cloud.compute.v1.UpdateDiskPlacementGroupRequest.labels:type_name -> yandex.cloud.compute.v1.UpdateDiskPlacementGroupRequest.LabelsEntry
	19, // 6: yandex.cloud.compute.v1.ListDiskPlacementGroupDisksResponse.disks:type_name -> yandex.cloud.compute.v1.Disk
	20, // 7: yandex.cloud.compute.v1.ListDiskPlacementGroupOperationsResponse.operations:type_name -> yandex.cloud.operation.Operation
	0,  // 8: yandex.cloud.compute.v1.DiskPlacementGroupService.Get:input_type -> yandex.cloud.compute.v1.GetDiskPlacementGroupRequest
	1,  // 9: yandex.cloud.compute.v1.DiskPlacementGroupService.List:input_type -> yandex.cloud.compute.v1.ListDiskPlacementGroupsRequest
	3,  // 10: yandex.cloud.compute.v1.DiskPlacementGroupService.Create:input_type -> yandex.cloud.compute.v1.CreateDiskPlacementGroupRequest
	5,  // 11: yandex.cloud.compute.v1.DiskPlacementGroupService.Update:input_type -> yandex.cloud.compute.v1.UpdateDiskPlacementGroupRequest
	7,  // 12: yandex.cloud.compute.v1.DiskPlacementGroupService.Delete:input_type -> yandex.cloud.compute.v1.DeleteDiskPlacementGroupRequest
	9,  // 13: yandex.cloud.compute.v1.DiskPlacementGroupService.ListDisks:input_type -> yandex.cloud.compute.v1.ListDiskPlacementGroupDisksRequest
	11, // 14: yandex.cloud.compute.v1.DiskPlacementGroupService.ListOperations:input_type -> yandex.cloud.compute.v1.ListDiskPlacementGroupOperationsRequest
	21, // 15: yandex.cloud.compute.v1.DiskPlacementGroupService.ListAccessBindings:input_type -> yandex.cloud.access.ListAccessBindingsRequest
	22, // 16: yandex.cloud.compute.v1.DiskPlacementGroupService.SetAccessBindings:input_type -> yandex.cloud.access.SetAccessBindingsRequest
	23, // 17: yandex.cloud.compute.v1.DiskPlacementGroupService.UpdateAccessBindings:input_type -> yandex.cloud.access.UpdateAccessBindingsRequest
	15, // 18: yandex.cloud.compute.v1.DiskPlacementGroupService.Get:output_type -> yandex.cloud.compute.v1.DiskPlacementGroup
	2,  // 19: yandex.cloud.compute.v1.DiskPlacementGroupService.List:output_type -> yandex.cloud.compute.v1.ListDiskPlacementGroupsResponse
	20, // 20: yandex.cloud.compute.v1.DiskPlacementGroupService.Create:output_type -> yandex.cloud.operation.Operation
	20, // 21: yandex.cloud.compute.v1.DiskPlacementGroupService.Update:output_type -> yandex.cloud.operation.Operation
	20, // 22: yandex.cloud.compute.v1.DiskPlacementGroupService.Delete:output_type -> yandex.cloud.operation.Operation
	10, // 23: yandex.cloud.compute.v1.DiskPlacementGroupService.ListDisks:output_type -> yandex.cloud.compute.v1.ListDiskPlacementGroupDisksResponse
	12, // 24: yandex.cloud.compute.v1.DiskPlacementGroupService.ListOperations:output_type -> yandex.cloud.compute.v1.ListDiskPlacementGroupOperationsResponse
	24, // 25: yandex.cloud.compute.v1.DiskPlacementGroupService.ListAccessBindings:output_type -> yandex.cloud.access.ListAccessBindingsResponse
	20, // 26: yandex.cloud.compute.v1.DiskPlacementGroupService.SetAccessBindings:output_type -> yandex.cloud.operation.Operation
	20, // 27: yandex.cloud.compute.v1.DiskPlacementGroupService.UpdateAccessBindings:output_type -> yandex.cloud.operation.Operation
	18, // [18:28] is the sub-list for method output_type
	8,  // [8:18] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_yandex_cloud_compute_v1_disk_placement_group_service_proto_init() }
func file_yandex_cloud_compute_v1_disk_placement_group_service_proto_init() {
	if File_yandex_cloud_compute_v1_disk_placement_group_service_proto != nil {
		return
	}
	file_yandex_cloud_compute_v1_disk_proto_init()
	file_yandex_cloud_compute_v1_disk_placement_group_proto_init()
	file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes[3].OneofWrappers = []any{
		(*CreateDiskPlacementGroupRequest_SpreadPlacementStrategy)(nil),
		(*CreateDiskPlacementGroupRequest_PartitionPlacementStrategy)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDesc), len(file_yandex_cloud_compute_v1_disk_placement_group_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_compute_v1_disk_placement_group_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_compute_v1_disk_placement_group_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_compute_v1_disk_placement_group_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_compute_v1_disk_placement_group_service_proto = out.File
	file_yandex_cloud_compute_v1_disk_placement_group_service_proto_goTypes = nil
	file_yandex_cloud_compute_v1_disk_placement_group_service_proto_depIdxs = nil
}

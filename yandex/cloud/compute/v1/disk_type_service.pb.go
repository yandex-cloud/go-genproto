// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/compute/v1/disk_type_service.proto

package compute

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDiskTypeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the disk type to return information about.
	// To get the disk type ID use a [DiskTypeService.List] request.
	DiskTypeId    string `protobuf:"bytes,1,opt,name=disk_type_id,json=diskTypeId,proto3" json:"disk_type_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDiskTypeRequest) Reset() {
	*x = GetDiskTypeRequest{}
	mi := &file_yandex_cloud_compute_v1_disk_type_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDiskTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiskTypeRequest) ProtoMessage() {}

func (x *GetDiskTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_disk_type_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiskTypeRequest.ProtoReflect.Descriptor instead.
func (*GetDiskTypeRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_disk_type_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetDiskTypeRequest) GetDiskTypeId() string {
	if x != nil {
		return x.DiskTypeId
	}
	return ""
}

type ListDiskTypesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size],
	// the service returns a [ListDiskTypesResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token] to the
	// [ListDiskTypesResponse.next_page_token] returned by a previous list request.
	PageToken     string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDiskTypesRequest) Reset() {
	*x = ListDiskTypesRequest{}
	mi := &file_yandex_cloud_compute_v1_disk_type_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDiskTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiskTypesRequest) ProtoMessage() {}

func (x *ListDiskTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_disk_type_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiskTypesRequest.ProtoReflect.Descriptor instead.
func (*ListDiskTypesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_disk_type_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListDiskTypesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDiskTypesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListDiskTypesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of disk types.
	DiskTypes []*DiskType `protobuf:"bytes,1,rep,name=disk_types,json=diskTypes,proto3" json:"disk_types,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListDiskTypesRequest.page_size], use
	// the [next_page_token] as the value
	// for the [ListDiskTypesRequest.page_token] query parameter
	// in the next list request. Each subsequent list request will have its own
	// [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDiskTypesResponse) Reset() {
	*x = ListDiskTypesResponse{}
	mi := &file_yandex_cloud_compute_v1_disk_type_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDiskTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiskTypesResponse) ProtoMessage() {}

func (x *ListDiskTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_disk_type_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiskTypesResponse.ProtoReflect.Descriptor instead.
func (*ListDiskTypesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_disk_type_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListDiskTypesResponse) GetDiskTypes() []*DiskType {
	if x != nil {
		return x.DiskTypes
	}
	return nil
}

func (x *ListDiskTypesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_yandex_cloud_compute_v1_disk_type_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_compute_v1_disk_type_service_proto_rawDesc = "" +
	"\n" +
	"/yandex/cloud/compute/v1/disk_type_service.proto\x12\x17yandex.cloud.compute.v1\x1a\x1cgoogle/api/annotations.proto\x1a'yandex/cloud/compute/v1/disk_type.proto\x1a\x1dyandex/cloud/validation.proto\"<\n" +
	"\x12GetDiskTypeRequest\x12&\n" +
	"\fdisk_type_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\n" +
	"diskTypeId\"i\n" +
	"\x14ListDiskTypesRequest\x12'\n" +
	"\tpage_size\x18\x01 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\"\x81\x01\n" +
	"\x15ListDiskTypesResponse\x12@\n" +
	"\n" +
	"disk_types\x18\x01 \x03(\v2!.yandex.cloud.compute.v1.DiskTypeR\tdiskTypes\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken2\x9e\x02\n" +
	"\x0fDiskTypeService\x12\x83\x01\n" +
	"\x03Get\x12+.yandex.cloud.compute.v1.GetDiskTypeRequest\x1a!.yandex.cloud.compute.v1.DiskType\",\x82\xd3\xe4\x93\x02&\x12$/compute/v1/diskTypes/{disk_type_id}\x12\x84\x01\n" +
	"\x04List\x12-.yandex.cloud.compute.v1.ListDiskTypesRequest\x1a..yandex.cloud.compute.v1.ListDiskTypesResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/compute/v1/diskTypesBb\n" +
	"\x1byandex.cloud.api.compute.v1ZCgithub.com/yandex-cloud/go-genproto/yandex/cloud/compute/v1;computeb\x06proto3"

var (
	file_yandex_cloud_compute_v1_disk_type_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_compute_v1_disk_type_service_proto_rawDescData []byte
)

func file_yandex_cloud_compute_v1_disk_type_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_compute_v1_disk_type_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_compute_v1_disk_type_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_compute_v1_disk_type_service_proto_rawDesc), len(file_yandex_cloud_compute_v1_disk_type_service_proto_rawDesc)))
	})
	return file_yandex_cloud_compute_v1_disk_type_service_proto_rawDescData
}

var file_yandex_cloud_compute_v1_disk_type_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_yandex_cloud_compute_v1_disk_type_service_proto_goTypes = []any{
	(*GetDiskTypeRequest)(nil),    // 0: yandex.cloud.compute.v1.GetDiskTypeRequest
	(*ListDiskTypesRequest)(nil),  // 1: yandex.cloud.compute.v1.ListDiskTypesRequest
	(*ListDiskTypesResponse)(nil), // 2: yandex.cloud.compute.v1.ListDiskTypesResponse
	(*DiskType)(nil),              // 3: yandex.cloud.compute.v1.DiskType
}
var file_yandex_cloud_compute_v1_disk_type_service_proto_depIdxs = []int32{
	3, // 0: yandex.cloud.compute.v1.ListDiskTypesResponse.disk_types:type_name -> yandex.cloud.compute.v1.DiskType
	0, // 1: yandex.cloud.compute.v1.DiskTypeService.Get:input_type -> yandex.cloud.compute.v1.GetDiskTypeRequest
	1, // 2: yandex.cloud.compute.v1.DiskTypeService.List:input_type -> yandex.cloud.compute.v1.ListDiskTypesRequest
	3, // 3: yandex.cloud.compute.v1.DiskTypeService.Get:output_type -> yandex.cloud.compute.v1.DiskType
	2, // 4: yandex.cloud.compute.v1.DiskTypeService.List:output_type -> yandex.cloud.compute.v1.ListDiskTypesResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_yandex_cloud_compute_v1_disk_type_service_proto_init() }
func file_yandex_cloud_compute_v1_disk_type_service_proto_init() {
	if File_yandex_cloud_compute_v1_disk_type_service_proto != nil {
		return
	}
	file_yandex_cloud_compute_v1_disk_type_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_compute_v1_disk_type_service_proto_rawDesc), len(file_yandex_cloud_compute_v1_disk_type_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_compute_v1_disk_type_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_compute_v1_disk_type_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_compute_v1_disk_type_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_compute_v1_disk_type_service_proto = out.File
	file_yandex_cloud_compute_v1_disk_type_service_proto_goTypes = nil
	file_yandex_cloud_compute_v1_disk_type_service_proto_depIdxs = nil
}

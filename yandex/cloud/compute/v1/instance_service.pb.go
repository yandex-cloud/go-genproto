// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/compute/v1/instance_service.proto

package compute

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	access "github.com/yandex-cloud/go-genproto/yandex/cloud/access"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InstanceView int32

const (
	// Doesn't include the metadata of the instance in the server response.
	InstanceView_BASIC InstanceView = 0
	// Returns the metadata of the instance in the server response.
	InstanceView_FULL InstanceView = 1
)

// Enum value maps for InstanceView.
var (
	InstanceView_name = map[int32]string{
		0: "BASIC",
		1: "FULL",
	}
	InstanceView_value = map[string]int32{
		"BASIC": 0,
		"FULL":  1,
	}
)

func (x InstanceView) Enum() *InstanceView {
	p := new(InstanceView)
	*p = x
	return p
}

func (x InstanceView) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceView) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_compute_v1_instance_service_proto_enumTypes[0].Descriptor()
}

func (InstanceView) Type() protoreflect.EnumType {
	return &file_yandex_cloud_compute_v1_instance_service_proto_enumTypes[0]
}

func (x InstanceView) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceView.Descriptor instead.
func (InstanceView) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{0}
}

type AttachedDiskSpec_Mode int32

const (
	AttachedDiskSpec_MODE_UNSPECIFIED AttachedDiskSpec_Mode = 0
	// Read-only access.
	AttachedDiskSpec_READ_ONLY AttachedDiskSpec_Mode = 1
	// Read/Write access. Default value.
	AttachedDiskSpec_READ_WRITE AttachedDiskSpec_Mode = 2
)

// Enum value maps for AttachedDiskSpec_Mode.
var (
	AttachedDiskSpec_Mode_name = map[int32]string{
		0: "MODE_UNSPECIFIED",
		1: "READ_ONLY",
		2: "READ_WRITE",
	}
	AttachedDiskSpec_Mode_value = map[string]int32{
		"MODE_UNSPECIFIED": 0,
		"READ_ONLY":        1,
		"READ_WRITE":       2,
	}
)

func (x AttachedDiskSpec_Mode) Enum() *AttachedDiskSpec_Mode {
	p := new(AttachedDiskSpec_Mode)
	*p = x
	return p
}

func (x AttachedDiskSpec_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttachedDiskSpec_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_compute_v1_instance_service_proto_enumTypes[1].Descriptor()
}

func (AttachedDiskSpec_Mode) Type() protoreflect.EnumType {
	return &file_yandex_cloud_compute_v1_instance_service_proto_enumTypes[1]
}

func (x AttachedDiskSpec_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttachedDiskSpec_Mode.Descriptor instead.
func (AttachedDiskSpec_Mode) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{42, 0}
}

type AttachedFilesystemSpec_Mode int32

const (
	AttachedFilesystemSpec_MODE_UNSPECIFIED AttachedFilesystemSpec_Mode = 0
	// Read-only access.
	AttachedFilesystemSpec_READ_ONLY AttachedFilesystemSpec_Mode = 1
	// Read/Write access. Default value.
	AttachedFilesystemSpec_READ_WRITE AttachedFilesystemSpec_Mode = 2
)

// Enum value maps for AttachedFilesystemSpec_Mode.
var (
	AttachedFilesystemSpec_Mode_name = map[int32]string{
		0: "MODE_UNSPECIFIED",
		1: "READ_ONLY",
		2: "READ_WRITE",
	}
	AttachedFilesystemSpec_Mode_value = map[string]int32{
		"MODE_UNSPECIFIED": 0,
		"READ_ONLY":        1,
		"READ_WRITE":       2,
	}
)

func (x AttachedFilesystemSpec_Mode) Enum() *AttachedFilesystemSpec_Mode {
	p := new(AttachedFilesystemSpec_Mode)
	*p = x
	return p
}

func (x AttachedFilesystemSpec_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttachedFilesystemSpec_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_compute_v1_instance_service_proto_enumTypes[2].Descriptor()
}

func (AttachedFilesystemSpec_Mode) Type() protoreflect.EnumType {
	return &file_yandex_cloud_compute_v1_instance_service_proto_enumTypes[2]
}

func (x AttachedFilesystemSpec_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttachedFilesystemSpec_Mode.Descriptor instead.
func (AttachedFilesystemSpec_Mode) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{44, 0}
}

type GetInstanceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Instance resource to return.
	// To get the instance ID, use a [InstanceService.List] request.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// Defines which information about the Instance resource should be returned in the server response.
	View          InstanceView `protobuf:"varint,2,opt,name=view,proto3,enum=yandex.cloud.compute.v1.InstanceView" json:"view,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInstanceRequest) Reset() {
	*x = GetInstanceRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceRequest) ProtoMessage() {}

func (x *GetInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceRequest.ProtoReflect.Descriptor instead.
func (*GetInstanceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *GetInstanceRequest) GetView() InstanceView {
	if x != nil {
		return x.View
	}
	return InstanceView_BASIC
}

type ListInstancesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Folder to list instances in.
	// To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size],
	// the service returns a [ListInstancesResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results,
	// set [page_token] to the [ListInstancesResponse.next_page_token]
	// returned by a previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	// The expression consists of one or more conditions united by `AND` operator: `<condition1> [AND <condition2> [<...> AND <conditionN>]]`.
	//
	// Each condition has the form `<field> <operator> <value>`, where:
	// 1. `<field>` is the field name. Currently you can use filtering only on the limited number of fields.
	// 2. `<operator>` is a logical operator, one of `=`, `!=`, `IN`, `NOT IN`.
	// 3. `<value>` represents a value.
	// String values should be written in double (`"`) or single (`'`) quotes. C-style escape sequences are supported (`\"` turns to `"`, `\'` to `'`, `\\` to backslash).
	Filter string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	// By which column the listing should be ordered and in which direction,
	// format is "createdAt desc". "id asc" if omitted.
	// The default sorting order is ascending
	OrderBy       string `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListInstancesRequest) Reset() {
	*x = ListInstancesRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstancesRequest) ProtoMessage() {}

func (x *ListInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstancesRequest.ProtoReflect.Descriptor instead.
func (*ListInstancesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListInstancesRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListInstancesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListInstancesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListInstancesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListInstancesRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListInstancesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of Instance resources.
	Instances []*Instance `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListInstancesRequest.page_size], use
	// the [next_page_token] as the value
	// for the [ListInstancesRequest.page_token] query parameter
	// in the next list request. Each subsequent list request will have its own
	// [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListInstancesResponse) Reset() {
	*x = ListInstancesResponse{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInstancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstancesResponse) ProtoMessage() {}

func (x *ListInstancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstancesResponse.ProtoReflect.Descriptor instead.
func (*ListInstancesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListInstancesResponse) GetInstances() []*Instance {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *ListInstancesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateInstanceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to create an instance in.
	// To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Name of the instance.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the instance.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels as `key:value` pairs.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// ID of the availability zone where the instance resides.
	// To get a list of available zones, use the [yandex.cloud.compute.v1.ZoneService.List] request
	ZoneId string `protobuf:"bytes,5,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// ID of the hardware platform configuration for the instance.
	// This field affects the available values in [resources_spec] field.
	//
	// Platforms allows you to create various types of instances: with a large amount of memory,
	// with a large number of cores, with a burstable performance.
	// For more information, see [Platforms](/docs/compute/concepts/vm-platforms).
	PlatformId string `protobuf:"bytes,6,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	// Computing resources of the instance, such as the amount of memory and number of cores.
	// To get a list of available values, see [Levels of core performance](/docs/compute/concepts/performance-levels).
	ResourcesSpec *ResourcesSpec `protobuf:"bytes,7,opt,name=resources_spec,json=resourcesSpec,proto3" json:"resources_spec,omitempty"`
	// The metadata `key:value` pairs that will be assigned to this instance. This includes custom metadata and predefined keys.
	// The total size of all keys and values must be less than 512 KB.
	//
	// Values are free-form strings, and only have meaning as interpreted by the programs which configure the instance.
	// The values must be 256 KB or less.
	//
	// For example, you may use the metadata in order to provide your public SSH key to the instance.
	// For more information, see [Metadata](/docs/compute/concepts/vm-metadata).
	Metadata map[string]string `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Options allow user to configure access to instance's metadata
	MetadataOptions *MetadataOptions `protobuf:"bytes,19,opt,name=metadata_options,json=metadataOptions,proto3" json:"metadata_options,omitempty"`
	// Boot disk to attach to the instance.
	BootDiskSpec *AttachedDiskSpec `protobuf:"bytes,9,opt,name=boot_disk_spec,json=bootDiskSpec,proto3" json:"boot_disk_spec,omitempty"`
	// Array of secondary disks to attach to the instance.
	SecondaryDiskSpecs []*AttachedDiskSpec `protobuf:"bytes,10,rep,name=secondary_disk_specs,json=secondaryDiskSpecs,proto3" json:"secondary_disk_specs,omitempty"`
	// Array of local disks to attach to the instance.
	LocalDiskSpecs []*AttachedLocalDiskSpec `protobuf:"bytes,18,rep,name=local_disk_specs,json=localDiskSpecs,proto3" json:"local_disk_specs,omitempty"`
	// Array of filesystems to attach to the instance.
	//
	// The filesystems must reside in the same availability zone as the instance.
	//
	// To use the instance with an attached filesystem, the latter must be mounted.
	// For details, see [documentation](/docs/compute/operations/filesystem/attach-to-vm).
	FilesystemSpecs []*AttachedFilesystemSpec `protobuf:"bytes,17,rep,name=filesystem_specs,json=filesystemSpecs,proto3" json:"filesystem_specs,omitempty"`
	// Network configuration for the instance. Specifies how the network interface is configured
	// to interact with other services on the internal network and on the internet.
	NetworkInterfaceSpecs []*NetworkInterfaceSpec `protobuf:"bytes,11,rep,name=network_interface_specs,json=networkInterfaceSpecs,proto3" json:"network_interface_specs,omitempty"`
	// Host name for the instance.
	// This field is used to generate the [yandex.cloud.compute.v1.Instance.fqdn] value.
	// The host name must be unique within the network and region.
	// If not specified, the host name will be equal to [yandex.cloud.compute.v1.Instance.id] of the instance
	// and FQDN will be `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.
	Hostname string `protobuf:"bytes,12,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// Scheduling policy configuration.
	SchedulingPolicy *SchedulingPolicy `protobuf:"bytes,13,opt,name=scheduling_policy,json=schedulingPolicy,proto3" json:"scheduling_policy,omitempty"`
	// ID of the service account to use for [authentication inside the instance](/docs/compute/operations/vm-connect/auth-inside-vm).
	// To get the service account ID, use a [yandex.cloud.iam.v1.ServiceAccountService.List] request.
	ServiceAccountId string `protobuf:"bytes,14,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Network settings.
	NetworkSettings *NetworkSettings `protobuf:"bytes,15,opt,name=network_settings,json=networkSettings,proto3" json:"network_settings,omitempty"`
	// Placement policy configuration.
	PlacementPolicy *PlacementPolicy `protobuf:"bytes,16,opt,name=placement_policy,json=placementPolicy,proto3" json:"placement_policy,omitempty"`
	// GPU settings.
	GpuSettings *GpuSettings `protobuf:"bytes,20,opt,name=gpu_settings,json=gpuSettings,proto3" json:"gpu_settings,omitempty"`
	// Behaviour on maintenance events
	MaintenancePolicy MaintenancePolicy `protobuf:"varint,21,opt,name=maintenance_policy,json=maintenancePolicy,proto3,enum=yandex.cloud.compute.v1.MaintenancePolicy" json:"maintenance_policy,omitempty"`
	// Time between notification via metadata service and maintenance
	MaintenanceGracePeriod *durationpb.Duration `protobuf:"bytes,22,opt,name=maintenance_grace_period,json=maintenanceGracePeriod,proto3" json:"maintenance_grace_period,omitempty"`
	// Serial port settings
	SerialPortSettings *SerialPortSettings `protobuf:"bytes,23,opt,name=serial_port_settings,json=serialPortSettings,proto3" json:"serial_port_settings,omitempty"`
	// ID of the reserved instance pool that the instance should belong to.
	// Instance will be created using resources from the reserved instance pool.
	// Reserved instance pool resource configuration must match the resource configuration of the instance.
	ReservedInstancePoolId string `protobuf:"bytes,24,opt,name=reserved_instance_pool_id,json=reservedInstancePoolId,proto3" json:"reserved_instance_pool_id,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateInstanceRequest) Reset() {
	*x = CreateInstanceRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInstanceRequest) ProtoMessage() {}

func (x *CreateInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInstanceRequest.ProtoReflect.Descriptor instead.
func (*CreateInstanceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateInstanceRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *CreateInstanceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateInstanceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateInstanceRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateInstanceRequest) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *CreateInstanceRequest) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *CreateInstanceRequest) GetResourcesSpec() *ResourcesSpec {
	if x != nil {
		return x.ResourcesSpec
	}
	return nil
}

func (x *CreateInstanceRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateInstanceRequest) GetMetadataOptions() *MetadataOptions {
	if x != nil {
		return x.MetadataOptions
	}
	return nil
}

func (x *CreateInstanceRequest) GetBootDiskSpec() *AttachedDiskSpec {
	if x != nil {
		return x.BootDiskSpec
	}
	return nil
}

func (x *CreateInstanceRequest) GetSecondaryDiskSpecs() []*AttachedDiskSpec {
	if x != nil {
		return x.SecondaryDiskSpecs
	}
	return nil
}

func (x *CreateInstanceRequest) GetLocalDiskSpecs() []*AttachedLocalDiskSpec {
	if x != nil {
		return x.LocalDiskSpecs
	}
	return nil
}

func (x *CreateInstanceRequest) GetFilesystemSpecs() []*AttachedFilesystemSpec {
	if x != nil {
		return x.FilesystemSpecs
	}
	return nil
}

func (x *CreateInstanceRequest) GetNetworkInterfaceSpecs() []*NetworkInterfaceSpec {
	if x != nil {
		return x.NetworkInterfaceSpecs
	}
	return nil
}

func (x *CreateInstanceRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *CreateInstanceRequest) GetSchedulingPolicy() *SchedulingPolicy {
	if x != nil {
		return x.SchedulingPolicy
	}
	return nil
}

func (x *CreateInstanceRequest) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *CreateInstanceRequest) GetNetworkSettings() *NetworkSettings {
	if x != nil {
		return x.NetworkSettings
	}
	return nil
}

func (x *CreateInstanceRequest) GetPlacementPolicy() *PlacementPolicy {
	if x != nil {
		return x.PlacementPolicy
	}
	return nil
}

func (x *CreateInstanceRequest) GetGpuSettings() *GpuSettings {
	if x != nil {
		return x.GpuSettings
	}
	return nil
}

func (x *CreateInstanceRequest) GetMaintenancePolicy() MaintenancePolicy {
	if x != nil {
		return x.MaintenancePolicy
	}
	return MaintenancePolicy_MAINTENANCE_POLICY_UNSPECIFIED
}

func (x *CreateInstanceRequest) GetMaintenanceGracePeriod() *durationpb.Duration {
	if x != nil {
		return x.MaintenanceGracePeriod
	}
	return nil
}

func (x *CreateInstanceRequest) GetSerialPortSettings() *SerialPortSettings {
	if x != nil {
		return x.SerialPortSettings
	}
	return nil
}

func (x *CreateInstanceRequest) GetReservedInstancePoolId() string {
	if x != nil {
		return x.ReservedInstancePoolId
	}
	return ""
}

type CreateInstanceMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance that is being created.
	InstanceId    string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateInstanceMetadata) Reset() {
	*x = CreateInstanceMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateInstanceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInstanceMetadata) ProtoMessage() {}

func (x *CreateInstanceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInstanceMetadata.ProtoReflect.Descriptor instead.
func (*CreateInstanceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateInstanceMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type UpdateInstanceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Instance resource to update.
	// To get the instance ID, use a [InstanceService.List] request.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// Field mask that specifies which fields of the Instance resource are going to be updated.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// Name of the instance.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the instance.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels as `key:value` pairs.
	//
	// Existing set of `labels` is completely replaced by the provided set.
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// ID of the hardware platform configuration for the instance.
	// This field affects the available values in [resources_spec] field.
	//
	// Platforms allows you to create various types of instances: with a large amount of memory,
	// with a large number of cores, with a burstable performance.
	// For more information, see [Platforms](/docs/compute/concepts/vm-platforms).
	PlatformId string `protobuf:"bytes,6,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	// Computing resources of the instance, such as the amount of memory and number of cores.
	// To get a list of available values, see [Levels of core performance](/docs/compute/concepts/performance-levels).
	ResourcesSpec *ResourcesSpec `protobuf:"bytes,7,opt,name=resources_spec,json=resourcesSpec,proto3" json:"resources_spec,omitempty"`
	// The metadata `key:value` pairs that will be assigned to this instance. This includes custom metadata and predefined keys.
	// The total size of all keys and values must be less than 512 KB.
	//
	// Existing set of `metadata` is completely replaced by the provided set.
	//
	// Values are free-form strings, and only have meaning as interpreted by the programs which configure the instance.
	// The values must be 256 KB or less.
	//
	// For example, you may use the metadata in order to provide your public SSH key to the instance.
	// For more information, see [Metadata](/docs/compute/concepts/vm-metadata).
	Metadata map[string]string `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Options allow user to configure access to instance's metadata
	MetadataOptions *MetadataOptions `protobuf:"bytes,13,opt,name=metadata_options,json=metadataOptions,proto3" json:"metadata_options,omitempty"`
	// ID of the service account to use for [authentication inside the instance](/docs/compute/operations/vm-connect/auth-inside-vm).
	// To get the service account ID, use a [yandex.cloud.iam.v1.ServiceAccountService.List] request.
	ServiceAccountId string `protobuf:"bytes,9,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Network settings.
	NetworkSettings *NetworkSettings `protobuf:"bytes,10,opt,name=network_settings,json=networkSettings,proto3" json:"network_settings,omitempty"`
	// Placement policy configuration.
	PlacementPolicy *PlacementPolicy `protobuf:"bytes,11,opt,name=placement_policy,json=placementPolicy,proto3" json:"placement_policy,omitempty"`
	// Scheduling policy configuration.
	SchedulingPolicy *SchedulingPolicy `protobuf:"bytes,12,opt,name=scheduling_policy,json=schedulingPolicy,proto3" json:"scheduling_policy,omitempty"`
	// Behaviour on maintenance events
	MaintenancePolicy MaintenancePolicy `protobuf:"varint,14,opt,name=maintenance_policy,json=maintenancePolicy,proto3,enum=yandex.cloud.compute.v1.MaintenancePolicy" json:"maintenance_policy,omitempty"`
	// Time between notification via metadata service and maintenance
	MaintenanceGracePeriod *durationpb.Duration `protobuf:"bytes,15,opt,name=maintenance_grace_period,json=maintenanceGracePeriod,proto3" json:"maintenance_grace_period,omitempty"`
	// Serial port settings
	SerialPortSettings *SerialPortSettings `protobuf:"bytes,16,opt,name=serial_port_settings,json=serialPortSettings,proto3" json:"serial_port_settings,omitempty"`
	// ID of the reserved instance pool that the instance should belong to.
	// Attaching/detaching running instance will increase/decrease the size of the reserved instance pool.
	// Attaching/detaching stopped instance will leave the size of the reserved instance pool unchanged. Starting such attached instance will use resources from the reserved instance pool.
	// Reserved instance pool resource configuration must match the resource configuration of the instance.
	ReservedInstancePoolId string `protobuf:"bytes,17,opt,name=reserved_instance_pool_id,json=reservedInstancePoolId,proto3" json:"reserved_instance_pool_id,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateInstanceRequest) Reset() {
	*x = UpdateInstanceRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstanceRequest) ProtoMessage() {}

func (x *UpdateInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstanceRequest.ProtoReflect.Descriptor instead.
func (*UpdateInstanceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *UpdateInstanceRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateInstanceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateInstanceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateInstanceRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateInstanceRequest) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *UpdateInstanceRequest) GetResourcesSpec() *ResourcesSpec {
	if x != nil {
		return x.ResourcesSpec
	}
	return nil
}

func (x *UpdateInstanceRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateInstanceRequest) GetMetadataOptions() *MetadataOptions {
	if x != nil {
		return x.MetadataOptions
	}
	return nil
}

func (x *UpdateInstanceRequest) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *UpdateInstanceRequest) GetNetworkSettings() *NetworkSettings {
	if x != nil {
		return x.NetworkSettings
	}
	return nil
}

func (x *UpdateInstanceRequest) GetPlacementPolicy() *PlacementPolicy {
	if x != nil {
		return x.PlacementPolicy
	}
	return nil
}

func (x *UpdateInstanceRequest) GetSchedulingPolicy() *SchedulingPolicy {
	if x != nil {
		return x.SchedulingPolicy
	}
	return nil
}

func (x *UpdateInstanceRequest) GetMaintenancePolicy() MaintenancePolicy {
	if x != nil {
		return x.MaintenancePolicy
	}
	return MaintenancePolicy_MAINTENANCE_POLICY_UNSPECIFIED
}

func (x *UpdateInstanceRequest) GetMaintenanceGracePeriod() *durationpb.Duration {
	if x != nil {
		return x.MaintenanceGracePeriod
	}
	return nil
}

func (x *UpdateInstanceRequest) GetSerialPortSettings() *SerialPortSettings {
	if x != nil {
		return x.SerialPortSettings
	}
	return nil
}

func (x *UpdateInstanceRequest) GetReservedInstancePoolId() string {
	if x != nil {
		return x.ReservedInstancePoolId
	}
	return ""
}

type UpdateInstanceMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Instance resource that is being updated.
	InstanceId    string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateInstanceMetadata) Reset() {
	*x = UpdateInstanceMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInstanceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstanceMetadata) ProtoMessage() {}

func (x *UpdateInstanceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstanceMetadata.ProtoReflect.Descriptor instead.
func (*UpdateInstanceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateInstanceMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type DeleteInstanceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance to delete.
	// To get the instance ID, use a [InstanceService.List] request.
	InstanceId    string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteInstanceRequest) Reset() {
	*x = DeleteInstanceRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceRequest) ProtoMessage() {}

func (x *DeleteInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstanceRequest.ProtoReflect.Descriptor instead.
func (*DeleteInstanceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type DeleteInstanceMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance that is being deleted.
	InstanceId    string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteInstanceMetadata) Reset() {
	*x = DeleteInstanceMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteInstanceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceMetadata) ProtoMessage() {}

func (x *DeleteInstanceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstanceMetadata.ProtoReflect.Descriptor instead.
func (*DeleteInstanceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteInstanceMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type UpdateInstanceMetadataRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance that is being updated.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// List of keys to be deleted.
	Delete []string `protobuf:"bytes,2,rep,name=delete,proto3" json:"delete,omitempty"`
	// The metadata `key:value` pairs that will be added or updated to this instance.
	Upsert        map[string]string `protobuf:"bytes,3,rep,name=upsert,proto3" json:"upsert,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateInstanceMetadataRequest) Reset() {
	*x = UpdateInstanceMetadataRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInstanceMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstanceMetadataRequest) ProtoMessage() {}

func (x *UpdateInstanceMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstanceMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateInstanceMetadataRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateInstanceMetadataRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *UpdateInstanceMetadataRequest) GetDelete() []string {
	if x != nil {
		return x.Delete
	}
	return nil
}

func (x *UpdateInstanceMetadataRequest) GetUpsert() map[string]string {
	if x != nil {
		return x.Upsert
	}
	return nil
}

type UpdateInstanceMetadataMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance that is being updated.
	InstanceId    string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateInstanceMetadataMetadata) Reset() {
	*x = UpdateInstanceMetadataMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInstanceMetadataMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstanceMetadataMetadata) ProtoMessage() {}

func (x *UpdateInstanceMetadataMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstanceMetadataMetadata.ProtoReflect.Descriptor instead.
func (*UpdateInstanceMetadataMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateInstanceMetadataMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type GetInstanceSerialPortOutputRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance to return the serial port output for.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// Serial port to retrieve data from. The default is 1.
	Port          int64 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInstanceSerialPortOutputRequest) Reset() {
	*x = GetInstanceSerialPortOutputRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInstanceSerialPortOutputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceSerialPortOutputRequest) ProtoMessage() {}

func (x *GetInstanceSerialPortOutputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceSerialPortOutputRequest.ProtoReflect.Descriptor instead.
func (*GetInstanceSerialPortOutputRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetInstanceSerialPortOutputRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *GetInstanceSerialPortOutputRequest) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetInstanceSerialPortOutputResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The contents of the serial port output, starting from the time when the instance
	// started to boot.
	Contents      string `protobuf:"bytes,1,opt,name=contents,proto3" json:"contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInstanceSerialPortOutputResponse) Reset() {
	*x = GetInstanceSerialPortOutputResponse{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInstanceSerialPortOutputResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceSerialPortOutputResponse) ProtoMessage() {}

func (x *GetInstanceSerialPortOutputResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceSerialPortOutputResponse.ProtoReflect.Descriptor instead.
func (*GetInstanceSerialPortOutputResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetInstanceSerialPortOutputResponse) GetContents() string {
	if x != nil {
		return x.Contents
	}
	return ""
}

type StopInstanceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance to stop.
	// To get the instance ID, use a [InstanceService.List] request.
	InstanceId    string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopInstanceRequest) Reset() {
	*x = StopInstanceRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopInstanceRequest) ProtoMessage() {}

func (x *StopInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopInstanceRequest.ProtoReflect.Descriptor instead.
func (*StopInstanceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{13}
}

func (x *StopInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type StopInstanceMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance that is being deleted.
	InstanceId    string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopInstanceMetadata) Reset() {
	*x = StopInstanceMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopInstanceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopInstanceMetadata) ProtoMessage() {}

func (x *StopInstanceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopInstanceMetadata.ProtoReflect.Descriptor instead.
func (*StopInstanceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{14}
}

func (x *StopInstanceMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type StartInstanceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance to start.
	// To get the instance ID, use a [InstanceService.List] request.
	InstanceId    string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartInstanceRequest) Reset() {
	*x = StartInstanceRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartInstanceRequest) ProtoMessage() {}

func (x *StartInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartInstanceRequest.ProtoReflect.Descriptor instead.
func (*StartInstanceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{15}
}

func (x *StartInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type StartInstanceMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance.
	InstanceId    string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartInstanceMetadata) Reset() {
	*x = StartInstanceMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartInstanceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartInstanceMetadata) ProtoMessage() {}

func (x *StartInstanceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartInstanceMetadata.ProtoReflect.Descriptor instead.
func (*StartInstanceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{16}
}

func (x *StartInstanceMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type RestartInstanceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance to restart.
	// To get the instance ID, use a [InstanceService.List] request.
	InstanceId    string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartInstanceRequest) Reset() {
	*x = RestartInstanceRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartInstanceRequest) ProtoMessage() {}

func (x *RestartInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartInstanceRequest.ProtoReflect.Descriptor instead.
func (*RestartInstanceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{17}
}

func (x *RestartInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type RestartInstanceMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance.
	InstanceId    string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartInstanceMetadata) Reset() {
	*x = RestartInstanceMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartInstanceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartInstanceMetadata) ProtoMessage() {}

func (x *RestartInstanceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartInstanceMetadata.ProtoReflect.Descriptor instead.
func (*RestartInstanceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{18}
}

func (x *RestartInstanceMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type AttachInstanceDiskRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance to attach the disk to.
	// To get the instance ID, use a [InstanceService.List] request.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// Disk that should be attached.
	AttachedDiskSpec *AttachedDiskSpec `protobuf:"bytes,2,opt,name=attached_disk_spec,json=attachedDiskSpec,proto3" json:"attached_disk_spec,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AttachInstanceDiskRequest) Reset() {
	*x = AttachInstanceDiskRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachInstanceDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachInstanceDiskRequest) ProtoMessage() {}

func (x *AttachInstanceDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachInstanceDiskRequest.ProtoReflect.Descriptor instead.
func (*AttachInstanceDiskRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{19}
}

func (x *AttachInstanceDiskRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *AttachInstanceDiskRequest) GetAttachedDiskSpec() *AttachedDiskSpec {
	if x != nil {
		return x.AttachedDiskSpec
	}
	return nil
}

type AttachInstanceDiskMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// ID of the disk.
	DiskId        string `protobuf:"bytes,2,opt,name=disk_id,json=diskId,proto3" json:"disk_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachInstanceDiskMetadata) Reset() {
	*x = AttachInstanceDiskMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachInstanceDiskMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachInstanceDiskMetadata) ProtoMessage() {}

func (x *AttachInstanceDiskMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachInstanceDiskMetadata.ProtoReflect.Descriptor instead.
func (*AttachInstanceDiskMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{20}
}

func (x *AttachInstanceDiskMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *AttachInstanceDiskMetadata) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

type DetachInstanceDiskRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance to detach the disk from.
	// To get the instance ID, use a [InstanceService.List] request.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// Types that are valid to be assigned to Disk:
	//
	//	*DetachInstanceDiskRequest_DiskId
	//	*DetachInstanceDiskRequest_DeviceName
	Disk          isDetachInstanceDiskRequest_Disk `protobuf_oneof:"disk"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetachInstanceDiskRequest) Reset() {
	*x = DetachInstanceDiskRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachInstanceDiskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachInstanceDiskRequest) ProtoMessage() {}

func (x *DetachInstanceDiskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachInstanceDiskRequest.ProtoReflect.Descriptor instead.
func (*DetachInstanceDiskRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{21}
}

func (x *DetachInstanceDiskRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *DetachInstanceDiskRequest) GetDisk() isDetachInstanceDiskRequest_Disk {
	if x != nil {
		return x.Disk
	}
	return nil
}

func (x *DetachInstanceDiskRequest) GetDiskId() string {
	if x != nil {
		if x, ok := x.Disk.(*DetachInstanceDiskRequest_DiskId); ok {
			return x.DiskId
		}
	}
	return ""
}

func (x *DetachInstanceDiskRequest) GetDeviceName() string {
	if x != nil {
		if x, ok := x.Disk.(*DetachInstanceDiskRequest_DeviceName); ok {
			return x.DeviceName
		}
	}
	return ""
}

type isDetachInstanceDiskRequest_Disk interface {
	isDetachInstanceDiskRequest_Disk()
}

type DetachInstanceDiskRequest_DiskId struct {
	// ID of the disk that should be detached.
	DiskId string `protobuf:"bytes,2,opt,name=disk_id,json=diskId,proto3,oneof"`
}

type DetachInstanceDiskRequest_DeviceName struct {
	// Serial number of the disk that should be detached. This value is reflected into the /dev/disk/by-id/ tree
	// of a Linux operating system running within the instance.
	DeviceName string `protobuf:"bytes,3,opt,name=device_name,json=deviceName,proto3,oneof"`
}

func (*DetachInstanceDiskRequest_DiskId) isDetachInstanceDiskRequest_Disk() {}

func (*DetachInstanceDiskRequest_DeviceName) isDetachInstanceDiskRequest_Disk() {}

type DetachInstanceDiskMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// ID of the disk.
	DiskId        string `protobuf:"bytes,2,opt,name=disk_id,json=diskId,proto3" json:"disk_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetachInstanceDiskMetadata) Reset() {
	*x = DetachInstanceDiskMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachInstanceDiskMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachInstanceDiskMetadata) ProtoMessage() {}

func (x *DetachInstanceDiskMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachInstanceDiskMetadata.ProtoReflect.Descriptor instead.
func (*DetachInstanceDiskMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{22}
}

func (x *DetachInstanceDiskMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *DetachInstanceDiskMetadata) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

type AttachInstanceFilesystemRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance to attach the filesystem to.
	//
	// To get the instance ID, make a [InstanceService.List] request.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// Filesystem to attach to the instance.
	AttachedFilesystemSpec *AttachedFilesystemSpec `protobuf:"bytes,2,opt,name=attached_filesystem_spec,json=attachedFilesystemSpec,proto3" json:"attached_filesystem_spec,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AttachInstanceFilesystemRequest) Reset() {
	*x = AttachInstanceFilesystemRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachInstanceFilesystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachInstanceFilesystemRequest) ProtoMessage() {}

func (x *AttachInstanceFilesystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachInstanceFilesystemRequest.ProtoReflect.Descriptor instead.
func (*AttachInstanceFilesystemRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{23}
}

func (x *AttachInstanceFilesystemRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *AttachInstanceFilesystemRequest) GetAttachedFilesystemSpec() *AttachedFilesystemSpec {
	if x != nil {
		return x.AttachedFilesystemSpec
	}
	return nil
}

type AttachInstanceFilesystemMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance that the filesystem is being attached to.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// ID of the filesystem that is being attached to the instance.
	FilesystemId  string `protobuf:"bytes,2,opt,name=filesystem_id,json=filesystemId,proto3" json:"filesystem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachInstanceFilesystemMetadata) Reset() {
	*x = AttachInstanceFilesystemMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachInstanceFilesystemMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachInstanceFilesystemMetadata) ProtoMessage() {}

func (x *AttachInstanceFilesystemMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachInstanceFilesystemMetadata.ProtoReflect.Descriptor instead.
func (*AttachInstanceFilesystemMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{24}
}

func (x *AttachInstanceFilesystemMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *AttachInstanceFilesystemMetadata) GetFilesystemId() string {
	if x != nil {
		return x.FilesystemId
	}
	return ""
}

type DetachInstanceFilesystemRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance to detach the filesystem from.
	//
	// To get the instance ID, make a [InstanceService.List] request.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// Types that are valid to be assigned to Filesystem:
	//
	//	*DetachInstanceFilesystemRequest_FilesystemId
	//	*DetachInstanceFilesystemRequest_DeviceName
	Filesystem    isDetachInstanceFilesystemRequest_Filesystem `protobuf_oneof:"filesystem"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetachInstanceFilesystemRequest) Reset() {
	*x = DetachInstanceFilesystemRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachInstanceFilesystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachInstanceFilesystemRequest) ProtoMessage() {}

func (x *DetachInstanceFilesystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachInstanceFilesystemRequest.ProtoReflect.Descriptor instead.
func (*DetachInstanceFilesystemRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{25}
}

func (x *DetachInstanceFilesystemRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *DetachInstanceFilesystemRequest) GetFilesystem() isDetachInstanceFilesystemRequest_Filesystem {
	if x != nil {
		return x.Filesystem
	}
	return nil
}

func (x *DetachInstanceFilesystemRequest) GetFilesystemId() string {
	if x != nil {
		if x, ok := x.Filesystem.(*DetachInstanceFilesystemRequest_FilesystemId); ok {
			return x.FilesystemId
		}
	}
	return ""
}

func (x *DetachInstanceFilesystemRequest) GetDeviceName() string {
	if x != nil {
		if x, ok := x.Filesystem.(*DetachInstanceFilesystemRequest_DeviceName); ok {
			return x.DeviceName
		}
	}
	return ""
}

type isDetachInstanceFilesystemRequest_Filesystem interface {
	isDetachInstanceFilesystemRequest_Filesystem()
}

type DetachInstanceFilesystemRequest_FilesystemId struct {
	// ID of the filesystem that should be detached.
	FilesystemId string `protobuf:"bytes,2,opt,name=filesystem_id,json=filesystemId,proto3,oneof"`
}

type DetachInstanceFilesystemRequest_DeviceName struct {
	// Name of the device used for mounting the filesystem that should be detached.
	DeviceName string `protobuf:"bytes,3,opt,name=device_name,json=deviceName,proto3,oneof"`
}

func (*DetachInstanceFilesystemRequest_FilesystemId) isDetachInstanceFilesystemRequest_Filesystem() {}

func (*DetachInstanceFilesystemRequest_DeviceName) isDetachInstanceFilesystemRequest_Filesystem() {}

type DetachInstanceFilesystemMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance that the filesystem is being detached from.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// ID of the filesystem that is being detached from the instance.
	FilesystemId  string `protobuf:"bytes,2,opt,name=filesystem_id,json=filesystemId,proto3" json:"filesystem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetachInstanceFilesystemMetadata) Reset() {
	*x = DetachInstanceFilesystemMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachInstanceFilesystemMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachInstanceFilesystemMetadata) ProtoMessage() {}

func (x *DetachInstanceFilesystemMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachInstanceFilesystemMetadata.ProtoReflect.Descriptor instead.
func (*DetachInstanceFilesystemMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{26}
}

func (x *DetachInstanceFilesystemMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *DetachInstanceFilesystemMetadata) GetFilesystemId() string {
	if x != nil {
		return x.FilesystemId
	}
	return ""
}

type AttachInstanceNetworkInterfaceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance that in which network interface is being attached to.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// The index of the network interface
	NetworkInterfaceIndex string `protobuf:"bytes,2,opt,name=network_interface_index,json=networkInterfaceIndex,proto3" json:"network_interface_index,omitempty"`
	// ID of the subnet.
	SubnetId string `protobuf:"bytes,3,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	// Primary IPv4 address that will be assigned to the instance for this network interface.
	PrimaryV4AddressSpec *PrimaryAddressSpec `protobuf:"bytes,4,opt,name=primary_v4_address_spec,json=primaryV4AddressSpec,proto3" json:"primary_v4_address_spec,omitempty"`
	// ID's of security groups attached to the interface.
	SecurityGroupIds []string `protobuf:"bytes,6,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AttachInstanceNetworkInterfaceRequest) Reset() {
	*x = AttachInstanceNetworkInterfaceRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachInstanceNetworkInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachInstanceNetworkInterfaceRequest) ProtoMessage() {}

func (x *AttachInstanceNetworkInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachInstanceNetworkInterfaceRequest.ProtoReflect.Descriptor instead.
func (*AttachInstanceNetworkInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{27}
}

func (x *AttachInstanceNetworkInterfaceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *AttachInstanceNetworkInterfaceRequest) GetNetworkInterfaceIndex() string {
	if x != nil {
		return x.NetworkInterfaceIndex
	}
	return ""
}

func (x *AttachInstanceNetworkInterfaceRequest) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *AttachInstanceNetworkInterfaceRequest) GetPrimaryV4AddressSpec() *PrimaryAddressSpec {
	if x != nil {
		return x.PrimaryV4AddressSpec
	}
	return nil
}

func (x *AttachInstanceNetworkInterfaceRequest) GetSecurityGroupIds() []string {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

type AttachInstanceNetworkInterfaceMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instant network interface that is being updated.
	InstanceId            string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	NetworkInterfaceIndex string `protobuf:"bytes,2,opt,name=network_interface_index,json=networkInterfaceIndex,proto3" json:"network_interface_index,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *AttachInstanceNetworkInterfaceMetadata) Reset() {
	*x = AttachInstanceNetworkInterfaceMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachInstanceNetworkInterfaceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachInstanceNetworkInterfaceMetadata) ProtoMessage() {}

func (x *AttachInstanceNetworkInterfaceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachInstanceNetworkInterfaceMetadata.ProtoReflect.Descriptor instead.
func (*AttachInstanceNetworkInterfaceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{28}
}

func (x *AttachInstanceNetworkInterfaceMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *AttachInstanceNetworkInterfaceMetadata) GetNetworkInterfaceIndex() string {
	if x != nil {
		return x.NetworkInterfaceIndex
	}
	return ""
}

type DetachInstanceNetworkInterfaceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance that in which network interface is being attached to.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// The index of the network interface.
	NetworkInterfaceIndex string `protobuf:"bytes,2,opt,name=network_interface_index,json=networkInterfaceIndex,proto3" json:"network_interface_index,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *DetachInstanceNetworkInterfaceRequest) Reset() {
	*x = DetachInstanceNetworkInterfaceRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachInstanceNetworkInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachInstanceNetworkInterfaceRequest) ProtoMessage() {}

func (x *DetachInstanceNetworkInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachInstanceNetworkInterfaceRequest.ProtoReflect.Descriptor instead.
func (*DetachInstanceNetworkInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{29}
}

func (x *DetachInstanceNetworkInterfaceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *DetachInstanceNetworkInterfaceRequest) GetNetworkInterfaceIndex() string {
	if x != nil {
		return x.NetworkInterfaceIndex
	}
	return ""
}

type DetachInstanceNetworkInterfaceMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instant network interface that is being updated.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// The index of the network interface.
	NetworkInterfaceIndex string `protobuf:"bytes,2,opt,name=network_interface_index,json=networkInterfaceIndex,proto3" json:"network_interface_index,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *DetachInstanceNetworkInterfaceMetadata) Reset() {
	*x = DetachInstanceNetworkInterfaceMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachInstanceNetworkInterfaceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachInstanceNetworkInterfaceMetadata) ProtoMessage() {}

func (x *DetachInstanceNetworkInterfaceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachInstanceNetworkInterfaceMetadata.ProtoReflect.Descriptor instead.
func (*DetachInstanceNetworkInterfaceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{30}
}

func (x *DetachInstanceNetworkInterfaceMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *DetachInstanceNetworkInterfaceMetadata) GetNetworkInterfaceIndex() string {
	if x != nil {
		return x.NetworkInterfaceIndex
	}
	return ""
}

// Enables One-to-one NAT on the network interface.
type AddInstanceOneToOneNatRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance to enable One-to-One NAT on.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// The index of the network interface to enable One-to-One NAT on.
	NetworkInterfaceIndex string `protobuf:"bytes,2,opt,name=network_interface_index,json=networkInterfaceIndex,proto3" json:"network_interface_index,omitempty"`
	// The network address that is assigned to the instance for this network interface.
	InternalAddress string `protobuf:"bytes,3,opt,name=internal_address,json=internalAddress,proto3" json:"internal_address,omitempty"` // optional
	// An external IP address configuration.
	// If not specified, then this instance will have no external internet access.
	OneToOneNatSpec *OneToOneNatSpec `protobuf:"bytes,4,opt,name=one_to_one_nat_spec,json=oneToOneNatSpec,proto3" json:"one_to_one_nat_spec,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AddInstanceOneToOneNatRequest) Reset() {
	*x = AddInstanceOneToOneNatRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddInstanceOneToOneNatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInstanceOneToOneNatRequest) ProtoMessage() {}

func (x *AddInstanceOneToOneNatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInstanceOneToOneNatRequest.ProtoReflect.Descriptor instead.
func (*AddInstanceOneToOneNatRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{31}
}

func (x *AddInstanceOneToOneNatRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *AddInstanceOneToOneNatRequest) GetNetworkInterfaceIndex() string {
	if x != nil {
		return x.NetworkInterfaceIndex
	}
	return ""
}

func (x *AddInstanceOneToOneNatRequest) GetInternalAddress() string {
	if x != nil {
		return x.InternalAddress
	}
	return ""
}

func (x *AddInstanceOneToOneNatRequest) GetOneToOneNatSpec() *OneToOneNatSpec {
	if x != nil {
		return x.OneToOneNatSpec
	}
	return nil
}

type AddInstanceOneToOneNatMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance.
	InstanceId    string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddInstanceOneToOneNatMetadata) Reset() {
	*x = AddInstanceOneToOneNatMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddInstanceOneToOneNatMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInstanceOneToOneNatMetadata) ProtoMessage() {}

func (x *AddInstanceOneToOneNatMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInstanceOneToOneNatMetadata.ProtoReflect.Descriptor instead.
func (*AddInstanceOneToOneNatMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{32}
}

func (x *AddInstanceOneToOneNatMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type RemoveInstanceOneToOneNatRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance to remove One-to-one NAT.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// The index of the network interface to remove One-to-One NAT from.
	NetworkInterfaceIndex string `protobuf:"bytes,2,opt,name=network_interface_index,json=networkInterfaceIndex,proto3" json:"network_interface_index,omitempty"`
	// The network address that is assigned to the instance for this network interface.
	InternalAddress string `protobuf:"bytes,3,opt,name=internal_address,json=internalAddress,proto3" json:"internal_address,omitempty"` // optional
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RemoveInstanceOneToOneNatRequest) Reset() {
	*x = RemoveInstanceOneToOneNatRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveInstanceOneToOneNatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveInstanceOneToOneNatRequest) ProtoMessage() {}

func (x *RemoveInstanceOneToOneNatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveInstanceOneToOneNatRequest.ProtoReflect.Descriptor instead.
func (*RemoveInstanceOneToOneNatRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{33}
}

func (x *RemoveInstanceOneToOneNatRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *RemoveInstanceOneToOneNatRequest) GetNetworkInterfaceIndex() string {
	if x != nil {
		return x.NetworkInterfaceIndex
	}
	return ""
}

func (x *RemoveInstanceOneToOneNatRequest) GetInternalAddress() string {
	if x != nil {
		return x.InternalAddress
	}
	return ""
}

type RemoveInstanceOneToOneNatMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance.
	InstanceId    string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveInstanceOneToOneNatMetadata) Reset() {
	*x = RemoveInstanceOneToOneNatMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveInstanceOneToOneNatMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveInstanceOneToOneNatMetadata) ProtoMessage() {}

func (x *RemoveInstanceOneToOneNatMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveInstanceOneToOneNatMetadata.ProtoReflect.Descriptor instead.
func (*RemoveInstanceOneToOneNatMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{34}
}

func (x *RemoveInstanceOneToOneNatMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type UpdateInstanceNetworkInterfaceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance that is being updated.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// The index of the network interface to be updated.
	NetworkInterfaceIndex string `protobuf:"bytes,2,opt,name=network_interface_index,json=networkInterfaceIndex,proto3" json:"network_interface_index,omitempty"`
	// Field mask that specifies which attributes of the instance should be updated.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// ID of the subnet.
	SubnetId string `protobuf:"bytes,4,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	// Primary IPv4 address that will be assigned to the instance for this network interface.
	PrimaryV4AddressSpec *PrimaryAddressSpec `protobuf:"bytes,5,opt,name=primary_v4_address_spec,json=primaryV4AddressSpec,proto3" json:"primary_v4_address_spec,omitempty"`
	// Primary IPv6 address that will be assigned to the instance for this network interface. IPv6 not available yet.
	PrimaryV6AddressSpec *PrimaryAddressSpec `protobuf:"bytes,6,opt,name=primary_v6_address_spec,json=primaryV6AddressSpec,proto3" json:"primary_v6_address_spec,omitempty"`
	// ID's of security groups attached to the interface.
	SecurityGroupIds []string `protobuf:"bytes,7,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateInstanceNetworkInterfaceRequest) Reset() {
	*x = UpdateInstanceNetworkInterfaceRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInstanceNetworkInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstanceNetworkInterfaceRequest) ProtoMessage() {}

func (x *UpdateInstanceNetworkInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstanceNetworkInterfaceRequest.ProtoReflect.Descriptor instead.
func (*UpdateInstanceNetworkInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateInstanceNetworkInterfaceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *UpdateInstanceNetworkInterfaceRequest) GetNetworkInterfaceIndex() string {
	if x != nil {
		return x.NetworkInterfaceIndex
	}
	return ""
}

func (x *UpdateInstanceNetworkInterfaceRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateInstanceNetworkInterfaceRequest) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *UpdateInstanceNetworkInterfaceRequest) GetPrimaryV4AddressSpec() *PrimaryAddressSpec {
	if x != nil {
		return x.PrimaryV4AddressSpec
	}
	return nil
}

func (x *UpdateInstanceNetworkInterfaceRequest) GetPrimaryV6AddressSpec() *PrimaryAddressSpec {
	if x != nil {
		return x.PrimaryV6AddressSpec
	}
	return nil
}

func (x *UpdateInstanceNetworkInterfaceRequest) GetSecurityGroupIds() []string {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

type UpdateInstanceNetworkInterfaceMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instant network interface that is being updated.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// The index of the network interface.
	NetworkInterfaceIndex string `protobuf:"bytes,2,opt,name=network_interface_index,json=networkInterfaceIndex,proto3" json:"network_interface_index,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *UpdateInstanceNetworkInterfaceMetadata) Reset() {
	*x = UpdateInstanceNetworkInterfaceMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInstanceNetworkInterfaceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstanceNetworkInterfaceMetadata) ProtoMessage() {}

func (x *UpdateInstanceNetworkInterfaceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstanceNetworkInterfaceMetadata.ProtoReflect.Descriptor instead.
func (*UpdateInstanceNetworkInterfaceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateInstanceNetworkInterfaceMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *UpdateInstanceNetworkInterfaceMetadata) GetNetworkInterfaceIndex() string {
	if x != nil {
		return x.NetworkInterfaceIndex
	}
	return ""
}

type SimulateInstanceMaintenanceEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InstanceId    string                 `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimulateInstanceMaintenanceEventRequest) Reset() {
	*x = SimulateInstanceMaintenanceEventRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimulateInstanceMaintenanceEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimulateInstanceMaintenanceEventRequest) ProtoMessage() {}

func (x *SimulateInstanceMaintenanceEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimulateInstanceMaintenanceEventRequest.ProtoReflect.Descriptor instead.
func (*SimulateInstanceMaintenanceEventRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{37}
}

func (x *SimulateInstanceMaintenanceEventRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type SimulateInstanceMaintenanceEventMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InstanceId    string                 `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimulateInstanceMaintenanceEventMetadata) Reset() {
	*x = SimulateInstanceMaintenanceEventMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimulateInstanceMaintenanceEventMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimulateInstanceMaintenanceEventMetadata) ProtoMessage() {}

func (x *SimulateInstanceMaintenanceEventMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimulateInstanceMaintenanceEventMetadata.ProtoReflect.Descriptor instead.
func (*SimulateInstanceMaintenanceEventMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{38}
}

func (x *SimulateInstanceMaintenanceEventMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type ListInstanceOperationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Instance resource to list operations for.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size], the service returns a [ListInstanceOperationsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token] to the
	// [ListInstanceOperationsResponse.next_page_token] returned by a previous list request.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListInstanceOperationsRequest) Reset() {
	*x = ListInstanceOperationsRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInstanceOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstanceOperationsRequest) ProtoMessage() {}

func (x *ListInstanceOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstanceOperationsRequest.ProtoReflect.Descriptor instead.
func (*ListInstanceOperationsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{39}
}

func (x *ListInstanceOperationsRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ListInstanceOperationsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListInstanceOperationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListInstanceOperationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of operations for the specified instance.
	Operations []*operation.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListInstanceOperationsRequest.page_size], use the [next_page_token] as the value
	// for the [ListInstanceOperationsRequest.page_token] query parameter in the next list request.
	// Each subsequent list request will have its own [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListInstanceOperationsResponse) Reset() {
	*x = ListInstanceOperationsResponse{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInstanceOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstanceOperationsResponse) ProtoMessage() {}

func (x *ListInstanceOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstanceOperationsResponse.ProtoReflect.Descriptor instead.
func (*ListInstanceOperationsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{40}
}

func (x *ListInstanceOperationsResponse) GetOperations() []*operation.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ListInstanceOperationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ResourcesSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The amount of memory available to the instance, specified in bytes.
	Memory int64 `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	// The number of cores available to the instance.
	Cores int64 `protobuf:"varint,2,opt,name=cores,proto3" json:"cores,omitempty"`
	// Baseline level of CPU performance with the ability to burst performance above that baseline level.
	// This field sets baseline performance for each core.
	//
	// For example, if you need only 5% of the CPU performance, you can set core_fraction=5.
	// For more information, see [Levels of core performance](/docs/compute/concepts/performance-levels).
	CoreFraction int64 `protobuf:"varint,3,opt,name=core_fraction,json=coreFraction,proto3" json:"core_fraction,omitempty"`
	// The number of GPUs available to the instance.
	Gpus          int64 `protobuf:"varint,4,opt,name=gpus,proto3" json:"gpus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourcesSpec) Reset() {
	*x = ResourcesSpec{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourcesSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcesSpec) ProtoMessage() {}

func (x *ResourcesSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcesSpec.ProtoReflect.Descriptor instead.
func (*ResourcesSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{41}
}

func (x *ResourcesSpec) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *ResourcesSpec) GetCores() int64 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *ResourcesSpec) GetCoreFraction() int64 {
	if x != nil {
		return x.CoreFraction
	}
	return 0
}

func (x *ResourcesSpec) GetGpus() int64 {
	if x != nil {
		return x.Gpus
	}
	return 0
}

type AttachedDiskSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The mode in which to attach this disk.
	Mode AttachedDiskSpec_Mode `protobuf:"varint,1,opt,name=mode,proto3,enum=yandex.cloud.compute.v1.AttachedDiskSpec_Mode" json:"mode,omitempty"`
	// Specifies a unique serial number of your choice that is reflected into the /dev/disk/by-id/ tree
	// of a Linux operating system running within the instance.
	//
	// This value can be used to reference the device for mounting, resizing, and so on, from within the instance.
	// If not specified, a random value will be generated.
	DeviceName string `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	// Specifies whether the disk will be auto-deleted when the instance is deleted.
	AutoDelete bool `protobuf:"varint,3,opt,name=auto_delete,json=autoDelete,proto3" json:"auto_delete,omitempty"`
	// Types that are valid to be assigned to Disk:
	//
	//	*AttachedDiskSpec_DiskSpec_
	//	*AttachedDiskSpec_DiskId
	Disk          isAttachedDiskSpec_Disk `protobuf_oneof:"disk"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachedDiskSpec) Reset() {
	*x = AttachedDiskSpec{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachedDiskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachedDiskSpec) ProtoMessage() {}

func (x *AttachedDiskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachedDiskSpec.ProtoReflect.Descriptor instead.
func (*AttachedDiskSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{42}
}

func (x *AttachedDiskSpec) GetMode() AttachedDiskSpec_Mode {
	if x != nil {
		return x.Mode
	}
	return AttachedDiskSpec_MODE_UNSPECIFIED
}

func (x *AttachedDiskSpec) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *AttachedDiskSpec) GetAutoDelete() bool {
	if x != nil {
		return x.AutoDelete
	}
	return false
}

func (x *AttachedDiskSpec) GetDisk() isAttachedDiskSpec_Disk {
	if x != nil {
		return x.Disk
	}
	return nil
}

func (x *AttachedDiskSpec) GetDiskSpec() *AttachedDiskSpec_DiskSpec {
	if x != nil {
		if x, ok := x.Disk.(*AttachedDiskSpec_DiskSpec_); ok {
			return x.DiskSpec
		}
	}
	return nil
}

func (x *AttachedDiskSpec) GetDiskId() string {
	if x != nil {
		if x, ok := x.Disk.(*AttachedDiskSpec_DiskId); ok {
			return x.DiskId
		}
	}
	return ""
}

type isAttachedDiskSpec_Disk interface {
	isAttachedDiskSpec_Disk()
}

type AttachedDiskSpec_DiskSpec_ struct {
	// Disk specification.
	DiskSpec *AttachedDiskSpec_DiskSpec `protobuf:"bytes,4,opt,name=disk_spec,json=diskSpec,proto3,oneof"`
}

type AttachedDiskSpec_DiskId struct {
	// ID of the disk that should be attached.
	DiskId string `protobuf:"bytes,5,opt,name=disk_id,json=diskId,proto3,oneof"`
}

func (*AttachedDiskSpec_DiskSpec_) isAttachedDiskSpec_Disk() {}

func (*AttachedDiskSpec_DiskId) isAttachedDiskSpec_Disk() {}

type AttachedLocalDiskSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Size of the disk, specified in bytes.
	Size          int64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachedLocalDiskSpec) Reset() {
	*x = AttachedLocalDiskSpec{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachedLocalDiskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachedLocalDiskSpec) ProtoMessage() {}

func (x *AttachedLocalDiskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachedLocalDiskSpec.ProtoReflect.Descriptor instead.
func (*AttachedLocalDiskSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{43}
}

func (x *AttachedLocalDiskSpec) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type AttachedFilesystemSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Mode of access to the filesystem that should be attached.
	Mode AttachedFilesystemSpec_Mode `protobuf:"varint,1,opt,name=mode,proto3,enum=yandex.cloud.compute.v1.AttachedFilesystemSpec_Mode" json:"mode,omitempty"`
	// Name of the device representing the filesystem on the instance.
	//
	// The name should be used for referencing the filesystem from within the instance
	// when it's being mounted, resized etc.
	//
	// If not specified, a random value will be generated.
	DeviceName string `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	// ID of the filesystem that should be attached.
	FilesystemId  string `protobuf:"bytes,3,opt,name=filesystem_id,json=filesystemId,proto3" json:"filesystem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachedFilesystemSpec) Reset() {
	*x = AttachedFilesystemSpec{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachedFilesystemSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachedFilesystemSpec) ProtoMessage() {}

func (x *AttachedFilesystemSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachedFilesystemSpec.ProtoReflect.Descriptor instead.
func (*AttachedFilesystemSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{44}
}

func (x *AttachedFilesystemSpec) GetMode() AttachedFilesystemSpec_Mode {
	if x != nil {
		return x.Mode
	}
	return AttachedFilesystemSpec_MODE_UNSPECIFIED
}

func (x *AttachedFilesystemSpec) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *AttachedFilesystemSpec) GetFilesystemId() string {
	if x != nil {
		return x.FilesystemId
	}
	return ""
}

type NetworkInterfaceSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subnet.
	SubnetId string `protobuf:"bytes,1,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	// Primary IPv4 address that will be assigned to the instance for this network interface.
	PrimaryV4AddressSpec *PrimaryAddressSpec `protobuf:"bytes,2,opt,name=primary_v4_address_spec,json=primaryV4AddressSpec,proto3" json:"primary_v4_address_spec,omitempty"`
	// Primary IPv6 address that will be assigned to the instance for this network interface. IPv6 not available yet.
	PrimaryV6AddressSpec *PrimaryAddressSpec `protobuf:"bytes,3,opt,name=primary_v6_address_spec,json=primaryV6AddressSpec,proto3" json:"primary_v6_address_spec,omitempty"`
	// ID's of security groups attached to the interface
	SecurityGroupIds []string `protobuf:"bytes,6,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
	// The index of the network interface, will be generated by the server, 0,1,2... etc if not specified.
	Index         string `protobuf:"bytes,7,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInterfaceSpec) Reset() {
	*x = NetworkInterfaceSpec{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInterfaceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterfaceSpec) ProtoMessage() {}

func (x *NetworkInterfaceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterfaceSpec.ProtoReflect.Descriptor instead.
func (*NetworkInterfaceSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{45}
}

func (x *NetworkInterfaceSpec) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *NetworkInterfaceSpec) GetPrimaryV4AddressSpec() *PrimaryAddressSpec {
	if x != nil {
		return x.PrimaryV4AddressSpec
	}
	return nil
}

func (x *NetworkInterfaceSpec) GetPrimaryV6AddressSpec() *PrimaryAddressSpec {
	if x != nil {
		return x.PrimaryV6AddressSpec
	}
	return nil
}

func (x *NetworkInterfaceSpec) GetSecurityGroupIds() []string {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

func (x *NetworkInterfaceSpec) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

type PrimaryAddressSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An IPv4 internal network address that is assigned to the instance for this network interface.
	// If not specified by the user, an unused internal IP is assigned by the system.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // optional, manual set static internal IP
	// An external IP address configuration.
	// If not specified, then this instance will have no external internet access.
	OneToOneNatSpec *OneToOneNatSpec `protobuf:"bytes,2,opt,name=one_to_one_nat_spec,json=oneToOneNatSpec,proto3" json:"one_to_one_nat_spec,omitempty"`
	// Internal DNS configuration
	DnsRecordSpecs []*DnsRecordSpec `protobuf:"bytes,3,rep,name=dns_record_specs,json=dnsRecordSpecs,proto3" json:"dns_record_specs,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PrimaryAddressSpec) Reset() {
	*x = PrimaryAddressSpec{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrimaryAddressSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimaryAddressSpec) ProtoMessage() {}

func (x *PrimaryAddressSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimaryAddressSpec.ProtoReflect.Descriptor instead.
func (*PrimaryAddressSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{46}
}

func (x *PrimaryAddressSpec) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PrimaryAddressSpec) GetOneToOneNatSpec() *OneToOneNatSpec {
	if x != nil {
		return x.OneToOneNatSpec
	}
	return nil
}

func (x *PrimaryAddressSpec) GetDnsRecordSpecs() []*DnsRecordSpec {
	if x != nil {
		return x.DnsRecordSpecs
	}
	return nil
}

type OneToOneNatSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// External IP address version.
	IpVersion IpVersion `protobuf:"varint,1,opt,name=ip_version,json=ipVersion,proto3,enum=yandex.cloud.compute.v1.IpVersion" json:"ip_version,omitempty"` //only if address unspecified
	Address   string    `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                                                              //set static IP by value
	// External DNS configuration
	DnsRecordSpecs []*DnsRecordSpec `protobuf:"bytes,3,rep,name=dns_record_specs,json=dnsRecordSpecs,proto3" json:"dns_record_specs,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *OneToOneNatSpec) Reset() {
	*x = OneToOneNatSpec{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OneToOneNatSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneToOneNatSpec) ProtoMessage() {}

func (x *OneToOneNatSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneToOneNatSpec.ProtoReflect.Descriptor instead.
func (*OneToOneNatSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{47}
}

func (x *OneToOneNatSpec) GetIpVersion() IpVersion {
	if x != nil {
		return x.IpVersion
	}
	return IpVersion_IP_VERSION_UNSPECIFIED
}

func (x *OneToOneNatSpec) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *OneToOneNatSpec) GetDnsRecordSpecs() []*DnsRecordSpec {
	if x != nil {
		return x.DnsRecordSpecs
	}
	return nil
}

type DnsRecordSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// FQDN (required)
	Fqdn string `protobuf:"bytes,1,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	// DNS zone id (optional, if not set, private zone used)
	DnsZoneId string `protobuf:"bytes,2,opt,name=dns_zone_id,json=dnsZoneId,proto3" json:"dns_zone_id,omitempty"`
	// DNS record ttl, values in 0-86400 (optional)
	Ttl int64 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	// When set to true, also create PTR DNS record (optional)
	Ptr           bool `protobuf:"varint,4,opt,name=ptr,proto3" json:"ptr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DnsRecordSpec) Reset() {
	*x = DnsRecordSpec{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DnsRecordSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DnsRecordSpec) ProtoMessage() {}

func (x *DnsRecordSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DnsRecordSpec.ProtoReflect.Descriptor instead.
func (*DnsRecordSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{48}
}

func (x *DnsRecordSpec) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *DnsRecordSpec) GetDnsZoneId() string {
	if x != nil {
		return x.DnsZoneId
	}
	return ""
}

func (x *DnsRecordSpec) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *DnsRecordSpec) GetPtr() bool {
	if x != nil {
		return x.Ptr
	}
	return false
}

type MoveInstanceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance to move.
	//
	// To get the instance ID, make a [InstanceService.List] request.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// ID of the folder to move the instance to.
	//
	// To get the folder ID, make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	DestinationFolderId string `protobuf:"bytes,2,opt,name=destination_folder_id,json=destinationFolderId,proto3" json:"destination_folder_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MoveInstanceRequest) Reset() {
	*x = MoveInstanceRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveInstanceRequest) ProtoMessage() {}

func (x *MoveInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveInstanceRequest.ProtoReflect.Descriptor instead.
func (*MoveInstanceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{49}
}

func (x *MoveInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *MoveInstanceRequest) GetDestinationFolderId() string {
	if x != nil {
		return x.DestinationFolderId
	}
	return ""
}

type MoveInstanceMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance that is being moved.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// ID of the folder that the instance is being moved from.
	SourceFolderId string `protobuf:"bytes,2,opt,name=source_folder_id,json=sourceFolderId,proto3" json:"source_folder_id,omitempty"`
	// ID of the folder that the instance is being moved to.
	DestinationFolderId string `protobuf:"bytes,3,opt,name=destination_folder_id,json=destinationFolderId,proto3" json:"destination_folder_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MoveInstanceMetadata) Reset() {
	*x = MoveInstanceMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveInstanceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveInstanceMetadata) ProtoMessage() {}

func (x *MoveInstanceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveInstanceMetadata.ProtoReflect.Descriptor instead.
func (*MoveInstanceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{50}
}

func (x *MoveInstanceMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *MoveInstanceMetadata) GetSourceFolderId() string {
	if x != nil {
		return x.SourceFolderId
	}
	return ""
}

func (x *MoveInstanceMetadata) GetDestinationFolderId() string {
	if x != nil {
		return x.DestinationFolderId
	}
	return ""
}

type RelocateInstanceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance to move.
	//
	// To get the instance ID, make a [InstanceService.List] request.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// ID of the availability zone to move the instance to.
	//
	// To get the zone ID, make a [ZoneService.List] request.
	DestinationZoneId string `protobuf:"bytes,2,opt,name=destination_zone_id,json=destinationZoneId,proto3" json:"destination_zone_id,omitempty"`
	// Network configuration for the instance. Specifies how the network interface is configured
	// to interact with other services on the internal network and on the internet.
	// Currently only one network interface is supported per instance.
	NetworkInterfaceSpecs []*NetworkInterfaceSpec `protobuf:"bytes,3,rep,name=network_interface_specs,json=networkInterfaceSpecs,proto3" json:"network_interface_specs,omitempty"`
	// Boot disk placement policy configuration in target zone. Must be specified if disk has placement policy.
	BootDiskPlacement *DiskPlacementPolicy `protobuf:"bytes,4,opt,name=boot_disk_placement,json=bootDiskPlacement,proto3" json:"boot_disk_placement,omitempty"`
	// Secondary disk placement policy configurations in target zone. Must be specified for each disk that has placement policy.
	SecondaryDiskPlacements []*DiskPlacementPolicyChange `protobuf:"bytes,5,rep,name=secondary_disk_placements,json=secondaryDiskPlacements,proto3" json:"secondary_disk_placements,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RelocateInstanceRequest) Reset() {
	*x = RelocateInstanceRequest{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelocateInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelocateInstanceRequest) ProtoMessage() {}

func (x *RelocateInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelocateInstanceRequest.ProtoReflect.Descriptor instead.
func (*RelocateInstanceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{51}
}

func (x *RelocateInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *RelocateInstanceRequest) GetDestinationZoneId() string {
	if x != nil {
		return x.DestinationZoneId
	}
	return ""
}

func (x *RelocateInstanceRequest) GetNetworkInterfaceSpecs() []*NetworkInterfaceSpec {
	if x != nil {
		return x.NetworkInterfaceSpecs
	}
	return nil
}

func (x *RelocateInstanceRequest) GetBootDiskPlacement() *DiskPlacementPolicy {
	if x != nil {
		return x.BootDiskPlacement
	}
	return nil
}

func (x *RelocateInstanceRequest) GetSecondaryDiskPlacements() []*DiskPlacementPolicyChange {
	if x != nil {
		return x.SecondaryDiskPlacements
	}
	return nil
}

type RelocateInstanceMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance that is being moved.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// ID of the availability zone that the instance is being moved from.
	SourceZoneId string `protobuf:"bytes,2,opt,name=source_zone_id,json=sourceZoneId,proto3" json:"source_zone_id,omitempty"`
	// ID of the availability zone that the instance is being moved to.
	DestinationZoneId string `protobuf:"bytes,3,opt,name=destination_zone_id,json=destinationZoneId,proto3" json:"destination_zone_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RelocateInstanceMetadata) Reset() {
	*x = RelocateInstanceMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelocateInstanceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelocateInstanceMetadata) ProtoMessage() {}

func (x *RelocateInstanceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelocateInstanceMetadata.ProtoReflect.Descriptor instead.
func (*RelocateInstanceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{52}
}

func (x *RelocateInstanceMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *RelocateInstanceMetadata) GetSourceZoneId() string {
	if x != nil {
		return x.SourceZoneId
	}
	return ""
}

func (x *RelocateInstanceMetadata) GetDestinationZoneId() string {
	if x != nil {
		return x.DestinationZoneId
	}
	return ""
}

type GuestStopInstanceMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance that was stopped from guest OS.
	InstanceId    string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuestStopInstanceMetadata) Reset() {
	*x = GuestStopInstanceMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuestStopInstanceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestStopInstanceMetadata) ProtoMessage() {}

func (x *GuestStopInstanceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestStopInstanceMetadata.ProtoReflect.Descriptor instead.
func (*GuestStopInstanceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{53}
}

func (x *GuestStopInstanceMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type PreemptInstanceMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance that is being preempted.
	InstanceId    string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreemptInstanceMetadata) Reset() {
	*x = PreemptInstanceMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreemptInstanceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreemptInstanceMetadata) ProtoMessage() {}

func (x *PreemptInstanceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreemptInstanceMetadata.ProtoReflect.Descriptor instead.
func (*PreemptInstanceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{54}
}

func (x *PreemptInstanceMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type CrashInstanceMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instance that was crashed.
	InstanceId    string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CrashInstanceMetadata) Reset() {
	*x = CrashInstanceMetadata{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrashInstanceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrashInstanceMetadata) ProtoMessage() {}

func (x *CrashInstanceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrashInstanceMetadata.ProtoReflect.Descriptor instead.
func (*CrashInstanceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{55}
}

func (x *CrashInstanceMetadata) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type AttachedDiskSpec_DiskSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the disk.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the disk.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// ID of the disk type.
	// To get a list of available disk types, use the [yandex.cloud.compute.v1.DiskTypeService.List] request.
	TypeId string `protobuf:"bytes,3,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	// Size of the disk, specified in bytes.
	Size int64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	// Types that are valid to be assigned to Source:
	//
	//	*AttachedDiskSpec_DiskSpec_ImageId
	//	*AttachedDiskSpec_DiskSpec_SnapshotId
	Source isAttachedDiskSpec_DiskSpec_Source `protobuf_oneof:"source"`
	// Placement policy configuration.
	DiskPlacementPolicy *DiskPlacementPolicy `protobuf:"bytes,7,opt,name=disk_placement_policy,json=diskPlacementPolicy,proto3" json:"disk_placement_policy,omitempty"`
	// Block size of the disk, specified in bytes. The default is 4096.
	BlockSize int64 `protobuf:"varint,8,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	// ID of KMS key for disk encryption
	KmsKeyId      string `protobuf:"bytes,9,opt,name=kms_key_id,json=kmsKeyId,proto3" json:"kms_key_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachedDiskSpec_DiskSpec) Reset() {
	*x = AttachedDiskSpec_DiskSpec{}
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachedDiskSpec_DiskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachedDiskSpec_DiskSpec) ProtoMessage() {}

func (x *AttachedDiskSpec_DiskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachedDiskSpec_DiskSpec.ProtoReflect.Descriptor instead.
func (*AttachedDiskSpec_DiskSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP(), []int{42, 0}
}

func (x *AttachedDiskSpec_DiskSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttachedDiskSpec_DiskSpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AttachedDiskSpec_DiskSpec) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

func (x *AttachedDiskSpec_DiskSpec) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AttachedDiskSpec_DiskSpec) GetSource() isAttachedDiskSpec_DiskSpec_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *AttachedDiskSpec_DiskSpec) GetImageId() string {
	if x != nil {
		if x, ok := x.Source.(*AttachedDiskSpec_DiskSpec_ImageId); ok {
			return x.ImageId
		}
	}
	return ""
}

func (x *AttachedDiskSpec_DiskSpec) GetSnapshotId() string {
	if x != nil {
		if x, ok := x.Source.(*AttachedDiskSpec_DiskSpec_SnapshotId); ok {
			return x.SnapshotId
		}
	}
	return ""
}

func (x *AttachedDiskSpec_DiskSpec) GetDiskPlacementPolicy() *DiskPlacementPolicy {
	if x != nil {
		return x.DiskPlacementPolicy
	}
	return nil
}

func (x *AttachedDiskSpec_DiskSpec) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *AttachedDiskSpec_DiskSpec) GetKmsKeyId() string {
	if x != nil {
		return x.KmsKeyId
	}
	return ""
}

type isAttachedDiskSpec_DiskSpec_Source interface {
	isAttachedDiskSpec_DiskSpec_Source()
}

type AttachedDiskSpec_DiskSpec_ImageId struct {
	// ID of the image to create the disk from.
	ImageId string `protobuf:"bytes,5,opt,name=image_id,json=imageId,proto3,oneof"`
}

type AttachedDiskSpec_DiskSpec_SnapshotId struct {
	// ID of the snapshot to restore the disk from.
	SnapshotId string `protobuf:"bytes,6,opt,name=snapshot_id,json=snapshotId,proto3,oneof"`
}

func (*AttachedDiskSpec_DiskSpec_ImageId) isAttachedDiskSpec_DiskSpec_Source() {}

func (*AttachedDiskSpec_DiskSpec_SnapshotId) isAttachedDiskSpec_DiskSpec_Source() {}

var File_yandex_cloud_compute_v1_instance_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_compute_v1_instance_service_proto_rawDesc = "" +
	"\n" +
	".yandex/cloud/compute/v1/instance_service.proto\x12\x17yandex.cloud.compute.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1egoogle/protobuf/duration.proto\x1a google/protobuf/field_mask.proto\x1a yandex/cloud/access/access.proto\x1a yandex/cloud/api/operation.proto\x1a\"yandex/cloud/compute/v1/disk.proto\x1a&yandex/cloud/compute/v1/instance.proto\x1a)yandex/cloud/compute/v1/maintenance.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\"~\n" +
	"\x12GetInstanceRequest\x12-\n" +
	"\vinstance_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"instanceId\x129\n" +
	"\x04view\x18\x02 \x01(\x0e2%.yandex.cloud.compute.v1.InstanceViewR\x04view\"\xde\x01\n" +
	"\x14ListInstancesRequest\x12)\n" +
	"\tfolder_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\x12$\n" +
	"\border_by\x18\x05 \x01(\tB\t\x8a\xc81\x05<=100R\aorderBy\"\x80\x01\n" +
	"\x15ListInstancesResponse\x12?\n" +
	"\tinstances\x18\x01 \x03(\v2!.yandex.cloud.compute.v1.InstanceR\tinstances\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x8a\x10\n" +
	"\x15CreateInstanceRequest\x12)\n" +
	"\tfolder_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x129\n" +
	"\x04name\x18\x02 \x01(\tB%\xf2\xc71!|[a-z]([-_a-z0-9]{0,61}[a-z0-9])?R\x04name\x12+\n" +
	"\vdescription\x18\x03 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x97\x01\n" +
	"\x06labels\x18\x04 \x03(\v2:.yandex.cloud.compute.v1.CreateInstanceRequest.LabelsEntryBC\xf2\xc71\x0f[-_./\\@0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x1c\x12\x14[a-z][-_./\\@0-9a-z]*\x1a\x041-63R\x06labels\x12%\n" +
	"\azone_id\x18\x05 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x06zoneId\x12%\n" +
	"\vplatform_id\x18\x06 \x01(\tB\x04\xe8\xc71\x01R\n" +
	"platformId\x12S\n" +
	"\x0eresources_spec\x18\a \x01(\v2&.yandex.cloud.compute.v1.ResourcesSpecB\x04\xe8\xc71\x01R\rresourcesSpec\x12X\n" +
	"\bmetadata\x18\b \x03(\v2<.yandex.cloud.compute.v1.CreateInstanceRequest.MetadataEntryR\bmetadata\x12S\n" +
	"\x10metadata_options\x18\x13 \x01(\v2(.yandex.cloud.compute.v1.MetadataOptionsR\x0fmetadataOptions\x12U\n" +
	"\x0eboot_disk_spec\x18\t \x01(\v2).yandex.cloud.compute.v1.AttachedDiskSpecB\x04\xe8\xc71\x01R\fbootDiskSpec\x12d\n" +
	"\x14secondary_disk_specs\x18\n" +
	" \x03(\v2).yandex.cloud.compute.v1.AttachedDiskSpecB\a\x82\xc81\x03<=3R\x12secondaryDiskSpecs\x12X\n" +
	"\x10local_disk_specs\x18\x12 \x03(\v2..yandex.cloud.compute.v1.AttachedLocalDiskSpecR\x0elocalDiskSpecs\x12Z\n" +
	"\x10filesystem_specs\x18\x11 \x03(\v2/.yandex.cloud.compute.v1.AttachedFilesystemSpecR\x0ffilesystemSpecs\x12k\n" +
	"\x17network_interface_specs\x18\v \x03(\v2-.yandex.cloud.compute.v1.NetworkInterfaceSpecB\x04\xe8\xc71\x01R\x15networkInterfaceSpecs\x12A\n" +
	"\bhostname\x18\f \x01(\tB%\xf2\xc71!|[a-z]([-_a-z0-9]{0,61}[a-z0-9])?R\bhostname\x12V\n" +
	"\x11scheduling_policy\x18\r \x01(\v2).yandex.cloud.compute.v1.SchedulingPolicyR\x10schedulingPolicy\x12,\n" +
	"\x12service_account_id\x18\x0e \x01(\tR\x10serviceAccountId\x12S\n" +
	"\x10network_settings\x18\x0f \x01(\v2(.yandex.cloud.compute.v1.NetworkSettingsR\x0fnetworkSettings\x12S\n" +
	"\x10placement_policy\x18\x10 \x01(\v2(.yandex.cloud.compute.v1.PlacementPolicyR\x0fplacementPolicy\x12G\n" +
	"\fgpu_settings\x18\x14 \x01(\v2$.yandex.cloud.compute.v1.GpuSettingsR\vgpuSettings\x12Y\n" +
	"\x12maintenance_policy\x18\x15 \x01(\x0e2*.yandex.cloud.compute.v1.MaintenancePolicyR\x11maintenancePolicy\x12_\n" +
	"\x18maintenance_grace_period\x18\x16 \x01(\v2\x19.google.protobuf.DurationB\n" +
	"\xfa\xc71\x061s-24hR\x16maintenanceGracePeriod\x12]\n" +
	"\x14serial_port_settings\x18\x17 \x01(\v2+.yandex.cloud.compute.v1.SerialPortSettingsR\x12serialPortSettings\x12C\n" +
	"\x19reserved_instance_pool_id\x18\x18 \x01(\tB\b\x8a\xc81\x04<=50R\x16reservedInstancePoolId\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"C\n" +
	"\x16CreateInstanceMetadata\x12)\n" +
	"\vinstance_id\x18\x01 \x01(\tB\b\x8a\xc81\x04<=50R\n" +
	"instanceId\"\xac\v\n" +
	"\x15UpdateInstanceRequest\x12-\n" +
	"\vinstance_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"instanceId\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x129\n" +
	"\x04name\x18\x03 \x01(\tB%\xf2\xc71!|[a-z]([-_a-z0-9]{0,61}[a-z0-9])?R\x04name\x12+\n" +
	"\vdescription\x18\x04 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x97\x01\n" +
	"\x06labels\x18\x05 \x03(\v2:.yandex.cloud.compute.v1.UpdateInstanceRequest.LabelsEntryBC\xf2\xc71\x0f[-_./\\@0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x1c\x12\x14[a-z][-_./\\@0-9a-z]*\x1a\x041-63R\x06labels\x12\x1f\n" +
	"\vplatform_id\x18\x06 \x01(\tR\n" +
	"platformId\x12M\n" +
	"\x0eresources_spec\x18\a \x01(\v2&.yandex.cloud.compute.v1.ResourcesSpecR\rresourcesSpec\x12X\n" +
	"\bmetadata\x18\b \x03(\v2<.yandex.cloud.compute.v1.UpdateInstanceRequest.MetadataEntryR\bmetadata\x12S\n" +
	"\x10metadata_options\x18\r \x01(\v2(.yandex.cloud.compute.v1.MetadataOptionsR\x0fmetadataOptions\x12,\n" +
	"\x12service_account_id\x18\t \x01(\tR\x10serviceAccountId\x12S\n" +
	"\x10network_settings\x18\n" +
	" \x01(\v2(.yandex.cloud.compute.v1.NetworkSettingsR\x0fnetworkSettings\x12S\n" +
	"\x10placement_policy\x18\v \x01(\v2(.yandex.cloud.compute.v1.PlacementPolicyR\x0fplacementPolicy\x12V\n" +
	"\x11scheduling_policy\x18\f \x01(\v2).yandex.cloud.compute.v1.SchedulingPolicyR\x10schedulingPolicy\x12Y\n" +
	"\x12maintenance_policy\x18\x0e \x01(\x0e2*.yandex.cloud.compute.v1.MaintenancePolicyR\x11maintenancePolicy\x12_\n" +
	"\x18maintenance_grace_period\x18\x0f \x01(\v2\x19.google.protobuf.DurationB\n" +
	"\xfa\xc71\x061s-24hR\x16maintenanceGracePeriod\x12]\n" +
	"\x14serial_port_settings\x18\x10 \x01(\v2+.yandex.cloud.compute.v1.SerialPortSettingsR\x12serialPortSettings\x12C\n" +
	"\x19reserved_instance_pool_id\x18\x11 \x01(\tB\b\x8a\xc81\x04<=50R\x16reservedInstancePoolId\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"9\n" +
	"\x16UpdateInstanceMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\"F\n" +
	"\x15DeleteInstanceRequest\x12-\n" +
	"\vinstance_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"instanceId\"9\n" +
	"\x16DeleteInstanceMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\"\xef\x01\n" +
	"\x1dUpdateInstanceMetadataRequest\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\x12\x16\n" +
	"\x06delete\x18\x02 \x03(\tR\x06delete\x12Z\n" +
	"\x06upsert\x18\x03 \x03(\v2B.yandex.cloud.compute.v1.UpdateInstanceMetadataRequest.UpsertEntryR\x06upsert\x1a9\n" +
	"\vUpsertEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"A\n" +
	"\x1eUpdateInstanceMetadataMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\"t\n" +
	"\"GetInstanceSerialPortOutputRequest\x12-\n" +
	"\vinstance_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"instanceId\x12\x1f\n" +
	"\x04port\x18\x02 \x01(\x03B\v\xfa\xc71\a1,2,3,4R\x04port\"A\n" +
	"#GetInstanceSerialPortOutputResponse\x12\x1a\n" +
	"\bcontents\x18\x01 \x01(\tR\bcontents\"D\n" +
	"\x13StopInstanceRequest\x12-\n" +
	"\vinstance_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"instanceId\"7\n" +
	"\x14StopInstanceMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\"E\n" +
	"\x14StartInstanceRequest\x12-\n" +
	"\vinstance_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"instanceId\"8\n" +
	"\x15StartInstanceMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\"G\n" +
	"\x16RestartInstanceRequest\x12-\n" +
	"\vinstance_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"instanceId\":\n" +
	"\x17RestartInstanceMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\"\xa9\x01\n" +
	"\x19AttachInstanceDiskRequest\x12-\n" +
	"\vinstance_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"instanceId\x12]\n" +
	"\x12attached_disk_spec\x18\x02 \x01(\v2).yandex.cloud.compute.v1.AttachedDiskSpecB\x04\xe8\xc71\x01R\x10attachedDiskSpec\"V\n" +
	"\x1aAttachInstanceDiskMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\x12\x17\n" +
	"\adisk_id\x18\x02 \x01(\tR\x06diskId\"\xba\x01\n" +
	"\x19DetachInstanceDiskRequest\x12-\n" +
	"\vinstance_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"instanceId\x12#\n" +
	"\adisk_id\x18\x02 \x01(\tB\b\x8a\xc81\x04<=50H\x00R\x06diskId\x12;\n" +
	"\vdevice_name\x18\x03 \x01(\tB\x18\xf2\xc71\x14[a-z][a-z0-9-_]{,19}H\x00R\n" +
	"deviceNameB\f\n" +
	"\x04disk\x12\x04\xc0\xc11\x01\"V\n" +
	"\x1aDetachInstanceDiskMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\x12\x17\n" +
	"\adisk_id\x18\x02 \x01(\tR\x06diskId\"\xc1\x01\n" +
	"\x1fAttachInstanceFilesystemRequest\x12-\n" +
	"\vinstance_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"instanceId\x12o\n" +
	"\x18attached_filesystem_spec\x18\x02 \x01(\v2/.yandex.cloud.compute.v1.AttachedFilesystemSpecB\x04\xe8\xc71\x01R\x16attachedFilesystemSpec\"h\n" +
	" AttachInstanceFilesystemMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\x12#\n" +
	"\rfilesystem_id\x18\x02 \x01(\tR\ffilesystemId\"\xd2\x01\n" +
	"\x1fDetachInstanceFilesystemRequest\x12-\n" +
	"\vinstance_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"instanceId\x12/\n" +
	"\rfilesystem_id\x18\x02 \x01(\tB\b\x8a\xc81\x04<=50H\x00R\ffilesystemId\x12;\n" +
	"\vdevice_name\x18\x03 \x01(\tB\x18\xf2\xc71\x14[a-z][a-z0-9-_]{,19}H\x00R\n" +
	"deviceNameB\x12\n" +
	"\n" +
	"filesystem\x12\x04\xc0\xc11\x01\"h\n" +
	" DetachInstanceFilesystemMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\x12#\n" +
	"\rfilesystem_id\x18\x02 \x01(\tR\ffilesystemId\"\xcd\x02\n" +
	"%AttachInstanceNetworkInterfaceRequest\x12%\n" +
	"\vinstance_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\n" +
	"instanceId\x12<\n" +
	"\x17network_interface_index\x18\x02 \x01(\tB\x04\xe8\xc71\x01R\x15networkInterfaceIndex\x12!\n" +
	"\tsubnet_id\x18\x03 \x01(\tB\x04\xe8\xc71\x01R\bsubnetId\x12b\n" +
	"\x17primary_v4_address_spec\x18\x04 \x01(\v2+.yandex.cloud.compute.v1.PrimaryAddressSpecR\x14primaryV4AddressSpec\x122\n" +
	"\x12security_group_ids\x18\x06 \x03(\tB\x04\xe8\xc71\x01R\x10securityGroupIdsJ\x04\b\x05\x10\x06\"\x81\x01\n" +
	"&AttachInstanceNetworkInterfaceMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\x126\n" +
	"\x17network_interface_index\x18\x02 \x01(\tR\x15networkInterfaceIndex\"\x8c\x01\n" +
	"%DetachInstanceNetworkInterfaceRequest\x12%\n" +
	"\vinstance_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\n" +
	"instanceId\x12<\n" +
	"\x17network_interface_index\x18\x02 \x01(\tB\x04\xe8\xc71\x01R\x15networkInterfaceIndex\"\x81\x01\n" +
	"&DetachInstanceNetworkInterfaceMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\x126\n" +
	"\x17network_interface_index\x18\x02 \x01(\tR\x15networkInterfaceIndex\"\xfb\x01\n" +
	"\x1dAddInstanceOneToOneNatRequest\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\x126\n" +
	"\x17network_interface_index\x18\x02 \x01(\tR\x15networkInterfaceIndex\x12)\n" +
	"\x10internal_address\x18\x03 \x01(\tR\x0finternalAddress\x12V\n" +
	"\x13one_to_one_nat_spec\x18\x04 \x01(\v2(.yandex.cloud.compute.v1.OneToOneNatSpecR\x0foneToOneNatSpec\"A\n" +
	"\x1eAddInstanceOneToOneNatMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\"\xa6\x01\n" +
	" RemoveInstanceOneToOneNatRequest\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\x126\n" +
	"\x17network_interface_index\x18\x02 \x01(\tR\x15networkInterfaceIndex\x12)\n" +
	"\x10internal_address\x18\x03 \x01(\tR\x0finternalAddress\"D\n" +
	"!RemoveInstanceOneToOneNatMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\"\xdc\x03\n" +
	"%UpdateInstanceNetworkInterfaceRequest\x12%\n" +
	"\vinstance_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\n" +
	"instanceId\x12<\n" +
	"\x17network_interface_index\x18\x02 \x01(\tB\x04\xe8\xc71\x01R\x15networkInterfaceIndex\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12\x1b\n" +
	"\tsubnet_id\x18\x04 \x01(\tR\bsubnetId\x12b\n" +
	"\x17primary_v4_address_spec\x18\x05 \x01(\v2+.yandex.cloud.compute.v1.PrimaryAddressSpecR\x14primaryV4AddressSpec\x12b\n" +
	"\x17primary_v6_address_spec\x18\x06 \x01(\v2+.yandex.cloud.compute.v1.PrimaryAddressSpecR\x14primaryV6AddressSpec\x12,\n" +
	"\x12security_group_ids\x18\a \x03(\tR\x10securityGroupIds\"\x81\x01\n" +
	"&UpdateInstanceNetworkInterfaceMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\x126\n" +
	"\x17network_interface_index\x18\x02 \x01(\tR\x15networkInterfaceIndex\"X\n" +
	"'SimulateInstanceMaintenanceEventRequest\x12-\n" +
	"\vinstance_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"instanceId\"K\n" +
	"(SimulateInstanceMaintenanceEventMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\"\xa1\x01\n" +
	"\x1dListInstanceOperationsRequest\x12-\n" +
	"\vinstance_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"instanceId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\"\x8b\x01\n" +
	"\x1eListInstanceOperationsResponse\x12A\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2!.yandex.cloud.operation.OperationR\n" +
	"operations\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x8a\x02\n" +
	"\rResourcesSpec\x12.\n" +
	"\x06memory\x18\x01 \x01(\x03B\x16\xe8\xc71\x01\xfa\xc71\x0e<=274877906944R\x06memory\x12p\n" +
	"\x05cores\x18\x02 \x01(\x03BZ\xe8\xc71\x01\xfa\xc71R2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,40,44,48,52,56,60,64,68,72,76,80R\x05cores\x126\n" +
	"\rcore_fraction\x18\x03 \x01(\x03B\x11\xfa\xc71\r0,5,20,50,100R\fcoreFraction\x12\x1f\n" +
	"\x04gpus\x18\x04 \x01(\x03B\v\xfa\xc71\a0,1,2,4R\x04gpus\"\xc7\x06\n" +
	"\x10AttachedDiskSpec\x12B\n" +
	"\x04mode\x18\x01 \x01(\x0e2..yandex.cloud.compute.v1.AttachedDiskSpec.ModeR\x04mode\x129\n" +
	"\vdevice_name\x18\x02 \x01(\tB\x18\xf2\xc71\x14[a-z][a-z0-9-_]{,19}R\n" +
	"deviceName\x12\x1f\n" +
	"\vauto_delete\x18\x03 \x01(\bR\n" +
	"autoDelete\x12Q\n" +
	"\tdisk_spec\x18\x04 \x01(\v22.yandex.cloud.compute.v1.AttachedDiskSpec.DiskSpecH\x00R\bdiskSpec\x12#\n" +
	"\adisk_id\x18\x05 \x01(\tB\b\x8a\xc81\x04<=50H\x00R\x06diskId\x1a\xcf\x03\n" +
	"\bDiskSpec\x129\n" +
	"\x04name\x18\x01 \x01(\tB%\xf2\xc71!|[a-z]([-_a-z0-9]{0,61}[a-z0-9])?R\x04name\x12+\n" +
	"\vdescription\x18\x02 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12!\n" +
	"\atype_id\x18\x03 \x01(\tB\b\x8a\xc81\x04<=50R\x06typeId\x121\n" +
	"\x04size\x18\x04 \x01(\x03B\x1d\xe8\xc71\x01\xfa\xc71\x154194304-4398046511104R\x04size\x12%\n" +
	"\bimage_id\x18\x05 \x01(\tB\b\x8a\xc81\x04<=50H\x00R\aimageId\x12+\n" +
	"\vsnapshot_id\x18\x06 \x01(\tB\b\x8a\xc81\x04<=50H\x00R\n" +
	"snapshotId\x12`\n" +
	"\x15disk_placement_policy\x18\a \x01(\v2,.yandex.cloud.compute.v1.DiskPlacementPolicyR\x13diskPlacementPolicy\x12\x1d\n" +
	"\n" +
	"block_size\x18\b \x01(\x03R\tblockSize\x12&\n" +
	"\n" +
	"kms_key_id\x18\t \x01(\tB\b\x8a\xc81\x04<=50R\bkmsKeyIdB\b\n" +
	"\x06source\";\n" +
	"\x04Mode\x12\x14\n" +
	"\x10MODE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tREAD_ONLY\x10\x01\x12\x0e\n" +
	"\n" +
	"READ_WRITE\x10\x02B\f\n" +
	"\x04disk\x12\x04\xc0\xc11\x01\"1\n" +
	"\x15AttachedLocalDiskSpec\x12\x18\n" +
	"\x04size\x18\x01 \x01(\x03B\x04\xe8\xc71\x01R\x04size\"\x89\x02\n" +
	"\x16AttachedFilesystemSpec\x12H\n" +
	"\x04mode\x18\x01 \x01(\x0e24.yandex.cloud.compute.v1.AttachedFilesystemSpec.ModeR\x04mode\x129\n" +
	"\vdevice_name\x18\x02 \x01(\tB\x18\xf2\xc71\x14[a-z][a-z0-9-_]{,19}R\n" +
	"deviceName\x12-\n" +
	"\rfilesystem_id\x18\x03 \x01(\tB\b\x8a\xc81\x04<=50R\ffilesystemId\";\n" +
	"\x04Mode\x12\x14\n" +
	"\x10MODE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tREAD_ONLY\x10\x01\x12\x0e\n" +
	"\n" +
	"READ_WRITE\x10\x02\"\xd3\x02\n" +
	"\x14NetworkInterfaceSpec\x12)\n" +
	"\tsubnet_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bsubnetId\x12b\n" +
	"\x17primary_v4_address_spec\x18\x02 \x01(\v2+.yandex.cloud.compute.v1.PrimaryAddressSpecR\x14primaryV4AddressSpec\x12b\n" +
	"\x17primary_v6_address_spec\x18\x03 \x01(\v2+.yandex.cloud.compute.v1.PrimaryAddressSpecR\x14primaryV6AddressSpec\x12,\n" +
	"\x12security_group_ids\x18\x06 \x03(\tR\x10securityGroupIds\x12\x14\n" +
	"\x05index\x18\a \x01(\tR\x05indexJ\x04\b\x04\x10\x06\"\xd8\x01\n" +
	"\x12PrimaryAddressSpec\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12V\n" +
	"\x13one_to_one_nat_spec\x18\x02 \x01(\v2(.yandex.cloud.compute.v1.OneToOneNatSpecR\x0foneToOneNatSpec\x12P\n" +
	"\x10dns_record_specs\x18\x03 \x03(\v2&.yandex.cloud.compute.v1.DnsRecordSpecR\x0ednsRecordSpecs\"\xc0\x01\n" +
	"\x0fOneToOneNatSpec\x12A\n" +
	"\n" +
	"ip_version\x18\x01 \x01(\x0e2\".yandex.cloud.compute.v1.IpVersionR\tipVersion\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12P\n" +
	"\x10dns_record_specs\x18\x03 \x03(\v2&.yandex.cloud.compute.v1.DnsRecordSpecR\x0ednsRecordSpecs\"z\n" +
	"\rDnsRecordSpec\x12\x18\n" +
	"\x04fqdn\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x04fqdn\x12\x1e\n" +
	"\vdns_zone_id\x18\x02 \x01(\tR\tdnsZoneId\x12\x1d\n" +
	"\x03ttl\x18\x03 \x01(\x03B\v\xfa\xc71\a0-86400R\x03ttl\x12\x10\n" +
	"\x03ptr\x18\x04 \x01(\bR\x03ptr\"\x86\x01\n" +
	"\x13MoveInstanceRequest\x12-\n" +
	"\vinstance_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"instanceId\x12@\n" +
	"\x15destination_folder_id\x18\x02 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x13destinationFolderId\"\x95\x01\n" +
	"\x14MoveInstanceMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\x12(\n" +
	"\x10source_folder_id\x18\x02 \x01(\tR\x0esourceFolderId\x122\n" +
	"\x15destination_folder_id\x18\x03 \x01(\tR\x13destinationFolderId\"\xc6\x03\n" +
	"\x17RelocateInstanceRequest\x12-\n" +
	"\vinstance_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"instanceId\x12<\n" +
	"\x13destination_zone_id\x18\x02 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x11destinationZoneId\x12p\n" +
	"\x17network_interface_specs\x18\x03 \x03(\v2-.yandex.cloud.compute.v1.NetworkInterfaceSpecB\t\xe8\xc71\x01\x82\xc81\x011R\x15networkInterfaceSpecs\x12\\\n" +
	"\x13boot_disk_placement\x18\x04 \x01(\v2,.yandex.cloud.compute.v1.DiskPlacementPolicyR\x11bootDiskPlacement\x12n\n" +
	"\x19secondary_disk_placements\x18\x05 \x03(\v22.yandex.cloud.compute.v1.DiskPlacementPolicyChangeR\x17secondaryDiskPlacements\"\x91\x01\n" +
	"\x18RelocateInstanceMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\x12$\n" +
	"\x0esource_zone_id\x18\x02 \x01(\tR\fsourceZoneId\x12.\n" +
	"\x13destination_zone_id\x18\x03 \x01(\tR\x11destinationZoneId\"<\n" +
	"\x19GuestStopInstanceMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\":\n" +
	"\x17PreemptInstanceMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\"8\n" +
	"\x15CrashInstanceMetadata\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId*#\n" +
	"\fInstanceView\x12\t\n" +
	"\x05BASIC\x10\x00\x12\b\n" +
	"\x04FULL\x10\x012\x9f*\n" +
	"\x0fInstanceService\x12\x82\x01\n" +
	"\x03Get\x12+.yandex.cloud.compute.v1.GetInstanceRequest\x1a!.yandex.cloud.compute.v1.Instance\"+\x82\xd3\xe4\x93\x02%\x12#/compute/v1/instances/{instance_id}\x12\x84\x01\n" +
	"\x04List\x12-.yandex.cloud.compute.v1.ListInstancesRequest\x1a..yandex.cloud.compute.v1.ListInstancesResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/compute/v1/instances\x12\xa3\x01\n" +
	"\x06Create\x12..yandex.cloud.compute.v1.CreateInstanceRequest\x1a!.yandex.cloud.operation.Operation\"F\xb2\xd2*\"\n" +
	"\x16CreateInstanceMetadata\x12\bInstance\x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/compute/v1/instances\x12\xb1\x01\n" +
	"\x06Update\x12..yandex.cloud.compute.v1.UpdateInstanceRequest\x1a!.yandex.cloud.operation.Operation\"T\xb2\xd2*\"\n" +
	"\x16UpdateInstanceMetadata\x12\bInstance\x82\xd3\xe4\x93\x02(:\x01*2#/compute/v1/instances/{instance_id}\x12\xbb\x01\n" +
	"\x06Delete\x12..yandex.cloud.compute.v1.DeleteInstanceRequest\x1a!.yandex.cloud.operation.Operation\"^\xb2\xd2*/\n" +
	"\x16DeleteInstanceMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02%*#/compute/v1/instances/{instance_id}\x12\xd8\x01\n" +
	"\x0eUpdateMetadata\x126.yandex.cloud.compute.v1.UpdateInstanceMetadataRequest\x1a!.yandex.cloud.operation.Operation\"k\xb2\xd2**\n" +
	"\x1eUpdateInstanceMetadataMetadata\x12\bInstance\x82\xd3\xe4\x93\x027:\x01*\"2/compute/v1/instances/{instance_id}/updateMetadata\x12\xce\x01\n" +
	"\x13GetSerialPortOutput\x12;.yandex.cloud.compute.v1.GetInstanceSerialPortOutputRequest\x1a<.yandex.cloud.compute.v1.GetInstanceSerialPortOutputResponse\"<\x82\xd3\xe4\x93\x026\x124/compute/v1/instances/{instance_id}:serialPortOutput\x12\xba\x01\n" +
	"\x04Stop\x12,.yandex.cloud.compute.v1.StopInstanceRequest\x1a!.yandex.cloud.operation.Operation\"a\xb2\xd2*-\n" +
	"\x14StopInstanceMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02*\"(/compute/v1/instances/{instance_id}:stop\x12\xb1\x01\n" +
	"\x05Start\x12-.yandex.cloud.compute.v1.StartInstanceRequest\x1a!.yandex.cloud.operation.Operation\"V\xb2\xd2*!\n" +
	"\x15StartInstanceMetadata\x12\bInstance\x82\xd3\xe4\x93\x02+\")/compute/v1/instances/{instance_id}:start\x12\xc6\x01\n" +
	"\aRestart\x12/.yandex.cloud.compute.v1.RestartInstanceRequest\x1a!.yandex.cloud.operation.Operation\"g\xb2\xd2*0\n" +
	"\x17RestartInstanceMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02-\"+/compute/v1/instances/{instance_id}:restart\x12\xc8\x01\n" +
	"\n" +
	"AttachDisk\x122.yandex.cloud.compute.v1.AttachInstanceDiskRequest\x1a!.yandex.cloud.operation.Operation\"c\xb2\xd2*&\n" +
	"\x1aAttachInstanceDiskMetadata\x12\bInstance\x82\xd3\xe4\x93\x023:\x01*\"./compute/v1/instances/{instance_id}:attachDisk\x12\xc8\x01\n" +
	"\n" +
	"DetachDisk\x122.yandex.cloud.compute.v1.DetachInstanceDiskRequest\x1a!.yandex.cloud.operation.Operation\"c\xb2\xd2*&\n" +
	"\x1aDetachInstanceDiskMetadata\x12\bInstance\x82\xd3\xe4\x93\x023:\x01*\"./compute/v1/instances/{instance_id}:detachDisk\x12\xe0\x01\n" +
	"\x10AttachFilesystem\x128.yandex.cloud.compute.v1.AttachInstanceFilesystemRequest\x1a!.yandex.cloud.operation.Operation\"o\xb2\xd2*,\n" +
	" AttachInstanceFilesystemMetadata\x12\bInstance\x82\xd3\xe4\x93\x029:\x01*\"4/compute/v1/instances/{instance_id}:attachFilesystem\x12\xe0\x01\n" +
	"\x10DetachFilesystem\x128.yandex.cloud.compute.v1.DetachInstanceFilesystemRequest\x1a!.yandex.cloud.operation.Operation\"o\xb2\xd2*,\n" +
	" DetachInstanceFilesystemMetadata\x12\bInstance\x82\xd3\xe4\x93\x029:\x01*\"4/compute/v1/instances/{instance_id}:detachFilesystem\x12\xf8\x01\n" +
	"\x16AttachNetworkInterface\x12>.yandex.cloud.compute.v1.AttachInstanceNetworkInterfaceRequest\x1a!.yandex.cloud.operation.Operation\"{\xb2\xd2*2\n" +
	"&AttachInstanceNetworkInterfaceMetadata\x12\bInstance\x82\xd3\xe4\x93\x02?:\x01*\":/compute/v1/instances/{instance_id}:attachNetworkInterface\x12\xf8\x01\n" +
	"\x16DetachNetworkInterface\x12>.yandex.cloud.compute.v1.DetachInstanceNetworkInterfaceRequest\x1a!.yandex.cloud.operation.Operation\"{\xb2\xd2*2\n" +
	"&DetachInstanceNetworkInterfaceMetadata\x12\bInstance\x82\xd3\xe4\x93\x02?:\x01*\":/compute/v1/instances/{instance_id}:detachNetworkInterface\x12\xd8\x01\n" +
	"\x0eAddOneToOneNat\x126.yandex.cloud.compute.v1.AddInstanceOneToOneNatRequest\x1a!.yandex.cloud.operation.Operation\"k\xb2\xd2**\n" +
	"\x1eAddInstanceOneToOneNatMetadata\x12\bInstance\x82\xd3\xe4\x93\x027:\x01*\"2/compute/v1/instances/{instance_id}/addOneToOneNat\x12\xe4\x01\n" +
	"\x11RemoveOneToOneNat\x129.yandex.cloud.compute.v1.RemoveInstanceOneToOneNatRequest\x1a!.yandex.cloud.operation.Operation\"q\xb2\xd2*-\n" +
	"!RemoveInstanceOneToOneNatMetadata\x12\bInstance\x82\xd3\xe4\x93\x02::\x01*\"5/compute/v1/instances/{instance_id}/removeOneToOneNat\x12\xf8\x01\n" +
	"\x16UpdateNetworkInterface\x12>.yandex.cloud.compute.v1.UpdateInstanceNetworkInterfaceRequest\x1a!.yandex.cloud.operation.Operation\"{\xb2\xd2*2\n" +
	"&UpdateInstanceNetworkInterfaceMetadata\x12\bInstance\x82\xd3\xe4\x93\x02?:\x01*2:/compute/v1/instances/{instance_id}/updateNetworkInterface\x12\xb9\x01\n" +
	"\x0eListOperations\x126.yandex.cloud.compute.v1.ListInstanceOperationsRequest\x1a7.yandex.cloud.compute.v1.ListInstanceOperationsResponse\"6\x82\xd3\xe4\x93\x020\x12./compute/v1/instances/{instance_id}/operations\x12\xb0\x01\n" +
	"\x04Move\x12,.yandex.cloud.compute.v1.MoveInstanceRequest\x1a!.yandex.cloud.operation.Operation\"W\xb2\xd2* \n" +
	"\x14MoveInstanceMetadata\x12\bInstance\x82\xd3\xe4\x93\x02-:\x01*\"(/compute/v1/instances/{instance_id}:move\x12\xc0\x01\n" +
	"\bRelocate\x120.yandex.cloud.compute.v1.RelocateInstanceRequest\x1a!.yandex.cloud.operation.Operation\"_\xb2\xd2*$\n" +
	"\x18RelocateInstanceMetadata\x12\bInstance\x82\xd3\xe4\x93\x021:\x01*\",/compute/v1/instances/{instance_id}:relocate\x12\x8e\x02\n" +
	"\x18SimulateMaintenanceEvent\x12@.yandex.cloud.compute.v1.SimulateInstanceMaintenanceEventRequest\x1a!.yandex.cloud.operation.Operation\"\x8c\x01\xb2\xd2*A\n" +
	"(SimulateInstanceMaintenanceEventMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02A:\x01*\"</compute/v1/instances/{instance_id}:simulateMaintenanceEvent\x12\xb5\x01\n" +
	"\x12ListAccessBindings\x12..yandex.cloud.access.ListAccessBindingsRequest\x1a/.yandex.cloud.access.ListAccessBindingsResponse\">\x82\xd3\xe4\x93\x028\x126/compute/v1/instances/{resource_id}:listAccessBindings\x12\xf4\x01\n" +
	"\x11SetAccessBindings\x12-.yandex.cloud.access.SetAccessBindingsRequest\x1a!.yandex.cloud.operation.Operation\"\x8c\x01\xb2\xd2*H\n" +
	" access.SetAccessBindingsMetadata\x12$access.AccessBindingsOperationResult\x82\xd3\xe4\x93\x02::\x01*\"5/compute/v1/instances/{resource_id}:setAccessBindings\x12\x80\x02\n" +
	"\x14UpdateAccessBindings\x120.yandex.cloud.access.UpdateAccessBindingsRequest\x1a!.yandex.cloud.operation.Operation\"\x92\x01\xb2\xd2*K\n" +
	"#access.UpdateAccessBindingsMetadata\x12$access.AccessBindingsOperationResult\x82\xd3\xe4\x93\x02=:\x01*\"8/compute/v1/instances/{resource_id}:updateAccessBindingsBb\n" +
	"\x1byandex.cloud.api.compute.v1ZCgithub.com/yandex-cloud/go-genproto/yandex/cloud/compute/v1;computeb\x06proto3"

var (
	file_yandex_cloud_compute_v1_instance_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_compute_v1_instance_service_proto_rawDescData []byte
)

func file_yandex_cloud_compute_v1_instance_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_compute_v1_instance_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_compute_v1_instance_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_compute_v1_instance_service_proto_rawDesc), len(file_yandex_cloud_compute_v1_instance_service_proto_rawDesc)))
	})
	return file_yandex_cloud_compute_v1_instance_service_proto_rawDescData
}

var file_yandex_cloud_compute_v1_instance_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_yandex_cloud_compute_v1_instance_service_proto_msgTypes = make([]protoimpl.MessageInfo, 62)
var file_yandex_cloud_compute_v1_instance_service_proto_goTypes = []any{
	(InstanceView)(0),                                // 0: yandex.cloud.compute.v1.InstanceView
	(AttachedDiskSpec_Mode)(0),                       // 1: yandex.cloud.compute.v1.AttachedDiskSpec.Mode
	(AttachedFilesystemSpec_Mode)(0),                 // 2: yandex.cloud.compute.v1.AttachedFilesystemSpec.Mode
	(*GetInstanceRequest)(nil),                       // 3: yandex.cloud.compute.v1.GetInstanceRequest
	(*ListInstancesRequest)(nil),                     // 4: yandex.cloud.compute.v1.ListInstancesRequest
	(*ListInstancesResponse)(nil),                    // 5: yandex.cloud.compute.v1.ListInstancesResponse
	(*CreateInstanceRequest)(nil),                    // 6: yandex.cloud.compute.v1.CreateInstanceRequest
	(*CreateInstanceMetadata)(nil),                   // 7: yandex.cloud.compute.v1.CreateInstanceMetadata
	(*UpdateInstanceRequest)(nil),                    // 8: yandex.cloud.compute.v1.UpdateInstanceRequest
	(*UpdateInstanceMetadata)(nil),                   // 9: yandex.cloud.compute.v1.UpdateInstanceMetadata
	(*DeleteInstanceRequest)(nil),                    // 10: yandex.cloud.compute.v1.DeleteInstanceRequest
	(*DeleteInstanceMetadata)(nil),                   // 11: yandex.cloud.compute.v1.DeleteInstanceMetadata
	(*UpdateInstanceMetadataRequest)(nil),            // 12: yandex.cloud.compute.v1.UpdateInstanceMetadataRequest
	(*UpdateInstanceMetadataMetadata)(nil),           // 13: yandex.cloud.compute.v1.UpdateInstanceMetadataMetadata
	(*GetInstanceSerialPortOutputRequest)(nil),       // 14: yandex.cloud.compute.v1.GetInstanceSerialPortOutputRequest
	(*GetInstanceSerialPortOutputResponse)(nil),      // 15: yandex.cloud.compute.v1.GetInstanceSerialPortOutputResponse
	(*StopInstanceRequest)(nil),                      // 16: yandex.cloud.compute.v1.StopInstanceRequest
	(*StopInstanceMetadata)(nil),                     // 17: yandex.cloud.compute.v1.StopInstanceMetadata
	(*StartInstanceRequest)(nil),                     // 18: yandex.cloud.compute.v1.StartInstanceRequest
	(*StartInstanceMetadata)(nil),                    // 19: yandex.cloud.compute.v1.StartInstanceMetadata
	(*RestartInstanceRequest)(nil),                   // 20: yandex.cloud.compute.v1.RestartInstanceRequest
	(*RestartInstanceMetadata)(nil),                  // 21: yandex.cloud.compute.v1.RestartInstanceMetadata
	(*AttachInstanceDiskRequest)(nil),                // 22: yandex.cloud.compute.v1.AttachInstanceDiskRequest
	(*AttachInstanceDiskMetadata)(nil),               // 23: yandex.cloud.compute.v1.AttachInstanceDiskMetadata
	(*DetachInstanceDiskRequest)(nil),                // 24: yandex.cloud.compute.v1.DetachInstanceDiskRequest
	(*DetachInstanceDiskMetadata)(nil),               // 25: yandex.cloud.compute.v1.DetachInstanceDiskMetadata
	(*AttachInstanceFilesystemRequest)(nil),          // 26: yandex.cloud.compute.v1.AttachInstanceFilesystemRequest
	(*AttachInstanceFilesystemMetadata)(nil),         // 27: yandex.cloud.compute.v1.AttachInstanceFilesystemMetadata
	(*DetachInstanceFilesystemRequest)(nil),          // 28: yandex.cloud.compute.v1.DetachInstanceFilesystemRequest
	(*DetachInstanceFilesystemMetadata)(nil),         // 29: yandex.cloud.compute.v1.DetachInstanceFilesystemMetadata
	(*AttachInstanceNetworkInterfaceRequest)(nil),    // 30: yandex.cloud.compute.v1.AttachInstanceNetworkInterfaceRequest
	(*AttachInstanceNetworkInterfaceMetadata)(nil),   // 31: yandex.cloud.compute.v1.AttachInstanceNetworkInterfaceMetadata
	(*DetachInstanceNetworkInterfaceRequest)(nil),    // 32: yandex.cloud.compute.v1.DetachInstanceNetworkInterfaceRequest
	(*DetachInstanceNetworkInterfaceMetadata)(nil),   // 33: yandex.cloud.compute.v1.DetachInstanceNetworkInterfaceMetadata
	(*AddInstanceOneToOneNatRequest)(nil),            // 34: yandex.cloud.compute.v1.AddInstanceOneToOneNatRequest
	(*AddInstanceOneToOneNatMetadata)(nil),           // 35: yandex.cloud.compute.v1.AddInstanceOneToOneNatMetadata
	(*RemoveInstanceOneToOneNatRequest)(nil),         // 36: yandex.cloud.compute.v1.RemoveInstanceOneToOneNatRequest
	(*RemoveInstanceOneToOneNatMetadata)(nil),        // 37: yandex.cloud.compute.v1.RemoveInstanceOneToOneNatMetadata
	(*UpdateInstanceNetworkInterfaceRequest)(nil),    // 38: yandex.cloud.compute.v1.UpdateInstanceNetworkInterfaceRequest
	(*UpdateInstanceNetworkInterfaceMetadata)(nil),   // 39: yandex.cloud.compute.v1.UpdateInstanceNetworkInterfaceMetadata
	(*SimulateInstanceMaintenanceEventRequest)(nil),  // 40: yandex.cloud.compute.v1.SimulateInstanceMaintenanceEventRequest
	(*SimulateInstanceMaintenanceEventMetadata)(nil), // 41: yandex.cloud.compute.v1.SimulateInstanceMaintenanceEventMetadata
	(*ListInstanceOperationsRequest)(nil),            // 42: yandex.cloud.compute.v1.ListInstanceOperationsRequest
	(*ListInstanceOperationsResponse)(nil),           // 43: yandex.cloud.compute.v1.ListInstanceOperationsResponse
	(*ResourcesSpec)(nil),                            // 44: yandex.cloud.compute.v1.ResourcesSpec
	(*AttachedDiskSpec)(nil),                         // 45: yandex.cloud.compute.v1.AttachedDiskSpec
	(*AttachedLocalDiskSpec)(nil),                    // 46: yandex.cloud.compute.v1.AttachedLocalDiskSpec
	(*AttachedFilesystemSpec)(nil),                   // 47: yandex.cloud.compute.v1.AttachedFilesystemSpec
	(*NetworkInterfaceSpec)(nil),                     // 48: yandex.cloud.compute.v1.NetworkInterfaceSpec
	(*PrimaryAddressSpec)(nil),                       // 49: yandex.cloud.compute.v1.PrimaryAddressSpec
	(*OneToOneNatSpec)(nil),                          // 50: yandex.cloud.compute.v1.OneToOneNatSpec
	(*DnsRecordSpec)(nil),                            // 51: yandex.cloud.compute.v1.DnsRecordSpec
	(*MoveInstanceRequest)(nil),                      // 52: yandex.cloud.compute.v1.MoveInstanceRequest
	(*MoveInstanceMetadata)(nil),                     // 53: yandex.cloud.compute.v1.MoveInstanceMetadata
	(*RelocateInstanceRequest)(nil),                  // 54: yandex.cloud.compute.v1.RelocateInstanceRequest
	(*RelocateInstanceMetadata)(nil),                 // 55: yandex.cloud.compute.v1.RelocateInstanceMetadata
	(*GuestStopInstanceMetadata)(nil),                // 56: yandex.cloud.compute.v1.GuestStopInstanceMetadata
	(*PreemptInstanceMetadata)(nil),                  // 57: yandex.cloud.compute.v1.PreemptInstanceMetadata
	(*CrashInstanceMetadata)(nil),                    // 58: yandex.cloud.compute.v1.CrashInstanceMetadata
	nil,                                              // 59: yandex.cloud.compute.v1.CreateInstanceRequest.LabelsEntry
	nil,                                              // 60: yandex.cloud.compute.v1.CreateInstanceRequest.MetadataEntry
	nil,                                              // 61: yandex.cloud.compute.v1.UpdateInstanceRequest.LabelsEntry
	nil,                                              // 62: yandex.cloud.compute.v1.UpdateInstanceRequest.MetadataEntry
	nil,                                              // 63: yandex.cloud.compute.v1.UpdateInstanceMetadataRequest.UpsertEntry
	(*AttachedDiskSpec_DiskSpec)(nil),                // 64: yandex.cloud.compute.v1.AttachedDiskSpec.DiskSpec
	(*Instance)(nil),                                 // 65: yandex.cloud.compute.v1.Instance
	(*MetadataOptions)(nil),                          // 66: yandex.cloud.compute.v1.MetadataOptions
	(*SchedulingPolicy)(nil),                         // 67: yandex.cloud.compute.v1.SchedulingPolicy
	(*NetworkSettings)(nil),                          // 68: yandex.cloud.compute.v1.NetworkSettings
	(*PlacementPolicy)(nil),                          // 69: yandex.cloud.compute.v1.PlacementPolicy
	(*GpuSettings)(nil),                              // 70: yandex.cloud.compute.v1.GpuSettings
	(MaintenancePolicy)(0),                           // 71: yandex.cloud.compute.v1.MaintenancePolicy
	(*durationpb.Duration)(nil),                      // 72: google.protobuf.Duration
	(*SerialPortSettings)(nil),                       // 73: yandex.cloud.compute.v1.SerialPortSettings
	(*fieldmaskpb.FieldMask)(nil),                    // 74: google.protobuf.FieldMask
	(*operation.Operation)(nil),                      // 75: yandex.cloud.operation.Operation
	(IpVersion)(0),                                   // 76: yandex.cloud.compute.v1.IpVersion
	(*DiskPlacementPolicy)(nil),                      // 77: yandex.cloud.compute.v1.DiskPlacementPolicy
	(*DiskPlacementPolicyChange)(nil),                // 78: yandex.cloud.compute.v1.DiskPlacementPolicyChange
	(*access.ListAccessBindingsRequest)(nil),         // 79: yandex.cloud.access.ListAccessBindingsRequest
	(*access.SetAccessBindingsRequest)(nil),          // 80: yandex.cloud.access.SetAccessBindingsRequest
	(*access.UpdateAccessBindingsRequest)(nil),       // 81: yandex.cloud.access.UpdateAccessBindingsRequest
	(*access.ListAccessBindingsResponse)(nil),        // 82: yandex.cloud.access.ListAccessBindingsResponse
}
var file_yandex_cloud_compute_v1_instance_service_proto_depIdxs = []int32{
	0,  // 0: yandex.cloud.compute.v1.GetInstanceRequest.view:type_name -> yandex.cloud.compute.v1.InstanceView
	65, // 1: yandex.cloud.compute.v1.ListInstancesResponse.instances:type_name -> yandex.cloud.compute.v1.Instance
	59, // 2: yandex.cloud.compute.v1.CreateInstanceRequest.labels:type_name -> yandex.cloud.compute.v1.CreateInstanceRequest.LabelsEntry
	44, // 3: yandex.cloud.compute.v1.CreateInstanceRequest.resources_spec:type_name -> yandex.cloud.compute.v1.ResourcesSpec
	60, // 4: yandex.cloud.compute.v1.CreateInstanceRequest.metadata:type_name -> yandex.cloud.compute.v1.CreateInstanceRequest.MetadataEntry
	66, // 5: yandex.cloud.compute.v1.CreateInstanceRequest.metadata_options:type_name -> yandex.cloud.compute.v1.MetadataOptions
	45, // 6: yandex.cloud.compute.v1.CreateInstanceRequest.boot_disk_spec:type_name -> yandex.cloud.compute.v1.AttachedDiskSpec
	45, // 7: yandex.cloud.compute.v1.CreateInstanceRequest.secondary_disk_specs:type_name -> yandex.cloud.compute.v1.AttachedDiskSpec
	46, // 8: yandex.cloud.compute.v1.CreateInstanceRequest.local_disk_specs:type_name -> yandex.cloud.compute.v1.AttachedLocalDiskSpec
	47, // 9: yandex.cloud.compute.v1.CreateInstanceRequest.filesystem_specs:type_name -> yandex.cloud.compute.v1.AttachedFilesystemSpec
	48, // 10: yandex.cloud.compute.v1.CreateInstanceRequest.network_interface_specs:type_name -> yandex.cloud.compute.v1.NetworkInterfaceSpec
	67, // 11: yandex.cloud.compute.v1.CreateInstanceRequest.scheduling_policy:type_name -> yandex.cloud.compute.v1.SchedulingPolicy
	68, // 12: yandex.cloud.compute.v1.CreateInstanceRequest.network_settings:type_name -> yandex.cloud.compute.v1.NetworkSettings
	69, // 13: yandex.cloud.compute.v1.CreateInstanceRequest.placement_policy:type_name -> yandex.cloud.compute.v1.PlacementPolicy
	70, // 14: yandex.cloud.compute.v1.CreateInstanceRequest.gpu_settings:type_name -> yandex.cloud.compute.v1.GpuSettings
	71, // 15: yandex.cloud.compute.v1.CreateInstanceRequest.maintenance_policy:type_name -> yandex.cloud.compute.v1.MaintenancePolicy
	72, // 16: yandex.cloud.compute.v1.CreateInstanceRequest.maintenance_grace_period:type_name -> google.protobuf.Duration
	73, // 17: yandex.cloud.compute.v1.CreateInstanceRequest.serial_port_settings:type_name -> yandex.cloud.compute.v1.SerialPortSettings
	74, // 18: yandex.cloud.compute.v1.UpdateInstanceRequest.update_mask:type_name -> google.protobuf.FieldMask
	61, // 19: yandex.cloud.compute.v1.UpdateInstanceRequest.labels:type_name -> yandex.cloud.compute.v1.UpdateInstanceRequest.LabelsEntry
	44, // 20: yandex.cloud.compute.v1.UpdateInstanceRequest.resources_spec:type_name -> yandex.cloud.compute.v1.ResourcesSpec
	62, // 21: yandex.cloud.compute.v1.UpdateInstanceRequest.metadata:type_name -> yandex.cloud.compute.v1.UpdateInstanceRequest.MetadataEntry
	66, // 22: yandex.cloud.compute.v1.UpdateInstanceRequest.metadata_options:type_name -> yandex.cloud.compute.v1.MetadataOptions
	68, // 23: yandex.cloud.compute.v1.UpdateInstanceRequest.network_settings:type_name -> yandex.cloud.compute.v1.NetworkSettings
	69, // 24: yandex.cloud.compute.v1.UpdateInstanceRequest.placement_policy:type_name -> yandex.cloud.compute.v1.PlacementPolicy
	67, // 25: yandex.cloud.compute.v1.UpdateInstanceRequest.scheduling_policy:type_name -> yandex.cloud.compute.v1.SchedulingPolicy
	71, // 26: yandex.cloud.compute.v1.UpdateInstanceRequest.maintenance_policy:type_name -> yandex.cloud.compute.v1.MaintenancePolicy
	72, // 27: yandex.cloud.compute.v1.UpdateInstanceRequest.maintenance_grace_period:type_name -> google.protobuf.Duration
	73, // 28: yandex.cloud.compute.v1.UpdateInstanceRequest.serial_port_settings:type_name -> yandex.cloud.compute.v1.SerialPortSettings
	63, // 29: yandex.cloud.compute.v1.UpdateInstanceMetadataRequest.upsert:type_name -> yandex.cloud.compute.v1.UpdateInstanceMetadataRequest.UpsertEntry
	45, // 30: yandex.cloud.compute.v1.AttachInstanceDiskRequest.attached_disk_spec:type_name -> yandex.cloud.compute.v1.AttachedDiskSpec
	47, // 31: yandex.cloud.compute.v1.AttachInstanceFilesystemRequest.attached_filesystem_spec:type_name -> yandex.cloud.compute.v1.AttachedFilesystemSpec
	49, // 32: yandex.cloud.compute.v1.AttachInstanceNetworkInterfaceRequest.primary_v4_address_spec:type_name -> yandex.cloud.compute.v1.PrimaryAddressSpec
	50, // 33: yandex.cloud.compute.v1.AddInstanceOneToOneNatRequest.one_to_one_nat_spec:type_name -> yandex.cloud.compute.v1.OneToOneNatSpec
	74, // 34: yandex.cloud.compute.v1.UpdateInstanceNetworkInterfaceRequest.update_mask:type_name -> google.protobuf.FieldMask
	49, // 35: yandex.cloud.compute.v1.UpdateInstanceNetworkInterfaceRequest.primary_v4_address_spec:type_name -> yandex.cloud.compute.v1.PrimaryAddressSpec
	49, // 36: yandex.cloud.compute.v1.UpdateInstanceNetworkInterfaceRequest.primary_v6_address_spec:type_name -> yandex.cloud.compute.v1.PrimaryAddressSpec
	75, // 37: yandex.cloud.compute.v1.ListInstanceOperationsResponse.operations:type_name -> yandex.cloud.operation.Operation
	1,  // 38: yandex.cloud.compute.v1.AttachedDiskSpec.mode:type_name -> yandex.cloud.compute.v1.AttachedDiskSpec.Mode
	64, // 39: yandex.cloud.compute.v1.AttachedDiskSpec.disk_spec:type_name -> yandex.cloud.compute.v1.AttachedDiskSpec.DiskSpec
	2,  // 40: yandex.cloud.compute.v1.AttachedFilesystemSpec.mode:type_name -> yandex.cloud.compute.v1.AttachedFilesystemSpec.Mode
	49, // 41: yandex.cloud.compute.v1.NetworkInterfaceSpec.primary_v4_address_spec:type_name -> yandex.cloud.compute.v1.PrimaryAddressSpec
	49, // 42: yandex.cloud.compute.v1.NetworkInterfaceSpec.primary_v6_address_spec:type_name -> yandex.cloud.compute.v1.PrimaryAddressSpec
	50, // 43: yandex.cloud.compute.v1.PrimaryAddressSpec.one_to_one_nat_spec:type_name -> yandex.cloud.compute.v1.OneToOneNatSpec
	51, // 44: yandex.cloud.compute.v1.PrimaryAddressSpec.dns_record_specs:type_name -> yandex.cloud.compute.v1.DnsRecordSpec
	76, // 45: yandex.cloud.compute.v1.OneToOneNatSpec.ip_version:type_name -> yandex.cloud.compute.v1.IpVersion
	51, // 46: yandex.cloud.compute.v1.OneToOneNatSpec.dns_record_specs:type_name -> yandex.cloud.compute.v1.DnsRecordSpec
	48, // 47: yandex.cloud.compute.v1.RelocateInstanceRequest.network_interface_specs:type_name -> yandex.cloud.compute.v1.NetworkInterfaceSpec
	77, // 48: yandex.cloud.compute.v1.RelocateInstanceRequest.boot_disk_placement:type_name -> yandex.cloud.compute.v1.DiskPlacementPolicy
	78, // 49: yandex.cloud.compute.v1.RelocateInstanceRequest.secondary_disk_placements:type_name -> yandex.cloud.compute.v1.DiskPlacementPolicyChange
	77, // 50: yandex.cloud.compute.v1.AttachedDiskSpec.DiskSpec.disk_placement_policy:type_name -> yandex.cloud.compute.v1.DiskPlacementPolicy
	3,  // 51: yandex.cloud.compute.v1.InstanceService.Get:input_type -> yandex.cloud.compute.v1.GetInstanceRequest
	4,  // 52: yandex.cloud.compute.v1.InstanceService.List:input_type -> yandex.cloud.compute.v1.ListInstancesRequest
	6,  // 53: yandex.cloud.compute.v1.InstanceService.Create:input_type -> yandex.cloud.compute.v1.CreateInstanceRequest
	8,  // 54: yandex.cloud.compute.v1.InstanceService.Update:input_type -> yandex.cloud.compute.v1.UpdateInstanceRequest
	10, // 55: yandex.cloud.compute.v1.InstanceService.Delete:input_type -> yandex.cloud.compute.v1.DeleteInstanceRequest
	12, // 56: yandex.cloud.compute.v1.InstanceService.UpdateMetadata:input_type -> yandex.cloud.compute.v1.UpdateInstanceMetadataRequest
	14, // 57: yandex.cloud.compute.v1.InstanceService.GetSerialPortOutput:input_type -> yandex.cloud.compute.v1.GetInstanceSerialPortOutputRequest
	16, // 58: yandex.cloud.compute.v1.InstanceService.Stop:input_type -> yandex.cloud.compute.v1.StopInstanceRequest
	18, // 59: yandex.cloud.compute.v1.InstanceService.Start:input_type -> yandex.cloud.compute.v1.StartInstanceRequest
	20, // 60: yandex.cloud.compute.v1.InstanceService.Restart:input_type -> yandex.cloud.compute.v1.RestartInstanceRequest
	22, // 61: yandex.cloud.compute.v1.InstanceService.AttachDisk:input_type -> yandex.cloud.compute.v1.AttachInstanceDiskRequest
	24, // 62: yandex.cloud.compute.v1.InstanceService.DetachDisk:input_type -> yandex.cloud.compute.v1.DetachInstanceDiskRequest
	26, // 63: yandex.cloud.compute.v1.InstanceService.AttachFilesystem:input_type -> yandex.cloud.compute.v1.AttachInstanceFilesystemRequest
	28, // 64: yandex.cloud.compute.v1.InstanceService.DetachFilesystem:input_type -> yandex.cloud.compute.v1.DetachInstanceFilesystemRequest
	30, // 65: yandex.cloud.compute.v1.InstanceService.AttachNetworkInterface:input_type -> yandex.cloud.compute.v1.AttachInstanceNetworkInterfaceRequest
	32, // 66: yandex.cloud.compute.v1.InstanceService.DetachNetworkInterface:input_type -> yandex.cloud.compute.v1.DetachInstanceNetworkInterfaceRequest
	34, // 67: yandex.cloud.compute.v1.InstanceService.AddOneToOneNat:input_type -> yandex.cloud.compute.v1.AddInstanceOneToOneNatRequest
	36, // 68: yandex.cloud.compute.v1.InstanceService.RemoveOneToOneNat:input_type -> yandex.cloud.compute.v1.RemoveInstanceOneToOneNatRequest
	38, // 69: yandex.cloud.compute.v1.InstanceService.UpdateNetworkInterface:input_type -> yandex.cloud.compute.v1.UpdateInstanceNetworkInterfaceRequest
	42, // 70: yandex.cloud.compute.v1.InstanceService.ListOperations:input_type -> yandex.cloud.compute.v1.ListInstanceOperationsRequest
	52, // 71: yandex.cloud.compute.v1.InstanceService.Move:input_type -> yandex.cloud.compute.v1.MoveInstanceRequest
	54, // 72: yandex.cloud.compute.v1.InstanceService.Relocate:input_type -> yandex.cloud.compute.v1.RelocateInstanceRequest
	40, // 73: yandex.cloud.compute.v1.InstanceService.SimulateMaintenanceEvent:input_type -> yandex.cloud.compute.v1.SimulateInstanceMaintenanceEventRequest
	79, // 74: yandex.cloud.compute.v1.InstanceService.ListAccessBindings:input_type -> yandex.cloud.access.ListAccessBindingsRequest
	80, // 75: yandex.cloud.compute.v1.InstanceService.SetAccessBindings:input_type -> yandex.cloud.access.SetAccessBindingsRequest
	81, // 76: yandex.cloud.compute.v1.InstanceService.UpdateAccessBindings:input_type -> yandex.cloud.access.UpdateAccessBindingsRequest
	65, // 77: yandex.cloud.compute.v1.InstanceService.Get:output_type -> yandex.cloud.compute.v1.Instance
	5,  // 78: yandex.cloud.compute.v1.InstanceService.List:output_type -> yandex.cloud.compute.v1.ListInstancesResponse
	75, // 79: yandex.cloud.compute.v1.InstanceService.Create:output_type -> yandex.cloud.operation.Operation
	75, // 80: yandex.cloud.compute.v1.InstanceService.Update:output_type -> yandex.cloud.operation.Operation
	75, // 81: yandex.cloud.compute.v1.InstanceService.Delete:output_type -> yandex.cloud.operation.Operation
	75, // 82: yandex.cloud.compute.v1.InstanceService.UpdateMetadata:output_type -> yandex.cloud.operation.Operation
	15, // 83: yandex.cloud.compute.v1.InstanceService.GetSerialPortOutput:output_type -> yandex.cloud.compute.v1.GetInstanceSerialPortOutputResponse
	75, // 84: yandex.cloud.compute.v1.InstanceService.Stop:output_type -> yandex.cloud.operation.Operation
	75, // 85: yandex.cloud.compute.v1.InstanceService.Start:output_type -> yandex.cloud.operation.Operation
	75, // 86: yandex.cloud.compute.v1.InstanceService.Restart:output_type -> yandex.cloud.operation.Operation
	75, // 87: yandex.cloud.compute.v1.InstanceService.AttachDisk:output_type -> yandex.cloud.operation.Operation
	75, // 88: yandex.cloud.compute.v1.InstanceService.DetachDisk:output_type -> yandex.cloud.operation.Operation
	75, // 89: yandex.cloud.compute.v1.InstanceService.AttachFilesystem:output_type -> yandex.cloud.operation.Operation
	75, // 90: yandex.cloud.compute.v1.InstanceService.DetachFilesystem:output_type -> yandex.cloud.operation.Operation
	75, // 91: yandex.cloud.compute.v1.InstanceService.AttachNetworkInterface:output_type -> yandex.cloud.operation.Operation
	75, // 92: yandex.cloud.compute.v1.InstanceService.DetachNetworkInterface:output_type -> yandex.cloud.operation.Operation
	75, // 93: yandex.cloud.compute.v1.InstanceService.AddOneToOneNat:output_type -> yandex.cloud.operation.Operation
	75, // 94: yandex.cloud.compute.v1.InstanceService.RemoveOneToOneNat:output_type -> yandex.cloud.operation.Operation
	75, // 95: yandex.cloud.compute.v1.InstanceService.UpdateNetworkInterface:output_type -> yandex.cloud.operation.Operation
	43, // 96: yandex.cloud.compute.v1.InstanceService.ListOperations:output_type -> yandex.cloud.compute.v1.ListInstanceOperationsResponse
	75, // 97: yandex.cloud.compute.v1.InstanceService.Move:output_type -> yandex.cloud.operation.Operation
	75, // 98: yandex.cloud.compute.v1.InstanceService.Relocate:output_type -> yandex.cloud.operation.Operation
	75, // 99: yandex.cloud.compute.v1.InstanceService.SimulateMaintenanceEvent:output_type -> yandex.cloud.operation.Operation
	82, // 100: yandex.cloud.compute.v1.InstanceService.ListAccessBindings:output_type -> yandex.cloud.access.ListAccessBindingsResponse
	75, // 101: yandex.cloud.compute.v1.InstanceService.SetAccessBindings:output_type -> yandex.cloud.operation.Operation
	75, // 102: yandex.cloud.compute.v1.InstanceService.UpdateAccessBindings:output_type -> yandex.cloud.operation.Operation
	77, // [77:103] is the sub-list for method output_type
	51, // [51:77] is the sub-list for method input_type
	51, // [51:51] is the sub-list for extension type_name
	51, // [51:51] is the sub-list for extension extendee
	0,  // [0:51] is the sub-list for field type_name
}

func init() { file_yandex_cloud_compute_v1_instance_service_proto_init() }
func file_yandex_cloud_compute_v1_instance_service_proto_init() {
	if File_yandex_cloud_compute_v1_instance_service_proto != nil {
		return
	}
	file_yandex_cloud_compute_v1_disk_proto_init()
	file_yandex_cloud_compute_v1_instance_proto_init()
	file_yandex_cloud_compute_v1_maintenance_proto_init()
	file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[21].OneofWrappers = []any{
		(*DetachInstanceDiskRequest_DiskId)(nil),
		(*DetachInstanceDiskRequest_DeviceName)(nil),
	}
	file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[25].OneofWrappers = []any{
		(*DetachInstanceFilesystemRequest_FilesystemId)(nil),
		(*DetachInstanceFilesystemRequest_DeviceName)(nil),
	}
	file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[42].OneofWrappers = []any{
		(*AttachedDiskSpec_DiskSpec_)(nil),
		(*AttachedDiskSpec_DiskId)(nil),
	}
	file_yandex_cloud_compute_v1_instance_service_proto_msgTypes[61].OneofWrappers = []any{
		(*AttachedDiskSpec_DiskSpec_ImageId)(nil),
		(*AttachedDiskSpec_DiskSpec_SnapshotId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_compute_v1_instance_service_proto_rawDesc), len(file_yandex_cloud_compute_v1_instance_service_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   62,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_compute_v1_instance_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_compute_v1_instance_service_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_compute_v1_instance_service_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_compute_v1_instance_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_compute_v1_instance_service_proto = out.File
	file_yandex_cloud_compute_v1_instance_service_proto_goTypes = nil
	file_yandex_cloud_compute_v1_instance_service_proto_depIdxs = nil
}

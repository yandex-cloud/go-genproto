// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/compute/v1/reserved_instance_pool.proto

package compute

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductIDs struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// License IDs that indicate which licenses are attached to resource.
	// License IDs are used to calculate additional charges for the use of the virtual machine.
	ProductIds    []string `protobuf:"bytes,1,rep,name=product_ids,json=productIds,proto3" json:"product_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductIDs) Reset() {
	*x = ProductIDs{}
	mi := &file_yandex_cloud_compute_v1_reserved_instance_pool_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductIDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductIDs) ProtoMessage() {}

func (x *ProductIDs) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_reserved_instance_pool_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductIDs.ProtoReflect.Descriptor instead.
func (*ProductIDs) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_reserved_instance_pool_proto_rawDescGZIP(), []int{0}
}

func (x *ProductIDs) GetProductIds() []string {
	if x != nil {
		return x.ProductIds
	}
	return nil
}

// Specification used to determine required product_ids
// You can specify product ids explicitly or use disk_id|image_id|snapshot_id to infer products ids from them.
type BootDiskSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to BootSource:
	//
	//	*BootDiskSpec_DiskId
	//	*BootDiskSpec_ImageId
	//	*BootDiskSpec_SnapshotId
	//	*BootDiskSpec_ProductIds
	BootSource    isBootDiskSpec_BootSource `protobuf_oneof:"boot_source"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootDiskSpec) Reset() {
	*x = BootDiskSpec{}
	mi := &file_yandex_cloud_compute_v1_reserved_instance_pool_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootDiskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootDiskSpec) ProtoMessage() {}

func (x *BootDiskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_reserved_instance_pool_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootDiskSpec.ProtoReflect.Descriptor instead.
func (*BootDiskSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_reserved_instance_pool_proto_rawDescGZIP(), []int{1}
}

func (x *BootDiskSpec) GetBootSource() isBootDiskSpec_BootSource {
	if x != nil {
		return x.BootSource
	}
	return nil
}

func (x *BootDiskSpec) GetDiskId() string {
	if x != nil {
		if x, ok := x.BootSource.(*BootDiskSpec_DiskId); ok {
			return x.DiskId
		}
	}
	return ""
}

func (x *BootDiskSpec) GetImageId() string {
	if x != nil {
		if x, ok := x.BootSource.(*BootDiskSpec_ImageId); ok {
			return x.ImageId
		}
	}
	return ""
}

func (x *BootDiskSpec) GetSnapshotId() string {
	if x != nil {
		if x, ok := x.BootSource.(*BootDiskSpec_SnapshotId); ok {
			return x.SnapshotId
		}
	}
	return ""
}

func (x *BootDiskSpec) GetProductIds() *ProductIDs {
	if x != nil {
		if x, ok := x.BootSource.(*BootDiskSpec_ProductIds); ok {
			return x.ProductIds
		}
	}
	return nil
}

type isBootDiskSpec_BootSource interface {
	isBootDiskSpec_BootSource()
}

type BootDiskSpec_DiskId struct {
	// Disk ID.
	DiskId string `protobuf:"bytes,1,opt,name=disk_id,json=diskId,proto3,oneof"`
}

type BootDiskSpec_ImageId struct {
	// Image ID.
	ImageId string `protobuf:"bytes,2,opt,name=image_id,json=imageId,proto3,oneof"`
}

type BootDiskSpec_SnapshotId struct {
	// Snapshot ID.
	SnapshotId string `protobuf:"bytes,3,opt,name=snapshot_id,json=snapshotId,proto3,oneof"`
}

type BootDiskSpec_ProductIds struct {
	// Product IDs.
	ProductIds *ProductIDs `protobuf:"bytes,4,opt,name=product_ids,json=productIds,proto3,oneof"`
}

func (*BootDiskSpec_DiskId) isBootDiskSpec_BootSource() {}

func (*BootDiskSpec_ImageId) isBootDiskSpec_BootSource() {}

func (*BootDiskSpec_SnapshotId) isBootDiskSpec_BootSource() {}

func (*BootDiskSpec_ProductIds) isBootDiskSpec_BootSource() {}

// A Reserved Instance Pool resource.
type ReservedInstancePool struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the pool.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the availability zone where the pool resides.
	ZoneId string `protobuf:"bytes,2,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// ID of the cloud that the pool belongs to.
	CloudId string `protobuf:"bytes,3,opt,name=cloud_id,json=cloudId,proto3" json:"cloud_id,omitempty"`
	// ID of the folder that the pool belongs to.
	FolderId string `protobuf:"bytes,4,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Name of the pool. 1-63 characters long.
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the pool. 0-256 characters long.
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels as `key:value` pairs. Maximum of 64 per resource.
	Labels    map[string]string      `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// ID of the hardware platform configuration for pool instances.
	PlatformId string `protobuf:"bytes,9,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	// Computing resources of pool instances, such as the amount of memory and number of cores.
	ResourcesSpec *ResourcesSpec `protobuf:"bytes,10,opt,name=resources_spec,json=resourcesSpec,proto3" json:"resources_spec,omitempty"`
	// GPU settings.
	GpuSettings *GpuSettings `protobuf:"bytes,11,opt,name=gpu_settings,json=gpuSettings,proto3" json:"gpu_settings,omitempty"`
	// License IDs that indicate which licenses are attached to resource.
	// License IDs are used to calculate additional charges for the use of the virtual machine.
	ProductIds []string `protobuf:"bytes,12,rep,name=product_ids,json=productIds,proto3" json:"product_ids,omitempty"`
	// Network Settings.
	NetworkSettings *NetworkSettings `protobuf:"bytes,13,opt,name=network_settings,json=networkSettings,proto3" json:"network_settings,omitempty"`
	// Desired size of the pool (number of slots for instances in this pool).
	Size          int64 `protobuf:"varint,14,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReservedInstancePool) Reset() {
	*x = ReservedInstancePool{}
	mi := &file_yandex_cloud_compute_v1_reserved_instance_pool_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReservedInstancePool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservedInstancePool) ProtoMessage() {}

func (x *ReservedInstancePool) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_reserved_instance_pool_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservedInstancePool.ProtoReflect.Descriptor instead.
func (*ReservedInstancePool) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_reserved_instance_pool_proto_rawDescGZIP(), []int{2}
}

func (x *ReservedInstancePool) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReservedInstancePool) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *ReservedInstancePool) GetCloudId() string {
	if x != nil {
		return x.CloudId
	}
	return ""
}

func (x *ReservedInstancePool) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ReservedInstancePool) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReservedInstancePool) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ReservedInstancePool) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ReservedInstancePool) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ReservedInstancePool) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *ReservedInstancePool) GetResourcesSpec() *ResourcesSpec {
	if x != nil {
		return x.ResourcesSpec
	}
	return nil
}

func (x *ReservedInstancePool) GetGpuSettings() *GpuSettings {
	if x != nil {
		return x.GpuSettings
	}
	return nil
}

func (x *ReservedInstancePool) GetProductIds() []string {
	if x != nil {
		return x.ProductIds
	}
	return nil
}

func (x *ReservedInstancePool) GetNetworkSettings() *NetworkSettings {
	if x != nil {
		return x.NetworkSettings
	}
	return nil
}

func (x *ReservedInstancePool) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

var File_yandex_cloud_compute_v1_reserved_instance_pool_proto protoreflect.FileDescriptor

const file_yandex_cloud_compute_v1_reserved_instance_pool_proto_rawDesc = "" +
	"\n" +
	"4yandex/cloud/compute/v1/reserved_instance_pool.proto\x12\x17yandex.cloud.compute.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a&yandex/cloud/compute/v1/instance.proto\x1a.yandex/cloud/compute/v1/instance_service.proto\x1a\x1dyandex/cloud/validation.proto\"7\n" +
	"\n" +
	"ProductIDs\x12)\n" +
	"\vproduct_ids\x18\x01 \x03(\tB\b\x8a\xc81\x04<=50R\n" +
	"productIds\"\xe4\x01\n" +
	"\fBootDiskSpec\x12#\n" +
	"\adisk_id\x18\x01 \x01(\tB\b\x8a\xc81\x04<=50H\x00R\x06diskId\x12%\n" +
	"\bimage_id\x18\x02 \x01(\tB\b\x8a\xc81\x04<=50H\x00R\aimageId\x12+\n" +
	"\vsnapshot_id\x18\x03 \x01(\tB\b\x8a\xc81\x04<=50H\x00R\n" +
	"snapshotId\x12F\n" +
	"\vproduct_ids\x18\x04 \x01(\v2#.yandex.cloud.compute.v1.ProductIDsH\x00R\n" +
	"productIdsB\x13\n" +
	"\vboot_source\x12\x04\xc0\xc11\x01\"\xb9\x05\n" +
	"\x14ReservedInstancePool\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\azone_id\x18\x02 \x01(\tR\x06zoneId\x12\x19\n" +
	"\bcloud_id\x18\x03 \x01(\tR\acloudId\x12\x1b\n" +
	"\tfolder_id\x18\x04 \x01(\tR\bfolderId\x12\x12\n" +
	"\x04name\x18\x05 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12Q\n" +
	"\x06labels\x18\a \x03(\v29.yandex.cloud.compute.v1.ReservedInstancePool.LabelsEntryR\x06labels\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x1f\n" +
	"\vplatform_id\x18\t \x01(\tR\n" +
	"platformId\x12M\n" +
	"\x0eresources_spec\x18\n" +
	" \x01(\v2&.yandex.cloud.compute.v1.ResourcesSpecR\rresourcesSpec\x12G\n" +
	"\fgpu_settings\x18\v \x01(\v2$.yandex.cloud.compute.v1.GpuSettingsR\vgpuSettings\x12\x1f\n" +
	"\vproduct_ids\x18\f \x03(\tR\n" +
	"productIds\x12S\n" +
	"\x10network_settings\x18\r \x01(\v2(.yandex.cloud.compute.v1.NetworkSettingsR\x0fnetworkSettings\x12\x12\n" +
	"\x04size\x18\x0e \x01(\x03R\x04size\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01Bb\n" +
	"\x1byandex.cloud.api.compute.v1ZCgithub.com/yandex-cloud/go-genproto/yandex/cloud/compute/v1;computeb\x06proto3"

var (
	file_yandex_cloud_compute_v1_reserved_instance_pool_proto_rawDescOnce sync.Once
	file_yandex_cloud_compute_v1_reserved_instance_pool_proto_rawDescData []byte
)

func file_yandex_cloud_compute_v1_reserved_instance_pool_proto_rawDescGZIP() []byte {
	file_yandex_cloud_compute_v1_reserved_instance_pool_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_compute_v1_reserved_instance_pool_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_compute_v1_reserved_instance_pool_proto_rawDesc), len(file_yandex_cloud_compute_v1_reserved_instance_pool_proto_rawDesc)))
	})
	return file_yandex_cloud_compute_v1_reserved_instance_pool_proto_rawDescData
}

var file_yandex_cloud_compute_v1_reserved_instance_pool_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_yandex_cloud_compute_v1_reserved_instance_pool_proto_goTypes = []any{
	(*ProductIDs)(nil),            // 0: yandex.cloud.compute.v1.ProductIDs
	(*BootDiskSpec)(nil),          // 1: yandex.cloud.compute.v1.BootDiskSpec
	(*ReservedInstancePool)(nil),  // 2: yandex.cloud.compute.v1.ReservedInstancePool
	nil,                           // 3: yandex.cloud.compute.v1.ReservedInstancePool.LabelsEntry
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*ResourcesSpec)(nil),         // 5: yandex.cloud.compute.v1.ResourcesSpec
	(*GpuSettings)(nil),           // 6: yandex.cloud.compute.v1.GpuSettings
	(*NetworkSettings)(nil),       // 7: yandex.cloud.compute.v1.NetworkSettings
}
var file_yandex_cloud_compute_v1_reserved_instance_pool_proto_depIdxs = []int32{
	0, // 0: yandex.cloud.compute.v1.BootDiskSpec.product_ids:type_name -> yandex.cloud.compute.v1.ProductIDs
	3, // 1: yandex.cloud.compute.v1.ReservedInstancePool.labels:type_name -> yandex.cloud.compute.v1.ReservedInstancePool.LabelsEntry
	4, // 2: yandex.cloud.compute.v1.ReservedInstancePool.created_at:type_name -> google.protobuf.Timestamp
	5, // 3: yandex.cloud.compute.v1.ReservedInstancePool.resources_spec:type_name -> yandex.cloud.compute.v1.ResourcesSpec
	6, // 4: yandex.cloud.compute.v1.ReservedInstancePool.gpu_settings:type_name -> yandex.cloud.compute.v1.GpuSettings
	7, // 5: yandex.cloud.compute.v1.ReservedInstancePool.network_settings:type_name -> yandex.cloud.compute.v1.NetworkSettings
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_yandex_cloud_compute_v1_reserved_instance_pool_proto_init() }
func file_yandex_cloud_compute_v1_reserved_instance_pool_proto_init() {
	if File_yandex_cloud_compute_v1_reserved_instance_pool_proto != nil {
		return
	}
	file_yandex_cloud_compute_v1_instance_proto_init()
	file_yandex_cloud_compute_v1_instance_service_proto_init()
	file_yandex_cloud_compute_v1_reserved_instance_pool_proto_msgTypes[1].OneofWrappers = []any{
		(*BootDiskSpec_DiskId)(nil),
		(*BootDiskSpec_ImageId)(nil),
		(*BootDiskSpec_SnapshotId)(nil),
		(*BootDiskSpec_ProductIds)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_compute_v1_reserved_instance_pool_proto_rawDesc), len(file_yandex_cloud_compute_v1_reserved_instance_pool_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_compute_v1_reserved_instance_pool_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_compute_v1_reserved_instance_pool_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_compute_v1_reserved_instance_pool_proto_msgTypes,
	}.Build()
	File_yandex_cloud_compute_v1_reserved_instance_pool_proto = out.File
	file_yandex_cloud_compute_v1_reserved_instance_pool_proto_goTypes = nil
	file_yandex_cloud_compute_v1_reserved_instance_pool_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/compute/v1/snapshot_schedule_service.proto

package compute

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	access "github.com/yandex-cloud/go-genproto/yandex/cloud/access"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSnapshotScheduleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the snapshot schedule to return.
	//
	// To get a schedule ID, make a [SnapshotScheduleService.List] request.
	SnapshotScheduleId string `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId,proto3" json:"snapshot_schedule_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetSnapshotScheduleRequest) Reset() {
	*x = GetSnapshotScheduleRequest{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSnapshotScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSnapshotScheduleRequest) ProtoMessage() {}

func (x *GetSnapshotScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSnapshotScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetSnapshotScheduleRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetSnapshotScheduleRequest) GetSnapshotScheduleId() string {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return ""
}

type ListSnapshotSchedulesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to list snapshot schedules in.
	//
	// To get the folder ID, make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than `page_size`, the service returns a [ListSnapshotSchedulesResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set `page_token` to the
	// [ListSnapshotSchedulesResponse.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters snapshot schedules listed in the response.
	//
	// The expression must specify:
	// 1. The field name. Currently you can use filtering only on [SnapshotSchedule.name] field.
	// 2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
	// 3. The value. Must be 3-63 characters long and match the regular expression `^[a-z][-a-z0-9]{1,61}[a-z0-9]`.
	// Example of a filter: `name=my-schedule`.
	Filter string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	// A sorting expression that sorts snapshot schedules listed in the response.
	//
	// The expression must specify the field name from [SnapshotSchedule] and `asc`ending or `desc`ending order,
	// e.g. `createdAt desc`.
	//
	// Default value: `id asc`.
	OrderBy       string `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSnapshotSchedulesRequest) Reset() {
	*x = ListSnapshotSchedulesRequest{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSnapshotSchedulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotSchedulesRequest) ProtoMessage() {}

func (x *ListSnapshotSchedulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotSchedulesRequest.ProtoReflect.Descriptor instead.
func (*ListSnapshotSchedulesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListSnapshotSchedulesRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListSnapshotSchedulesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSnapshotSchedulesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListSnapshotSchedulesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListSnapshotSchedulesRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListSnapshotSchedulesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of snapshot schedules in the specified folder.
	SnapshotSchedules []*SnapshotSchedule `protobuf:"bytes,1,rep,name=snapshot_schedules,json=snapshotSchedules,proto3" json:"snapshot_schedules,omitempty"`
	// Token for getting the next page of the list. If the number of results is greater than
	// the specified [ListSnapshotSchedulesRequest.page_size], use `next_page_token` as the value
	// for the [ListSnapshotSchedulesRequest.page_token] parameter in the next list request.
	//
	// Each subsequent page will have its own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSnapshotSchedulesResponse) Reset() {
	*x = ListSnapshotSchedulesResponse{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSnapshotSchedulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotSchedulesResponse) ProtoMessage() {}

func (x *ListSnapshotSchedulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotSchedulesResponse.ProtoReflect.Descriptor instead.
func (*ListSnapshotSchedulesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListSnapshotSchedulesResponse) GetSnapshotSchedules() []*SnapshotSchedule {
	if x != nil {
		return x.SnapshotSchedules
	}
	return nil
}

func (x *ListSnapshotSchedulesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateSnapshotScheduleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to create a snapshot schedule in.
	//
	// Snapshots are created in the same folder as the schedule, even if disks from other folders are attached
	// to the schedule.
	//
	// To get a folder ID, make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Name of the snapshot schedule.
	//
	// The name must be unique within the folder.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the snapshot schedule.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Snapshot schedule labels as `key:value` pairs.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Frequency settings of the snapshot schedule.
	SchedulePolicy *SchedulePolicy `protobuf:"bytes,5,opt,name=schedule_policy,json=schedulePolicy,proto3" json:"schedule_policy,omitempty"`
	// Retention policy of the snapshot schedule.
	//
	// Types that are valid to be assigned to RetentionPolicy:
	//
	//	*CreateSnapshotScheduleRequest_RetentionPeriod
	//	*CreateSnapshotScheduleRequest_SnapshotCount
	RetentionPolicy isCreateSnapshotScheduleRequest_RetentionPolicy `protobuf_oneof:"retention_policy"`
	// Attributes of snapshots created by the snapshot schedule.
	SnapshotSpec *SnapshotSpec `protobuf:"bytes,8,opt,name=snapshot_spec,json=snapshotSpec,proto3" json:"snapshot_spec,omitempty"`
	// List of IDs of the disks attached to the snapshot schedule.
	//
	// To get a disk ID, make a [yandex.cloud.compute.v1.DiskService.List] request.
	DiskIds       []string `protobuf:"bytes,9,rep,name=disk_ids,json=diskIds,proto3" json:"disk_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSnapshotScheduleRequest) Reset() {
	*x = CreateSnapshotScheduleRequest{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSnapshotScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotScheduleRequest) ProtoMessage() {}

func (x *CreateSnapshotScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotScheduleRequest.ProtoReflect.Descriptor instead.
func (*CreateSnapshotScheduleRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSnapshotScheduleRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *CreateSnapshotScheduleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSnapshotScheduleRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateSnapshotScheduleRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateSnapshotScheduleRequest) GetSchedulePolicy() *SchedulePolicy {
	if x != nil {
		return x.SchedulePolicy
	}
	return nil
}

func (x *CreateSnapshotScheduleRequest) GetRetentionPolicy() isCreateSnapshotScheduleRequest_RetentionPolicy {
	if x != nil {
		return x.RetentionPolicy
	}
	return nil
}

func (x *CreateSnapshotScheduleRequest) GetRetentionPeriod() *durationpb.Duration {
	if x != nil {
		if x, ok := x.RetentionPolicy.(*CreateSnapshotScheduleRequest_RetentionPeriod); ok {
			return x.RetentionPeriod
		}
	}
	return nil
}

func (x *CreateSnapshotScheduleRequest) GetSnapshotCount() int64 {
	if x != nil {
		if x, ok := x.RetentionPolicy.(*CreateSnapshotScheduleRequest_SnapshotCount); ok {
			return x.SnapshotCount
		}
	}
	return 0
}

func (x *CreateSnapshotScheduleRequest) GetSnapshotSpec() *SnapshotSpec {
	if x != nil {
		return x.SnapshotSpec
	}
	return nil
}

func (x *CreateSnapshotScheduleRequest) GetDiskIds() []string {
	if x != nil {
		return x.DiskIds
	}
	return nil
}

type isCreateSnapshotScheduleRequest_RetentionPolicy interface {
	isCreateSnapshotScheduleRequest_RetentionPolicy()
}

type CreateSnapshotScheduleRequest_RetentionPeriod struct {
	// Retention period of the snapshot schedule. Once a snapshot created by the schedule reaches this age, it is
	// automatically deleted.
	RetentionPeriod *durationpb.Duration `protobuf:"bytes,6,opt,name=retention_period,json=retentionPeriod,proto3,oneof"`
}

type CreateSnapshotScheduleRequest_SnapshotCount struct {
	// Retention count of the snapshot schedule. Once the number of snapshots created by the schedule exceeds this
	// number, the oldest ones are automatically deleted. E.g. if the number is 5, the first snapshot is deleted
	// after the sixth one is created, the second is deleted after the seventh one is created, and so on.
	SnapshotCount int64 `protobuf:"varint,7,opt,name=snapshot_count,json=snapshotCount,proto3,oneof"`
}

func (*CreateSnapshotScheduleRequest_RetentionPeriod) isCreateSnapshotScheduleRequest_RetentionPolicy() {
}

func (*CreateSnapshotScheduleRequest_SnapshotCount) isCreateSnapshotScheduleRequest_RetentionPolicy() {
}

type CreateSnapshotScheduleMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the snapshot schedule that is being created.
	SnapshotScheduleId string `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId,proto3" json:"snapshot_schedule_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateSnapshotScheduleMetadata) Reset() {
	*x = CreateSnapshotScheduleMetadata{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSnapshotScheduleMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotScheduleMetadata) ProtoMessage() {}

func (x *CreateSnapshotScheduleMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotScheduleMetadata.ProtoReflect.Descriptor instead.
func (*CreateSnapshotScheduleMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSnapshotScheduleMetadata) GetSnapshotScheduleId() string {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return ""
}

type UpdateSnapshotScheduleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the snapshot schedule to update.
	//
	// To get the snapshot schedule ID, make a [SnapshotScheduleService.List] request.
	SnapshotScheduleId string `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId,proto3" json:"snapshot_schedule_id,omitempty"`
	// Field mask that specifies which attributes of the snapshot schedule should be updated.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// New name for the snapshot schedule.
	//
	// The name must be unique within the folder.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// New description of the snapshot schedule.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Snapshot schedule labels as `key:value` pairs.
	//
	// Existing set of labels is completely replaced by the provided set, so if you just want
	// to add or remove a label:
	// 1. Get the current set of labels with a [SnapshotScheduleService.Get] request.
	// 2. Add or remove a label in this set.
	// 3. Send the new set in this field.
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// New frequency settings of the snapshot schedule.
	SchedulePolicy *SchedulePolicy `protobuf:"bytes,6,opt,name=schedule_policy,json=schedulePolicy,proto3" json:"schedule_policy,omitempty"`
	// New retention policy of the snapshot schedule.
	//
	// Types that are valid to be assigned to RetentionPolicy:
	//
	//	*UpdateSnapshotScheduleRequest_RetentionPeriod
	//	*UpdateSnapshotScheduleRequest_SnapshotCount
	RetentionPolicy isUpdateSnapshotScheduleRequest_RetentionPolicy `protobuf_oneof:"retention_policy"`
	// New attributes of snapshots created by the snapshot schedule.
	SnapshotSpec  *SnapshotSpec `protobuf:"bytes,9,opt,name=snapshot_spec,json=snapshotSpec,proto3" json:"snapshot_spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSnapshotScheduleRequest) Reset() {
	*x = UpdateSnapshotScheduleRequest{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSnapshotScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSnapshotScheduleRequest) ProtoMessage() {}

func (x *UpdateSnapshotScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSnapshotScheduleRequest.ProtoReflect.Descriptor instead.
func (*UpdateSnapshotScheduleRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSnapshotScheduleRequest) GetSnapshotScheduleId() string {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return ""
}

func (x *UpdateSnapshotScheduleRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateSnapshotScheduleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSnapshotScheduleRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateSnapshotScheduleRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateSnapshotScheduleRequest) GetSchedulePolicy() *SchedulePolicy {
	if x != nil {
		return x.SchedulePolicy
	}
	return nil
}

func (x *UpdateSnapshotScheduleRequest) GetRetentionPolicy() isUpdateSnapshotScheduleRequest_RetentionPolicy {
	if x != nil {
		return x.RetentionPolicy
	}
	return nil
}

func (x *UpdateSnapshotScheduleRequest) GetRetentionPeriod() *durationpb.Duration {
	if x != nil {
		if x, ok := x.RetentionPolicy.(*UpdateSnapshotScheduleRequest_RetentionPeriod); ok {
			return x.RetentionPeriod
		}
	}
	return nil
}

func (x *UpdateSnapshotScheduleRequest) GetSnapshotCount() int64 {
	if x != nil {
		if x, ok := x.RetentionPolicy.(*UpdateSnapshotScheduleRequest_SnapshotCount); ok {
			return x.SnapshotCount
		}
	}
	return 0
}

func (x *UpdateSnapshotScheduleRequest) GetSnapshotSpec() *SnapshotSpec {
	if x != nil {
		return x.SnapshotSpec
	}
	return nil
}

type isUpdateSnapshotScheduleRequest_RetentionPolicy interface {
	isUpdateSnapshotScheduleRequest_RetentionPolicy()
}

type UpdateSnapshotScheduleRequest_RetentionPeriod struct {
	// Retention period of the snapshot schedule. Once a snapshot created by the schedule reaches this age, it is
	// automatically deleted.
	RetentionPeriod *durationpb.Duration `protobuf:"bytes,7,opt,name=retention_period,json=retentionPeriod,proto3,oneof"`
}

type UpdateSnapshotScheduleRequest_SnapshotCount struct {
	// Retention count of the snapshot schedule. Once the number of snapshots created by the schedule exceeds this
	// number, the oldest ones are automatically deleted. E.g. if the number is 5, the first snapshot is deleted
	// after the sixth one is created, the second is deleted after the seventh one is created, and so on.
	SnapshotCount int64 `protobuf:"varint,8,opt,name=snapshot_count,json=snapshotCount,proto3,oneof"`
}

func (*UpdateSnapshotScheduleRequest_RetentionPeriod) isUpdateSnapshotScheduleRequest_RetentionPolicy() {
}

func (*UpdateSnapshotScheduleRequest_SnapshotCount) isUpdateSnapshotScheduleRequest_RetentionPolicy() {
}

type UpdateSnapshotScheduleMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the snapshot schedule that is being updated.
	SnapshotScheduleId string `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId,proto3" json:"snapshot_schedule_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UpdateSnapshotScheduleMetadata) Reset() {
	*x = UpdateSnapshotScheduleMetadata{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSnapshotScheduleMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSnapshotScheduleMetadata) ProtoMessage() {}

func (x *UpdateSnapshotScheduleMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSnapshotScheduleMetadata.ProtoReflect.Descriptor instead.
func (*UpdateSnapshotScheduleMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSnapshotScheduleMetadata) GetSnapshotScheduleId() string {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return ""
}

type DeleteSnapshotScheduleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the snapshot schedule to delete.
	//
	// To get a snapshot schedule ID, make a [SnapshotScheduleService.List] request.
	SnapshotScheduleId string `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId,proto3" json:"snapshot_schedule_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DeleteSnapshotScheduleRequest) Reset() {
	*x = DeleteSnapshotScheduleRequest{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSnapshotScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSnapshotScheduleRequest) ProtoMessage() {}

func (x *DeleteSnapshotScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSnapshotScheduleRequest.ProtoReflect.Descriptor instead.
func (*DeleteSnapshotScheduleRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteSnapshotScheduleRequest) GetSnapshotScheduleId() string {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return ""
}

type DeleteSnapshotScheduleMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the snapshot schedule that is being deleted.
	SnapshotScheduleId string `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId,proto3" json:"snapshot_schedule_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DeleteSnapshotScheduleMetadata) Reset() {
	*x = DeleteSnapshotScheduleMetadata{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSnapshotScheduleMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSnapshotScheduleMetadata) ProtoMessage() {}

func (x *DeleteSnapshotScheduleMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSnapshotScheduleMetadata.ProtoReflect.Descriptor instead.
func (*DeleteSnapshotScheduleMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteSnapshotScheduleMetadata) GetSnapshotScheduleId() string {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return ""
}

type DisableSnapshotScheduleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the snapshot schedule to disable.
	//
	// To get a snapshot schedule ID, make a [SnapshotScheduleService.List] request.
	SnapshotScheduleId string `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId,proto3" json:"snapshot_schedule_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DisableSnapshotScheduleRequest) Reset() {
	*x = DisableSnapshotScheduleRequest{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableSnapshotScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableSnapshotScheduleRequest) ProtoMessage() {}

func (x *DisableSnapshotScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableSnapshotScheduleRequest.ProtoReflect.Descriptor instead.
func (*DisableSnapshotScheduleRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{9}
}

func (x *DisableSnapshotScheduleRequest) GetSnapshotScheduleId() string {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return ""
}

type DisableSnapshotScheduleMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the snapshot schedule that is being disabled.
	SnapshotScheduleId string `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId,proto3" json:"snapshot_schedule_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DisableSnapshotScheduleMetadata) Reset() {
	*x = DisableSnapshotScheduleMetadata{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableSnapshotScheduleMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableSnapshotScheduleMetadata) ProtoMessage() {}

func (x *DisableSnapshotScheduleMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableSnapshotScheduleMetadata.ProtoReflect.Descriptor instead.
func (*DisableSnapshotScheduleMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{10}
}

func (x *DisableSnapshotScheduleMetadata) GetSnapshotScheduleId() string {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return ""
}

type EnableSnapshotScheduleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the snapshot schedule to enable.
	//
	// To get a snapshot schedule ID, make a [SnapshotScheduleService.List] request.
	SnapshotScheduleId string `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId,proto3" json:"snapshot_schedule_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *EnableSnapshotScheduleRequest) Reset() {
	*x = EnableSnapshotScheduleRequest{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableSnapshotScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableSnapshotScheduleRequest) ProtoMessage() {}

func (x *EnableSnapshotScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableSnapshotScheduleRequest.ProtoReflect.Descriptor instead.
func (*EnableSnapshotScheduleRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{11}
}

func (x *EnableSnapshotScheduleRequest) GetSnapshotScheduleId() string {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return ""
}

type EnableSnapshotScheduleMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the snapshot schedule that is being enabled.
	SnapshotScheduleId string `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId,proto3" json:"snapshot_schedule_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *EnableSnapshotScheduleMetadata) Reset() {
	*x = EnableSnapshotScheduleMetadata{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableSnapshotScheduleMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableSnapshotScheduleMetadata) ProtoMessage() {}

func (x *EnableSnapshotScheduleMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableSnapshotScheduleMetadata.ProtoReflect.Descriptor instead.
func (*EnableSnapshotScheduleMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{12}
}

func (x *EnableSnapshotScheduleMetadata) GetSnapshotScheduleId() string {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return ""
}

type ListSnapshotScheduleOperationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the snapshot schedule to list operations for.
	//
	// To get a snapshot schedule ID, make a [SnapshotScheduleService.List] request.
	SnapshotScheduleId string `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId,proto3" json:"snapshot_schedule_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size], the service returns a [ListSnapshotScheduleOperationsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	//
	// Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token] to the
	// [ListSnapshotScheduleOperationsResponse.next_page_token] returned by a previous list request.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSnapshotScheduleOperationsRequest) Reset() {
	*x = ListSnapshotScheduleOperationsRequest{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSnapshotScheduleOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotScheduleOperationsRequest) ProtoMessage() {}

func (x *ListSnapshotScheduleOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotScheduleOperationsRequest.ProtoReflect.Descriptor instead.
func (*ListSnapshotScheduleOperationsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListSnapshotScheduleOperationsRequest) GetSnapshotScheduleId() string {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return ""
}

func (x *ListSnapshotScheduleOperationsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSnapshotScheduleOperationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListSnapshotScheduleOperationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of operations for the specified snapshot schedule.
	Operations []*operation.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	// Token for getting the next page of the list. If the number of results is greater than
	// the specified [ListSnapshotScheduleOperationsRequest.page_size], use `next_page_token` as the value
	// for the [ListSnapshotScheduleOperationsRequest.page_token] parameter in the next list request.
	//
	// Each subsequent page will have its own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSnapshotScheduleOperationsResponse) Reset() {
	*x = ListSnapshotScheduleOperationsResponse{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSnapshotScheduleOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotScheduleOperationsResponse) ProtoMessage() {}

func (x *ListSnapshotScheduleOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotScheduleOperationsResponse.ProtoReflect.Descriptor instead.
func (*ListSnapshotScheduleOperationsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListSnapshotScheduleOperationsResponse) GetOperations() []*operation.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ListSnapshotScheduleOperationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListSnapshotScheduleSnapshotsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the snapshot schedule to list created snapshots for.
	//
	// To get a snapshot schedule ID, make a [SnapshotScheduleService.List] request.
	SnapshotScheduleId string `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId,proto3" json:"snapshot_schedule_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size], the service returns a [ListSnapshotScheduleOperationsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	//
	// Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token] to the
	// [ListSnapshotScheduleOperationsResponse.next_page_token] returned by a previous list request.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSnapshotScheduleSnapshotsRequest) Reset() {
	*x = ListSnapshotScheduleSnapshotsRequest{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSnapshotScheduleSnapshotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotScheduleSnapshotsRequest) ProtoMessage() {}

func (x *ListSnapshotScheduleSnapshotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotScheduleSnapshotsRequest.ProtoReflect.Descriptor instead.
func (*ListSnapshotScheduleSnapshotsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListSnapshotScheduleSnapshotsRequest) GetSnapshotScheduleId() string {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return ""
}

func (x *ListSnapshotScheduleSnapshotsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSnapshotScheduleSnapshotsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListSnapshotScheduleSnapshotsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of snapshots created by the specified snapshot schedule.
	Snapshots []*Snapshot `protobuf:"bytes,1,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
	// Token for getting the next page of the list. If the number of results is greater than
	// the specified [ListSnapshotScheduleSnapshotsRequest.page_size], use `next_page_token` as the value
	// for the [ListSnapshotScheduleSnapshotsRequest.page_token] parameter in the next list request.
	//
	// Each subsequent page will have its own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSnapshotScheduleSnapshotsResponse) Reset() {
	*x = ListSnapshotScheduleSnapshotsResponse{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSnapshotScheduleSnapshotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotScheduleSnapshotsResponse) ProtoMessage() {}

func (x *ListSnapshotScheduleSnapshotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotScheduleSnapshotsResponse.ProtoReflect.Descriptor instead.
func (*ListSnapshotScheduleSnapshotsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{16}
}

func (x *ListSnapshotScheduleSnapshotsResponse) GetSnapshots() []*Snapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

func (x *ListSnapshotScheduleSnapshotsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListSnapshotScheduleDisksRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the snapshot schedule to list attached disks for.
	//
	// To get a snapshot schedule ID, make a [SnapshotScheduleService.List] request.
	SnapshotScheduleId string `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId,proto3" json:"snapshot_schedule_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size], the service returns a [ListSnapshotScheduleDisksResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	//
	// Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token] to the
	// [ListSnapshotScheduleDisksResponse.next_page_token] returned by a previous list request.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSnapshotScheduleDisksRequest) Reset() {
	*x = ListSnapshotScheduleDisksRequest{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSnapshotScheduleDisksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotScheduleDisksRequest) ProtoMessage() {}

func (x *ListSnapshotScheduleDisksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotScheduleDisksRequest.ProtoReflect.Descriptor instead.
func (*ListSnapshotScheduleDisksRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListSnapshotScheduleDisksRequest) GetSnapshotScheduleId() string {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return ""
}

func (x *ListSnapshotScheduleDisksRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSnapshotScheduleDisksRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListSnapshotScheduleDisksResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of disks attached to the specified snapshot schedule.
	Disks []*Disk `protobuf:"bytes,1,rep,name=disks,proto3" json:"disks,omitempty"`
	// Token for getting the next page of the list. If the number of results is greater than
	// the specified [ListSnapshotScheduleDisksRequest.page_size], use `next_page_token` as the value
	// for the [ListSnapshotScheduleDisksRequest.page_token] parameter in the next list request.
	//
	// Each subsequent page will have its own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSnapshotScheduleDisksResponse) Reset() {
	*x = ListSnapshotScheduleDisksResponse{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSnapshotScheduleDisksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnapshotScheduleDisksResponse) ProtoMessage() {}

func (x *ListSnapshotScheduleDisksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnapshotScheduleDisksResponse.ProtoReflect.Descriptor instead.
func (*ListSnapshotScheduleDisksResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListSnapshotScheduleDisksResponse) GetDisks() []*Disk {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *ListSnapshotScheduleDisksResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type UpdateSnapshotScheduleDisksRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the snapshot schedule to update.
	//
	// To get a snapshot schedule ID, make a [SnapshotScheduleService.List] request.
	SnapshotScheduleId string `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId,proto3" json:"snapshot_schedule_id,omitempty"`
	// List of IDs of the disks to detach from the specified schedule.
	//
	// To get an ID of a disk attached to the schedule, make a [SnapshotScheduleService.ListDisks] request.
	Remove []string `protobuf:"bytes,2,rep,name=remove,proto3" json:"remove,omitempty"`
	// List of IDs of the disks to attach to the specified schedule.
	//
	// To get a disk ID, make a [yandex.cloud.compute.v1.DiskService.List] request.
	Add           []string `protobuf:"bytes,3,rep,name=add,proto3" json:"add,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSnapshotScheduleDisksRequest) Reset() {
	*x = UpdateSnapshotScheduleDisksRequest{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSnapshotScheduleDisksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSnapshotScheduleDisksRequest) ProtoMessage() {}

func (x *UpdateSnapshotScheduleDisksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSnapshotScheduleDisksRequest.ProtoReflect.Descriptor instead.
func (*UpdateSnapshotScheduleDisksRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateSnapshotScheduleDisksRequest) GetSnapshotScheduleId() string {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return ""
}

func (x *UpdateSnapshotScheduleDisksRequest) GetRemove() []string {
	if x != nil {
		return x.Remove
	}
	return nil
}

func (x *UpdateSnapshotScheduleDisksRequest) GetAdd() []string {
	if x != nil {
		return x.Add
	}
	return nil
}

type UpdateSnapshotScheduleDisksMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the snapshot schedule that is being updated.
	SnapshotScheduleId string `protobuf:"bytes,1,opt,name=snapshot_schedule_id,json=snapshotScheduleId,proto3" json:"snapshot_schedule_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UpdateSnapshotScheduleDisksMetadata) Reset() {
	*x = UpdateSnapshotScheduleDisksMetadata{}
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSnapshotScheduleDisksMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSnapshotScheduleDisksMetadata) ProtoMessage() {}

func (x *UpdateSnapshotScheduleDisksMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSnapshotScheduleDisksMetadata.ProtoReflect.Descriptor instead.
func (*UpdateSnapshotScheduleDisksMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateSnapshotScheduleDisksMetadata) GetSnapshotScheduleId() string {
	if x != nil {
		return x.SnapshotScheduleId
	}
	return ""
}

var File_yandex_cloud_compute_v1_snapshot_schedule_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDesc = "" +
	"\n" +
	"7yandex/cloud/compute/v1/snapshot_schedule_service.proto\x12\x17yandex.cloud.compute.v1\x1a\x1cgoogle/api/annotations.proto\x1a google/protobuf/field_mask.proto\x1a\x1egoogle/protobuf/duration.proto\x1a yandex/cloud/access/access.proto\x1a yandex/cloud/api/operation.proto\x1a\"yandex/cloud/compute/v1/disk.proto\x1a&yandex/cloud/compute/v1/snapshot.proto\x1a/yandex/cloud/compute/v1/snapshot_schedule.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\"N\n" +
	"\x1aGetSnapshotScheduleRequest\x120\n" +
	"\x14snapshot_schedule_id\x18\x01 \x01(\tR\x12snapshotScheduleId\"\xe6\x01\n" +
	"\x1cListSnapshotSchedulesRequest\x12)\n" +
	"\tfolder_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\x12$\n" +
	"\border_by\x18\x05 \x01(\tB\t\x8a\xc81\x05<=100R\aorderBy\"\xa1\x01\n" +
	"\x1dListSnapshotSchedulesResponse\x12X\n" +
	"\x12snapshot_schedules\x18\x01 \x03(\v2).yandex.cloud.compute.v1.SnapshotScheduleR\x11snapshotSchedules\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xc7\x04\n" +
	"\x1dCreateSnapshotScheduleRequest\x12\x1b\n" +
	"\tfolder_id\x18\x01 \x01(\tR\bfolderId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12Z\n" +
	"\x06labels\x18\x04 \x03(\v2B.yandex.cloud.compute.v1.CreateSnapshotScheduleRequest.LabelsEntryR\x06labels\x12P\n" +
	"\x0fschedule_policy\x18\x05 \x01(\v2'.yandex.cloud.compute.v1.SchedulePolicyR\x0eschedulePolicy\x12F\n" +
	"\x10retention_period\x18\x06 \x01(\v2\x19.google.protobuf.DurationH\x00R\x0fretentionPeriod\x12'\n" +
	"\x0esnapshot_count\x18\a \x01(\x03H\x00R\rsnapshotCount\x12J\n" +
	"\rsnapshot_spec\x18\b \x01(\v2%.yandex.cloud.compute.v1.SnapshotSpecR\fsnapshotSpec\x12\x19\n" +
	"\bdisk_ids\x18\t \x03(\tR\adiskIds\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x12\n" +
	"\x10retention_policy\"R\n" +
	"\x1eCreateSnapshotScheduleMetadata\x120\n" +
	"\x14snapshot_schedule_id\x18\x01 \x01(\tR\x12snapshotScheduleId\"\xfe\x04\n" +
	"\x1dUpdateSnapshotScheduleRequest\x120\n" +
	"\x14snapshot_schedule_id\x18\x01 \x01(\tR\x12snapshotScheduleId\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12Z\n" +
	"\x06labels\x18\x05 \x03(\v2B.yandex.cloud.compute.v1.UpdateSnapshotScheduleRequest.LabelsEntryR\x06labels\x12P\n" +
	"\x0fschedule_policy\x18\x06 \x01(\v2'.yandex.cloud.compute.v1.SchedulePolicyR\x0eschedulePolicy\x12F\n" +
	"\x10retention_period\x18\a \x01(\v2\x19.google.protobuf.DurationH\x00R\x0fretentionPeriod\x12'\n" +
	"\x0esnapshot_count\x18\b \x01(\x03H\x00R\rsnapshotCount\x12J\n" +
	"\rsnapshot_spec\x18\t \x01(\v2%.yandex.cloud.compute.v1.SnapshotSpecR\fsnapshotSpec\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x12\n" +
	"\x10retention_policy\"R\n" +
	"\x1eUpdateSnapshotScheduleMetadata\x120\n" +
	"\x14snapshot_schedule_id\x18\x01 \x01(\tR\x12snapshotScheduleId\"Q\n" +
	"\x1dDeleteSnapshotScheduleRequest\x120\n" +
	"\x14snapshot_schedule_id\x18\x01 \x01(\tR\x12snapshotScheduleId\"R\n" +
	"\x1eDeleteSnapshotScheduleMetadata\x120\n" +
	"\x14snapshot_schedule_id\x18\x01 \x01(\tR\x12snapshotScheduleId\"R\n" +
	"\x1eDisableSnapshotScheduleRequest\x120\n" +
	"\x14snapshot_schedule_id\x18\x01 \x01(\tR\x12snapshotScheduleId\"S\n" +
	"\x1fDisableSnapshotScheduleMetadata\x120\n" +
	"\x14snapshot_schedule_id\x18\x01 \x01(\tR\x12snapshotScheduleId\"Q\n" +
	"\x1dEnableSnapshotScheduleRequest\x120\n" +
	"\x14snapshot_schedule_id\x18\x01 \x01(\tR\x12snapshotScheduleId\"R\n" +
	"\x1eEnableSnapshotScheduleMetadata\x120\n" +
	"\x14snapshot_schedule_id\x18\x01 \x01(\tR\x12snapshotScheduleId\"\x95\x01\n" +
	"%ListSnapshotScheduleOperationsRequest\x120\n" +
	"\x14snapshot_schedule_id\x18\x01 \x01(\tR\x12snapshotScheduleId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"\x93\x01\n" +
	"&ListSnapshotScheduleOperationsResponse\x12A\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2!.yandex.cloud.operation.OperationR\n" +
	"operations\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x94\x01\n" +
	"$ListSnapshotScheduleSnapshotsRequest\x120\n" +
	"\x14snapshot_schedule_id\x18\x01 \x01(\tR\x12snapshotScheduleId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"\x90\x01\n" +
	"%ListSnapshotScheduleSnapshotsResponse\x12?\n" +
	"\tsnapshots\x18\x01 \x03(\v2!.yandex.cloud.compute.v1.SnapshotR\tsnapshots\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x90\x01\n" +
	" ListSnapshotScheduleDisksRequest\x120\n" +
	"\x14snapshot_schedule_id\x18\x01 \x01(\tR\x12snapshotScheduleId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"\x80\x01\n" +
	"!ListSnapshotScheduleDisksResponse\x123\n" +
	"\x05disks\x18\x01 \x03(\v2\x1d.yandex.cloud.compute.v1.DiskR\x05disks\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x80\x01\n" +
	"\"UpdateSnapshotScheduleDisksRequest\x120\n" +
	"\x14snapshot_schedule_id\x18\x01 \x01(\tR\x12snapshotScheduleId\x12\x16\n" +
	"\x06remove\x18\x02 \x03(\tR\x06remove\x12\x10\n" +
	"\x03add\x18\x03 \x03(\tR\x03add\"W\n" +
	"#UpdateSnapshotScheduleDisksMetadata\x120\n" +
	"\x14snapshot_schedule_id\x18\x01 \x01(\tR\x12snapshotScheduleId2\xee\x17\n" +
	"\x17SnapshotScheduleService\x12\xa3\x01\n" +
	"\x03Get\x123.yandex.cloud.compute.v1.GetSnapshotScheduleRequest\x1a).yandex.cloud.compute.v1.SnapshotSchedule\"<\x82\xd3\xe4\x93\x026\x124/compute/v1/snapshotSchedules/{snapshot_schedule_id}\x12\x9c\x01\n" +
	"\x04List\x125.yandex.cloud.compute.v1.ListSnapshotSchedulesRequest\x1a6.yandex.cloud.compute.v1.ListSnapshotSchedulesResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/compute/v1/snapshotSchedules\x12\xc3\x01\n" +
	"\x06Create\x126.yandex.cloud.compute.v1.CreateSnapshotScheduleRequest\x1a!.yandex.cloud.operation.Operation\"^\xb2\xd2*2\n" +
	"\x1eCreateSnapshotScheduleMetadata\x12\x10SnapshotSchedule\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/compute/v1/snapshotSchedules\x12\xda\x01\n" +
	"\x06Update\x126.yandex.cloud.compute.v1.UpdateSnapshotScheduleRequest\x1a!.yandex.cloud.operation.Operation\"u\xb2\xd2*2\n" +
	"\x1eUpdateSnapshotScheduleMetadata\x12\x10SnapshotSchedule\x82\xd3\xe4\x93\x029:\x01*24/compute/v1/snapshotSchedules/{snapshot_schedule_id}\x12\xdc\x01\n" +
	"\x06Delete\x126.yandex.cloud.compute.v1.DeleteSnapshotScheduleRequest\x1a!.yandex.cloud.operation.Operation\"w\xb2\xd2*7\n" +
	"\x1eDeleteSnapshotScheduleMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x026*4/compute/v1/snapshotSchedules/{snapshot_schedule_id}\x12\xf6\x01\n" +
	"\vUpdateDisks\x12;.yandex.cloud.compute.v1.UpdateSnapshotScheduleDisksRequest\x1a!.yandex.cloud.operation.Operation\"\x86\x01\xb2\xd2*7\n" +
	"#UpdateSnapshotScheduleDisksMetadata\x12\x10SnapshotSchedule\x82\xd3\xe4\x93\x02E:\x01*2@/compute/v1/snapshotSchedules/{snapshot_schedule_id}:updateDisks\x12\xe5\x01\n" +
	"\aDisable\x127.yandex.cloud.compute.v1.DisableSnapshotScheduleRequest\x1a!.yandex.cloud.operation.Operation\"~\xb2\xd2*3\n" +
	"\x1fDisableSnapshotScheduleMetadata\x12\x10SnapshotSchedule\x82\xd3\xe4\x93\x02A:\x01*\"</compute/v1/snapshotSchedules/{snapshot_schedule_id}:disable\x12\xe1\x01\n" +
	"\x06Enable\x126.yandex.cloud.compute.v1.EnableSnapshotScheduleRequest\x1a!.yandex.cloud.operation.Operation\"|\xb2\xd2*2\n" +
	"\x1eEnableSnapshotScheduleMetadata\x12\x10SnapshotSchedule\x82\xd3\xe4\x93\x02@:\x01*\";/compute/v1/snapshotSchedules/{snapshot_schedule_id}:enable\x12\xda\x01\n" +
	"\x0eListOperations\x12>.yandex.cloud.compute.v1.ListSnapshotScheduleOperationsRequest\x1a?.yandex.cloud.compute.v1.ListSnapshotScheduleOperationsResponse\"G\x82\xd3\xe4\x93\x02A\x12?/compute/v1/snapshotSchedules/{snapshot_schedule_id}/operations\x12\xd6\x01\n" +
	"\rListSnapshots\x12=.yandex.cloud.compute.v1.ListSnapshotScheduleSnapshotsRequest\x1a>.yandex.cloud.compute.v1.ListSnapshotScheduleSnapshotsResponse\"F\x82\xd3\xe4\x93\x02@\x12>/compute/v1/snapshotSchedules/{snapshot_schedule_id}/snapshots\x12\xc6\x01\n" +
	"\tListDisks\x129.yandex.cloud.compute.v1.ListSnapshotScheduleDisksRequest\x1a:.yandex.cloud.compute.v1.ListSnapshotScheduleDisksResponse\"B\x82\xd3\xe4\x93\x02<\x12:/compute/v1/snapshotSchedules/{snapshot_schedule_id}/disks\x12\xbd\x01\n" +
	"\x12ListAccessBindings\x12..yandex.cloud.access.ListAccessBindingsRequest\x1a/.yandex.cloud.access.ListAccessBindingsResponse\"F\x82\xd3\xe4\x93\x02@\x12>/compute/v1/snapshotSchedules/{resource_id}:listAccessBindings\x12\xfc\x01\n" +
	"\x11SetAccessBindings\x12-.yandex.cloud.access.SetAccessBindingsRequest\x1a!.yandex.cloud.operation.Operation\"\x94\x01\xb2\xd2*H\n" +
	" access.SetAccessBindingsMetadata\x12$access.AccessBindingsOperationResult\x82\xd3\xe4\x93\x02B:\x01*\"=/compute/v1/snapshotSchedules/{resource_id}:setAccessBindings\x12\x88\x02\n" +
	"\x14UpdateAccessBindings\x120.yandex.cloud.access.UpdateAccessBindingsRequest\x1a!.yandex.cloud.operation.Operation\"\x9a\x01\xb2\xd2*K\n" +
	"#access.UpdateAccessBindingsMetadata\x12$access.AccessBindingsOperationResult\x82\xd3\xe4\x93\x02E:\x01*\"@/compute/v1/snapshotSchedules/{resource_id}:updateAccessBindingsBb\n" +
	"\x1byandex.cloud.api.compute.v1ZCgithub.com/yandex-cloud/go-genproto/yandex/cloud/compute/v1;computeb\x06proto3"

var (
	file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescData []byte
)

func file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDesc), len(file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDesc)))
	})
	return file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDescData
}

var file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_goTypes = []any{
	(*GetSnapshotScheduleRequest)(nil),             // 0: yandex.cloud.compute.v1.GetSnapshotScheduleRequest
	(*ListSnapshotSchedulesRequest)(nil),           // 1: yandex.cloud.compute.v1.ListSnapshotSchedulesRequest
	(*ListSnapshotSchedulesResponse)(nil),          // 2: yandex.cloud.compute.v1.ListSnapshotSchedulesResponse
	(*CreateSnapshotScheduleRequest)(nil),          // 3: yandex.cloud.compute.v1.CreateSnapshotScheduleRequest
	(*CreateSnapshotScheduleMetadata)(nil),         // 4: yandex.cloud.compute.v1.CreateSnapshotScheduleMetadata
	(*UpdateSnapshotScheduleRequest)(nil),          // 5: yandex.cloud.compute.v1.UpdateSnapshotScheduleRequest
	(*UpdateSnapshotScheduleMetadata)(nil),         // 6: yandex.cloud.compute.v1.UpdateSnapshotScheduleMetadata
	(*DeleteSnapshotScheduleRequest)(nil),          // 7: yandex.cloud.compute.v1.DeleteSnapshotScheduleRequest
	(*DeleteSnapshotScheduleMetadata)(nil),         // 8: yandex.cloud.compute.v1.DeleteSnapshotScheduleMetadata
	(*DisableSnapshotScheduleRequest)(nil),         // 9: yandex.cloud.compute.v1.DisableSnapshotScheduleRequest
	(*DisableSnapshotScheduleMetadata)(nil),        // 10: yandex.cloud.compute.v1.DisableSnapshotScheduleMetadata
	(*EnableSnapshotScheduleRequest)(nil),          // 11: yandex.cloud.compute.v1.EnableSnapshotScheduleRequest
	(*EnableSnapshotScheduleMetadata)(nil),         // 12: yandex.cloud.compute.v1.EnableSnapshotScheduleMetadata
	(*ListSnapshotScheduleOperationsRequest)(nil),  // 13: yandex.cloud.compute.v1.ListSnapshotScheduleOperationsRequest
	(*ListSnapshotScheduleOperationsResponse)(nil), // 14: yandex.cloud.compute.v1.ListSnapshotScheduleOperationsResponse
	(*ListSnapshotScheduleSnapshotsRequest)(nil),   // 15: yandex.cloud.compute.v1.ListSnapshotScheduleSnapshotsRequest
	(*ListSnapshotScheduleSnapshotsResponse)(nil),  // 16: yandex.cloud.compute.v1.ListSnapshotScheduleSnapshotsResponse
	(*ListSnapshotScheduleDisksRequest)(nil),       // 17: yandex.cloud.compute.v1.ListSnapshotScheduleDisksRequest
	(*ListSnapshotScheduleDisksResponse)(nil),      // 18: yandex.cloud.compute.v1.ListSnapshotScheduleDisksResponse
	(*UpdateSnapshotScheduleDisksRequest)(nil),     // 19: yandex.cloud.compute.v1.UpdateSnapshotScheduleDisksRequest
	(*UpdateSnapshotScheduleDisksMetadata)(nil),    // 20: yandex.cloud.compute.v1.UpdateSnapshotScheduleDisksMetadata
	nil,                                        // 21: yandex.cloud.compute.v1.CreateSnapshotScheduleRequest.LabelsEntry
	nil,                                        // 22: yandex.cloud.compute.v1.UpdateSnapshotScheduleRequest.LabelsEntry
	(*SnapshotSchedule)(nil),                   // 23: yandex.cloud.compute.v1.SnapshotSchedule
	(*SchedulePolicy)(nil),                     // 24: yandex.cloud.compute.v1.SchedulePolicy
	(*durationpb.Duration)(nil),                // 25: google.protobuf.Duration
	(*SnapshotSpec)(nil),                       // 26: yandex.cloud.compute.v1.SnapshotSpec
	(*fieldmaskpb.FieldMask)(nil),              // 27: google.protobuf.FieldMask
	(*operation.Operation)(nil),                // 28: yandex.cloud.operation.Operation
	(*Snapshot)(nil),                           // 29: yandex.cloud.compute.v1.Snapshot
	(*Disk)(nil),                               // 30: yandex.cloud.compute.v1.Disk
	(*access.ListAccessBindingsRequest)(nil),   // 31: yandex.cloud.access.ListAccessBindingsRequest
	(*access.SetAccessBindingsRequest)(nil),    // 32: yandex.cloud.access.SetAccessBindingsRequest
	(*access.UpdateAccessBindingsRequest)(nil), // 33: yandex.cloud.access.UpdateAccessBindingsRequest
	(*access.ListAccessBindingsResponse)(nil),  // 34: yandex.cloud.access.ListAccessBindingsResponse
}
var file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_depIdxs = []int32{
	23, // 0: yandex.cloud.compute.v1.ListSnapshotSchedulesResponse.snapshot_schedules:type_name -> yandex.cloud.compute.v1.SnapshotSchedule
	21, // 1: yandex.cloud.compute.v1.CreateSnapshotScheduleRequest.labels:type_name -> yandex.cloud.compute.v1.CreateSnapshotScheduleRequest.LabelsEntry
	24, // 2: yandex.cloud.compute.v1.CreateSnapshotScheduleRequest.schedule_policy:type_name -> yandex.cloud.compute.v1.SchedulePolicy
	25, // 3: yandex.cloud.compute.v1.CreateSnapshotScheduleRequest.retention_period:type_name -> google.protobuf.Duration
	26, // 4: yandex.cloud.compute.v1.CreateSnapshotScheduleRequest.snapshot_spec:type_name -> yandex.cloud.compute.v1.SnapshotSpec
	27, // 5: yandex.cloud.compute.v1.UpdateSnapshotScheduleRequest.update_mask:type_name -> google.protobuf.FieldMask
	22, // 6: yandex.cloud.compute.v1.UpdateSnapshotScheduleRequest.labels:type_name -> yandex.cloud.compute.v1.UpdateSnapshotScheduleRequest.LabelsEntry
	24, // 7: yandex.cloud.compute.v1.UpdateSnapshotScheduleRequest.schedule_policy:type_name -> yandex.cloud.compute.v1.SchedulePolicy
	25, // 8: yandex.cloud.compute.v1.UpdateSnapshotScheduleRequest.retention_period:type_name -> google.protobuf.Duration
	26, // 9: yandex.cloud.compute.v1.UpdateSnapshotScheduleRequest.snapshot_spec:type_name -> yandex.cloud.compute.v1.SnapshotSpec
	28, // 10: yandex.cloud.compute.v1.ListSnapshotScheduleOperationsResponse.operations:type_name -> yandex.cloud.operation.Operation
	29, // 11: yandex.cloud.compute.v1.ListSnapshotScheduleSnapshotsResponse.snapshots:type_name -> yandex.cloud.compute.v1.Snapshot
	30, // 12: yandex.cloud.compute.v1.ListSnapshotScheduleDisksResponse.disks:type_name -> yandex.cloud.compute.v1.Disk
	0,  // 13: yandex.cloud.compute.v1.SnapshotScheduleService.Get:input_type -> yandex.cloud.compute.v1.GetSnapshotScheduleRequest
	1,  // 14: yandex.cloud.compute.v1.SnapshotScheduleService.List:input_type -> yandex.cloud.compute.v1.ListSnapshotSchedulesRequest
	3,  // 15: yandex.cloud.compute.v1.SnapshotScheduleService.Create:input_type -> yandex.cloud.compute.v1.CreateSnapshotScheduleRequest
	5,  // 16: yandex.cloud.compute.v1.SnapshotScheduleService.Update:input_type -> yandex.cloud.compute.v1.UpdateSnapshotScheduleRequest
	7,  // 17: yandex.cloud.compute.v1.SnapshotScheduleService.Delete:input_type -> yandex.cloud.compute.v1.DeleteSnapshotScheduleRequest
	19, // 18: yandex.cloud.compute.v1.SnapshotScheduleService.UpdateDisks:input_type -> yandex.cloud.compute.v1.UpdateSnapshotScheduleDisksRequest
	9,  // 19: yandex.cloud.compute.v1.SnapshotScheduleService.Disable:input_type -> yandex.cloud.compute.v1.DisableSnapshotScheduleRequest
	11, // 20: yandex.cloud.compute.v1.SnapshotScheduleService.Enable:input_type -> yandex.cloud.compute.v1.EnableSnapshotScheduleRequest
	13, // 21: yandex.cloud.compute.v1.SnapshotScheduleService.ListOperations:input_type -> yandex.cloud.compute.v1.ListSnapshotScheduleOperationsRequest
	15, // 22: yandex.cloud.compute.v1.SnapshotScheduleService.ListSnapshots:input_type -> yandex.cloud.compute.v1.ListSnapshotScheduleSnapshotsRequest
	17, // 23: yandex.cloud.compute.v1.SnapshotScheduleService.ListDisks:input_type -> yandex.cloud.compute.v1.ListSnapshotScheduleDisksRequest
	31, // 24: yandex.cloud.compute.v1.SnapshotScheduleService.ListAccessBindings:input_type -> yandex.cloud.access.ListAccessBindingsRequest
	32, // 25: yandex.cloud.compute.v1.SnapshotScheduleService.SetAccessBindings:input_type -> yandex.cloud.access.SetAccessBindingsRequest
	33, // 26: yandex.cloud.compute.v1.SnapshotScheduleService.UpdateAccessBindings:input_type -> yandex.cloud.access.UpdateAccessBindingsRequest
	23, // 27: yandex.cloud.compute.v1.SnapshotScheduleService.Get:output_type -> yandex.cloud.compute.v1.SnapshotSchedule
	2,  // 28: yandex.cloud.compute.v1.SnapshotScheduleService.List:output_type -> yandex.cloud.compute.v1.ListSnapshotSchedulesResponse
	28, // 29: yandex.cloud.compute.v1.SnapshotScheduleService.Create:output_type -> yandex.cloud.operation.Operation
	28, // 30: yandex.cloud.compute.v1.SnapshotScheduleService.Update:output_type -> yandex.cloud.operation.Operation
	28, // 31: yandex.cloud.compute.v1.SnapshotScheduleService.Delete:output_type -> yandex.cloud.operation.Operation
	28, // 32: yandex.cloud.compute.v1.SnapshotScheduleService.UpdateDisks:output_type -> yandex.cloud.operation.Operation
	28, // 33: yandex.cloud.compute.v1.SnapshotScheduleService.Disable:output_type -> yandex.cloud.operation.Operation
	28, // 34: yandex.cloud.compute.v1.SnapshotScheduleService.Enable:output_type -> yandex.cloud.operation.Operation
	14, // 35: yandex.cloud.compute.v1.SnapshotScheduleService.ListOperations:output_type -> yandex.cloud.compute.v1.ListSnapshotScheduleOperationsResponse
	16, // 36: yandex.cloud.compute.v1.SnapshotScheduleService.ListSnapshots:output_type -> yandex.cloud.compute.v1.ListSnapshotScheduleSnapshotsResponse
	18, // 37: yandex.cloud.compute.v1.SnapshotScheduleService.ListDisks:output_type -> yandex.cloud.compute.v1.ListSnapshotScheduleDisksResponse
	34, // 38: yandex.cloud.compute.v1.SnapshotScheduleService.ListAccessBindings:output_type -> yandex.cloud.access.ListAccessBindingsResponse
	28, // 39: yandex.cloud.compute.v1.SnapshotScheduleService.SetAccessBindings:output_type -> yandex.cloud.operation.Operation
	28, // 40: yandex.cloud.compute.v1.SnapshotScheduleService.UpdateAccessBindings:output_type -> yandex.cloud.operation.Operation
	27, // [27:41] is the sub-list for method output_type
	13, // [13:27] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_init() }
func file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_init() {
	if File_yandex_cloud_compute_v1_snapshot_schedule_service_proto != nil {
		return
	}
	file_yandex_cloud_compute_v1_disk_proto_init()
	file_yandex_cloud_compute_v1_snapshot_proto_init()
	file_yandex_cloud_compute_v1_snapshot_schedule_proto_init()
	file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[3].OneofWrappers = []any{
		(*CreateSnapshotScheduleRequest_RetentionPeriod)(nil),
		(*CreateSnapshotScheduleRequest_SnapshotCount)(nil),
	}
	file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes[5].OneofWrappers = []any{
		(*UpdateSnapshotScheduleRequest_RetentionPeriod)(nil),
		(*UpdateSnapshotScheduleRequest_SnapshotCount)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDesc), len(file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_compute_v1_snapshot_schedule_service_proto = out.File
	file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_goTypes = nil
	file_yandex_cloud_compute_v1_snapshot_schedule_service_proto_depIdxs = nil
}

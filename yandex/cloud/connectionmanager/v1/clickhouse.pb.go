// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/connectionmanager/v1/clickhouse.proto

package connectionmanager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClickHouseCluster_Host_Health int32

const (
	ClickHouseCluster_Host_HEALTH_UNKNOWN ClickHouseCluster_Host_Health = 0
	ClickHouseCluster_Host_ALIVE          ClickHouseCluster_Host_Health = 1
	ClickHouseCluster_Host_DEAD           ClickHouseCluster_Host_Health = 2
	ClickHouseCluster_Host_DEGRADED       ClickHouseCluster_Host_Health = 3
)

// Enum value maps for ClickHouseCluster_Host_Health.
var (
	ClickHouseCluster_Host_Health_name = map[int32]string{
		0: "HEALTH_UNKNOWN",
		1: "ALIVE",
		2: "DEAD",
		3: "DEGRADED",
	}
	ClickHouseCluster_Host_Health_value = map[string]int32{
		"HEALTH_UNKNOWN": 0,
		"ALIVE":          1,
		"DEAD":           2,
		"DEGRADED":       3,
	}
)

func (x ClickHouseCluster_Host_Health) Enum() *ClickHouseCluster_Host_Health {
	p := new(ClickHouseCluster_Host_Health)
	*p = x
	return p
}

func (x ClickHouseCluster_Host_Health) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClickHouseCluster_Host_Health) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_connectionmanager_v1_clickhouse_proto_enumTypes[0].Descriptor()
}

func (ClickHouseCluster_Host_Health) Type() protoreflect.EnumType {
	return &file_yandex_cloud_connectionmanager_v1_clickhouse_proto_enumTypes[0]
}

func (x ClickHouseCluster_Host_Health) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClickHouseCluster_Host_Health.Descriptor instead.
func (ClickHouseCluster_Host_Health) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDescGZIP(), []int{1, 0, 0}
}

type ClickHouseAuth struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Security:
	//
	//	*ClickHouseAuth_UserPassword
	Security      isClickHouseAuth_Security `protobuf_oneof:"security"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickHouseAuth) Reset() {
	*x = ClickHouseAuth{}
	mi := &file_yandex_cloud_connectionmanager_v1_clickhouse_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickHouseAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickHouseAuth) ProtoMessage() {}

func (x *ClickHouseAuth) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_clickhouse_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickHouseAuth.ProtoReflect.Descriptor instead.
func (*ClickHouseAuth) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDescGZIP(), []int{0}
}

func (x *ClickHouseAuth) GetSecurity() isClickHouseAuth_Security {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *ClickHouseAuth) GetUserPassword() *UserPasswordAuth {
	if x != nil {
		if x, ok := x.Security.(*ClickHouseAuth_UserPassword); ok {
			return x.UserPassword
		}
	}
	return nil
}

type isClickHouseAuth_Security interface {
	isClickHouseAuth_Security()
}

type ClickHouseAuth_UserPassword struct {
	UserPassword *UserPasswordAuth `protobuf:"bytes,1,opt,name=user_password,json=userPassword,proto3,oneof"`
}

func (*ClickHouseAuth_UserPassword) isClickHouseAuth_Security() {}

type ClickHouseCluster struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	TlsParams     *TLSParams                      `protobuf:"bytes,4,opt,name=tls_params,json=tlsParams,proto3" json:"tls_params,omitempty"`
	Hosts         []*ClickHouseCluster_Host       `protobuf:"bytes,6,rep,name=hosts,proto3" json:"hosts,omitempty"`
	ShardGroups   []*ClickHouseCluster_ShardGroup `protobuf:"bytes,7,rep,name=shard_groups,json=shardGroups,proto3" json:"shard_groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickHouseCluster) Reset() {
	*x = ClickHouseCluster{}
	mi := &file_yandex_cloud_connectionmanager_v1_clickhouse_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickHouseCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickHouseCluster) ProtoMessage() {}

func (x *ClickHouseCluster) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_clickhouse_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickHouseCluster.ProtoReflect.Descriptor instead.
func (*ClickHouseCluster) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDescGZIP(), []int{1}
}

func (x *ClickHouseCluster) GetTlsParams() *TLSParams {
	if x != nil {
		return x.TlsParams
	}
	return nil
}

func (x *ClickHouseCluster) GetHosts() []*ClickHouseCluster_Host {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *ClickHouseCluster) GetShardGroups() []*ClickHouseCluster_ShardGroup {
	if x != nil {
		return x.ShardGroups
	}
	return nil
}

type ClickHouseConnection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// When creating/updating Connection, the field "cluster" is mutually
	// exclusive with "managed_cluster_id".
	Cluster *ClickHouseCluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// When creating/updating Connection, the field "managed_cluster_id" is
	// mutually exclusive with "cluster".
	ManagedClusterId string          `protobuf:"bytes,2,opt,name=managed_cluster_id,json=managedClusterId,proto3" json:"managed_cluster_id,omitempty"`
	Auth             *ClickHouseAuth `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	Databases        []string        `protobuf:"bytes,4,rep,name=databases,proto3" json:"databases,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ClickHouseConnection) Reset() {
	*x = ClickHouseConnection{}
	mi := &file_yandex_cloud_connectionmanager_v1_clickhouse_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickHouseConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickHouseConnection) ProtoMessage() {}

func (x *ClickHouseConnection) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_clickhouse_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickHouseConnection.ProtoReflect.Descriptor instead.
func (*ClickHouseConnection) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDescGZIP(), []int{2}
}

func (x *ClickHouseConnection) GetCluster() *ClickHouseCluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *ClickHouseConnection) GetManagedClusterId() string {
	if x != nil {
		return x.ManagedClusterId
	}
	return ""
}

func (x *ClickHouseConnection) GetAuth() *ClickHouseAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ClickHouseConnection) GetDatabases() []string {
	if x != nil {
		return x.Databases
	}
	return nil
}

type ClickHouseCluster_Host struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Host  string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// depends on tls params may vary as http or https
	HttpPort      int64                         `protobuf:"varint,2,opt,name=http_port,json=httpPort,proto3" json:"http_port,omitempty"`
	TcpPort       int64                         `protobuf:"varint,3,opt,name=tcp_port,json=tcpPort,proto3" json:"tcp_port,omitempty"`
	ShardName     string                        `protobuf:"bytes,4,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	Health        ClickHouseCluster_Host_Health `protobuf:"varint,5,opt,name=health,proto3,enum=yandex.cloud.connectionmanager.v1.ClickHouseCluster_Host_Health" json:"health,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickHouseCluster_Host) Reset() {
	*x = ClickHouseCluster_Host{}
	mi := &file_yandex_cloud_connectionmanager_v1_clickhouse_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickHouseCluster_Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickHouseCluster_Host) ProtoMessage() {}

func (x *ClickHouseCluster_Host) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_clickhouse_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickHouseCluster_Host.ProtoReflect.Descriptor instead.
func (*ClickHouseCluster_Host) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ClickHouseCluster_Host) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ClickHouseCluster_Host) GetHttpPort() int64 {
	if x != nil {
		return x.HttpPort
	}
	return 0
}

func (x *ClickHouseCluster_Host) GetTcpPort() int64 {
	if x != nil {
		return x.TcpPort
	}
	return 0
}

func (x *ClickHouseCluster_Host) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

func (x *ClickHouseCluster_Host) GetHealth() ClickHouseCluster_Host_Health {
	if x != nil {
		return x.Health
	}
	return ClickHouseCluster_Host_HEALTH_UNKNOWN
}

type ClickHouseCluster_ShardGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ShardNames    []string               `protobuf:"bytes,2,rep,name=shard_names,json=shardNames,proto3" json:"shard_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickHouseCluster_ShardGroup) Reset() {
	*x = ClickHouseCluster_ShardGroup{}
	mi := &file_yandex_cloud_connectionmanager_v1_clickhouse_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickHouseCluster_ShardGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickHouseCluster_ShardGroup) ProtoMessage() {}

func (x *ClickHouseCluster_ShardGroup) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_clickhouse_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickHouseCluster_ShardGroup.ProtoReflect.Descriptor instead.
func (*ClickHouseCluster_ShardGroup) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ClickHouseCluster_ShardGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClickHouseCluster_ShardGroup) GetShardNames() []string {
	if x != nil {
		return x.ShardNames
	}
	return nil
}

var File_yandex_cloud_connectionmanager_v1_clickhouse_proto protoreflect.FileDescriptor

const file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDesc = "" +
	"\n" +
	"2yandex/cloud/connectionmanager/v1/clickhouse.proto\x12!yandex.cloud.connectionmanager.v1\x1a.yandex/cloud/connectionmanager/v1/common.proto\"x\n" +
	"\x0eClickHouseAuth\x12Z\n" +
	"\ruser_password\x18\x01 \x01(\v23.yandex.cloud.connectionmanager.v1.UserPasswordAuthH\x00R\fuserPasswordB\n" +
	"\n" +
	"\bsecurity\"\xf3\x04\n" +
	"\x11ClickHouseCluster\x12K\n" +
	"\n" +
	"tls_params\x18\x04 \x01(\v2,.yandex.cloud.connectionmanager.v1.TLSParamsR\ttlsParams\x12O\n" +
	"\x05hosts\x18\x06 \x03(\v29.yandex.cloud.connectionmanager.v1.ClickHouseCluster.HostR\x05hosts\x12b\n" +
	"\fshard_groups\x18\a \x03(\v2?.yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroupR\vshardGroups\x1a\x8c\x02\n" +
	"\x04Host\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x1b\n" +
	"\thttp_port\x18\x02 \x01(\x03R\bhttpPort\x12\x19\n" +
	"\btcp_port\x18\x03 \x01(\x03R\atcpPort\x12\x1d\n" +
	"\n" +
	"shard_name\x18\x04 \x01(\tR\tshardName\x12X\n" +
	"\x06health\x18\x05 \x01(\x0e2@.yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.HealthR\x06health\"?\n" +
	"\x06Health\x12\x12\n" +
	"\x0eHEALTH_UNKNOWN\x10\x00\x12\t\n" +
	"\x05ALIVE\x10\x01\x12\b\n" +
	"\x04DEAD\x10\x02\x12\f\n" +
	"\bDEGRADED\x10\x03\x1aA\n" +
	"\n" +
	"ShardGroup\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\vshard_names\x18\x02 \x03(\tR\n" +
	"shardNamesJ\x04\b\x01\x10\x04J\x04\b\x05\x10\x06\"\xf9\x01\n" +
	"\x14ClickHouseConnection\x12N\n" +
	"\acluster\x18\x01 \x01(\v24.yandex.cloud.connectionmanager.v1.ClickHouseClusterR\acluster\x12,\n" +
	"\x12managed_cluster_id\x18\x02 \x01(\tR\x10managedClusterId\x12E\n" +
	"\x04auth\x18\x03 \x01(\v21.yandex.cloud.connectionmanager.v1.ClickHouseAuthR\x04auth\x12\x1c\n" +
	"\tdatabases\x18\x04 \x03(\tR\tdatabasesB\x80\x01\n" +
	"%yandex.cloud.api.connectionmanager.v1ZWgithub.com/yandex-cloud/go-genproto/yandex/cloud/connectionmanager/v1;connectionmanagerb\x06proto3"

var (
	file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDescOnce sync.Once
	file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDescData []byte
)

func file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDescGZIP() []byte {
	file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDesc), len(file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDesc)))
	})
	return file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDescData
}

var file_yandex_cloud_connectionmanager_v1_clickhouse_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_connectionmanager_v1_clickhouse_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_yandex_cloud_connectionmanager_v1_clickhouse_proto_goTypes = []any{
	(ClickHouseCluster_Host_Health)(0),   // 0: yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.Health
	(*ClickHouseAuth)(nil),               // 1: yandex.cloud.connectionmanager.v1.ClickHouseAuth
	(*ClickHouseCluster)(nil),            // 2: yandex.cloud.connectionmanager.v1.ClickHouseCluster
	(*ClickHouseConnection)(nil),         // 3: yandex.cloud.connectionmanager.v1.ClickHouseConnection
	(*ClickHouseCluster_Host)(nil),       // 4: yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host
	(*ClickHouseCluster_ShardGroup)(nil), // 5: yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup
	(*UserPasswordAuth)(nil),             // 6: yandex.cloud.connectionmanager.v1.UserPasswordAuth
	(*TLSParams)(nil),                    // 7: yandex.cloud.connectionmanager.v1.TLSParams
}
var file_yandex_cloud_connectionmanager_v1_clickhouse_proto_depIdxs = []int32{
	6, // 0: yandex.cloud.connectionmanager.v1.ClickHouseAuth.user_password:type_name -> yandex.cloud.connectionmanager.v1.UserPasswordAuth
	7, // 1: yandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_params:type_name -> yandex.cloud.connectionmanager.v1.TLSParams
	4, // 2: yandex.cloud.connectionmanager.v1.ClickHouseCluster.hosts:type_name -> yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host
	5, // 3: yandex.cloud.connectionmanager.v1.ClickHouseCluster.shard_groups:type_name -> yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup
	2, // 4: yandex.cloud.connectionmanager.v1.ClickHouseConnection.cluster:type_name -> yandex.cloud.connectionmanager.v1.ClickHouseCluster
	1, // 5: yandex.cloud.connectionmanager.v1.ClickHouseConnection.auth:type_name -> yandex.cloud.connectionmanager.v1.ClickHouseAuth
	0, // 6: yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.health:type_name -> yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.Health
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_yandex_cloud_connectionmanager_v1_clickhouse_proto_init() }
func file_yandex_cloud_connectionmanager_v1_clickhouse_proto_init() {
	if File_yandex_cloud_connectionmanager_v1_clickhouse_proto != nil {
		return
	}
	file_yandex_cloud_connectionmanager_v1_common_proto_init()
	file_yandex_cloud_connectionmanager_v1_clickhouse_proto_msgTypes[0].OneofWrappers = []any{
		(*ClickHouseAuth_UserPassword)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDesc), len(file_yandex_cloud_connectionmanager_v1_clickhouse_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_connectionmanager_v1_clickhouse_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_connectionmanager_v1_clickhouse_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_connectionmanager_v1_clickhouse_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_connectionmanager_v1_clickhouse_proto_msgTypes,
	}.Build()
	File_yandex_cloud_connectionmanager_v1_clickhouse_proto = out.File
	file_yandex_cloud_connectionmanager_v1_clickhouse_proto_goTypes = nil
	file_yandex_cloud_connectionmanager_v1_clickhouse_proto_depIdxs = nil
}

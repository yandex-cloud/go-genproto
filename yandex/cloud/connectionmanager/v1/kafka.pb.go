// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/connectionmanager/v1/kafka.proto

package connectionmanager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KafkaSaslSecurity_Mechanism int32

const (
	KafkaSaslSecurity_MECHANISM_UNSPECIFIED KafkaSaslSecurity_Mechanism = 0
	KafkaSaslSecurity_PLAIN                 KafkaSaslSecurity_Mechanism = 1
	KafkaSaslSecurity_SCRAM_SHA256          KafkaSaslSecurity_Mechanism = 2
	KafkaSaslSecurity_SCRAM_SHA512          KafkaSaslSecurity_Mechanism = 3
)

// Enum value maps for KafkaSaslSecurity_Mechanism.
var (
	KafkaSaslSecurity_Mechanism_name = map[int32]string{
		0: "MECHANISM_UNSPECIFIED",
		1: "PLAIN",
		2: "SCRAM_SHA256",
		3: "SCRAM_SHA512",
	}
	KafkaSaslSecurity_Mechanism_value = map[string]int32{
		"MECHANISM_UNSPECIFIED": 0,
		"PLAIN":                 1,
		"SCRAM_SHA256":          2,
		"SCRAM_SHA512":          3,
	}
)

func (x KafkaSaslSecurity_Mechanism) Enum() *KafkaSaslSecurity_Mechanism {
	p := new(KafkaSaslSecurity_Mechanism)
	*p = x
	return p
}

func (x KafkaSaslSecurity_Mechanism) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KafkaSaslSecurity_Mechanism) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_connectionmanager_v1_kafka_proto_enumTypes[0].Descriptor()
}

func (KafkaSaslSecurity_Mechanism) Type() protoreflect.EnumType {
	return &file_yandex_cloud_connectionmanager_v1_kafka_proto_enumTypes[0]
}

func (x KafkaSaslSecurity_Mechanism) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KafkaSaslSecurity_Mechanism.Descriptor instead.
func (KafkaSaslSecurity_Mechanism) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDescGZIP(), []int{0, 0}
}

type KafkaCluster_Host_Health int32

const (
	KafkaCluster_Host_HEALTH_UNSPECIFIED KafkaCluster_Host_Health = 0 // Host is in unknown state (we have no data)
	KafkaCluster_Host_ALIVE              KafkaCluster_Host_Health = 1 // Host is alive and well (all services are alive)
	KafkaCluster_Host_DEAD               KafkaCluster_Host_Health = 2 // Host is inoperable (it cannot perform any of its essential functions)
	KafkaCluster_Host_DEGRADED           KafkaCluster_Host_Health = 3 // Host is partially alive (it can perform some of its essential functions)
)

// Enum value maps for KafkaCluster_Host_Health.
var (
	KafkaCluster_Host_Health_name = map[int32]string{
		0: "HEALTH_UNSPECIFIED",
		1: "ALIVE",
		2: "DEAD",
		3: "DEGRADED",
	}
	KafkaCluster_Host_Health_value = map[string]int32{
		"HEALTH_UNSPECIFIED": 0,
		"ALIVE":              1,
		"DEAD":               2,
		"DEGRADED":           3,
	}
)

func (x KafkaCluster_Host_Health) Enum() *KafkaCluster_Host_Health {
	p := new(KafkaCluster_Host_Health)
	*p = x
	return p
}

func (x KafkaCluster_Host_Health) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KafkaCluster_Host_Health) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_connectionmanager_v1_kafka_proto_enumTypes[1].Descriptor()
}

func (KafkaCluster_Host_Health) Type() protoreflect.EnumType {
	return &file_yandex_cloud_connectionmanager_v1_kafka_proto_enumTypes[1]
}

func (x KafkaCluster_Host_Health) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KafkaCluster_Host_Health.Descriptor instead.
func (KafkaCluster_Host_Health) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDescGZIP(), []int{2, 0, 0}
}

type KafkaSaslSecurity struct {
	state               protoimpl.MessageState        `protogen:"open.v1"`
	User                string                        `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Password            *Password                     `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	SupportedMechanisms []KafkaSaslSecurity_Mechanism `protobuf:"varint,3,rep,packed,name=supported_mechanisms,json=supportedMechanisms,proto3,enum=yandex.cloud.connectionmanager.v1.KafkaSaslSecurity_Mechanism" json:"supported_mechanisms,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *KafkaSaslSecurity) Reset() {
	*x = KafkaSaslSecurity{}
	mi := &file_yandex_cloud_connectionmanager_v1_kafka_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KafkaSaslSecurity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaSaslSecurity) ProtoMessage() {}

func (x *KafkaSaslSecurity) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_kafka_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaSaslSecurity.ProtoReflect.Descriptor instead.
func (*KafkaSaslSecurity) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDescGZIP(), []int{0}
}

func (x *KafkaSaslSecurity) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *KafkaSaslSecurity) GetPassword() *Password {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *KafkaSaslSecurity) GetSupportedMechanisms() []KafkaSaslSecurity_Mechanism {
	if x != nil {
		return x.SupportedMechanisms
	}
	return nil
}

type KafkaAuth struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Security:
	//
	//	*KafkaAuth_Sasl
	//	*KafkaAuth_Disabled
	Security      isKafkaAuth_Security `protobuf_oneof:"security"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KafkaAuth) Reset() {
	*x = KafkaAuth{}
	mi := &file_yandex_cloud_connectionmanager_v1_kafka_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KafkaAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaAuth) ProtoMessage() {}

func (x *KafkaAuth) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_kafka_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaAuth.ProtoReflect.Descriptor instead.
func (*KafkaAuth) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDescGZIP(), []int{1}
}

func (x *KafkaAuth) GetSecurity() isKafkaAuth_Security {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *KafkaAuth) GetSasl() *KafkaSaslSecurity {
	if x != nil {
		if x, ok := x.Security.(*KafkaAuth_Sasl); ok {
			return x.Sasl
		}
	}
	return nil
}

func (x *KafkaAuth) GetDisabled() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Security.(*KafkaAuth_Disabled); ok {
			return x.Disabled
		}
	}
	return nil
}

type isKafkaAuth_Security interface {
	isKafkaAuth_Security()
}

type KafkaAuth_Sasl struct {
	Sasl *KafkaSaslSecurity `protobuf:"bytes,1,opt,name=sasl,proto3,oneof"`
}

type KafkaAuth_Disabled struct {
	Disabled *emptypb.Empty `protobuf:"bytes,2,opt,name=disabled,proto3,oneof"`
}

func (*KafkaAuth_Sasl) isKafkaAuth_Security() {}

func (*KafkaAuth_Disabled) isKafkaAuth_Security() {}

type KafkaCluster struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hosts         []*KafkaCluster_Host   `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	TlsParams     *TLSParams             `protobuf:"bytes,2,opt,name=tls_params,json=tlsParams,proto3" json:"tls_params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KafkaCluster) Reset() {
	*x = KafkaCluster{}
	mi := &file_yandex_cloud_connectionmanager_v1_kafka_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KafkaCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaCluster) ProtoMessage() {}

func (x *KafkaCluster) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_kafka_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaCluster.ProtoReflect.Descriptor instead.
func (*KafkaCluster) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDescGZIP(), []int{2}
}

func (x *KafkaCluster) GetHosts() []*KafkaCluster_Host {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *KafkaCluster) GetTlsParams() *TLSParams {
	if x != nil {
		return x.TlsParams
	}
	return nil
}

type KafkaConnection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// When creating/updating Connection, the field "cluster" is mutually
	// exclusive with "managed_cluster_id".
	Cluster *KafkaCluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// When creating/updating Connection, the field "managed_cluster_id" is
	// mutually exclusive with "cluster".
	ManagedClusterId string     `protobuf:"bytes,2,opt,name=managed_cluster_id,json=managedClusterId,proto3" json:"managed_cluster_id,omitempty"`
	Auth             *KafkaAuth `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *KafkaConnection) Reset() {
	*x = KafkaConnection{}
	mi := &file_yandex_cloud_connectionmanager_v1_kafka_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KafkaConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaConnection) ProtoMessage() {}

func (x *KafkaConnection) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_kafka_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaConnection.ProtoReflect.Descriptor instead.
func (*KafkaConnection) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDescGZIP(), []int{3}
}

func (x *KafkaConnection) GetCluster() *KafkaCluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *KafkaConnection) GetManagedClusterId() string {
	if x != nil {
		return x.ManagedClusterId
	}
	return ""
}

func (x *KafkaConnection) GetAuth() *KafkaAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

type KafkaCluster_Host struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Host          string                   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port          int64                    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Health        KafkaCluster_Host_Health `protobuf:"varint,3,opt,name=health,proto3,enum=yandex.cloud.connectionmanager.v1.KafkaCluster_Host_Health" json:"health,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KafkaCluster_Host) Reset() {
	*x = KafkaCluster_Host{}
	mi := &file_yandex_cloud_connectionmanager_v1_kafka_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KafkaCluster_Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaCluster_Host) ProtoMessage() {}

func (x *KafkaCluster_Host) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_kafka_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaCluster_Host.ProtoReflect.Descriptor instead.
func (*KafkaCluster_Host) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDescGZIP(), []int{2, 0}
}

func (x *KafkaCluster_Host) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *KafkaCluster_Host) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *KafkaCluster_Host) GetHealth() KafkaCluster_Host_Health {
	if x != nil {
		return x.Health
	}
	return KafkaCluster_Host_HEALTH_UNSPECIFIED
}

var File_yandex_cloud_connectionmanager_v1_kafka_proto protoreflect.FileDescriptor

const file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDesc = "" +
	"\n" +
	"-yandex/cloud/connectionmanager/v1/kafka.proto\x12!yandex.cloud.connectionmanager.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a.yandex/cloud/connectionmanager/v1/common.proto\"\xba\x02\n" +
	"\x11KafkaSaslSecurity\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\x12G\n" +
	"\bpassword\x18\x02 \x01(\v2+.yandex.cloud.connectionmanager.v1.PasswordR\bpassword\x12q\n" +
	"\x14supported_mechanisms\x18\x03 \x03(\x0e2>.yandex.cloud.connectionmanager.v1.KafkaSaslSecurity.MechanismR\x13supportedMechanisms\"U\n" +
	"\tMechanism\x12\x19\n" +
	"\x15MECHANISM_UNSPECIFIED\x10\x00\x12\t\n" +
	"\x05PLAIN\x10\x01\x12\x10\n" +
	"\fSCRAM_SHA256\x10\x02\x12\x10\n" +
	"\fSCRAM_SHA512\x10\x03\"\x99\x01\n" +
	"\tKafkaAuth\x12J\n" +
	"\x04sasl\x18\x01 \x01(\v24.yandex.cloud.connectionmanager.v1.KafkaSaslSecurityH\x00R\x04sasl\x124\n" +
	"\bdisabled\x18\x02 \x01(\v2\x16.google.protobuf.EmptyH\x00R\bdisabledB\n" +
	"\n" +
	"\bsecurity\"\xf2\x02\n" +
	"\fKafkaCluster\x12J\n" +
	"\x05hosts\x18\x01 \x03(\v24.yandex.cloud.connectionmanager.v1.KafkaCluster.HostR\x05hosts\x12K\n" +
	"\n" +
	"tls_params\x18\x02 \x01(\v2,.yandex.cloud.connectionmanager.v1.TLSParamsR\ttlsParams\x1a\xc8\x01\n" +
	"\x04Host\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x03R\x04port\x12S\n" +
	"\x06health\x18\x03 \x01(\x0e2;.yandex.cloud.connectionmanager.v1.KafkaCluster.Host.HealthR\x06health\"C\n" +
	"\x06Health\x12\x16\n" +
	"\x12HEALTH_UNSPECIFIED\x10\x00\x12\t\n" +
	"\x05ALIVE\x10\x01\x12\b\n" +
	"\x04DEAD\x10\x02\x12\f\n" +
	"\bDEGRADED\x10\x03\"\xcc\x01\n" +
	"\x0fKafkaConnection\x12I\n" +
	"\acluster\x18\x01 \x01(\v2/.yandex.cloud.connectionmanager.v1.KafkaClusterR\acluster\x12,\n" +
	"\x12managed_cluster_id\x18\x02 \x01(\tR\x10managedClusterId\x12@\n" +
	"\x04auth\x18\x03 \x01(\v2,.yandex.cloud.connectionmanager.v1.KafkaAuthR\x04authB\x80\x01\n" +
	"%yandex.cloud.api.connectionmanager.v1ZWgithub.com/yandex-cloud/go-genproto/yandex/cloud/connectionmanager/v1;connectionmanagerb\x06proto3"

var (
	file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDescOnce sync.Once
	file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDescData []byte
)

func file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDescGZIP() []byte {
	file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDesc), len(file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDesc)))
	})
	return file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDescData
}

var file_yandex_cloud_connectionmanager_v1_kafka_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_yandex_cloud_connectionmanager_v1_kafka_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_yandex_cloud_connectionmanager_v1_kafka_proto_goTypes = []any{
	(KafkaSaslSecurity_Mechanism)(0), // 0: yandex.cloud.connectionmanager.v1.KafkaSaslSecurity.Mechanism
	(KafkaCluster_Host_Health)(0),    // 1: yandex.cloud.connectionmanager.v1.KafkaCluster.Host.Health
	(*KafkaSaslSecurity)(nil),        // 2: yandex.cloud.connectionmanager.v1.KafkaSaslSecurity
	(*KafkaAuth)(nil),                // 3: yandex.cloud.connectionmanager.v1.KafkaAuth
	(*KafkaCluster)(nil),             // 4: yandex.cloud.connectionmanager.v1.KafkaCluster
	(*KafkaConnection)(nil),          // 5: yandex.cloud.connectionmanager.v1.KafkaConnection
	(*KafkaCluster_Host)(nil),        // 6: yandex.cloud.connectionmanager.v1.KafkaCluster.Host
	(*Password)(nil),                 // 7: yandex.cloud.connectionmanager.v1.Password
	(*emptypb.Empty)(nil),            // 8: google.protobuf.Empty
	(*TLSParams)(nil),                // 9: yandex.cloud.connectionmanager.v1.TLSParams
}
var file_yandex_cloud_connectionmanager_v1_kafka_proto_depIdxs = []int32{
	7, // 0: yandex.cloud.connectionmanager.v1.KafkaSaslSecurity.password:type_name -> yandex.cloud.connectionmanager.v1.Password
	0, // 1: yandex.cloud.connectionmanager.v1.KafkaSaslSecurity.supported_mechanisms:type_name -> yandex.cloud.connectionmanager.v1.KafkaSaslSecurity.Mechanism
	2, // 2: yandex.cloud.connectionmanager.v1.KafkaAuth.sasl:type_name -> yandex.cloud.connectionmanager.v1.KafkaSaslSecurity
	8, // 3: yandex.cloud.connectionmanager.v1.KafkaAuth.disabled:type_name -> google.protobuf.Empty
	6, // 4: yandex.cloud.connectionmanager.v1.KafkaCluster.hosts:type_name -> yandex.cloud.connectionmanager.v1.KafkaCluster.Host
	9, // 5: yandex.cloud.connectionmanager.v1.KafkaCluster.tls_params:type_name -> yandex.cloud.connectionmanager.v1.TLSParams
	4, // 6: yandex.cloud.connectionmanager.v1.KafkaConnection.cluster:type_name -> yandex.cloud.connectionmanager.v1.KafkaCluster
	3, // 7: yandex.cloud.connectionmanager.v1.KafkaConnection.auth:type_name -> yandex.cloud.connectionmanager.v1.KafkaAuth
	1, // 8: yandex.cloud.connectionmanager.v1.KafkaCluster.Host.health:type_name -> yandex.cloud.connectionmanager.v1.KafkaCluster.Host.Health
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_yandex_cloud_connectionmanager_v1_kafka_proto_init() }
func file_yandex_cloud_connectionmanager_v1_kafka_proto_init() {
	if File_yandex_cloud_connectionmanager_v1_kafka_proto != nil {
		return
	}
	file_yandex_cloud_connectionmanager_v1_common_proto_init()
	file_yandex_cloud_connectionmanager_v1_kafka_proto_msgTypes[1].OneofWrappers = []any{
		(*KafkaAuth_Sasl)(nil),
		(*KafkaAuth_Disabled)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDesc), len(file_yandex_cloud_connectionmanager_v1_kafka_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_connectionmanager_v1_kafka_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_connectionmanager_v1_kafka_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_connectionmanager_v1_kafka_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_connectionmanager_v1_kafka_proto_msgTypes,
	}.Build()
	File_yandex_cloud_connectionmanager_v1_kafka_proto = out.File
	file_yandex_cloud_connectionmanager_v1_kafka_proto_goTypes = nil
	file_yandex_cloud_connectionmanager_v1_kafka_proto_depIdxs = nil
}

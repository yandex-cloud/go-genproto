// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/connectionmanager/v1/mongodb.proto

package connectionmanager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MongoDBCluster_Host_Type int32

const (
	MongoDBCluster_Host_TYPE_UNSPECIFIED MongoDBCluster_Host_Type = 0
	MongoDBCluster_Host_MONGOD           MongoDBCluster_Host_Type = 1
	MongoDBCluster_Host_MONGOS           MongoDBCluster_Host_Type = 2
	MongoDBCluster_Host_MONGOINFRA       MongoDBCluster_Host_Type = 3
)

// Enum value maps for MongoDBCluster_Host_Type.
var (
	MongoDBCluster_Host_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "MONGOD",
		2: "MONGOS",
		3: "MONGOINFRA",
	}
	MongoDBCluster_Host_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"MONGOD":           1,
		"MONGOS":           2,
		"MONGOINFRA":       3,
	}
)

func (x MongoDBCluster_Host_Type) Enum() *MongoDBCluster_Host_Type {
	p := new(MongoDBCluster_Host_Type)
	*p = x
	return p
}

func (x MongoDBCluster_Host_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MongoDBCluster_Host_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_connectionmanager_v1_mongodb_proto_enumTypes[0].Descriptor()
}

func (MongoDBCluster_Host_Type) Type() protoreflect.EnumType {
	return &file_yandex_cloud_connectionmanager_v1_mongodb_proto_enumTypes[0]
}

func (x MongoDBCluster_Host_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MongoDBCluster_Host_Type.Descriptor instead.
func (MongoDBCluster_Host_Type) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDescGZIP(), []int{1, 0, 0}
}

type MongoDBCluster_Host_Role int32

const (
	MongoDBCluster_Host_ROLE_UNSPECIFIED MongoDBCluster_Host_Role = 0
	MongoDBCluster_Host_PRIMARY          MongoDBCluster_Host_Role = 1
	MongoDBCluster_Host_SECONDARY        MongoDBCluster_Host_Role = 2
)

// Enum value maps for MongoDBCluster_Host_Role.
var (
	MongoDBCluster_Host_Role_name = map[int32]string{
		0: "ROLE_UNSPECIFIED",
		1: "PRIMARY",
		2: "SECONDARY",
	}
	MongoDBCluster_Host_Role_value = map[string]int32{
		"ROLE_UNSPECIFIED": 0,
		"PRIMARY":          1,
		"SECONDARY":        2,
	}
)

func (x MongoDBCluster_Host_Role) Enum() *MongoDBCluster_Host_Role {
	p := new(MongoDBCluster_Host_Role)
	*p = x
	return p
}

func (x MongoDBCluster_Host_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MongoDBCluster_Host_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_connectionmanager_v1_mongodb_proto_enumTypes[1].Descriptor()
}

func (MongoDBCluster_Host_Role) Type() protoreflect.EnumType {
	return &file_yandex_cloud_connectionmanager_v1_mongodb_proto_enumTypes[1]
}

func (x MongoDBCluster_Host_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MongoDBCluster_Host_Role.Descriptor instead.
func (MongoDBCluster_Host_Role) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDescGZIP(), []int{1, 0, 1}
}

type MongoDBCluster_Host_Health int32

const (
	MongoDBCluster_Host_HEALTH_UNSPECIFIED MongoDBCluster_Host_Health = 0
	MongoDBCluster_Host_ALIVE              MongoDBCluster_Host_Health = 1
	MongoDBCluster_Host_DEAD               MongoDBCluster_Host_Health = 2
	MongoDBCluster_Host_DEGRADED           MongoDBCluster_Host_Health = 3
)

// Enum value maps for MongoDBCluster_Host_Health.
var (
	MongoDBCluster_Host_Health_name = map[int32]string{
		0: "HEALTH_UNSPECIFIED",
		1: "ALIVE",
		2: "DEAD",
		3: "DEGRADED",
	}
	MongoDBCluster_Host_Health_value = map[string]int32{
		"HEALTH_UNSPECIFIED": 0,
		"ALIVE":              1,
		"DEAD":               2,
		"DEGRADED":           3,
	}
)

func (x MongoDBCluster_Host_Health) Enum() *MongoDBCluster_Host_Health {
	p := new(MongoDBCluster_Host_Health)
	*p = x
	return p
}

func (x MongoDBCluster_Host_Health) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MongoDBCluster_Host_Health) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_connectionmanager_v1_mongodb_proto_enumTypes[2].Descriptor()
}

func (MongoDBCluster_Host_Health) Type() protoreflect.EnumType {
	return &file_yandex_cloud_connectionmanager_v1_mongodb_proto_enumTypes[2]
}

func (x MongoDBCluster_Host_Health) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MongoDBCluster_Host_Health.Descriptor instead.
func (MongoDBCluster_Host_Health) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDescGZIP(), []int{1, 0, 2}
}

type MongoDBAuth struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Security:
	//
	//	*MongoDBAuth_UserPassword
	Security      isMongoDBAuth_Security `protobuf_oneof:"security"`
	AuthSource    string                 `protobuf:"bytes,2,opt,name=auth_source,json=authSource,proto3" json:"auth_source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MongoDBAuth) Reset() {
	*x = MongoDBAuth{}
	mi := &file_yandex_cloud_connectionmanager_v1_mongodb_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MongoDBAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoDBAuth) ProtoMessage() {}

func (x *MongoDBAuth) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_mongodb_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoDBAuth.ProtoReflect.Descriptor instead.
func (*MongoDBAuth) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDescGZIP(), []int{0}
}

func (x *MongoDBAuth) GetSecurity() isMongoDBAuth_Security {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *MongoDBAuth) GetUserPassword() *UserPasswordAuth {
	if x != nil {
		if x, ok := x.Security.(*MongoDBAuth_UserPassword); ok {
			return x.UserPassword
		}
	}
	return nil
}

func (x *MongoDBAuth) GetAuthSource() string {
	if x != nil {
		return x.AuthSource
	}
	return ""
}

type isMongoDBAuth_Security interface {
	isMongoDBAuth_Security()
}

type MongoDBAuth_UserPassword struct {
	UserPassword *UserPasswordAuth `protobuf:"bytes,1,opt,name=user_password,json=userPassword,proto3,oneof"`
}

func (*MongoDBAuth_UserPassword) isMongoDBAuth_Security() {}

type MongoDBCluster struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hosts         []*MongoDBCluster_Host `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	TlsParams     *TLSParams             `protobuf:"bytes,2,opt,name=tls_params,json=tlsParams,proto3" json:"tls_params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MongoDBCluster) Reset() {
	*x = MongoDBCluster{}
	mi := &file_yandex_cloud_connectionmanager_v1_mongodb_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MongoDBCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoDBCluster) ProtoMessage() {}

func (x *MongoDBCluster) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_mongodb_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoDBCluster.ProtoReflect.Descriptor instead.
func (*MongoDBCluster) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDescGZIP(), []int{1}
}

func (x *MongoDBCluster) GetHosts() []*MongoDBCluster_Host {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *MongoDBCluster) GetTlsParams() *TLSParams {
	if x != nil {
		return x.TlsParams
	}
	return nil
}

type MongoDBConnection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// When creating/updating Connection, the field "cluster" is mutually
	// exclusive with "managed_cluster_id".
	Cluster *MongoDBCluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// When creating/updating Connection, the field "managed_cluster_id" is
	// mutually exclusive with "cluster".
	ManagedClusterId string       `protobuf:"bytes,2,opt,name=managed_cluster_id,json=managedClusterId,proto3" json:"managed_cluster_id,omitempty"`
	Auth             *MongoDBAuth `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	Databases        []string     `protobuf:"bytes,4,rep,name=databases,proto3" json:"databases,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MongoDBConnection) Reset() {
	*x = MongoDBConnection{}
	mi := &file_yandex_cloud_connectionmanager_v1_mongodb_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MongoDBConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoDBConnection) ProtoMessage() {}

func (x *MongoDBConnection) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_mongodb_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoDBConnection.ProtoReflect.Descriptor instead.
func (*MongoDBConnection) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDescGZIP(), []int{2}
}

func (x *MongoDBConnection) GetCluster() *MongoDBCluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *MongoDBConnection) GetManagedClusterId() string {
	if x != nil {
		return x.ManagedClusterId
	}
	return ""
}

func (x *MongoDBConnection) GetAuth() *MongoDBAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *MongoDBConnection) GetDatabases() []string {
	if x != nil {
		return x.Databases
	}
	return nil
}

type MongoDBCluster_Host struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Host          string                     `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port          int64                      `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Role          MongoDBCluster_Host_Role   `protobuf:"varint,3,opt,name=role,proto3,enum=yandex.cloud.connectionmanager.v1.MongoDBCluster_Host_Role" json:"role,omitempty"`
	Health        MongoDBCluster_Host_Health `protobuf:"varint,4,opt,name=health,proto3,enum=yandex.cloud.connectionmanager.v1.MongoDBCluster_Host_Health" json:"health,omitempty"`
	Type          MongoDBCluster_Host_Type   `protobuf:"varint,5,opt,name=type,proto3,enum=yandex.cloud.connectionmanager.v1.MongoDBCluster_Host_Type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MongoDBCluster_Host) Reset() {
	*x = MongoDBCluster_Host{}
	mi := &file_yandex_cloud_connectionmanager_v1_mongodb_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MongoDBCluster_Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoDBCluster_Host) ProtoMessage() {}

func (x *MongoDBCluster_Host) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_mongodb_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoDBCluster_Host.ProtoReflect.Descriptor instead.
func (*MongoDBCluster_Host) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDescGZIP(), []int{1, 0}
}

func (x *MongoDBCluster_Host) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *MongoDBCluster_Host) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *MongoDBCluster_Host) GetRole() MongoDBCluster_Host_Role {
	if x != nil {
		return x.Role
	}
	return MongoDBCluster_Host_ROLE_UNSPECIFIED
}

func (x *MongoDBCluster_Host) GetHealth() MongoDBCluster_Host_Health {
	if x != nil {
		return x.Health
	}
	return MongoDBCluster_Host_HEALTH_UNSPECIFIED
}

func (x *MongoDBCluster_Host) GetType() MongoDBCluster_Host_Type {
	if x != nil {
		return x.Type
	}
	return MongoDBCluster_Host_TYPE_UNSPECIFIED
}

var File_yandex_cloud_connectionmanager_v1_mongodb_proto protoreflect.FileDescriptor

const file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDesc = "" +
	"\n" +
	"/yandex/cloud/connectionmanager/v1/mongodb.proto\x12!yandex.cloud.connectionmanager.v1\x1a.yandex/cloud/connectionmanager/v1/common.proto\"\x96\x01\n" +
	"\vMongoDBAuth\x12Z\n" +
	"\ruser_password\x18\x01 \x01(\v23.yandex.cloud.connectionmanager.v1.UserPasswordAuthH\x00R\fuserPassword\x12\x1f\n" +
	"\vauth_source\x18\x02 \x01(\tR\n" +
	"authSourceB\n" +
	"\n" +
	"\bsecurity\"\x9a\x05\n" +
	"\x0eMongoDBCluster\x12L\n" +
	"\x05hosts\x18\x01 \x03(\v26.yandex.cloud.connectionmanager.v1.MongoDBCluster.HostR\x05hosts\x12K\n" +
	"\n" +
	"tls_params\x18\x02 \x01(\v2,.yandex.cloud.connectionmanager.v1.TLSParamsR\ttlsParams\x1a\xec\x03\n" +
	"\x04Host\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x03R\x04port\x12O\n" +
	"\x04role\x18\x03 \x01(\x0e2;.yandex.cloud.connectionmanager.v1.MongoDBCluster.Host.RoleR\x04role\x12U\n" +
	"\x06health\x18\x04 \x01(\x0e2=.yandex.cloud.connectionmanager.v1.MongoDBCluster.Host.HealthR\x06health\x12O\n" +
	"\x04type\x18\x05 \x01(\x0e2;.yandex.cloud.connectionmanager.v1.MongoDBCluster.Host.TypeR\x04type\"D\n" +
	"\x04Type\x12\x14\n" +
	"\x10TYPE_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06MONGOD\x10\x01\x12\n" +
	"\n" +
	"\x06MONGOS\x10\x02\x12\x0e\n" +
	"\n" +
	"MONGOINFRA\x10\x03\"8\n" +
	"\x04Role\x12\x14\n" +
	"\x10ROLE_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aPRIMARY\x10\x01\x12\r\n" +
	"\tSECONDARY\x10\x02\"C\n" +
	"\x06Health\x12\x16\n" +
	"\x12HEALTH_UNSPECIFIED\x10\x00\x12\t\n" +
	"\x05ALIVE\x10\x01\x12\b\n" +
	"\x04DEAD\x10\x02\x12\f\n" +
	"\bDEGRADED\x10\x03\"\xf0\x01\n" +
	"\x11MongoDBConnection\x12K\n" +
	"\acluster\x18\x01 \x01(\v21.yandex.cloud.connectionmanager.v1.MongoDBClusterR\acluster\x12,\n" +
	"\x12managed_cluster_id\x18\x02 \x01(\tR\x10managedClusterId\x12B\n" +
	"\x04auth\x18\x03 \x01(\v2..yandex.cloud.connectionmanager.v1.MongoDBAuthR\x04auth\x12\x1c\n" +
	"\tdatabases\x18\x04 \x03(\tR\tdatabasesB\x80\x01\n" +
	"%yandex.cloud.api.connectionmanager.v1ZWgithub.com/yandex-cloud/go-genproto/yandex/cloud/connectionmanager/v1;connectionmanagerb\x06proto3"

var (
	file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDescOnce sync.Once
	file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDescData []byte
)

func file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDescGZIP() []byte {
	file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDesc), len(file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDesc)))
	})
	return file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDescData
}

var file_yandex_cloud_connectionmanager_v1_mongodb_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_yandex_cloud_connectionmanager_v1_mongodb_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_yandex_cloud_connectionmanager_v1_mongodb_proto_goTypes = []any{
	(MongoDBCluster_Host_Type)(0),   // 0: yandex.cloud.connectionmanager.v1.MongoDBCluster.Host.Type
	(MongoDBCluster_Host_Role)(0),   // 1: yandex.cloud.connectionmanager.v1.MongoDBCluster.Host.Role
	(MongoDBCluster_Host_Health)(0), // 2: yandex.cloud.connectionmanager.v1.MongoDBCluster.Host.Health
	(*MongoDBAuth)(nil),             // 3: yandex.cloud.connectionmanager.v1.MongoDBAuth
	(*MongoDBCluster)(nil),          // 4: yandex.cloud.connectionmanager.v1.MongoDBCluster
	(*MongoDBConnection)(nil),       // 5: yandex.cloud.connectionmanager.v1.MongoDBConnection
	(*MongoDBCluster_Host)(nil),     // 6: yandex.cloud.connectionmanager.v1.MongoDBCluster.Host
	(*UserPasswordAuth)(nil),        // 7: yandex.cloud.connectionmanager.v1.UserPasswordAuth
	(*TLSParams)(nil),               // 8: yandex.cloud.connectionmanager.v1.TLSParams
}
var file_yandex_cloud_connectionmanager_v1_mongodb_proto_depIdxs = []int32{
	7, // 0: yandex.cloud.connectionmanager.v1.MongoDBAuth.user_password:type_name -> yandex.cloud.connectionmanager.v1.UserPasswordAuth
	6, // 1: yandex.cloud.connectionmanager.v1.MongoDBCluster.hosts:type_name -> yandex.cloud.connectionmanager.v1.MongoDBCluster.Host
	8, // 2: yandex.cloud.connectionmanager.v1.MongoDBCluster.tls_params:type_name -> yandex.cloud.connectionmanager.v1.TLSParams
	4, // 3: yandex.cloud.connectionmanager.v1.MongoDBConnection.cluster:type_name -> yandex.cloud.connectionmanager.v1.MongoDBCluster
	3, // 4: yandex.cloud.connectionmanager.v1.MongoDBConnection.auth:type_name -> yandex.cloud.connectionmanager.v1.MongoDBAuth
	1, // 5: yandex.cloud.connectionmanager.v1.MongoDBCluster.Host.role:type_name -> yandex.cloud.connectionmanager.v1.MongoDBCluster.Host.Role
	2, // 6: yandex.cloud.connectionmanager.v1.MongoDBCluster.Host.health:type_name -> yandex.cloud.connectionmanager.v1.MongoDBCluster.Host.Health
	0, // 7: yandex.cloud.connectionmanager.v1.MongoDBCluster.Host.type:type_name -> yandex.cloud.connectionmanager.v1.MongoDBCluster.Host.Type
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_yandex_cloud_connectionmanager_v1_mongodb_proto_init() }
func file_yandex_cloud_connectionmanager_v1_mongodb_proto_init() {
	if File_yandex_cloud_connectionmanager_v1_mongodb_proto != nil {
		return
	}
	file_yandex_cloud_connectionmanager_v1_common_proto_init()
	file_yandex_cloud_connectionmanager_v1_mongodb_proto_msgTypes[0].OneofWrappers = []any{
		(*MongoDBAuth_UserPassword)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDesc), len(file_yandex_cloud_connectionmanager_v1_mongodb_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_connectionmanager_v1_mongodb_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_connectionmanager_v1_mongodb_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_connectionmanager_v1_mongodb_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_connectionmanager_v1_mongodb_proto_msgTypes,
	}.Build()
	File_yandex_cloud_connectionmanager_v1_mongodb_proto = out.File
	file_yandex_cloud_connectionmanager_v1_mongodb_proto_goTypes = nil
	file_yandex_cloud_connectionmanager_v1_mongodb_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/connectionmanager/v1/redis.proto

package connectionmanager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RedisCluster_Host_Role int32

const (
	RedisCluster_Host_ROLE_UNSPECIFIED RedisCluster_Host_Role = 0
	RedisCluster_Host_MASTER           RedisCluster_Host_Role = 1
	RedisCluster_Host_REPLICA          RedisCluster_Host_Role = 2
)

// Enum value maps for RedisCluster_Host_Role.
var (
	RedisCluster_Host_Role_name = map[int32]string{
		0: "ROLE_UNSPECIFIED",
		1: "MASTER",
		2: "REPLICA",
	}
	RedisCluster_Host_Role_value = map[string]int32{
		"ROLE_UNSPECIFIED": 0,
		"MASTER":           1,
		"REPLICA":          2,
	}
)

func (x RedisCluster_Host_Role) Enum() *RedisCluster_Host_Role {
	p := new(RedisCluster_Host_Role)
	*p = x
	return p
}

func (x RedisCluster_Host_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RedisCluster_Host_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_connectionmanager_v1_redis_proto_enumTypes[0].Descriptor()
}

func (RedisCluster_Host_Role) Type() protoreflect.EnumType {
	return &file_yandex_cloud_connectionmanager_v1_redis_proto_enumTypes[0]
}

func (x RedisCluster_Host_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RedisCluster_Host_Role.Descriptor instead.
func (RedisCluster_Host_Role) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_redis_proto_rawDescGZIP(), []int{1, 0, 0}
}

type RedisCluster_Host_Health int32

const (
	RedisCluster_Host_HEALTH_UNSPECIFIED RedisCluster_Host_Health = 0
	RedisCluster_Host_ALIVE              RedisCluster_Host_Health = 1
	RedisCluster_Host_DEAD               RedisCluster_Host_Health = 2
	RedisCluster_Host_DEGRADED           RedisCluster_Host_Health = 3
)

// Enum value maps for RedisCluster_Host_Health.
var (
	RedisCluster_Host_Health_name = map[int32]string{
		0: "HEALTH_UNSPECIFIED",
		1: "ALIVE",
		2: "DEAD",
		3: "DEGRADED",
	}
	RedisCluster_Host_Health_value = map[string]int32{
		"HEALTH_UNSPECIFIED": 0,
		"ALIVE":              1,
		"DEAD":               2,
		"DEGRADED":           3,
	}
)

func (x RedisCluster_Host_Health) Enum() *RedisCluster_Host_Health {
	p := new(RedisCluster_Host_Health)
	*p = x
	return p
}

func (x RedisCluster_Host_Health) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RedisCluster_Host_Health) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_connectionmanager_v1_redis_proto_enumTypes[1].Descriptor()
}

func (RedisCluster_Host_Health) Type() protoreflect.EnumType {
	return &file_yandex_cloud_connectionmanager_v1_redis_proto_enumTypes[1]
}

func (x RedisCluster_Host_Health) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RedisCluster_Host_Health.Descriptor instead.
func (RedisCluster_Host_Health) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_redis_proto_rawDescGZIP(), []int{1, 0, 1}
}

type RedisAuth struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Security:
	//
	//	*RedisAuth_UserPassword
	Security      isRedisAuth_Security `protobuf_oneof:"security"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedisAuth) Reset() {
	*x = RedisAuth{}
	mi := &file_yandex_cloud_connectionmanager_v1_redis_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedisAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisAuth) ProtoMessage() {}

func (x *RedisAuth) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_redis_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisAuth.ProtoReflect.Descriptor instead.
func (*RedisAuth) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_redis_proto_rawDescGZIP(), []int{0}
}

func (x *RedisAuth) GetSecurity() isRedisAuth_Security {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *RedisAuth) GetUserPassword() *RedisAuth_UserPasswordAuth {
	if x != nil {
		if x, ok := x.Security.(*RedisAuth_UserPassword); ok {
			return x.UserPassword
		}
	}
	return nil
}

type isRedisAuth_Security interface {
	isRedisAuth_Security()
}

type RedisAuth_UserPassword struct {
	UserPassword *RedisAuth_UserPasswordAuth `protobuf:"bytes,1,opt,name=user_password,json=userPassword,proto3,oneof"`
}

func (*RedisAuth_UserPassword) isRedisAuth_Security() {}

type RedisCluster struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hosts         []*RedisCluster_Host   `protobuf:"bytes,6,rep,name=hosts,proto3" json:"hosts,omitempty"`
	SentinelPort  int64                  `protobuf:"varint,3,opt,name=sentinel_port,json=sentinelPort,proto3" json:"sentinel_port,omitempty"`
	TlsParams     *TLSParams             `protobuf:"bytes,4,opt,name=tls_params,json=tlsParams,proto3" json:"tls_params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedisCluster) Reset() {
	*x = RedisCluster{}
	mi := &file_yandex_cloud_connectionmanager_v1_redis_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedisCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisCluster) ProtoMessage() {}

func (x *RedisCluster) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_redis_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisCluster.ProtoReflect.Descriptor instead.
func (*RedisCluster) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_redis_proto_rawDescGZIP(), []int{1}
}

func (x *RedisCluster) GetHosts() []*RedisCluster_Host {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *RedisCluster) GetSentinelPort() int64 {
	if x != nil {
		return x.SentinelPort
	}
	return 0
}

func (x *RedisCluster) GetTlsParams() *TLSParams {
	if x != nil {
		return x.TlsParams
	}
	return nil
}

type RedisConnection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cluster       *RedisCluster          `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Auth          *RedisAuth             `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	Databases     []int64                `protobuf:"varint,4,rep,packed,name=databases,proto3" json:"databases,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedisConnection) Reset() {
	*x = RedisConnection{}
	mi := &file_yandex_cloud_connectionmanager_v1_redis_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedisConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisConnection) ProtoMessage() {}

func (x *RedisConnection) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_redis_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisConnection.ProtoReflect.Descriptor instead.
func (*RedisConnection) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_redis_proto_rawDescGZIP(), []int{2}
}

func (x *RedisConnection) GetCluster() *RedisCluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *RedisConnection) GetAuth() *RedisAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *RedisConnection) GetDatabases() []int64 {
	if x != nil {
		return x.Databases
	}
	return nil
}

type RedisAuth_UserPasswordAuth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Password      *Password              `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedisAuth_UserPasswordAuth) Reset() {
	*x = RedisAuth_UserPasswordAuth{}
	mi := &file_yandex_cloud_connectionmanager_v1_redis_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedisAuth_UserPasswordAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisAuth_UserPasswordAuth) ProtoMessage() {}

func (x *RedisAuth_UserPasswordAuth) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_redis_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisAuth_UserPasswordAuth.ProtoReflect.Descriptor instead.
func (*RedisAuth_UserPasswordAuth) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_redis_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RedisAuth_UserPasswordAuth) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *RedisAuth_UserPasswordAuth) GetPassword() *Password {
	if x != nil {
		return x.Password
	}
	return nil
}

type RedisCluster_Host struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Host          string                   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port          int64                    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Role          RedisCluster_Host_Role   `protobuf:"varint,3,opt,name=role,proto3,enum=yandex.cloud.connectionmanager.v1.RedisCluster_Host_Role" json:"role,omitempty"`
	Health        RedisCluster_Host_Health `protobuf:"varint,4,opt,name=health,proto3,enum=yandex.cloud.connectionmanager.v1.RedisCluster_Host_Health" json:"health,omitempty"`
	ShardName     string                   `protobuf:"bytes,5,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedisCluster_Host) Reset() {
	*x = RedisCluster_Host{}
	mi := &file_yandex_cloud_connectionmanager_v1_redis_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedisCluster_Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisCluster_Host) ProtoMessage() {}

func (x *RedisCluster_Host) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_connectionmanager_v1_redis_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisCluster_Host.ProtoReflect.Descriptor instead.
func (*RedisCluster_Host) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_connectionmanager_v1_redis_proto_rawDescGZIP(), []int{1, 0}
}

func (x *RedisCluster_Host) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RedisCluster_Host) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RedisCluster_Host) GetRole() RedisCluster_Host_Role {
	if x != nil {
		return x.Role
	}
	return RedisCluster_Host_ROLE_UNSPECIFIED
}

func (x *RedisCluster_Host) GetHealth() RedisCluster_Host_Health {
	if x != nil {
		return x.Health
	}
	return RedisCluster_Host_HEALTH_UNSPECIFIED
}

func (x *RedisCluster_Host) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

var File_yandex_cloud_connectionmanager_v1_redis_proto protoreflect.FileDescriptor

const file_yandex_cloud_connectionmanager_v1_redis_proto_rawDesc = "" +
	"\n" +
	"-yandex/cloud/connectionmanager/v1/redis.proto\x12!yandex.cloud.connectionmanager.v1\x1a.yandex/cloud/connectionmanager/v1/common.proto\"\xee\x01\n" +
	"\tRedisAuth\x12d\n" +
	"\ruser_password\x18\x01 \x01(\v2=.yandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuthH\x00R\fuserPassword\x1ao\n" +
	"\x10UserPasswordAuth\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\x12G\n" +
	"\bpassword\x18\x02 \x01(\v2+.yandex.cloud.connectionmanager.v1.PasswordR\bpasswordB\n" +
	"\n" +
	"\bsecurity\"\xce\x04\n" +
	"\fRedisCluster\x12J\n" +
	"\x05hosts\x18\x06 \x03(\v24.yandex.cloud.connectionmanager.v1.RedisCluster.HostR\x05hosts\x12#\n" +
	"\rsentinel_port\x18\x03 \x01(\x03R\fsentinelPort\x12K\n" +
	"\n" +
	"tls_params\x18\x04 \x01(\v2,.yandex.cloud.connectionmanager.v1.TLSParamsR\ttlsParams\x1a\xed\x02\n" +
	"\x04Host\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x03R\x04port\x12M\n" +
	"\x04role\x18\x03 \x01(\x0e29.yandex.cloud.connectionmanager.v1.RedisCluster.Host.RoleR\x04role\x12S\n" +
	"\x06health\x18\x04 \x01(\x0e2;.yandex.cloud.connectionmanager.v1.RedisCluster.Host.HealthR\x06health\x12\x1d\n" +
	"\n" +
	"shard_name\x18\x05 \x01(\tR\tshardName\"5\n" +
	"\x04Role\x12\x14\n" +
	"\x10ROLE_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06MASTER\x10\x01\x12\v\n" +
	"\aREPLICA\x10\x02\"C\n" +
	"\x06Health\x12\x16\n" +
	"\x12HEALTH_UNSPECIFIED\x10\x00\x12\t\n" +
	"\x05ALIVE\x10\x01\x12\b\n" +
	"\x04DEAD\x10\x02\x12\f\n" +
	"\bDEGRADED\x10\x03J\x04\b\x01\x10\x02J\x04\b\x02\x10\x03J\x04\b\x05\x10\x06\"\xc2\x01\n" +
	"\x0fRedisConnection\x12I\n" +
	"\acluster\x18\x01 \x01(\v2/.yandex.cloud.connectionmanager.v1.RedisClusterR\acluster\x12@\n" +
	"\x04auth\x18\x03 \x01(\v2,.yandex.cloud.connectionmanager.v1.RedisAuthR\x04auth\x12\x1c\n" +
	"\tdatabases\x18\x04 \x03(\x03R\tdatabasesJ\x04\b\x02\x10\x03B\x80\x01\n" +
	"%yandex.cloud.api.connectionmanager.v1ZWgithub.com/yandex-cloud/go-genproto/yandex/cloud/connectionmanager/v1;connectionmanagerb\x06proto3"

var (
	file_yandex_cloud_connectionmanager_v1_redis_proto_rawDescOnce sync.Once
	file_yandex_cloud_connectionmanager_v1_redis_proto_rawDescData []byte
)

func file_yandex_cloud_connectionmanager_v1_redis_proto_rawDescGZIP() []byte {
	file_yandex_cloud_connectionmanager_v1_redis_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_connectionmanager_v1_redis_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_connectionmanager_v1_redis_proto_rawDesc), len(file_yandex_cloud_connectionmanager_v1_redis_proto_rawDesc)))
	})
	return file_yandex_cloud_connectionmanager_v1_redis_proto_rawDescData
}

var file_yandex_cloud_connectionmanager_v1_redis_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_yandex_cloud_connectionmanager_v1_redis_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_yandex_cloud_connectionmanager_v1_redis_proto_goTypes = []any{
	(RedisCluster_Host_Role)(0),        // 0: yandex.cloud.connectionmanager.v1.RedisCluster.Host.Role
	(RedisCluster_Host_Health)(0),      // 1: yandex.cloud.connectionmanager.v1.RedisCluster.Host.Health
	(*RedisAuth)(nil),                  // 2: yandex.cloud.connectionmanager.v1.RedisAuth
	(*RedisCluster)(nil),               // 3: yandex.cloud.connectionmanager.v1.RedisCluster
	(*RedisConnection)(nil),            // 4: yandex.cloud.connectionmanager.v1.RedisConnection
	(*RedisAuth_UserPasswordAuth)(nil), // 5: yandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth
	(*RedisCluster_Host)(nil),          // 6: yandex.cloud.connectionmanager.v1.RedisCluster.Host
	(*TLSParams)(nil),                  // 7: yandex.cloud.connectionmanager.v1.TLSParams
	(*Password)(nil),                   // 8: yandex.cloud.connectionmanager.v1.Password
}
var file_yandex_cloud_connectionmanager_v1_redis_proto_depIdxs = []int32{
	5, // 0: yandex.cloud.connectionmanager.v1.RedisAuth.user_password:type_name -> yandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth
	6, // 1: yandex.cloud.connectionmanager.v1.RedisCluster.hosts:type_name -> yandex.cloud.connectionmanager.v1.RedisCluster.Host
	7, // 2: yandex.cloud.connectionmanager.v1.RedisCluster.tls_params:type_name -> yandex.cloud.connectionmanager.v1.TLSParams
	3, // 3: yandex.cloud.connectionmanager.v1.RedisConnection.cluster:type_name -> yandex.cloud.connectionmanager.v1.RedisCluster
	2, // 4: yandex.cloud.connectionmanager.v1.RedisConnection.auth:type_name -> yandex.cloud.connectionmanager.v1.RedisAuth
	8, // 5: yandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.password:type_name -> yandex.cloud.connectionmanager.v1.Password
	0, // 6: yandex.cloud.connectionmanager.v1.RedisCluster.Host.role:type_name -> yandex.cloud.connectionmanager.v1.RedisCluster.Host.Role
	1, // 7: yandex.cloud.connectionmanager.v1.RedisCluster.Host.health:type_name -> yandex.cloud.connectionmanager.v1.RedisCluster.Host.Health
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_yandex_cloud_connectionmanager_v1_redis_proto_init() }
func file_yandex_cloud_connectionmanager_v1_redis_proto_init() {
	if File_yandex_cloud_connectionmanager_v1_redis_proto != nil {
		return
	}
	file_yandex_cloud_connectionmanager_v1_common_proto_init()
	file_yandex_cloud_connectionmanager_v1_redis_proto_msgTypes[0].OneofWrappers = []any{
		(*RedisAuth_UserPassword)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_connectionmanager_v1_redis_proto_rawDesc), len(file_yandex_cloud_connectionmanager_v1_redis_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_connectionmanager_v1_redis_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_connectionmanager_v1_redis_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_connectionmanager_v1_redis_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_connectionmanager_v1_redis_proto_msgTypes,
	}.Build()
	File_yandex_cloud_connectionmanager_v1_redis_proto = out.File
	file_yandex_cloud_connectionmanager_v1_redis_proto_goTypes = nil
	file_yandex_cloud_connectionmanager_v1_redis_proto_depIdxs = nil
}

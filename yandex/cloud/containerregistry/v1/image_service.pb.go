// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/containerregistry/v1/image_service.proto

package containerregistry

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListImagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the registry to list Docker images in.
	//
	// [registry_id] is ignored if a [ListImagesRequest.repository_name] is specified in the request.
	//
	// To get the registry ID use a [RegistryService.List] request.
	RegistryId string `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	// Name of the repository to list Docker images in.
	//
	// To get the repository name use a [RepositoryService.List] request.
	RepositoryName string `protobuf:"bytes,2,opt,name=repository_name,json=repositoryName,proto3" json:"repository_name,omitempty"`
	// ID of the folder to list Docker images in.
	//
	// [folder_id] is ignored if a [ListImagesRequest.repository_name] or a [ListImagesRequest.registry_id] are specified in the request.
	//
	// To get the folder ID use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,7,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size],
	// the service returns a [ListImagesResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value: 100.
	PageSize int64 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token] to the
	// [ListImagesResponse.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	// The expression must specify:
	// 1. The field name. Currently you can use filtering only on [Image.name] field.
	// 2. An `=` operator.
	// 3. The value in double quotes (`"`). Must be a maximum of 256 characters long and match the regular expression `[a-z0-9]+(?:[._-][a-z0-9]+)*(/([a-z0-9]+(?:[._-][a-z0-9]+)*))`.
	Filter        string `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy       string `protobuf:"bytes,6,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImagesRequest) Reset() {
	*x = ListImagesRequest{}
	mi := &file_yandex_cloud_containerregistry_v1_image_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesRequest) ProtoMessage() {}

func (x *ListImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_containerregistry_v1_image_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesRequest.ProtoReflect.Descriptor instead.
func (*ListImagesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_containerregistry_v1_image_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListImagesRequest) GetRegistryId() string {
	if x != nil {
		return x.RegistryId
	}
	return ""
}

func (x *ListImagesRequest) GetRepositoryName() string {
	if x != nil {
		return x.RepositoryName
	}
	return ""
}

func (x *ListImagesRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListImagesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListImagesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListImagesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListImagesRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListImagesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of Image resources.
	Images []*Image `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListImagesRequest.page_size], use
	// the [next_page_token] as the value
	// for the [ListImagesRequest.page_token] query parameter
	// in the next list request. Each subsequent list request will have its own
	// [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImagesResponse) Reset() {
	*x = ListImagesResponse{}
	mi := &file_yandex_cloud_containerregistry_v1_image_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesResponse) ProtoMessage() {}

func (x *ListImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_containerregistry_v1_image_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesResponse.ProtoReflect.Descriptor instead.
func (*ListImagesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_containerregistry_v1_image_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListImagesResponse) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ListImagesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetImageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Docker image resource to return.
	//
	// To get the Docker image ID use a [ImageService.List] request.
	ImageId       string `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImageRequest) Reset() {
	*x = GetImageRequest{}
	mi := &file_yandex_cloud_containerregistry_v1_image_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageRequest) ProtoMessage() {}

func (x *GetImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_containerregistry_v1_image_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageRequest.ProtoReflect.Descriptor instead.
func (*GetImageRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_containerregistry_v1_image_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetImageRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type DeleteImageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Docker image to delete.
	//
	// To get Docker image ID use a [ImageService.List] request.
	ImageId       string `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteImageRequest) Reset() {
	*x = DeleteImageRequest{}
	mi := &file_yandex_cloud_containerregistry_v1_image_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageRequest) ProtoMessage() {}

func (x *DeleteImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_containerregistry_v1_image_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageRequest.ProtoReflect.Descriptor instead.
func (*DeleteImageRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_containerregistry_v1_image_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteImageRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type DeleteImageMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Docker image that is being deleted.
	ImageId       string `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteImageMetadata) Reset() {
	*x = DeleteImageMetadata{}
	mi := &file_yandex_cloud_containerregistry_v1_image_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteImageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageMetadata) ProtoMessage() {}

func (x *DeleteImageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_containerregistry_v1_image_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageMetadata.ProtoReflect.Descriptor instead.
func (*DeleteImageMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_containerregistry_v1_image_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteImageMetadata) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

var File_yandex_cloud_containerregistry_v1_image_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_containerregistry_v1_image_service_proto_rawDesc = "" +
	"\n" +
	"5yandex/cloud/containerregistry/v1/image_service.proto\x12!yandex.cloud.containerregistry.v1\x1a yandex/cloud/api/operation.proto\x1a-yandex/cloud/containerregistry/v1/image.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\x1a\x1cgoogle/api/annotations.proto\"\xf0\x02\n" +
	"\x11ListImagesRequest\x12)\n" +
	"\vregistry_id\x18\x01 \x01(\tB\b\x8a\xc81\x04<=50R\n" +
	"registryId\x12l\n" +
	"\x0frepository_name\x18\x02 \x01(\tBC\xf2\xc71?|[a-z0-9]+(?:[._-][a-z0-9]+)*(/([a-z0-9]+(?:[._-][a-z0-9]+)*))*R\x0erepositoryName\x12%\n" +
	"\tfolder_id\x18\a \x01(\tB\b\x8a\xc81\x04<=50R\bfolderId\x12'\n" +
	"\tpage_size\x18\x03 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x05 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\x12$\n" +
	"\border_by\x18\x06 \x01(\tB\t\x8a\xc81\x05<=100R\aorderBy\"~\n" +
	"\x12ListImagesResponse\x12@\n" +
	"\x06images\x18\x01 \x03(\v2(.yandex.cloud.containerregistry.v1.ImageR\x06images\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\":\n" +
	"\x0fGetImageRequest\x12'\n" +
	"\bimage_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\aimageId\"=\n" +
	"\x12DeleteImageRequest\x12'\n" +
	"\bimage_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\aimageId\"0\n" +
	"\x13DeleteImageMetadata\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId2\x8a\x04\n" +
	"\fImageService\x12\x9a\x01\n" +
	"\x04List\x124.yandex.cloud.containerregistry.v1.ListImagesRequest\x1a5.yandex.cloud.containerregistry.v1.ListImagesResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/container-registry/v1/images\x12\x95\x01\n" +
	"\x03Get\x122.yandex.cloud.containerregistry.v1.GetImageRequest\x1a(.yandex.cloud.containerregistry.v1.Image\"0\x82\xd3\xe4\x93\x02*\x12(/container-registry/v1/images/{image_id}\x12\xc4\x01\n" +
	"\x06Delete\x125.yandex.cloud.containerregistry.v1.DeleteImageRequest\x1a!.yandex.cloud.operation.Operation\"`\xb2\xd2*,\n" +
	"\x13DeleteImageMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02**(/container-registry/v1/images/{image_id}B\x80\x01\n" +
	"%yandex.cloud.api.containerregistry.v1ZWgithub.com/yandex-cloud/go-genproto/yandex/cloud/containerregistry/v1;containerregistryb\x06proto3"

var (
	file_yandex_cloud_containerregistry_v1_image_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_containerregistry_v1_image_service_proto_rawDescData []byte
)

func file_yandex_cloud_containerregistry_v1_image_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_containerregistry_v1_image_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_containerregistry_v1_image_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_containerregistry_v1_image_service_proto_rawDesc), len(file_yandex_cloud_containerregistry_v1_image_service_proto_rawDesc)))
	})
	return file_yandex_cloud_containerregistry_v1_image_service_proto_rawDescData
}

var file_yandex_cloud_containerregistry_v1_image_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_yandex_cloud_containerregistry_v1_image_service_proto_goTypes = []any{
	(*ListImagesRequest)(nil),   // 0: yandex.cloud.containerregistry.v1.ListImagesRequest
	(*ListImagesResponse)(nil),  // 1: yandex.cloud.containerregistry.v1.ListImagesResponse
	(*GetImageRequest)(nil),     // 2: yandex.cloud.containerregistry.v1.GetImageRequest
	(*DeleteImageRequest)(nil),  // 3: yandex.cloud.containerregistry.v1.DeleteImageRequest
	(*DeleteImageMetadata)(nil), // 4: yandex.cloud.containerregistry.v1.DeleteImageMetadata
	(*Image)(nil),               // 5: yandex.cloud.containerregistry.v1.Image
	(*operation.Operation)(nil), // 6: yandex.cloud.operation.Operation
}
var file_yandex_cloud_containerregistry_v1_image_service_proto_depIdxs = []int32{
	5, // 0: yandex.cloud.containerregistry.v1.ListImagesResponse.images:type_name -> yandex.cloud.containerregistry.v1.Image
	0, // 1: yandex.cloud.containerregistry.v1.ImageService.List:input_type -> yandex.cloud.containerregistry.v1.ListImagesRequest
	2, // 2: yandex.cloud.containerregistry.v1.ImageService.Get:input_type -> yandex.cloud.containerregistry.v1.GetImageRequest
	3, // 3: yandex.cloud.containerregistry.v1.ImageService.Delete:input_type -> yandex.cloud.containerregistry.v1.DeleteImageRequest
	1, // 4: yandex.cloud.containerregistry.v1.ImageService.List:output_type -> yandex.cloud.containerregistry.v1.ListImagesResponse
	5, // 5: yandex.cloud.containerregistry.v1.ImageService.Get:output_type -> yandex.cloud.containerregistry.v1.Image
	6, // 6: yandex.cloud.containerregistry.v1.ImageService.Delete:output_type -> yandex.cloud.operation.Operation
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_yandex_cloud_containerregistry_v1_image_service_proto_init() }
func file_yandex_cloud_containerregistry_v1_image_service_proto_init() {
	if File_yandex_cloud_containerregistry_v1_image_service_proto != nil {
		return
	}
	file_yandex_cloud_containerregistry_v1_image_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_containerregistry_v1_image_service_proto_rawDesc), len(file_yandex_cloud_containerregistry_v1_image_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_containerregistry_v1_image_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_containerregistry_v1_image_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_containerregistry_v1_image_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_containerregistry_v1_image_service_proto = out.File
	file_yandex_cloud_containerregistry_v1_image_service_proto_goTypes = nil
	file_yandex_cloud_containerregistry_v1_image_service_proto_depIdxs = nil
}

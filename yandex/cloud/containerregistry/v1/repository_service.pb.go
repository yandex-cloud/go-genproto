// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/containerregistry/v1/repository_service.proto

package containerregistry

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	access "github.com/yandex-cloud/go-genproto/yandex/cloud/access"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRepositoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Repository resource to return.
	//
	// To get the repository ID use a [RepositoryService.List] request.
	RepositoryId  string `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepositoryRequest) Reset() {
	*x = GetRepositoryRequest{}
	mi := &file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositoryRequest) ProtoMessage() {}

func (x *GetRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositoryRequest.ProtoReflect.Descriptor instead.
func (*GetRepositoryRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetRepositoryRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

type GetRepositoryByNameRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the Repository resource to return.
	//
	// To get the repository name use a [RepositoryService.List] request.
	RepositoryName string `protobuf:"bytes,1,opt,name=repository_name,json=repositoryName,proto3" json:"repository_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetRepositoryByNameRequest) Reset() {
	*x = GetRepositoryByNameRequest{}
	mi := &file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepositoryByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositoryByNameRequest) ProtoMessage() {}

func (x *GetRepositoryByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositoryByNameRequest.ProtoReflect.Descriptor instead.
func (*GetRepositoryByNameRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetRepositoryByNameRequest) GetRepositoryName() string {
	if x != nil {
		return x.RepositoryName
	}
	return ""
}

type ListRepositoriesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the registry to list repositories in.
	//
	// To get the registry ID use a [RegistryService.List] request.
	RegistryId string `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	// ID of the folder to list registries in.
	//
	// [folder_id] is ignored if a [ListImagesRequest.registry_id] is specified in the request.
	//
	// To get the folder ID use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,6,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size],
	// the service returns a [ListRepositoriesResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token] to the
	// [ListRepositoriesResponse.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	// The expression must specify:
	// 1. The field name. Currently you can use filtering only on [Repository.name] field.
	// 2. An `=` operator.
	// 3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
	Filter        string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy       string `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRepositoriesRequest) Reset() {
	*x = ListRepositoriesRequest{}
	mi := &file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRepositoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepositoriesRequest) ProtoMessage() {}

func (x *ListRepositoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepositoriesRequest.ProtoReflect.Descriptor instead.
func (*ListRepositoriesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListRepositoriesRequest) GetRegistryId() string {
	if x != nil {
		return x.RegistryId
	}
	return ""
}

func (x *ListRepositoriesRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListRepositoriesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRepositoriesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListRepositoriesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListRepositoriesRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListRepositoriesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of Repository resources.
	Repositories []*Repository `protobuf:"bytes,1,rep,name=repositories,proto3" json:"repositories,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListRepositoriesRequest.page_size], use
	// the [next_page_token] as the value
	// for the [ListRepositoriesRequest.page_token] query parameter
	// in the next list request. Each subsequent list request will have its own
	// [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRepositoriesResponse) Reset() {
	*x = ListRepositoriesResponse{}
	mi := &file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRepositoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepositoriesResponse) ProtoMessage() {}

func (x *ListRepositoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepositoriesResponse.ProtoReflect.Descriptor instead.
func (*ListRepositoriesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListRepositoriesResponse) GetRepositories() []*Repository {
	if x != nil {
		return x.Repositories
	}
	return nil
}

func (x *ListRepositoriesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type UpsertRepositoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the repository.
	//
	// The name of the repository should match the name of the images that will be pushed in the repository.
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertRepositoryRequest) Reset() {
	*x = UpsertRepositoryRequest{}
	mi := &file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRepositoryRequest) ProtoMessage() {}

func (x *UpsertRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRepositoryRequest.ProtoReflect.Descriptor instead.
func (*UpsertRepositoryRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpsertRepositoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpsertRepositoryMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the repository that is being upserted.
	RepositoryId  string `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertRepositoryMetadata) Reset() {
	*x = UpsertRepositoryMetadata{}
	mi := &file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertRepositoryMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRepositoryMetadata) ProtoMessage() {}

func (x *UpsertRepositoryMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRepositoryMetadata.ProtoReflect.Descriptor instead.
func (*UpsertRepositoryMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpsertRepositoryMetadata) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

type DeleteRepositoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the repository to delete.
	RepositoryId  string `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRepositoryRequest) Reset() {
	*x = DeleteRepositoryRequest{}
	mi := &file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepositoryRequest) ProtoMessage() {}

func (x *DeleteRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepositoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteRepositoryRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteRepositoryRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

type DeleteRepositoryMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the repository that is being deleted.
	RepositoryId  string `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRepositoryMetadata) Reset() {
	*x = DeleteRepositoryMetadata{}
	mi := &file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRepositoryMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepositoryMetadata) ProtoMessage() {}

func (x *DeleteRepositoryMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepositoryMetadata.ProtoReflect.Descriptor instead.
func (*DeleteRepositoryMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteRepositoryMetadata) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

var File_yandex_cloud_containerregistry_v1_repository_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDesc = "" +
	"\n" +
	":yandex/cloud/containerregistry/v1/repository_service.proto\x12!yandex.cloud.containerregistry.v1\x1a yandex/cloud/api/operation.proto\x1a yandex/cloud/access/access.proto\x1a2yandex/cloud/containerregistry/v1/repository.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\x1a\x1cgoogle/api/annotations.proto\"I\n" +
	"\x14GetRepositoryRequest\x121\n" +
	"\rrepository_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\frepositoryId\"\x8d\x01\n" +
	"\x1aGetRepositoryByNameRequest\x12o\n" +
	"\x0frepository_name\x18\x01 \x01(\tBF\xe8\xc71\x01\xf2\xc71>[a-z0-9]+(?:[._-][a-z0-9]+)*(/([a-z0-9]+(?:[._-][a-z0-9]+)*))*R\x0erepositoryName\"\x88\x02\n" +
	"\x17ListRepositoriesRequest\x12)\n" +
	"\vregistry_id\x18\x01 \x01(\tB\b\x8a\xc81\x04<=50R\n" +
	"registryId\x12%\n" +
	"\tfolder_id\x18\x06 \x01(\tB\b\x8a\xc81\x04<=50R\bfolderId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\x12$\n" +
	"\border_by\x18\x05 \x01(\tB\t\x8a\xc81\x05<=100R\aorderBy\"\x95\x01\n" +
	"\x18ListRepositoriesResponse\x12Q\n" +
	"\frepositories\x18\x01 \x03(\v2-.yandex.cloud.containerregistry.v1.RepositoryR\frepositories\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"u\n" +
	"\x17UpsertRepositoryRequest\x12Z\n" +
	"\x04name\x18\x01 \x01(\tBF\xe8\xc71\x01\xf2\xc71>[a-z0-9]+(?:[._-][a-z0-9]+)*(/([a-z0-9]+(?:[._-][a-z0-9]+)*))*R\x04name\"?\n" +
	"\x18UpsertRepositoryMetadata\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\"L\n" +
	"\x17DeleteRepositoryRequest\x121\n" +
	"\rrepository_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\frepositoryId\"?\n" +
	"\x18DeleteRepositoryMetadata\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId2\x8f\r\n" +
	"\x11RepositoryService\x12\xaa\x01\n" +
	"\x03Get\x127.yandex.cloud.containerregistry.v1.GetRepositoryRequest\x1a-.yandex.cloud.containerregistry.v1.Repository\";\x82\xd3\xe4\x93\x025\x123/container-registry/v1/repositories/{repository_id}\x12\xbf\x01\n" +
	"\tGetByName\x12=.yandex.cloud.containerregistry.v1.GetRepositoryByNameRequest\x1a-.yandex.cloud.containerregistry.v1.Repository\"D\x82\xd3\xe4\x93\x02>\x12</container-registry/v1/repositories/{repository_name}:byName\x12\xac\x01\n" +
	"\x04List\x12:.yandex.cloud.containerregistry.v1.ListRepositoriesRequest\x1a;.yandex.cloud.containerregistry.v1.ListRepositoriesResponse\"+\x82\xd3\xe4\x93\x02%\x12#/container-registry/v1/repositories\x12\xc3\x01\n" +
	"\x12ListAccessBindings\x12..yandex.cloud.access.ListAccessBindingsRequest\x1a/.yandex.cloud.access.ListAccessBindingsResponse\"L\x82\xd3\xe4\x93\x02F\x12D/container-registry/v1/repositories/{resource_id}:listAccessBindings\x12\xc1\x01\n" +
	"\x06Upsert\x12:.yandex.cloud.containerregistry.v1.UpsertRepositoryRequest\x1a!.yandex.cloud.operation.Operation\"X\xb2\xd2*&\n" +
	"\x18UpsertRepositoryMetadata\x12\n" +
	"Repository\x82\xd3\xe4\x93\x02(:\x01*\"#/container-registry/v1/repositories\x12\xd9\x01\n" +
	"\x06Delete\x12:.yandex.cloud.containerregistry.v1.DeleteRepositoryRequest\x1a!.yandex.cloud.operation.Operation\"p\xb2\xd2*1\n" +
	"\x18DeleteRepositoryMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x025*3/container-registry/v1/repositories/{repository_id}\x12\xf3\x01\n" +
	"\x11SetAccessBindings\x12-.yandex.cloud.access.SetAccessBindingsRequest\x1a!.yandex.cloud.operation.Operation\"\x8b\x01\xb2\xd2*9\n" +
	" access.SetAccessBindingsMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02H:\x01*\"C/container-registry/v1/repositories/{resource_id}:setAccessBindings\x12\xff\x01\n" +
	"\x14UpdateAccessBindings\x120.yandex.cloud.access.UpdateAccessBindingsRequest\x1a!.yandex.cloud.operation.Operation\"\x91\x01\xb2\xd2*<\n" +
	"#access.UpdateAccessBindingsMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02K:\x01*\"F/container-registry/v1/repositories/{resource_id}:updateAccessBindingsB\x80\x01\n" +
	"%yandex.cloud.api.containerregistry.v1ZWgithub.com/yandex-cloud/go-genproto/yandex/cloud/containerregistry/v1;containerregistryb\x06proto3"

var (
	file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDescData []byte
)

func file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDesc), len(file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDesc)))
	})
	return file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDescData
}

var file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_yandex_cloud_containerregistry_v1_repository_service_proto_goTypes = []any{
	(*GetRepositoryRequest)(nil),               // 0: yandex.cloud.containerregistry.v1.GetRepositoryRequest
	(*GetRepositoryByNameRequest)(nil),         // 1: yandex.cloud.containerregistry.v1.GetRepositoryByNameRequest
	(*ListRepositoriesRequest)(nil),            // 2: yandex.cloud.containerregistry.v1.ListRepositoriesRequest
	(*ListRepositoriesResponse)(nil),           // 3: yandex.cloud.containerregistry.v1.ListRepositoriesResponse
	(*UpsertRepositoryRequest)(nil),            // 4: yandex.cloud.containerregistry.v1.UpsertRepositoryRequest
	(*UpsertRepositoryMetadata)(nil),           // 5: yandex.cloud.containerregistry.v1.UpsertRepositoryMetadata
	(*DeleteRepositoryRequest)(nil),            // 6: yandex.cloud.containerregistry.v1.DeleteRepositoryRequest
	(*DeleteRepositoryMetadata)(nil),           // 7: yandex.cloud.containerregistry.v1.DeleteRepositoryMetadata
	(*Repository)(nil),                         // 8: yandex.cloud.containerregistry.v1.Repository
	(*access.ListAccessBindingsRequest)(nil),   // 9: yandex.cloud.access.ListAccessBindingsRequest
	(*access.SetAccessBindingsRequest)(nil),    // 10: yandex.cloud.access.SetAccessBindingsRequest
	(*access.UpdateAccessBindingsRequest)(nil), // 11: yandex.cloud.access.UpdateAccessBindingsRequest
	(*access.ListAccessBindingsResponse)(nil),  // 12: yandex.cloud.access.ListAccessBindingsResponse
	(*operation.Operation)(nil),                // 13: yandex.cloud.operation.Operation
}
var file_yandex_cloud_containerregistry_v1_repository_service_proto_depIdxs = []int32{
	8,  // 0: yandex.cloud.containerregistry.v1.ListRepositoriesResponse.repositories:type_name -> yandex.cloud.containerregistry.v1.Repository
	0,  // 1: yandex.cloud.containerregistry.v1.RepositoryService.Get:input_type -> yandex.cloud.containerregistry.v1.GetRepositoryRequest
	1,  // 2: yandex.cloud.containerregistry.v1.RepositoryService.GetByName:input_type -> yandex.cloud.containerregistry.v1.GetRepositoryByNameRequest
	2,  // 3: yandex.cloud.containerregistry.v1.RepositoryService.List:input_type -> yandex.cloud.containerregistry.v1.ListRepositoriesRequest
	9,  // 4: yandex.cloud.containerregistry.v1.RepositoryService.ListAccessBindings:input_type -> yandex.cloud.access.ListAccessBindingsRequest
	4,  // 5: yandex.cloud.containerregistry.v1.RepositoryService.Upsert:input_type -> yandex.cloud.containerregistry.v1.UpsertRepositoryRequest
	6,  // 6: yandex.cloud.containerregistry.v1.RepositoryService.Delete:input_type -> yandex.cloud.containerregistry.v1.DeleteRepositoryRequest
	10, // 7: yandex.cloud.containerregistry.v1.RepositoryService.SetAccessBindings:input_type -> yandex.cloud.access.SetAccessBindingsRequest
	11, // 8: yandex.cloud.containerregistry.v1.RepositoryService.UpdateAccessBindings:input_type -> yandex.cloud.access.UpdateAccessBindingsRequest
	8,  // 9: yandex.cloud.containerregistry.v1.RepositoryService.Get:output_type -> yandex.cloud.containerregistry.v1.Repository
	8,  // 10: yandex.cloud.containerregistry.v1.RepositoryService.GetByName:output_type -> yandex.cloud.containerregistry.v1.Repository
	3,  // 11: yandex.cloud.containerregistry.v1.RepositoryService.List:output_type -> yandex.cloud.containerregistry.v1.ListRepositoriesResponse
	12, // 12: yandex.cloud.containerregistry.v1.RepositoryService.ListAccessBindings:output_type -> yandex.cloud.access.ListAccessBindingsResponse
	13, // 13: yandex.cloud.containerregistry.v1.RepositoryService.Upsert:output_type -> yandex.cloud.operation.Operation
	13, // 14: yandex.cloud.containerregistry.v1.RepositoryService.Delete:output_type -> yandex.cloud.operation.Operation
	13, // 15: yandex.cloud.containerregistry.v1.RepositoryService.SetAccessBindings:output_type -> yandex.cloud.operation.Operation
	13, // 16: yandex.cloud.containerregistry.v1.RepositoryService.UpdateAccessBindings:output_type -> yandex.cloud.operation.Operation
	9,  // [9:17] is the sub-list for method output_type
	1,  // [1:9] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_yandex_cloud_containerregistry_v1_repository_service_proto_init() }
func file_yandex_cloud_containerregistry_v1_repository_service_proto_init() {
	if File_yandex_cloud_containerregistry_v1_repository_service_proto != nil {
		return
	}
	file_yandex_cloud_containerregistry_v1_repository_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDesc), len(file_yandex_cloud_containerregistry_v1_repository_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_containerregistry_v1_repository_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_containerregistry_v1_repository_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_containerregistry_v1_repository_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_containerregistry_v1_repository_service_proto = out.File
	file_yandex_cloud_containerregistry_v1_repository_service_proto_goTypes = nil
	file_yandex_cloud_containerregistry_v1_repository_service_proto_depIdxs = nil
}

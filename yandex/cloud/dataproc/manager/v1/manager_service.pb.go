// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/dataproc/manager/v1/manager_service.proto

package dataproc_manager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InitActsState int32

const (
	InitActsState_INIT_ACTS_STATE_UNSPECIFIED InitActsState = 0 // No init acts on cluster
	InitActsState_FAILED                      InitActsState = 1 // At least one failed init act
	InitActsState_SUCCESSFUL                  InitActsState = 2 // All init acts succeeded
	InitActsState_IN_PROGRESS                 InitActsState = 3 // Some init acts not finished
)

// Enum value maps for InitActsState.
var (
	InitActsState_name = map[int32]string{
		0: "INIT_ACTS_STATE_UNSPECIFIED",
		1: "FAILED",
		2: "SUCCESSFUL",
		3: "IN_PROGRESS",
	}
	InitActsState_value = map[string]int32{
		"INIT_ACTS_STATE_UNSPECIFIED": 0,
		"FAILED":                      1,
		"SUCCESSFUL":                  2,
		"IN_PROGRESS":                 3,
	}
)

func (x InitActsState) Enum() *InitActsState {
	p := new(InitActsState)
	*p = x
	return p
}

func (x InitActsState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InitActsState) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_enumTypes[0].Descriptor()
}

func (InitActsState) Type() protoreflect.EnumType {
	return &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_enumTypes[0]
}

func (x InitActsState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InitActsState.Descriptor instead.
func (InitActsState) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescGZIP(), []int{0}
}

type HbaseNodeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Requests      int64                  `protobuf:"varint,2,opt,name=requests,proto3" json:"requests,omitempty"`
	HeapSizeMb    int64                  `protobuf:"varint,3,opt,name=heap_size_mb,json=heapSizeMb,proto3" json:"heap_size_mb,omitempty"`
	MaxHeapSizeMb int64                  `protobuf:"varint,4,opt,name=max_heap_size_mb,json=maxHeapSizeMb,proto3" json:"max_heap_size_mb,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HbaseNodeInfo) Reset() {
	*x = HbaseNodeInfo{}
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HbaseNodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HbaseNodeInfo) ProtoMessage() {}

func (x *HbaseNodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HbaseNodeInfo.ProtoReflect.Descriptor instead.
func (*HbaseNodeInfo) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescGZIP(), []int{0}
}

func (x *HbaseNodeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HbaseNodeInfo) GetRequests() int64 {
	if x != nil {
		return x.Requests
	}
	return 0
}

func (x *HbaseNodeInfo) GetHeapSizeMb() int64 {
	if x != nil {
		return x.HeapSizeMb
	}
	return 0
}

func (x *HbaseNodeInfo) GetMaxHeapSizeMb() int64 {
	if x != nil {
		return x.MaxHeapSizeMb
	}
	return 0
}

type HbaseInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Available     bool                   `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
	Regions       int64                  `protobuf:"varint,2,opt,name=regions,proto3" json:"regions,omitempty"`
	Requests      int64                  `protobuf:"varint,3,opt,name=requests,proto3" json:"requests,omitempty"`
	AverageLoad   float64                `protobuf:"fixed64,4,opt,name=average_load,json=averageLoad,proto3" json:"average_load,omitempty"`
	LiveNodes     []*HbaseNodeInfo       `protobuf:"bytes,5,rep,name=live_nodes,json=liveNodes,proto3" json:"live_nodes,omitempty"`
	DeadNodes     []*HbaseNodeInfo       `protobuf:"bytes,6,rep,name=dead_nodes,json=deadNodes,proto3" json:"dead_nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HbaseInfo) Reset() {
	*x = HbaseInfo{}
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HbaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HbaseInfo) ProtoMessage() {}

func (x *HbaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HbaseInfo.ProtoReflect.Descriptor instead.
func (*HbaseInfo) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescGZIP(), []int{1}
}

func (x *HbaseInfo) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *HbaseInfo) GetRegions() int64 {
	if x != nil {
		return x.Regions
	}
	return 0
}

func (x *HbaseInfo) GetRequests() int64 {
	if x != nil {
		return x.Requests
	}
	return 0
}

func (x *HbaseInfo) GetAverageLoad() float64 {
	if x != nil {
		return x.AverageLoad
	}
	return 0
}

func (x *HbaseInfo) GetLiveNodes() []*HbaseNodeInfo {
	if x != nil {
		return x.LiveNodes
	}
	return nil
}

func (x *HbaseInfo) GetDeadNodes() []*HbaseNodeInfo {
	if x != nil {
		return x.DeadNodes
	}
	return nil
}

type HDFSNodeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Used          int64                  `protobuf:"varint,2,opt,name=used,proto3" json:"used,omitempty"`
	Remaining     int64                  `protobuf:"varint,3,opt,name=remaining,proto3" json:"remaining,omitempty"`
	Capacity      int64                  `protobuf:"varint,4,opt,name=capacity,proto3" json:"capacity,omitempty"`
	NumBlocks     int64                  `protobuf:"varint,5,opt,name=num_blocks,json=numBlocks,proto3" json:"num_blocks,omitempty"`
	State         string                 `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HDFSNodeInfo) Reset() {
	*x = HDFSNodeInfo{}
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HDFSNodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HDFSNodeInfo) ProtoMessage() {}

func (x *HDFSNodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HDFSNodeInfo.ProtoReflect.Descriptor instead.
func (*HDFSNodeInfo) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescGZIP(), []int{2}
}

func (x *HDFSNodeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HDFSNodeInfo) GetUsed() int64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *HDFSNodeInfo) GetRemaining() int64 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

func (x *HDFSNodeInfo) GetCapacity() int64 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *HDFSNodeInfo) GetNumBlocks() int64 {
	if x != nil {
		return x.NumBlocks
	}
	return 0
}

func (x *HDFSNodeInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type HDFSInfo struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	Available                  bool                   `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
	PercentRemaining           float64                `protobuf:"fixed64,2,opt,name=percent_remaining,json=percentRemaining,proto3" json:"percent_remaining,omitempty"`
	Used                       int64                  `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty"`
	Free                       int64                  `protobuf:"varint,4,opt,name=free,proto3" json:"free,omitempty"`
	TotalBlocks                int64                  `protobuf:"varint,5,opt,name=total_blocks,json=totalBlocks,proto3" json:"total_blocks,omitempty"`
	MissingBlocks              int64                  `protobuf:"varint,6,opt,name=missing_blocks,json=missingBlocks,proto3" json:"missing_blocks,omitempty"`
	MissingBlocksReplicaOne    int64                  `protobuf:"varint,7,opt,name=missing_blocks_replica_one,json=missingBlocksReplicaOne,proto3" json:"missing_blocks_replica_one,omitempty"`
	LiveNodes                  []*HDFSNodeInfo        `protobuf:"bytes,8,rep,name=live_nodes,json=liveNodes,proto3" json:"live_nodes,omitempty"`
	DeadNodes                  []*HDFSNodeInfo        `protobuf:"bytes,9,rep,name=dead_nodes,json=deadNodes,proto3" json:"dead_nodes,omitempty"`
	Safemode                   string                 `protobuf:"bytes,11,opt,name=safemode,proto3" json:"safemode,omitempty"`
	DecommissioningNodes       []*HDFSNodeInfo        `protobuf:"bytes,12,rep,name=decommissioning_nodes,json=decommissioningNodes,proto3" json:"decommissioning_nodes,omitempty"`
	DecommissionedNodes        []*HDFSNodeInfo        `protobuf:"bytes,13,rep,name=decommissioned_nodes,json=decommissionedNodes,proto3" json:"decommissioned_nodes,omitempty"`
	RequestedDecommissionHosts []string               `protobuf:"bytes,14,rep,name=requested_decommission_hosts,json=requestedDecommissionHosts,proto3" json:"requested_decommission_hosts,omitempty"` // Actual list of decommission hosts in HDFS namenode memory
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *HDFSInfo) Reset() {
	*x = HDFSInfo{}
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HDFSInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HDFSInfo) ProtoMessage() {}

func (x *HDFSInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HDFSInfo.ProtoReflect.Descriptor instead.
func (*HDFSInfo) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescGZIP(), []int{3}
}

func (x *HDFSInfo) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *HDFSInfo) GetPercentRemaining() float64 {
	if x != nil {
		return x.PercentRemaining
	}
	return 0
}

func (x *HDFSInfo) GetUsed() int64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *HDFSInfo) GetFree() int64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *HDFSInfo) GetTotalBlocks() int64 {
	if x != nil {
		return x.TotalBlocks
	}
	return 0
}

func (x *HDFSInfo) GetMissingBlocks() int64 {
	if x != nil {
		return x.MissingBlocks
	}
	return 0
}

func (x *HDFSInfo) GetMissingBlocksReplicaOne() int64 {
	if x != nil {
		return x.MissingBlocksReplicaOne
	}
	return 0
}

func (x *HDFSInfo) GetLiveNodes() []*HDFSNodeInfo {
	if x != nil {
		return x.LiveNodes
	}
	return nil
}

func (x *HDFSInfo) GetDeadNodes() []*HDFSNodeInfo {
	if x != nil {
		return x.DeadNodes
	}
	return nil
}

func (x *HDFSInfo) GetSafemode() string {
	if x != nil {
		return x.Safemode
	}
	return ""
}

func (x *HDFSInfo) GetDecommissioningNodes() []*HDFSNodeInfo {
	if x != nil {
		return x.DecommissioningNodes
	}
	return nil
}

func (x *HDFSInfo) GetDecommissionedNodes() []*HDFSNodeInfo {
	if x != nil {
		return x.DecommissionedNodes
	}
	return nil
}

func (x *HDFSInfo) GetRequestedDecommissionHosts() []string {
	if x != nil {
		return x.RequestedDecommissionHosts
	}
	return nil
}

type HiveInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Available        bool                   `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
	QueriesSucceeded int64                  `protobuf:"varint,2,opt,name=queries_succeeded,json=queriesSucceeded,proto3" json:"queries_succeeded,omitempty"`
	QueriesFailed    int64                  `protobuf:"varint,3,opt,name=queries_failed,json=queriesFailed,proto3" json:"queries_failed,omitempty"`
	QueriesExecuting int64                  `protobuf:"varint,4,opt,name=queries_executing,json=queriesExecuting,proto3" json:"queries_executing,omitempty"`
	SessionsOpen     int64                  `protobuf:"varint,5,opt,name=sessions_open,json=sessionsOpen,proto3" json:"sessions_open,omitempty"`
	SessionsActive   int64                  `protobuf:"varint,6,opt,name=sessions_active,json=sessionsActive,proto3" json:"sessions_active,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *HiveInfo) Reset() {
	*x = HiveInfo{}
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HiveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiveInfo) ProtoMessage() {}

func (x *HiveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiveInfo.ProtoReflect.Descriptor instead.
func (*HiveInfo) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescGZIP(), []int{4}
}

func (x *HiveInfo) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *HiveInfo) GetQueriesSucceeded() int64 {
	if x != nil {
		return x.QueriesSucceeded
	}
	return 0
}

func (x *HiveInfo) GetQueriesFailed() int64 {
	if x != nil {
		return x.QueriesFailed
	}
	return 0
}

func (x *HiveInfo) GetQueriesExecuting() int64 {
	if x != nil {
		return x.QueriesExecuting
	}
	return 0
}

func (x *HiveInfo) GetSessionsOpen() int64 {
	if x != nil {
		return x.SessionsOpen
	}
	return 0
}

func (x *HiveInfo) GetSessionsActive() int64 {
	if x != nil {
		return x.SessionsActive
	}
	return 0
}

type YarnNodeInfo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State             string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	NumContainers     int64                  `protobuf:"varint,3,opt,name=num_containers,json=numContainers,proto3" json:"num_containers,omitempty"`
	UsedMemoryMb      int64                  `protobuf:"varint,4,opt,name=used_memory_mb,json=usedMemoryMb,proto3" json:"used_memory_mb,omitempty"`
	AvailableMemoryMb int64                  `protobuf:"varint,5,opt,name=available_memory_mb,json=availableMemoryMb,proto3" json:"available_memory_mb,omitempty"`
	UpdateTime        int64                  `protobuf:"varint,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *YarnNodeInfo) Reset() {
	*x = YarnNodeInfo{}
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YarnNodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YarnNodeInfo) ProtoMessage() {}

func (x *YarnNodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YarnNodeInfo.ProtoReflect.Descriptor instead.
func (*YarnNodeInfo) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescGZIP(), []int{5}
}

func (x *YarnNodeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *YarnNodeInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *YarnNodeInfo) GetNumContainers() int64 {
	if x != nil {
		return x.NumContainers
	}
	return 0
}

func (x *YarnNodeInfo) GetUsedMemoryMb() int64 {
	if x != nil {
		return x.UsedMemoryMb
	}
	return 0
}

func (x *YarnNodeInfo) GetAvailableMemoryMb() int64 {
	if x != nil {
		return x.AvailableMemoryMb
	}
	return 0
}

func (x *YarnNodeInfo) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type YarnInfo struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	Available                  bool                   `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
	LiveNodes                  []*YarnNodeInfo        `protobuf:"bytes,2,rep,name=live_nodes,json=liveNodes,proto3" json:"live_nodes,omitempty"`
	RequestedDecommissionHosts []string               `protobuf:"bytes,3,rep,name=requested_decommission_hosts,json=requestedDecommissionHosts,proto3" json:"requested_decommission_hosts,omitempty"` // Actual list of decommission hosts in Yarn resource manager memory
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *YarnInfo) Reset() {
	*x = YarnInfo{}
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YarnInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YarnInfo) ProtoMessage() {}

func (x *YarnInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YarnInfo.ProtoReflect.Descriptor instead.
func (*YarnInfo) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescGZIP(), []int{6}
}

func (x *YarnInfo) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *YarnInfo) GetLiveNodes() []*YarnNodeInfo {
	if x != nil {
		return x.LiveNodes
	}
	return nil
}

func (x *YarnInfo) GetRequestedDecommissionHosts() []string {
	if x != nil {
		return x.RequestedDecommissionHosts
	}
	return nil
}

type ZookeeperInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Alive         bool                   `protobuf:"varint,1,opt,name=alive,proto3" json:"alive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZookeeperInfo) Reset() {
	*x = ZookeeperInfo{}
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZookeeperInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZookeeperInfo) ProtoMessage() {}

func (x *ZookeeperInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZookeeperInfo.ProtoReflect.Descriptor instead.
func (*ZookeeperInfo) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescGZIP(), []int{7}
}

func (x *ZookeeperInfo) GetAlive() bool {
	if x != nil {
		return x.Alive
	}
	return false
}

type OozieInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Alive         bool                   `protobuf:"varint,1,opt,name=alive,proto3" json:"alive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OozieInfo) Reset() {
	*x = OozieInfo{}
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OozieInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OozieInfo) ProtoMessage() {}

func (x *OozieInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OozieInfo.ProtoReflect.Descriptor instead.
func (*OozieInfo) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescGZIP(), []int{8}
}

func (x *OozieInfo) GetAlive() bool {
	if x != nil {
		return x.Alive
	}
	return false
}

type LivyInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Alive         bool                   `protobuf:"varint,1,opt,name=alive,proto3" json:"alive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LivyInfo) Reset() {
	*x = LivyInfo{}
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LivyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivyInfo) ProtoMessage() {}

func (x *LivyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivyInfo.ProtoReflect.Descriptor instead.
func (*LivyInfo) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescGZIP(), []int{9}
}

func (x *LivyInfo) GetAlive() bool {
	if x != nil {
		return x.Alive
	}
	return false
}

type InitActs struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	State InitActsState          `protobuf:"varint,1,opt,name=state,proto3,enum=yandex.cloud.dataproc.manager.v1.InitActsState" json:"state,omitempty"`
	// fqdns of nodes for error message
	Fqdns         []string `protobuf:"bytes,2,rep,name=fqdns,proto3" json:"fqdns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitActs) Reset() {
	*x = InitActs{}
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitActs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitActs) ProtoMessage() {}

func (x *InitActs) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitActs.ProtoReflect.Descriptor instead.
func (*InitActs) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescGZIP(), []int{10}
}

func (x *InitActs) GetState() InitActsState {
	if x != nil {
		return x.State
	}
	return InitActsState_INIT_ACTS_STATE_UNSPECIFIED
}

func (x *InitActs) GetFqdns() []string {
	if x != nil {
		return x.Fqdns
	}
	return nil
}

type Info struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Hdfs      *HDFSInfo              `protobuf:"bytes,1,opt,name=hdfs,proto3" json:"hdfs,omitempty"`
	Yarn      *YarnInfo              `protobuf:"bytes,2,opt,name=yarn,proto3" json:"yarn,omitempty"`
	Hive      *HiveInfo              `protobuf:"bytes,3,opt,name=hive,proto3" json:"hive,omitempty"`
	Zookeeper *ZookeeperInfo         `protobuf:"bytes,4,opt,name=zookeeper,proto3" json:"zookeeper,omitempty"`
	Hbase     *HbaseInfo             `protobuf:"bytes,5,opt,name=hbase,proto3" json:"hbase,omitempty"`
	Oozie     *OozieInfo             `protobuf:"bytes,6,opt,name=oozie,proto3" json:"oozie,omitempty"`
	// Report count is incremented every time report is sent by Yandex Data Processing Agent.
	// So Worker can use this property to make sure that Yandex Data Processing Agent got data sent by Worker through Yandex Data Processing Manager
	// for synchronization purposes
	ReportCount   int64     `protobuf:"varint,7,opt,name=report_count,json=reportCount,proto3" json:"report_count,omitempty"`
	Livy          *LivyInfo `protobuf:"bytes,8,opt,name=livy,proto3" json:"livy,omitempty"`
	InitActs      *InitActs `protobuf:"bytes,9,opt,name=init_acts,json=initActs,proto3" json:"init_acts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Info) Reset() {
	*x = Info{}
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescGZIP(), []int{11}
}

func (x *Info) GetHdfs() *HDFSInfo {
	if x != nil {
		return x.Hdfs
	}
	return nil
}

func (x *Info) GetYarn() *YarnInfo {
	if x != nil {
		return x.Yarn
	}
	return nil
}

func (x *Info) GetHive() *HiveInfo {
	if x != nil {
		return x.Hive
	}
	return nil
}

func (x *Info) GetZookeeper() *ZookeeperInfo {
	if x != nil {
		return x.Zookeeper
	}
	return nil
}

func (x *Info) GetHbase() *HbaseInfo {
	if x != nil {
		return x.Hbase
	}
	return nil
}

func (x *Info) GetOozie() *OozieInfo {
	if x != nil {
		return x.Oozie
	}
	return nil
}

func (x *Info) GetReportCount() int64 {
	if x != nil {
		return x.ReportCount
	}
	return 0
}

func (x *Info) GetLivy() *LivyInfo {
	if x != nil {
		return x.Livy
	}
	return nil
}

func (x *Info) GetInitActs() *InitActs {
	if x != nil {
		return x.InitActs
	}
	return nil
}

// The request message containing the host status report.
type ReportRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Cid              string                 `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	TopologyRevision int64                  `protobuf:"varint,2,opt,name=topology_revision,json=topologyRevision,proto3" json:"topology_revision,omitempty"`
	Info             *Info                  `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	CollectedAt      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=collected_at,json=collectedAt,proto3" json:"collected_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReportRequest) Reset() {
	*x = ReportRequest{}
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest) ProtoMessage() {}

func (x *ReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest.ProtoReflect.Descriptor instead.
func (*ReportRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescGZIP(), []int{12}
}

func (x *ReportRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *ReportRequest) GetTopologyRevision() int64 {
	if x != nil {
		return x.TopologyRevision
	}
	return 0
}

func (x *ReportRequest) GetInfo() *Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ReportRequest) GetCollectedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CollectedAt
	}
	return nil
}

// The response message containing the agent commands to apply on host.
type ReportReply struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	DecommissionTimeout     int64                  `protobuf:"varint,1,opt,name=decommission_timeout,json=decommissionTimeout,proto3" json:"decommission_timeout,omitempty"`
	YarnHostsToDecommission []string               `protobuf:"bytes,2,rep,name=yarn_hosts_to_decommission,json=yarnHostsToDecommission,proto3" json:"yarn_hosts_to_decommission,omitempty"`
	HdfsHostsToDecommission []string               `protobuf:"bytes,3,rep,name=hdfs_hosts_to_decommission,json=hdfsHostsToDecommission,proto3" json:"hdfs_hosts_to_decommission,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ReportReply) Reset() {
	*x = ReportReply{}
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportReply) ProtoMessage() {}

func (x *ReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportReply.ProtoReflect.Descriptor instead.
func (*ReportReply) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescGZIP(), []int{13}
}

func (x *ReportReply) GetDecommissionTimeout() int64 {
	if x != nil {
		return x.DecommissionTimeout
	}
	return 0
}

func (x *ReportReply) GetYarnHostsToDecommission() []string {
	if x != nil {
		return x.YarnHostsToDecommission
	}
	return nil
}

func (x *ReportReply) GetHdfsHostsToDecommission() []string {
	if x != nil {
		return x.HdfsHostsToDecommission
	}
	return nil
}

var File_yandex_cloud_dataproc_manager_v1_manager_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDesc = "" +
	"\n" +
	"6yandex/cloud/dataproc/manager/v1/manager_service.proto\x12 yandex.cloud.dataproc.manager.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8a\x01\n" +
	"\rHbaseNodeInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\brequests\x18\x02 \x01(\x03R\brequests\x12 \n" +
	"\fheap_size_mb\x18\x03 \x01(\x03R\n" +
	"heapSizeMb\x12'\n" +
	"\x10max_heap_size_mb\x18\x04 \x01(\x03R\rmaxHeapSizeMb\"\xa2\x02\n" +
	"\tHbaseInfo\x12\x1c\n" +
	"\tavailable\x18\x01 \x01(\bR\tavailable\x12\x18\n" +
	"\aregions\x18\x02 \x01(\x03R\aregions\x12\x1a\n" +
	"\brequests\x18\x03 \x01(\x03R\brequests\x12!\n" +
	"\faverage_load\x18\x04 \x01(\x01R\vaverageLoad\x12N\n" +
	"\n" +
	"live_nodes\x18\x05 \x03(\v2/.yandex.cloud.dataproc.manager.v1.HbaseNodeInfoR\tliveNodes\x12N\n" +
	"\n" +
	"dead_nodes\x18\x06 \x03(\v2/.yandex.cloud.dataproc.manager.v1.HbaseNodeInfoR\tdeadNodes\"\xa5\x01\n" +
	"\fHDFSNodeInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04used\x18\x02 \x01(\x03R\x04used\x12\x1c\n" +
	"\tremaining\x18\x03 \x01(\x03R\tremaining\x12\x1a\n" +
	"\bcapacity\x18\x04 \x01(\x03R\bcapacity\x12\x1d\n" +
	"\n" +
	"num_blocks\x18\x05 \x01(\x03R\tnumBlocks\x12\x14\n" +
	"\x05state\x18\x06 \x01(\tR\x05state\"\xce\x05\n" +
	"\bHDFSInfo\x12\x1c\n" +
	"\tavailable\x18\x01 \x01(\bR\tavailable\x12+\n" +
	"\x11percent_remaining\x18\x02 \x01(\x01R\x10percentRemaining\x12\x12\n" +
	"\x04used\x18\x03 \x01(\x03R\x04used\x12\x12\n" +
	"\x04free\x18\x04 \x01(\x03R\x04free\x12!\n" +
	"\ftotal_blocks\x18\x05 \x01(\x03R\vtotalBlocks\x12%\n" +
	"\x0emissing_blocks\x18\x06 \x01(\x03R\rmissingBlocks\x12;\n" +
	"\x1amissing_blocks_replica_one\x18\a \x01(\x03R\x17missingBlocksReplicaOne\x12M\n" +
	"\n" +
	"live_nodes\x18\b \x03(\v2..yandex.cloud.dataproc.manager.v1.HDFSNodeInfoR\tliveNodes\x12M\n" +
	"\n" +
	"dead_nodes\x18\t \x03(\v2..yandex.cloud.dataproc.manager.v1.HDFSNodeInfoR\tdeadNodes\x12\x1a\n" +
	"\bsafemode\x18\v \x01(\tR\bsafemode\x12c\n" +
	"\x15decommissioning_nodes\x18\f \x03(\v2..yandex.cloud.dataproc.manager.v1.HDFSNodeInfoR\x14decommissioningNodes\x12a\n" +
	"\x14decommissioned_nodes\x18\r \x03(\v2..yandex.cloud.dataproc.manager.v1.HDFSNodeInfoR\x13decommissionedNodes\x12@\n" +
	"\x1crequested_decommission_hosts\x18\x0e \x03(\tR\x1arequestedDecommissionHostsJ\x04\b\n" +
	"\x10\v\"\xf7\x01\n" +
	"\bHiveInfo\x12\x1c\n" +
	"\tavailable\x18\x01 \x01(\bR\tavailable\x12+\n" +
	"\x11queries_succeeded\x18\x02 \x01(\x03R\x10queriesSucceeded\x12%\n" +
	"\x0equeries_failed\x18\x03 \x01(\x03R\rqueriesFailed\x12+\n" +
	"\x11queries_executing\x18\x04 \x01(\x03R\x10queriesExecuting\x12#\n" +
	"\rsessions_open\x18\x05 \x01(\x03R\fsessionsOpen\x12'\n" +
	"\x0fsessions_active\x18\x06 \x01(\x03R\x0esessionsActive\"\xd6\x01\n" +
	"\fYarnNodeInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\x12%\n" +
	"\x0enum_containers\x18\x03 \x01(\x03R\rnumContainers\x12$\n" +
	"\x0eused_memory_mb\x18\x04 \x01(\x03R\fusedMemoryMb\x12.\n" +
	"\x13available_memory_mb\x18\x05 \x01(\x03R\x11availableMemoryMb\x12\x1f\n" +
	"\vupdate_time\x18\x06 \x01(\x03R\n" +
	"updateTime\"\xb9\x01\n" +
	"\bYarnInfo\x12\x1c\n" +
	"\tavailable\x18\x01 \x01(\bR\tavailable\x12M\n" +
	"\n" +
	"live_nodes\x18\x02 \x03(\v2..yandex.cloud.dataproc.manager.v1.YarnNodeInfoR\tliveNodes\x12@\n" +
	"\x1crequested_decommission_hosts\x18\x03 \x03(\tR\x1arequestedDecommissionHosts\"%\n" +
	"\rZookeeperInfo\x12\x14\n" +
	"\x05alive\x18\x01 \x01(\bR\x05alive\"!\n" +
	"\tOozieInfo\x12\x14\n" +
	"\x05alive\x18\x01 \x01(\bR\x05alive\" \n" +
	"\bLivyInfo\x12\x14\n" +
	"\x05alive\x18\x01 \x01(\bR\x05alive\"g\n" +
	"\bInitActs\x12E\n" +
	"\x05state\x18\x01 \x01(\x0e2/.yandex.cloud.dataproc.manager.v1.InitActsStateR\x05state\x12\x14\n" +
	"\x05fqdns\x18\x02 \x03(\tR\x05fqdns\"\xc7\x04\n" +
	"\x04Info\x12>\n" +
	"\x04hdfs\x18\x01 \x01(\v2*.yandex.cloud.dataproc.manager.v1.HDFSInfoR\x04hdfs\x12>\n" +
	"\x04yarn\x18\x02 \x01(\v2*.yandex.cloud.dataproc.manager.v1.YarnInfoR\x04yarn\x12>\n" +
	"\x04hive\x18\x03 \x01(\v2*.yandex.cloud.dataproc.manager.v1.HiveInfoR\x04hive\x12M\n" +
	"\tzookeeper\x18\x04 \x01(\v2/.yandex.cloud.dataproc.manager.v1.ZookeeperInfoR\tzookeeper\x12A\n" +
	"\x05hbase\x18\x05 \x01(\v2+.yandex.cloud.dataproc.manager.v1.HbaseInfoR\x05hbase\x12A\n" +
	"\x05oozie\x18\x06 \x01(\v2+.yandex.cloud.dataproc.manager.v1.OozieInfoR\x05oozie\x12!\n" +
	"\freport_count\x18\a \x01(\x03R\vreportCount\x12>\n" +
	"\x04livy\x18\b \x01(\v2*.yandex.cloud.dataproc.manager.v1.LivyInfoR\x04livy\x12G\n" +
	"\tinit_acts\x18\t \x01(\v2*.yandex.cloud.dataproc.manager.v1.InitActsR\binitActs\"\xc9\x01\n" +
	"\rReportRequest\x12\x10\n" +
	"\x03cid\x18\x01 \x01(\tR\x03cid\x12+\n" +
	"\x11topology_revision\x18\x02 \x01(\x03R\x10topologyRevision\x12:\n" +
	"\x04info\x18\x03 \x01(\v2&.yandex.cloud.dataproc.manager.v1.InfoR\x04info\x12=\n" +
	"\fcollected_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vcollectedAt\"\xba\x01\n" +
	"\vReportReply\x121\n" +
	"\x14decommission_timeout\x18\x01 \x01(\x03R\x13decommissionTimeout\x12;\n" +
	"\x1ayarn_hosts_to_decommission\x18\x02 \x03(\tR\x17yarnHostsToDecommission\x12;\n" +
	"\x1ahdfs_hosts_to_decommission\x18\x03 \x03(\tR\x17hdfsHostsToDecommission*]\n" +
	"\rInitActsState\x12\x1f\n" +
	"\x1bINIT_ACTS_STATE_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06FAILED\x10\x01\x12\x0e\n" +
	"\n" +
	"SUCCESSFUL\x10\x02\x12\x0f\n" +
	"\vIN_PROGRESS\x10\x032\x84\x01\n" +
	"\x16DataprocManagerService\x12j\n" +
	"\x06Report\x12/.yandex.cloud.dataproc.manager.v1.ReportRequest\x1a-.yandex.cloud.dataproc.manager.v1.ReportReply\"\x00B}\n" +
	"$yandex.cloud.api.dataproc.manager.v1ZUgithub.com/yandex-cloud/go-genproto/yandex/cloud/dataproc/manager/v1;dataproc_managerb\x06proto3"

var (
	file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescData []byte
)

func file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDesc), len(file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDesc)))
	})
	return file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDescData
}

var file_yandex_cloud_dataproc_manager_v1_manager_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_yandex_cloud_dataproc_manager_v1_manager_service_proto_goTypes = []any{
	(InitActsState)(0),            // 0: yandex.cloud.dataproc.manager.v1.InitActsState
	(*HbaseNodeInfo)(nil),         // 1: yandex.cloud.dataproc.manager.v1.HbaseNodeInfo
	(*HbaseInfo)(nil),             // 2: yandex.cloud.dataproc.manager.v1.HbaseInfo
	(*HDFSNodeInfo)(nil),          // 3: yandex.cloud.dataproc.manager.v1.HDFSNodeInfo
	(*HDFSInfo)(nil),              // 4: yandex.cloud.dataproc.manager.v1.HDFSInfo
	(*HiveInfo)(nil),              // 5: yandex.cloud.dataproc.manager.v1.HiveInfo
	(*YarnNodeInfo)(nil),          // 6: yandex.cloud.dataproc.manager.v1.YarnNodeInfo
	(*YarnInfo)(nil),              // 7: yandex.cloud.dataproc.manager.v1.YarnInfo
	(*ZookeeperInfo)(nil),         // 8: yandex.cloud.dataproc.manager.v1.ZookeeperInfo
	(*OozieInfo)(nil),             // 9: yandex.cloud.dataproc.manager.v1.OozieInfo
	(*LivyInfo)(nil),              // 10: yandex.cloud.dataproc.manager.v1.LivyInfo
	(*InitActs)(nil),              // 11: yandex.cloud.dataproc.manager.v1.InitActs
	(*Info)(nil),                  // 12: yandex.cloud.dataproc.manager.v1.Info
	(*ReportRequest)(nil),         // 13: yandex.cloud.dataproc.manager.v1.ReportRequest
	(*ReportReply)(nil),           // 14: yandex.cloud.dataproc.manager.v1.ReportReply
	(*timestamppb.Timestamp)(nil), // 15: google.protobuf.Timestamp
}
var file_yandex_cloud_dataproc_manager_v1_manager_service_proto_depIdxs = []int32{
	1,  // 0: yandex.cloud.dataproc.manager.v1.HbaseInfo.live_nodes:type_name -> yandex.cloud.dataproc.manager.v1.HbaseNodeInfo
	1,  // 1: yandex.cloud.dataproc.manager.v1.HbaseInfo.dead_nodes:type_name -> yandex.cloud.dataproc.manager.v1.HbaseNodeInfo
	3,  // 2: yandex.cloud.dataproc.manager.v1.HDFSInfo.live_nodes:type_name -> yandex.cloud.dataproc.manager.v1.HDFSNodeInfo
	3,  // 3: yandex.cloud.dataproc.manager.v1.HDFSInfo.dead_nodes:type_name -> yandex.cloud.dataproc.manager.v1.HDFSNodeInfo
	3,  // 4: yandex.cloud.dataproc.manager.v1.HDFSInfo.decommissioning_nodes:type_name -> yandex.cloud.dataproc.manager.v1.HDFSNodeInfo
	3,  // 5: yandex.cloud.dataproc.manager.v1.HDFSInfo.decommissioned_nodes:type_name -> yandex.cloud.dataproc.manager.v1.HDFSNodeInfo
	6,  // 6: yandex.cloud.dataproc.manager.v1.YarnInfo.live_nodes:type_name -> yandex.cloud.dataproc.manager.v1.YarnNodeInfo
	0,  // 7: yandex.cloud.dataproc.manager.v1.InitActs.state:type_name -> yandex.cloud.dataproc.manager.v1.InitActsState
	4,  // 8: yandex.cloud.dataproc.manager.v1.Info.hdfs:type_name -> yandex.cloud.dataproc.manager.v1.HDFSInfo
	7,  // 9: yandex.cloud.dataproc.manager.v1.Info.yarn:type_name -> yandex.cloud.dataproc.manager.v1.YarnInfo
	5,  // 10: yandex.cloud.dataproc.manager.v1.Info.hive:type_name -> yandex.cloud.dataproc.manager.v1.HiveInfo
	8,  // 11: yandex.cloud.dataproc.manager.v1.Info.zookeeper:type_name -> yandex.cloud.dataproc.manager.v1.ZookeeperInfo
	2,  // 12: yandex.cloud.dataproc.manager.v1.Info.hbase:type_name -> yandex.cloud.dataproc.manager.v1.HbaseInfo
	9,  // 13: yandex.cloud.dataproc.manager.v1.Info.oozie:type_name -> yandex.cloud.dataproc.manager.v1.OozieInfo
	10, // 14: yandex.cloud.dataproc.manager.v1.Info.livy:type_name -> yandex.cloud.dataproc.manager.v1.LivyInfo
	11, // 15: yandex.cloud.dataproc.manager.v1.Info.init_acts:type_name -> yandex.cloud.dataproc.manager.v1.InitActs
	12, // 16: yandex.cloud.dataproc.manager.v1.ReportRequest.info:type_name -> yandex.cloud.dataproc.manager.v1.Info
	15, // 17: yandex.cloud.dataproc.manager.v1.ReportRequest.collected_at:type_name -> google.protobuf.Timestamp
	13, // 18: yandex.cloud.dataproc.manager.v1.DataprocManagerService.Report:input_type -> yandex.cloud.dataproc.manager.v1.ReportRequest
	14, // 19: yandex.cloud.dataproc.manager.v1.DataprocManagerService.Report:output_type -> yandex.cloud.dataproc.manager.v1.ReportReply
	19, // [19:20] is the sub-list for method output_type
	18, // [18:19] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_yandex_cloud_dataproc_manager_v1_manager_service_proto_init() }
func file_yandex_cloud_dataproc_manager_v1_manager_service_proto_init() {
	if File_yandex_cloud_dataproc_manager_v1_manager_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDesc), len(file_yandex_cloud_dataproc_manager_v1_manager_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_dataproc_manager_v1_manager_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_dataproc_manager_v1_manager_service_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_dataproc_manager_v1_manager_service_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_dataproc_manager_v1_manager_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_dataproc_manager_v1_manager_service_proto = out.File
	file_yandex_cloud_dataproc_manager_v1_manager_service_proto_goTypes = nil
	file_yandex_cloud_dataproc_manager_v1_manager_service_proto_depIdxs = nil
}

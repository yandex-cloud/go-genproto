// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/dataproc/v1/cluster_service.proto

package dataproc

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Yandex Data Processing cluster.
	//
	// To get a cluster ID make a [ClusterService.List] request.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterRequest) Reset() {
	*x = GetClusterRequest{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterRequest) ProtoMessage() {}

func (x *GetClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterRequest.ProtoReflect.Descriptor instead.
func (*GetClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type ListClustersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to list clusters in.
	//
	// To get the folder ID make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size], the service returns a [ListClustersResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set `page_token` to the
	// [ListClustersResponse.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters clusters listed in the response.
	//
	// The expression must specify:
	// 1. The field name. Currently you can use filtering only on [Cluster.name] field.
	// 2. An `=` operator.
	// 3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
	// Example of a filter: `name=my-cluster`.
	Filter        string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersRequest) Reset() {
	*x = ListClustersRequest{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersRequest) ProtoMessage() {}

func (x *ListClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersRequest.ProtoReflect.Descriptor instead.
func (*ListClustersRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListClustersRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListClustersRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClustersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListClustersRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListClustersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of clusters in the specified folder.
	Clusters []*Cluster `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	// Token for getting the next page of the list. If the number of results is greater than
	// the specified [ListClustersRequest.page_size], use `next_page_token` as the value
	// for the [ListClustersRequest.page_token] parameter in the next list request.
	//
	// Each subsequent page will have its own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersResponse) Reset() {
	*x = ListClustersResponse{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersResponse) ProtoMessage() {}

func (x *ListClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersResponse.ProtoReflect.Descriptor instead.
func (*ListClustersResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListClustersResponse) GetClusters() []*Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *ListClustersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateSubclusterConfigSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the subcluster.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Role of the subcluster in the Yandex Data Processing cluster.
	Role Role `protobuf:"varint,2,opt,name=role,proto3,enum=yandex.cloud.dataproc.v1.Role" json:"role,omitempty"`
	// Resource configuration for hosts in the subcluster.
	Resources *Resources `protobuf:"bytes,3,opt,name=resources,proto3" json:"resources,omitempty"`
	// ID of the VPC subnet used for hosts in the subcluster.
	SubnetId string `protobuf:"bytes,4,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	// Number of hosts in the subcluster.
	HostsCount int64 `protobuf:"varint,5,opt,name=hosts_count,json=hostsCount,proto3" json:"hosts_count,omitempty"`
	// Assign public ip addresses for all hosts in subcluter.
	AssignPublicIp bool `protobuf:"varint,6,opt,name=assign_public_ip,json=assignPublicIp,proto3" json:"assign_public_ip,omitempty"`
	// Configuration for instance group based subclusters
	AutoscalingConfig *AutoscalingConfig `protobuf:"bytes,7,opt,name=autoscaling_config,json=autoscalingConfig,proto3" json:"autoscaling_config,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateSubclusterConfigSpec) Reset() {
	*x = CreateSubclusterConfigSpec{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubclusterConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubclusterConfigSpec) ProtoMessage() {}

func (x *CreateSubclusterConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubclusterConfigSpec.ProtoReflect.Descriptor instead.
func (*CreateSubclusterConfigSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSubclusterConfigSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSubclusterConfigSpec) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_ROLE_UNSPECIFIED
}

func (x *CreateSubclusterConfigSpec) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *CreateSubclusterConfigSpec) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *CreateSubclusterConfigSpec) GetHostsCount() int64 {
	if x != nil {
		return x.HostsCount
	}
	return 0
}

func (x *CreateSubclusterConfigSpec) GetAssignPublicIp() bool {
	if x != nil {
		return x.AssignPublicIp
	}
	return false
}

func (x *CreateSubclusterConfigSpec) GetAutoscalingConfig() *AutoscalingConfig {
	if x != nil {
		return x.AutoscalingConfig
	}
	return nil
}

type UpdateSubclusterConfigSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subcluster to update.
	//
	// To get the subcluster ID make a [SubclusterService.List] request.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the subcluster.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Resource configuration for each host in the subcluster.
	Resources *Resources `protobuf:"bytes,3,opt,name=resources,proto3" json:"resources,omitempty"`
	// Number of hosts in the subcluster.
	HostsCount int64 `protobuf:"varint,4,opt,name=hosts_count,json=hostsCount,proto3" json:"hosts_count,omitempty"`
	// Configuration for instance group based subclusters
	AutoscalingConfig *AutoscalingConfig `protobuf:"bytes,5,opt,name=autoscaling_config,json=autoscalingConfig,proto3" json:"autoscaling_config,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateSubclusterConfigSpec) Reset() {
	*x = UpdateSubclusterConfigSpec{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSubclusterConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubclusterConfigSpec) ProtoMessage() {}

func (x *UpdateSubclusterConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubclusterConfigSpec.ProtoReflect.Descriptor instead.
func (*UpdateSubclusterConfigSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateSubclusterConfigSpec) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSubclusterConfigSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSubclusterConfigSpec) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *UpdateSubclusterConfigSpec) GetHostsCount() int64 {
	if x != nil {
		return x.HostsCount
	}
	return 0
}

func (x *UpdateSubclusterConfigSpec) GetAutoscalingConfig() *AutoscalingConfig {
	if x != nil {
		return x.AutoscalingConfig
	}
	return nil
}

type CreateClusterConfigSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version of the image for cluster provisioning.
	//
	// All available versions are listed in the [documentation](/docs/data-proc/concepts/environment).
	VersionId string `protobuf:"bytes,1,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// Yandex Data Processing specific options.
	Hadoop *HadoopConfig `protobuf:"bytes,2,opt,name=hadoop,proto3" json:"hadoop,omitempty"`
	// Specification for creating subclusters.
	SubclustersSpec []*CreateSubclusterConfigSpec `protobuf:"bytes,3,rep,name=subclusters_spec,json=subclustersSpec,proto3" json:"subclusters_spec,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateClusterConfigSpec) Reset() {
	*x = CreateClusterConfigSpec{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClusterConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterConfigSpec) ProtoMessage() {}

func (x *CreateClusterConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterConfigSpec.ProtoReflect.Descriptor instead.
func (*CreateClusterConfigSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateClusterConfigSpec) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *CreateClusterConfigSpec) GetHadoop() *HadoopConfig {
	if x != nil {
		return x.Hadoop
	}
	return nil
}

func (x *CreateClusterConfigSpec) GetSubclustersSpec() []*CreateSubclusterConfigSpec {
	if x != nil {
		return x.SubclustersSpec
	}
	return nil
}

type UpdateClusterConfigSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// New configuration for subclusters in a cluster.
	SubclustersSpec []*UpdateSubclusterConfigSpec `protobuf:"bytes,1,rep,name=subclusters_spec,json=subclustersSpec,proto3" json:"subclusters_spec,omitempty"`
	// Hadoop specific options
	Hadoop        *HadoopConfig `protobuf:"bytes,2,opt,name=hadoop,proto3" json:"hadoop,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateClusterConfigSpec) Reset() {
	*x = UpdateClusterConfigSpec{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterConfigSpec) ProtoMessage() {}

func (x *UpdateClusterConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterConfigSpec.ProtoReflect.Descriptor instead.
func (*UpdateClusterConfigSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateClusterConfigSpec) GetSubclustersSpec() []*UpdateSubclusterConfigSpec {
	if x != nil {
		return x.SubclustersSpec
	}
	return nil
}

func (x *UpdateClusterConfigSpec) GetHadoop() *HadoopConfig {
	if x != nil {
		return x.Hadoop
	}
	return nil
}

type CreateClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to create a cluster in.
	//
	// To get a folder ID make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Name of the cluster. The name must be unique within the folder.
	// The name can't be changed after the Yandex Data Processing cluster is created.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the cluster.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Cluster labels as `key:value` pairs.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Configuration and resources for hosts that should be created with the cluster.
	ConfigSpec *CreateClusterConfigSpec `protobuf:"bytes,6,opt,name=config_spec,json=configSpec,proto3" json:"config_spec,omitempty"`
	// ID of the availability zone where the cluster should be placed.
	//
	// To get the list of available zones make a [yandex.cloud.compute.v1.ZoneService.List] request.
	ZoneId string `protobuf:"bytes,7,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// ID of the service account to be used by the Yandex Data Processing manager agent.
	ServiceAccountId string `protobuf:"bytes,8,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Name of the Object Storage bucket to use for Yandex Data Processing jobs.
	Bucket string `protobuf:"bytes,9,opt,name=bucket,proto3" json:"bucket,omitempty"`
	// Enable UI Proxy feature.
	UiProxy bool `protobuf:"varint,10,opt,name=ui_proxy,json=uiProxy,proto3" json:"ui_proxy,omitempty"`
	// User security groups.
	SecurityGroupIds []string `protobuf:"bytes,11,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
	// Host groups to place VMs of cluster on.
	HostGroupIds []string `protobuf:"bytes,12,rep,name=host_group_ids,json=hostGroupIds,proto3" json:"host_group_ids,omitempty"`
	// Deletion Protection inhibits deletion of the cluster
	DeletionProtection bool `protobuf:"varint,13,opt,name=deletion_protection,json=deletionProtection,proto3" json:"deletion_protection,omitempty"`
	// ID of the cloud logging log group to write logs. If not set, logs will not be sent to logging service
	LogGroupId string `protobuf:"bytes,14,opt,name=log_group_id,json=logGroupId,proto3" json:"log_group_id,omitempty"`
	// Environment of the cluster
	Environment Cluster_Environment `protobuf:"varint,15,opt,name=environment,proto3,enum=yandex.cloud.dataproc.v1.Cluster_Environment" json:"environment,omitempty"`
	// ID of the service account to be used by the Instance Groups service.
	AutoscalingServiceAccountId string `protobuf:"bytes,16,opt,name=autoscaling_service_account_id,json=autoscalingServiceAccountId,proto3" json:"autoscaling_service_account_id,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *CreateClusterRequest) Reset() {
	*x = CreateClusterRequest{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterRequest) ProtoMessage() {}

func (x *CreateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterRequest.ProtoReflect.Descriptor instead.
func (*CreateClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateClusterRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *CreateClusterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateClusterRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateClusterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateClusterRequest) GetConfigSpec() *CreateClusterConfigSpec {
	if x != nil {
		return x.ConfigSpec
	}
	return nil
}

func (x *CreateClusterRequest) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *CreateClusterRequest) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *CreateClusterRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *CreateClusterRequest) GetUiProxy() bool {
	if x != nil {
		return x.UiProxy
	}
	return false
}

func (x *CreateClusterRequest) GetSecurityGroupIds() []string {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

func (x *CreateClusterRequest) GetHostGroupIds() []string {
	if x != nil {
		return x.HostGroupIds
	}
	return nil
}

func (x *CreateClusterRequest) GetDeletionProtection() bool {
	if x != nil {
		return x.DeletionProtection
	}
	return false
}

func (x *CreateClusterRequest) GetLogGroupId() string {
	if x != nil {
		return x.LogGroupId
	}
	return ""
}

func (x *CreateClusterRequest) GetEnvironment() Cluster_Environment {
	if x != nil {
		return x.Environment
	}
	return Cluster_ENVIRONMENT_UNSPECIFIED
}

func (x *CreateClusterRequest) GetAutoscalingServiceAccountId() string {
	if x != nil {
		return x.AutoscalingServiceAccountId
	}
	return ""
}

type CreateClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the cluster that is being created.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateClusterMetadata) Reset() {
	*x = CreateClusterMetadata{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterMetadata) ProtoMessage() {}

func (x *CreateClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterMetadata.ProtoReflect.Descriptor instead.
func (*CreateClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{8}
}

func (x *CreateClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type UpdateClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the cluster to update.
	//
	// To get the cluster ID, make a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Field mask that specifies which attributes of the cluster should be updated.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// New description for the cluster.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// A new set of cluster labels as `key:value` pairs.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Configuration and resources for hosts that should be created with the Yandex Data Processing cluster.
	ConfigSpec *UpdateClusterConfigSpec `protobuf:"bytes,5,opt,name=config_spec,json=configSpec,proto3" json:"config_spec,omitempty"`
	// New name for the Yandex Data Processing cluster. The name must be unique within the folder.
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// ID of the new service account to be used by the Yandex Data Processing manager agent.
	ServiceAccountId string `protobuf:"bytes,7,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Name of the new Object Storage bucket to use for Yandex Data Processing jobs.
	Bucket string `protobuf:"bytes,8,opt,name=bucket,proto3" json:"bucket,omitempty"`
	// Timeout to gracefully decommission nodes. In seconds. Default value: 0
	DecommissionTimeout int64 `protobuf:"varint,9,opt,name=decommission_timeout,json=decommissionTimeout,proto3" json:"decommission_timeout,omitempty"`
	// Enable UI Proxy feature.
	UiProxy bool `protobuf:"varint,10,opt,name=ui_proxy,json=uiProxy,proto3" json:"ui_proxy,omitempty"`
	// User security groups.
	SecurityGroupIds []string `protobuf:"bytes,11,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
	// Deletion Protection inhibits deletion of the cluster
	DeletionProtection bool `protobuf:"varint,12,opt,name=deletion_protection,json=deletionProtection,proto3" json:"deletion_protection,omitempty"`
	// ID of the cloud logging log group to write logs. If not set, logs will not be sent to logging service
	LogGroupId string `protobuf:"bytes,13,opt,name=log_group_id,json=logGroupId,proto3" json:"log_group_id,omitempty"`
	// ID of the new service account to be used by the Instance Groups service.
	AutoscalingServiceAccountId string `protobuf:"bytes,14,opt,name=autoscaling_service_account_id,json=autoscalingServiceAccountId,proto3" json:"autoscaling_service_account_id,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *UpdateClusterRequest) Reset() {
	*x = UpdateClusterRequest{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterRequest) ProtoMessage() {}

func (x *UpdateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateClusterRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateClusterRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateClusterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateClusterRequest) GetConfigSpec() *UpdateClusterConfigSpec {
	if x != nil {
		return x.ConfigSpec
	}
	return nil
}

func (x *UpdateClusterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateClusterRequest) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *UpdateClusterRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *UpdateClusterRequest) GetDecommissionTimeout() int64 {
	if x != nil {
		return x.DecommissionTimeout
	}
	return 0
}

func (x *UpdateClusterRequest) GetUiProxy() bool {
	if x != nil {
		return x.UiProxy
	}
	return false
}

func (x *UpdateClusterRequest) GetSecurityGroupIds() []string {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

func (x *UpdateClusterRequest) GetDeletionProtection() bool {
	if x != nil {
		return x.DeletionProtection
	}
	return false
}

func (x *UpdateClusterRequest) GetLogGroupId() string {
	if x != nil {
		return x.LogGroupId
	}
	return ""
}

func (x *UpdateClusterRequest) GetAutoscalingServiceAccountId() string {
	if x != nil {
		return x.AutoscalingServiceAccountId
	}
	return ""
}

type UpdateClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the cluster that is being updated.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateClusterMetadata) Reset() {
	*x = UpdateClusterMetadata{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterMetadata) ProtoMessage() {}

func (x *UpdateClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterMetadata.ProtoReflect.Descriptor instead.
func (*UpdateClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type DeleteClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the cluster to delete.
	//
	// To get a cluster ID, make a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Timeout to gracefully decommission nodes. In seconds. Default value: 0
	DecommissionTimeout int64 `protobuf:"varint,2,opt,name=decommission_timeout,json=decommissionTimeout,proto3" json:"decommission_timeout,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DeleteClusterRequest) Reset() {
	*x = DeleteClusterRequest{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterRequest) ProtoMessage() {}

func (x *DeleteClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterRequest.ProtoReflect.Descriptor instead.
func (*DeleteClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *DeleteClusterRequest) GetDecommissionTimeout() int64 {
	if x != nil {
		return x.DecommissionTimeout
	}
	return 0
}

type DeleteClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Yandex Data Processing cluster that is being deleted.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteClusterMetadata) Reset() {
	*x = DeleteClusterMetadata{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterMetadata) ProtoMessage() {}

func (x *DeleteClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterMetadata.ProtoReflect.Descriptor instead.
func (*DeleteClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type StartClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the cluster to start.
	//
	// To get a cluster ID, make a [ClusterService.List] request.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartClusterRequest) Reset() {
	*x = StartClusterRequest{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartClusterRequest) ProtoMessage() {}

func (x *StartClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartClusterRequest.ProtoReflect.Descriptor instead.
func (*StartClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{13}
}

func (x *StartClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type StartClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Yandex Data Processing cluster that is being started.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartClusterMetadata) Reset() {
	*x = StartClusterMetadata{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartClusterMetadata) ProtoMessage() {}

func (x *StartClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartClusterMetadata.ProtoReflect.Descriptor instead.
func (*StartClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{14}
}

func (x *StartClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type StopClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the cluster to stop.
	//
	// To get a cluster ID, make a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Timeout to gracefully decommission nodes. In seconds. Default value: 0
	DecommissionTimeout int64 `protobuf:"varint,2,opt,name=decommission_timeout,json=decommissionTimeout,proto3" json:"decommission_timeout,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *StopClusterRequest) Reset() {
	*x = StopClusterRequest{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopClusterRequest) ProtoMessage() {}

func (x *StopClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopClusterRequest.ProtoReflect.Descriptor instead.
func (*StopClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{15}
}

func (x *StopClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *StopClusterRequest) GetDecommissionTimeout() int64 {
	if x != nil {
		return x.DecommissionTimeout
	}
	return 0
}

type StopClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Yandex Data Processing cluster that is being stopped.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopClusterMetadata) Reset() {
	*x = StopClusterMetadata{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopClusterMetadata) ProtoMessage() {}

func (x *StopClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopClusterMetadata.ProtoReflect.Descriptor instead.
func (*StopClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{16}
}

func (x *StopClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type ListClusterOperationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the cluster to list operations for.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size], the service returns a [ListClusterOperationsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token] to the
	// [ListClusterOperationsResponse.next_page_token] returned by a previous list request.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterOperationsRequest) Reset() {
	*x = ListClusterOperationsRequest{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterOperationsRequest) ProtoMessage() {}

func (x *ListClusterOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterOperationsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterOperationsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListClusterOperationsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListClusterOperationsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterOperationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListClusterOperationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of operations for the specified cluster.
	Operations []*operation.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	// Token for getting the next page of the list. If the number of results is greater than
	// the specified [ListClusterOperationsRequest.page_size], use `next_page_token` as the value
	// for the [ListClusterOperationsRequest.page_token] parameter in the next list request.
	//
	// Each subsequent page will have its own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterOperationsResponse) Reset() {
	*x = ListClusterOperationsResponse{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterOperationsResponse) ProtoMessage() {}

func (x *ListClusterOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterOperationsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterOperationsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListClusterOperationsResponse) GetOperations() []*operation.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ListClusterOperationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListClusterHostsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the cluster to list hosts for.
	//
	// To get a cluster ID, make a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size], the service returns a [ListClusterHostsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token] to the
	// [ListClusterHostsResponse.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters hosts listed in the response.
	//
	// The expression must specify:
	// 1. The field name. Currently you can use filtering only on [Cluster.name] field.
	// 2. An `=` operator.
	// 3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
	// Example of a filter: `name=my-host`
	Filter        string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterHostsRequest) Reset() {
	*x = ListClusterHostsRequest{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterHostsRequest) ProtoMessage() {}

func (x *ListClusterHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterHostsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterHostsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{19}
}

func (x *ListClusterHostsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListClusterHostsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterHostsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListClusterHostsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListClusterHostsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Requested list of hosts.
	Hosts []*Host `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	// Token for getting the next page of the list. If the number of results is greater than
	// the specified [ListClusterHostsRequest.page_size], use `next_page_token` as the value
	// for the [ListClusterHostsRequest.page_token] parameter in the next list request.
	//
	// Each subsequent page will have its own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterHostsResponse) Reset() {
	*x = ListClusterHostsResponse{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterHostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterHostsResponse) ProtoMessage() {}

func (x *ListClusterHostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterHostsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterHostsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{20}
}

func (x *ListClusterHostsResponse) GetHosts() []*Host {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *ListClusterHostsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListUILinksRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the Hadoop cluster.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUILinksRequest) Reset() {
	*x = ListUILinksRequest{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUILinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUILinksRequest) ProtoMessage() {}

func (x *ListUILinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUILinksRequest.ProtoReflect.Descriptor instead.
func (*ListUILinksRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{21}
}

func (x *ListUILinksRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type UILink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UILink) Reset() {
	*x = UILink{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UILink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UILink) ProtoMessage() {}

func (x *UILink) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UILink.ProtoReflect.Descriptor instead.
func (*UILink) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{22}
}

func (x *UILink) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UILink) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ListUILinksResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Requested list of ui links.
	Links         []*UILink `protobuf:"bytes,1,rep,name=links,proto3" json:"links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUILinksResponse) Reset() {
	*x = ListUILinksResponse{}
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUILinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUILinksResponse) ProtoMessage() {}

func (x *ListUILinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUILinksResponse.ProtoReflect.Descriptor instead.
func (*ListUILinksResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP(), []int{23}
}

func (x *ListUILinksResponse) GetLinks() []*UILink {
	if x != nil {
		return x.Links
	}
	return nil
}

var File_yandex_cloud_dataproc_v1_cluster_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDesc = "" +
	"\n" +
	".yandex/cloud/dataproc/v1/cluster_service.proto\x12\x18yandex.cloud.dataproc.v1\x1a\x1cgoogle/api/annotations.proto\x1a google/protobuf/field_mask.proto\x1a yandex/cloud/api/operation.proto\x1a&yandex/cloud/dataproc/v1/cluster.proto\x1a%yandex/cloud/dataproc/v1/common.proto\x1a)yandex/cloud/dataproc/v1/subcluster.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\"@\n" +
	"\x11GetClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\"\xb7\x01\n" +
	"\x13ListClustersRequest\x12)\n" +
	"\tfolder_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\"}\n" +
	"\x14ListClustersResponse\x12=\n" +
	"\bclusters\x18\x01 \x03(\v2!.yandex.cloud.dataproc.v1.ClusterR\bclusters\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xb1\x03\n" +
	"\x1aCreateSubclusterConfigSpec\x125\n" +
	"\x04name\x18\x01 \x01(\tB!\xf2\xc71\x1d|[a-z][-a-z0-9]{1,61}[a-z0-9]R\x04name\x128\n" +
	"\x04role\x18\x02 \x01(\x0e2\x1e.yandex.cloud.dataproc.v1.RoleB\x04\xe8\xc71\x01R\x04role\x12G\n" +
	"\tresources\x18\x03 \x01(\v2#.yandex.cloud.dataproc.v1.ResourcesB\x04\xe8\xc71\x01R\tresources\x12)\n" +
	"\tsubnet_id\x18\x04 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bsubnetId\x12(\n" +
	"\vhosts_count\x18\x05 \x01(\x03B\a\xfa\xc71\x03>=1R\n" +
	"hostsCount\x12(\n" +
	"\x10assign_public_ip\x18\x06 \x01(\bR\x0eassignPublicIp\x12Z\n" +
	"\x12autoscaling_config\x18\a \x01(\v2+.yandex.cloud.dataproc.v1.AutoscalingConfigR\x11autoscalingConfig\"\xac\x02\n" +
	"\x1aUpdateSubclusterConfigSpec\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x125\n" +
	"\x04name\x18\x02 \x01(\tB!\xf2\xc71\x1d|[a-z][-a-z0-9]{1,61}[a-z0-9]R\x04name\x12A\n" +
	"\tresources\x18\x03 \x01(\v2#.yandex.cloud.dataproc.v1.ResourcesR\tresources\x12(\n" +
	"\vhosts_count\x18\x04 \x01(\x03B\a\xfa\xc71\x03>=1R\n" +
	"hostsCount\x12Z\n" +
	"\x12autoscaling_config\x18\x05 \x01(\v2+.yandex.cloud.dataproc.v1.AutoscalingConfigR\x11autoscalingConfig\"\xd9\x01\n" +
	"\x17CreateClusterConfigSpec\x12\x1d\n" +
	"\n" +
	"version_id\x18\x01 \x01(\tR\tversionId\x12>\n" +
	"\x06hadoop\x18\x02 \x01(\v2&.yandex.cloud.dataproc.v1.HadoopConfigR\x06hadoop\x12_\n" +
	"\x10subclusters_spec\x18\x03 \x03(\v24.yandex.cloud.dataproc.v1.CreateSubclusterConfigSpecR\x0fsubclustersSpec\"\xba\x01\n" +
	"\x17UpdateClusterConfigSpec\x12_\n" +
	"\x10subclusters_spec\x18\x01 \x03(\v24.yandex.cloud.dataproc.v1.UpdateSubclusterConfigSpecR\x0fsubclustersSpec\x12>\n" +
	"\x06hadoop\x18\x02 \x01(\v2&.yandex.cloud.dataproc.v1.HadoopConfigR\x06hadoop\"\x9d\a\n" +
	"\x14CreateClusterRequest\x12)\n" +
	"\tfolder_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x125\n" +
	"\x04name\x18\x02 \x01(\tB!\xf2\xc71\x1d|[a-z][-a-z0-9]{1,61}[a-z0-9]R\x04name\x12+\n" +
	"\vdescription\x18\x03 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x8f\x01\n" +
	"\x06labels\x18\x04 \x03(\v2:.yandex.cloud.dataproc.v1.CreateClusterRequest.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x041-63R\x06labels\x12X\n" +
	"\vconfig_spec\x18\x06 \x01(\v21.yandex.cloud.dataproc.v1.CreateClusterConfigSpecB\x04\xe8\xc71\x01R\n" +
	"configSpec\x12%\n" +
	"\azone_id\x18\a \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x06zoneId\x122\n" +
	"\x12service_account_id\x18\b \x01(\tB\x04\xe8\xc71\x01R\x10serviceAccountId\x12\x16\n" +
	"\x06bucket\x18\t \x01(\tR\x06bucket\x12\x19\n" +
	"\bui_proxy\x18\n" +
	" \x01(\bR\auiProxy\x12,\n" +
	"\x12security_group_ids\x18\v \x03(\tR\x10securityGroupIds\x12$\n" +
	"\x0ehost_group_ids\x18\f \x03(\tR\fhostGroupIds\x12/\n" +
	"\x13deletion_protection\x18\r \x01(\bR\x12deletionProtection\x12 \n" +
	"\flog_group_id\x18\x0e \x01(\tR\n" +
	"logGroupId\x12O\n" +
	"\venvironment\x18\x0f \x01(\x0e2-.yandex.cloud.dataproc.v1.Cluster.EnvironmentR\venvironment\x12C\n" +
	"\x1eautoscaling_service_account_id\x18\x10 \x01(\tR\x1bautoscalingServiceAccountId\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01J\x04\b\x05\x10\x06\"6\n" +
	"\x15CreateClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\xe8\x06\n" +
	"\x14UpdateClusterRequest\x12'\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\b\x8a\xc81\x04<=50R\tclusterId\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12+\n" +
	"\vdescription\x18\x03 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x8f\x01\n" +
	"\x06labels\x18\x04 \x03(\v2:.yandex.cloud.dataproc.v1.UpdateClusterRequest.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x041-63R\x06labels\x12R\n" +
	"\vconfig_spec\x18\x05 \x01(\v21.yandex.cloud.dataproc.v1.UpdateClusterConfigSpecR\n" +
	"configSpec\x125\n" +
	"\x04name\x18\x06 \x01(\tB!\xf2\xc71\x1d|[a-z][-a-z0-9]{1,61}[a-z0-9]R\x04name\x12,\n" +
	"\x12service_account_id\x18\a \x01(\tR\x10serviceAccountId\x12\x16\n" +
	"\x06bucket\x18\b \x01(\tR\x06bucket\x12>\n" +
	"\x14decommission_timeout\x18\t \x01(\x03B\v\xfa\xc71\a0-86400R\x13decommissionTimeout\x12\x19\n" +
	"\bui_proxy\x18\n" +
	" \x01(\bR\auiProxy\x12,\n" +
	"\x12security_group_ids\x18\v \x03(\tR\x10securityGroupIds\x12/\n" +
	"\x13deletion_protection\x18\f \x01(\bR\x12deletionProtection\x12 \n" +
	"\flog_group_id\x18\r \x01(\tR\n" +
	"logGroupId\x12C\n" +
	"\x1eautoscaling_service_account_id\x18\x0e \x01(\tR\x1bautoscalingServiceAccountId\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"6\n" +
	"\x15UpdateClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\x83\x01\n" +
	"\x14DeleteClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12>\n" +
	"\x14decommission_timeout\x18\x02 \x01(\x03B\v\xfa\xc71\a0-86400R\x13decommissionTimeout\"6\n" +
	"\x15DeleteClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"B\n" +
	"\x13StartClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\"5\n" +
	"\x14StartClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\x81\x01\n" +
	"\x12StopClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12>\n" +
	"\x14decommission_timeout\x18\x02 \x01(\x03B\v\xfa\xc71\a0-86400R\x13decommissionTimeout\"4\n" +
	"\x13StopClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\x9e\x01\n" +
	"\x1cListClusterOperationsRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\"\x8a\x01\n" +
	"\x1dListClusterOperationsResponse\x12A\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2!.yandex.cloud.operation.OperationR\n" +
	"operations\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xb9\x01\n" +
	"\x17ListClusterHostsRequest\x12'\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\b\x8a\xc81\x04<=50R\tclusterId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\"x\n" +
	"\x18ListClusterHostsResponse\x124\n" +
	"\x05hosts\x18\x01 \x03(\v2\x1e.yandex.cloud.dataproc.v1.HostR\x05hosts\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"=\n" +
	"\x12ListUILinksRequest\x12'\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\b\x8a\xc81\x04<=50R\tclusterId\".\n" +
	"\x06UILink\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\"M\n" +
	"\x13ListUILinksResponse\x126\n" +
	"\x05links\x18\x01 \x03(\v2 .yandex.cloud.dataproc.v1.UILinkR\x05links2\x91\r\n" +
	"\x0eClusterService\x12\x81\x01\n" +
	"\x03Get\x12+.yandex.cloud.dataproc.v1.GetClusterRequest\x1a!.yandex.cloud.dataproc.v1.Cluster\"*\x82\xd3\xe4\x93\x02$\x12\"/dataproc/v1/clusters/{cluster_id}\x12\x84\x01\n" +
	"\x04List\x12-.yandex.cloud.dataproc.v1.ListClustersRequest\x1a..yandex.cloud.dataproc.v1.ListClustersResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/dataproc/v1/clusters\x12\xa1\x01\n" +
	"\x06Create\x12..yandex.cloud.dataproc.v1.CreateClusterRequest\x1a!.yandex.cloud.operation.Operation\"D\xb2\xd2* \n" +
	"\x15CreateClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/dataproc/v1/clusters\x12\xae\x01\n" +
	"\x06Update\x12..yandex.cloud.dataproc.v1.UpdateClusterRequest\x1a!.yandex.cloud.operation.Operation\"Q\xb2\xd2* \n" +
	"\x15UpdateClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x02':\x01*2\"/dataproc/v1/clusters/{cluster_id}\x12\xb9\x01\n" +
	"\x06Delete\x12..yandex.cloud.dataproc.v1.DeleteClusterRequest\x1a!.yandex.cloud.operation.Operation\"\\\xb2\xd2*.\n" +
	"\x15DeleteClusterMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02$*\"/dataproc/v1/clusters/{cluster_id}\x12\xae\x01\n" +
	"\x05Start\x12-.yandex.cloud.dataproc.v1.StartClusterRequest\x1a!.yandex.cloud.operation.Operation\"S\xb2\xd2*\x1f\n" +
	"\x14StartClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x02*\"(/dataproc/v1/clusters/{cluster_id}:start\x12\xad\x01\n" +
	"\x04Stop\x12,.yandex.cloud.dataproc.v1.StopClusterRequest\x1a!.yandex.cloud.operation.Operation\"T\xb2\xd2*\x1e\n" +
	"\x13StopClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x02,:\x01*\"'/dataproc/v1/clusters/{cluster_id}:stop\x12\xb8\x01\n" +
	"\x0eListOperations\x126.yandex.cloud.dataproc.v1.ListClusterOperationsRequest\x1a7.yandex.cloud.dataproc.v1.ListClusterOperationsResponse\"5\x82\xd3\xe4\x93\x02/\x12-/dataproc/v1/clusters/{cluster_id}/operations\x12\xa4\x01\n" +
	"\tListHosts\x121.yandex.cloud.dataproc.v1.ListClusterHostsRequest\x1a2.yandex.cloud.dataproc.v1.ListClusterHostsResponse\"0\x82\xd3\xe4\x93\x02*\x12(/dataproc/v1/clusters/{cluster_id}/hosts\x12\x9f\x01\n" +
	"\vListUILinks\x12,.yandex.cloud.dataproc.v1.ListUILinksRequest\x1a-.yandex.cloud.dataproc.v1.ListUILinksResponse\"3\x82\xd3\xe4\x93\x02-\x12+/dataproc/v1/clusters/{cluster_id}/ui_linksBe\n" +
	"\x1cyandex.cloud.api.dataproc.v1ZEgithub.com/yandex-cloud/go-genproto/yandex/cloud/dataproc/v1;dataprocb\x06proto3"

var (
	file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescData []byte
)

func file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDesc), len(file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDesc)))
	})
	return file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDescData
}

var file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_yandex_cloud_dataproc_v1_cluster_service_proto_goTypes = []any{
	(*GetClusterRequest)(nil),             // 0: yandex.cloud.dataproc.v1.GetClusterRequest
	(*ListClustersRequest)(nil),           // 1: yandex.cloud.dataproc.v1.ListClustersRequest
	(*ListClustersResponse)(nil),          // 2: yandex.cloud.dataproc.v1.ListClustersResponse
	(*CreateSubclusterConfigSpec)(nil),    // 3: yandex.cloud.dataproc.v1.CreateSubclusterConfigSpec
	(*UpdateSubclusterConfigSpec)(nil),    // 4: yandex.cloud.dataproc.v1.UpdateSubclusterConfigSpec
	(*CreateClusterConfigSpec)(nil),       // 5: yandex.cloud.dataproc.v1.CreateClusterConfigSpec
	(*UpdateClusterConfigSpec)(nil),       // 6: yandex.cloud.dataproc.v1.UpdateClusterConfigSpec
	(*CreateClusterRequest)(nil),          // 7: yandex.cloud.dataproc.v1.CreateClusterRequest
	(*CreateClusterMetadata)(nil),         // 8: yandex.cloud.dataproc.v1.CreateClusterMetadata
	(*UpdateClusterRequest)(nil),          // 9: yandex.cloud.dataproc.v1.UpdateClusterRequest
	(*UpdateClusterMetadata)(nil),         // 10: yandex.cloud.dataproc.v1.UpdateClusterMetadata
	(*DeleteClusterRequest)(nil),          // 11: yandex.cloud.dataproc.v1.DeleteClusterRequest
	(*DeleteClusterMetadata)(nil),         // 12: yandex.cloud.dataproc.v1.DeleteClusterMetadata
	(*StartClusterRequest)(nil),           // 13: yandex.cloud.dataproc.v1.StartClusterRequest
	(*StartClusterMetadata)(nil),          // 14: yandex.cloud.dataproc.v1.StartClusterMetadata
	(*StopClusterRequest)(nil),            // 15: yandex.cloud.dataproc.v1.StopClusterRequest
	(*StopClusterMetadata)(nil),           // 16: yandex.cloud.dataproc.v1.StopClusterMetadata
	(*ListClusterOperationsRequest)(nil),  // 17: yandex.cloud.dataproc.v1.ListClusterOperationsRequest
	(*ListClusterOperationsResponse)(nil), // 18: yandex.cloud.dataproc.v1.ListClusterOperationsResponse
	(*ListClusterHostsRequest)(nil),       // 19: yandex.cloud.dataproc.v1.ListClusterHostsRequest
	(*ListClusterHostsResponse)(nil),      // 20: yandex.cloud.dataproc.v1.ListClusterHostsResponse
	(*ListUILinksRequest)(nil),            // 21: yandex.cloud.dataproc.v1.ListUILinksRequest
	(*UILink)(nil),                        // 22: yandex.cloud.dataproc.v1.UILink
	(*ListUILinksResponse)(nil),           // 23: yandex.cloud.dataproc.v1.ListUILinksResponse
	nil,                                   // 24: yandex.cloud.dataproc.v1.CreateClusterRequest.LabelsEntry
	nil,                                   // 25: yandex.cloud.dataproc.v1.UpdateClusterRequest.LabelsEntry
	(*Cluster)(nil),                       // 26: yandex.cloud.dataproc.v1.Cluster
	(Role)(0),                             // 27: yandex.cloud.dataproc.v1.Role
	(*Resources)(nil),                     // 28: yandex.cloud.dataproc.v1.Resources
	(*AutoscalingConfig)(nil),             // 29: yandex.cloud.dataproc.v1.AutoscalingConfig
	(*HadoopConfig)(nil),                  // 30: yandex.cloud.dataproc.v1.HadoopConfig
	(Cluster_Environment)(0),              // 31: yandex.cloud.dataproc.v1.Cluster.Environment
	(*fieldmaskpb.FieldMask)(nil),         // 32: google.protobuf.FieldMask
	(*operation.Operation)(nil),           // 33: yandex.cloud.operation.Operation
	(*Host)(nil),                          // 34: yandex.cloud.dataproc.v1.Host
}
var file_yandex_cloud_dataproc_v1_cluster_service_proto_depIdxs = []int32{
	26, // 0: yandex.cloud.dataproc.v1.ListClustersResponse.clusters:type_name -> yandex.cloud.dataproc.v1.Cluster
	27, // 1: yandex.cloud.dataproc.v1.CreateSubclusterConfigSpec.role:type_name -> yandex.cloud.dataproc.v1.Role
	28, // 2: yandex.cloud.dataproc.v1.CreateSubclusterConfigSpec.resources:type_name -> yandex.cloud.dataproc.v1.Resources
	29, // 3: yandex.cloud.dataproc.v1.CreateSubclusterConfigSpec.autoscaling_config:type_name -> yandex.cloud.dataproc.v1.AutoscalingConfig
	28, // 4: yandex.cloud.dataproc.v1.UpdateSubclusterConfigSpec.resources:type_name -> yandex.cloud.dataproc.v1.Resources
	29, // 5: yandex.cloud.dataproc.v1.UpdateSubclusterConfigSpec.autoscaling_config:type_name -> yandex.cloud.dataproc.v1.AutoscalingConfig
	30, // 6: yandex.cloud.dataproc.v1.CreateClusterConfigSpec.hadoop:type_name -> yandex.cloud.dataproc.v1.HadoopConfig
	3,  // 7: yandex.cloud.dataproc.v1.CreateClusterConfigSpec.subclusters_spec:type_name -> yandex.cloud.dataproc.v1.CreateSubclusterConfigSpec
	4,  // 8: yandex.cloud.dataproc.v1.UpdateClusterConfigSpec.subclusters_spec:type_name -> yandex.cloud.dataproc.v1.UpdateSubclusterConfigSpec
	30, // 9: yandex.cloud.dataproc.v1.UpdateClusterConfigSpec.hadoop:type_name -> yandex.cloud.dataproc.v1.HadoopConfig
	24, // 10: yandex.cloud.dataproc.v1.CreateClusterRequest.labels:type_name -> yandex.cloud.dataproc.v1.CreateClusterRequest.LabelsEntry
	5,  // 11: yandex.cloud.dataproc.v1.CreateClusterRequest.config_spec:type_name -> yandex.cloud.dataproc.v1.CreateClusterConfigSpec
	31, // 12: yandex.cloud.dataproc.v1.CreateClusterRequest.environment:type_name -> yandex.cloud.dataproc.v1.Cluster.Environment
	32, // 13: yandex.cloud.dataproc.v1.UpdateClusterRequest.update_mask:type_name -> google.protobuf.FieldMask
	25, // 14: yandex.cloud.dataproc.v1.UpdateClusterRequest.labels:type_name -> yandex.cloud.dataproc.v1.UpdateClusterRequest.LabelsEntry
	6,  // 15: yandex.cloud.dataproc.v1.UpdateClusterRequest.config_spec:type_name -> yandex.cloud.dataproc.v1.UpdateClusterConfigSpec
	33, // 16: yandex.cloud.dataproc.v1.ListClusterOperationsResponse.operations:type_name -> yandex.cloud.operation.Operation
	34, // 17: yandex.cloud.dataproc.v1.ListClusterHostsResponse.hosts:type_name -> yandex.cloud.dataproc.v1.Host
	22, // 18: yandex.cloud.dataproc.v1.ListUILinksResponse.links:type_name -> yandex.cloud.dataproc.v1.UILink
	0,  // 19: yandex.cloud.dataproc.v1.ClusterService.Get:input_type -> yandex.cloud.dataproc.v1.GetClusterRequest
	1,  // 20: yandex.cloud.dataproc.v1.ClusterService.List:input_type -> yandex.cloud.dataproc.v1.ListClustersRequest
	7,  // 21: yandex.cloud.dataproc.v1.ClusterService.Create:input_type -> yandex.cloud.dataproc.v1.CreateClusterRequest
	9,  // 22: yandex.cloud.dataproc.v1.ClusterService.Update:input_type -> yandex.cloud.dataproc.v1.UpdateClusterRequest
	11, // 23: yandex.cloud.dataproc.v1.ClusterService.Delete:input_type -> yandex.cloud.dataproc.v1.DeleteClusterRequest
	13, // 24: yandex.cloud.dataproc.v1.ClusterService.Start:input_type -> yandex.cloud.dataproc.v1.StartClusterRequest
	15, // 25: yandex.cloud.dataproc.v1.ClusterService.Stop:input_type -> yandex.cloud.dataproc.v1.StopClusterRequest
	17, // 26: yandex.cloud.dataproc.v1.ClusterService.ListOperations:input_type -> yandex.cloud.dataproc.v1.ListClusterOperationsRequest
	19, // 27: yandex.cloud.dataproc.v1.ClusterService.ListHosts:input_type -> yandex.cloud.dataproc.v1.ListClusterHostsRequest
	21, // 28: yandex.cloud.dataproc.v1.ClusterService.ListUILinks:input_type -> yandex.cloud.dataproc.v1.ListUILinksRequest
	26, // 29: yandex.cloud.dataproc.v1.ClusterService.Get:output_type -> yandex.cloud.dataproc.v1.Cluster
	2,  // 30: yandex.cloud.dataproc.v1.ClusterService.List:output_type -> yandex.cloud.dataproc.v1.ListClustersResponse
	33, // 31: yandex.cloud.dataproc.v1.ClusterService.Create:output_type -> yandex.cloud.operation.Operation
	33, // 32: yandex.cloud.dataproc.v1.ClusterService.Update:output_type -> yandex.cloud.operation.Operation
	33, // 33: yandex.cloud.dataproc.v1.ClusterService.Delete:output_type -> yandex.cloud.operation.Operation
	33, // 34: yandex.cloud.dataproc.v1.ClusterService.Start:output_type -> yandex.cloud.operation.Operation
	33, // 35: yandex.cloud.dataproc.v1.ClusterService.Stop:output_type -> yandex.cloud.operation.Operation
	18, // 36: yandex.cloud.dataproc.v1.ClusterService.ListOperations:output_type -> yandex.cloud.dataproc.v1.ListClusterOperationsResponse
	20, // 37: yandex.cloud.dataproc.v1.ClusterService.ListHosts:output_type -> yandex.cloud.dataproc.v1.ListClusterHostsResponse
	23, // 38: yandex.cloud.dataproc.v1.ClusterService.ListUILinks:output_type -> yandex.cloud.dataproc.v1.ListUILinksResponse
	29, // [29:39] is the sub-list for method output_type
	19, // [19:29] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_yandex_cloud_dataproc_v1_cluster_service_proto_init() }
func file_yandex_cloud_dataproc_v1_cluster_service_proto_init() {
	if File_yandex_cloud_dataproc_v1_cluster_service_proto != nil {
		return
	}
	file_yandex_cloud_dataproc_v1_cluster_proto_init()
	file_yandex_cloud_dataproc_v1_common_proto_init()
	file_yandex_cloud_dataproc_v1_subcluster_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDesc), len(file_yandex_cloud_dataproc_v1_cluster_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_dataproc_v1_cluster_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_dataproc_v1_cluster_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_dataproc_v1_cluster_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_dataproc_v1_cluster_service_proto = out.File
	file_yandex_cloud_dataproc_v1_cluster_service_proto_goTypes = nil
	file_yandex_cloud_dataproc_v1_cluster_service_proto_depIdxs = nil
}

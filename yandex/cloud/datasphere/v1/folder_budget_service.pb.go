// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: yandex/cloud/datasphere/v1/folder_budget_service.proto

package datasphere

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetFolderBudgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the folder to get a budget for.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
}

func (x *GetFolderBudgetRequest) Reset() {
	*x = GetFolderBudgetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_datasphere_v1_folder_budget_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFolderBudgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFolderBudgetRequest) ProtoMessage() {}

func (x *GetFolderBudgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datasphere_v1_folder_budget_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFolderBudgetRequest.ProtoReflect.Descriptor instead.
func (*GetFolderBudgetRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datasphere_v1_folder_budget_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetFolderBudgetRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

type GetFolderBudgetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of units available in the folder.
	UnitBalance *wrapperspb.Int64Value `protobuf:"bytes,1,opt,name=unit_balance,json=unitBalance,proto3" json:"unit_balance,omitempty"`
	// The number of units that can be spent per hour.
	MaxUnitsPerHour *wrapperspb.Int64Value `protobuf:"bytes,2,opt,name=max_units_per_hour,json=maxUnitsPerHour,proto3" json:"max_units_per_hour,omitempty"`
	// The number of units that can be spent on one execution.
	MaxUnitsPerExecution *wrapperspb.Int64Value `protobuf:"bytes,3,opt,name=max_units_per_execution,json=maxUnitsPerExecution,proto3" json:"max_units_per_execution,omitempty"`
}

func (x *GetFolderBudgetResponse) Reset() {
	*x = GetFolderBudgetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_datasphere_v1_folder_budget_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFolderBudgetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFolderBudgetResponse) ProtoMessage() {}

func (x *GetFolderBudgetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datasphere_v1_folder_budget_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFolderBudgetResponse.ProtoReflect.Descriptor instead.
func (*GetFolderBudgetResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datasphere_v1_folder_budget_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetFolderBudgetResponse) GetUnitBalance() *wrapperspb.Int64Value {
	if x != nil {
		return x.UnitBalance
	}
	return nil
}

func (x *GetFolderBudgetResponse) GetMaxUnitsPerHour() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxUnitsPerHour
	}
	return nil
}

func (x *GetFolderBudgetResponse) GetMaxUnitsPerExecution() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxUnitsPerExecution
	}
	return nil
}

type SetFolderBudgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the folder to set a budget for.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Field mask that specifies which fields of the budget are going to be set.
	SetMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=set_mask,json=setMask,proto3" json:"set_mask,omitempty"`
	// The number of units available in the folder.
	UnitBalance *wrapperspb.Int64Value `protobuf:"bytes,3,opt,name=unit_balance,json=unitBalance,proto3" json:"unit_balance,omitempty"`
	// The number of units that can be spent per hour.
	MaxUnitsPerHour *wrapperspb.Int64Value `protobuf:"bytes,4,opt,name=max_units_per_hour,json=maxUnitsPerHour,proto3" json:"max_units_per_hour,omitempty"`
	// The number of units that can be spent on one execution.
	MaxUnitsPerExecution *wrapperspb.Int64Value `protobuf:"bytes,5,opt,name=max_units_per_execution,json=maxUnitsPerExecution,proto3" json:"max_units_per_execution,omitempty"`
}

func (x *SetFolderBudgetRequest) Reset() {
	*x = SetFolderBudgetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_datasphere_v1_folder_budget_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFolderBudgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFolderBudgetRequest) ProtoMessage() {}

func (x *SetFolderBudgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datasphere_v1_folder_budget_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFolderBudgetRequest.ProtoReflect.Descriptor instead.
func (*SetFolderBudgetRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datasphere_v1_folder_budget_service_proto_rawDescGZIP(), []int{2}
}

func (x *SetFolderBudgetRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *SetFolderBudgetRequest) GetSetMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.SetMask
	}
	return nil
}

func (x *SetFolderBudgetRequest) GetUnitBalance() *wrapperspb.Int64Value {
	if x != nil {
		return x.UnitBalance
	}
	return nil
}

func (x *SetFolderBudgetRequest) GetMaxUnitsPerHour() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxUnitsPerHour
	}
	return nil
}

func (x *SetFolderBudgetRequest) GetMaxUnitsPerExecution() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxUnitsPerExecution
	}
	return nil
}

var File_yandex_cloud_datasphere_v1_folder_budget_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_datasphere_v1_folder_budget_service_proto_rawDesc = []byte{
	0x0a, 0x36, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x43, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x09, 0x66, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe8,
	0xc7, 0x31, 0x01, 0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x08, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xf7, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x75, 0x6e, 0x69, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x48, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x55,
	0x6e, 0x69, 0x74, 0x73, 0x50, 0x65, 0x72, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x52, 0x0a, 0x17, 0x6d,
	0x61, 0x78, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x55, 0x6e,
	0x69, 0x74, 0x73, 0x50, 0x65, 0x72, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xd8, 0x02, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x09, 0x66, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe8,
	0xc7, 0x31, 0x01, 0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x08, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x73,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x52, 0x07, 0x73, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x3e, 0x0a, 0x0c,
	0x75, 0x6e, 0x69, 0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0b, 0x75, 0x6e, 0x69, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x12,
	0x6d, 0x61, 0x78, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x68, 0x6f,
	0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x50,
	0x65, 0x72, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x52, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x50, 0x65,
	0x72, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xc3, 0x02, 0x0a, 0x13, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x32, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70,
	0x68, 0x65, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x73, 0x2f, 0x7b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x3a,
	0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x12, 0x87, 0x01, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x32,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x22, 0x29, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65,
	0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x66,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x42, 0x6b, 0x0a, 0x1e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x2f,
	0x76, 0x31, 0x3b, 0x64, 0x61, 0x74, 0x61, 0x73, 0x70, 0x68, 0x65, 0x72, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_datasphere_v1_folder_budget_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_datasphere_v1_folder_budget_service_proto_rawDescData = file_yandex_cloud_datasphere_v1_folder_budget_service_proto_rawDesc
)

func file_yandex_cloud_datasphere_v1_folder_budget_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_datasphere_v1_folder_budget_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_datasphere_v1_folder_budget_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_datasphere_v1_folder_budget_service_proto_rawDescData)
	})
	return file_yandex_cloud_datasphere_v1_folder_budget_service_proto_rawDescData
}

var file_yandex_cloud_datasphere_v1_folder_budget_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_yandex_cloud_datasphere_v1_folder_budget_service_proto_goTypes = []any{
	(*GetFolderBudgetRequest)(nil),  // 0: yandex.cloud.datasphere.v1.GetFolderBudgetRequest
	(*GetFolderBudgetResponse)(nil), // 1: yandex.cloud.datasphere.v1.GetFolderBudgetResponse
	(*SetFolderBudgetRequest)(nil),  // 2: yandex.cloud.datasphere.v1.SetFolderBudgetRequest
	(*wrapperspb.Int64Value)(nil),   // 3: google.protobuf.Int64Value
	(*fieldmaskpb.FieldMask)(nil),   // 4: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),           // 5: google.protobuf.Empty
}
var file_yandex_cloud_datasphere_v1_folder_budget_service_proto_depIdxs = []int32{
	3, // 0: yandex.cloud.datasphere.v1.GetFolderBudgetResponse.unit_balance:type_name -> google.protobuf.Int64Value
	3, // 1: yandex.cloud.datasphere.v1.GetFolderBudgetResponse.max_units_per_hour:type_name -> google.protobuf.Int64Value
	3, // 2: yandex.cloud.datasphere.v1.GetFolderBudgetResponse.max_units_per_execution:type_name -> google.protobuf.Int64Value
	4, // 3: yandex.cloud.datasphere.v1.SetFolderBudgetRequest.set_mask:type_name -> google.protobuf.FieldMask
	3, // 4: yandex.cloud.datasphere.v1.SetFolderBudgetRequest.unit_balance:type_name -> google.protobuf.Int64Value
	3, // 5: yandex.cloud.datasphere.v1.SetFolderBudgetRequest.max_units_per_hour:type_name -> google.protobuf.Int64Value
	3, // 6: yandex.cloud.datasphere.v1.SetFolderBudgetRequest.max_units_per_execution:type_name -> google.protobuf.Int64Value
	0, // 7: yandex.cloud.datasphere.v1.FolderBudgetService.Get:input_type -> yandex.cloud.datasphere.v1.GetFolderBudgetRequest
	2, // 8: yandex.cloud.datasphere.v1.FolderBudgetService.Set:input_type -> yandex.cloud.datasphere.v1.SetFolderBudgetRequest
	1, // 9: yandex.cloud.datasphere.v1.FolderBudgetService.Get:output_type -> yandex.cloud.datasphere.v1.GetFolderBudgetResponse
	5, // 10: yandex.cloud.datasphere.v1.FolderBudgetService.Set:output_type -> google.protobuf.Empty
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_yandex_cloud_datasphere_v1_folder_budget_service_proto_init() }
func file_yandex_cloud_datasphere_v1_folder_budget_service_proto_init() {
	if File_yandex_cloud_datasphere_v1_folder_budget_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_datasphere_v1_folder_budget_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetFolderBudgetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_datasphere_v1_folder_budget_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetFolderBudgetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_datasphere_v1_folder_budget_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SetFolderBudgetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_datasphere_v1_folder_budget_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_datasphere_v1_folder_budget_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_datasphere_v1_folder_budget_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_datasphere_v1_folder_budget_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_datasphere_v1_folder_budget_service_proto = out.File
	file_yandex_cloud_datasphere_v1_folder_budget_service_proto_rawDesc = nil
	file_yandex_cloud_datasphere_v1_folder_budget_service_proto_goTypes = nil
	file_yandex_cloud_datasphere_v1_folder_budget_service_proto_depIdxs = nil
}

// Code generated by protoc-gen-goext. DO NOT EDIT.

package datasphere

import (
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

func (m *CreateProjectRequest) SetCommunityId(v string) {
	m.CommunityId = v
}

func (m *CreateProjectRequest) SetName(v string) {
	m.Name = v
}

func (m *CreateProjectRequest) SetDescription(v string) {
	m.Description = v
}

func (m *CreateProjectRequest) SetLabels(v map[string]string) {
	m.Labels = v
}

func (m *CreateProjectRequest) SetSettings(v *Project_Settings) {
	m.Settings = v
}

func (m *CreateProjectRequest) SetLimits(v *Project_Limits) {
	m.Limits = v
}

func (m *CreateProjectMetadata) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *UpdateProjectRequest) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *UpdateProjectRequest) SetUpdateMask(v *fieldmaskpb.FieldMask) {
	m.UpdateMask = v
}

func (m *UpdateProjectRequest) SetName(v string) {
	m.Name = v
}

func (m *UpdateProjectRequest) SetDescription(v string) {
	m.Description = v
}

func (m *UpdateProjectRequest) SetLabels(v map[string]string) {
	m.Labels = v
}

func (m *UpdateProjectRequest) SetSettings(v *Project_Settings) {
	m.Settings = v
}

func (m *UpdateProjectRequest) SetLimits(v *Project_Limits) {
	m.Limits = v
}

func (m *UpdateProjectMetadata) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *DeleteProjectRequest) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *DeleteProjectMetadata) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *OpenProjectRequest) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *OpenProjectMetadata) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *OpenProjectMetadata) SetStatus(v OpenProjectMetadata_OpenProjectStatus) {
	m.Status = v
}

func (m *OpenProjectResponse) SetProjectUrl(v string) {
	m.ProjectUrl = v
}

func (m *OpenProjectResponse) SetSessionToken(v string) {
	m.SessionToken = v
}

func (m *GetProjectRequest) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *ListProjectsRequest) SetCommunityId(v string) {
	m.CommunityId = v
}

func (m *ListProjectsRequest) SetPageSize(v int64) {
	m.PageSize = v
}

func (m *ListProjectsRequest) SetPageToken(v string) {
	m.PageToken = v
}

func (m *ListProjectsRequest) SetProjectNamePattern(v string) {
	m.ProjectNamePattern = v
}

func (m *ListProjectsRequest) SetOwnedById(v string) {
	m.OwnedById = v
}

func (m *ListProjectsResponse) SetProjects(v []*Project) {
	m.Projects = v
}

func (m *ListProjectsResponse) SetNextPageToken(v string) {
	m.NextPageToken = v
}

func (m *GetUnitBalanceRequest) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *GetUnitBalanceResponse) SetUnitBalance(v *wrapperspb.Int64Value) {
	m.UnitBalance = v
}

func (m *SetUnitBalanceRequest) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *SetUnitBalanceRequest) SetUnitBalance(v *wrapperspb.Int64Value) {
	m.UnitBalance = v
}

func (m *SetUnitBalanceMetadata) SetProjectId(v string) {
	m.ProjectId = v
}

type ProjectExecutionRequest_Target = isProjectExecutionRequest_Target

func (m *ProjectExecutionRequest) SetTarget(v ProjectExecutionRequest_Target) {
	m.Target = v
}

func (m *ProjectExecutionRequest) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *ProjectExecutionRequest) SetNotebookId(v string) {
	m.Target = &ProjectExecutionRequest_NotebookId{
		NotebookId: v,
	}
}

func (m *ProjectExecutionRequest) SetCellId(v string) {
	m.Target = &ProjectExecutionRequest_CellId{
		CellId: v,
	}
}

func (m *ProjectExecutionRequest) SetInputVariables(v *structpb.Struct) {
	m.InputVariables = v
}

func (m *ProjectExecutionRequest) SetOutputVariableNames(v []string) {
	m.OutputVariableNames = v
}

func (m *ProjectExecutionRequest) SetSpec(v string) {
	m.Spec = v
}

func (m *ProjectExecutionRequest) SetSparkConnectorId(v string) {
	m.SparkConnectorId = v
}

type ProjectExecutionMetadata_Target = isProjectExecutionMetadata_Target

func (m *ProjectExecutionMetadata) SetTarget(v ProjectExecutionMetadata_Target) {
	m.Target = v
}

func (m *ProjectExecutionMetadata) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *ProjectExecutionMetadata) SetNotebookId(v string) {
	m.Target = &ProjectExecutionMetadata_NotebookId{
		NotebookId: v,
	}
}

func (m *ProjectExecutionMetadata) SetCellId(v string) {
	m.Target = &ProjectExecutionMetadata_CellId{
		CellId: v,
	}
}

func (m *ProjectExecutionResponse) SetExecutionStatus(v ExecutionStatus) {
	m.ExecutionStatus = v
}

func (m *SetProjectAccessBindingsMetadata) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *UpdateProjectAccessBindingsMetadata) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *AddResourceToProjectRequest) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *AddResourceToProjectRequest) SetResourceType(v ResourceType) {
	m.ResourceType = v
}

func (m *AddResourceToProjectRequest) SetResourceId(v string) {
	m.ResourceId = v
}

func (m *RemoveResourceFromProjectRequest) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *RemoveResourceFromProjectRequest) SetResourceType(v ResourceType) {
	m.ResourceType = v
}

func (m *RemoveResourceFromProjectRequest) SetResourceId(v string) {
	m.ResourceId = v
}

func (m *GetProjectRestrictionsRequest) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *SetProjectRestrictionsRequest) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *SetProjectRestrictionsRequest) SetRestrictions(v []*Restriction) {
	m.Restrictions = v
}

func (m *ResizeProjectDiskRequest) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *ResizeProjectDiskRequest) SetNewDiskSizeGb(v int64) {
	m.NewDiskSizeGb = v
}

func (m *ResizeProjectDiskMetadata) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *ResizeProjectDiskMetadata) SetOldDiskSizeGb(v int64) {
	m.OldDiskSizeGb = v
}

func (m *ResizeProjectDiskMetadata) SetNewDiskSizeGb(v int64) {
	m.NewDiskSizeGb = v
}

func (m *DiskInfo) SetProjectId(v string) {
	m.ProjectId = v
}

func (m *DiskInfo) SetDiskSizeGb(v float64) {
	m.DiskSizeGb = v
}

func (m *DiskInfo) SetDiskUsedGb(v float64) {
	m.DiskUsedGb = v
}

func (m *DiskInfo) SetDetailedUsage(v *DiskInfo_DetailedDiskInfo) {
	m.DetailedUsage = v
}

func (m *DiskInfo_DetailedDiskInfo) SetUserDataGb(v float64) {
	m.UserDataGb = v
}

func (m *DiskInfo_DetailedDiskInfo) SetPackagesGb(v float64) {
	m.PackagesGb = v
}

func (m *DiskInfo_DetailedDiskInfo) SetSystemDataGb(v float64) {
	m.SystemDataGb = v
}

func (m *DiskInfo_DetailedDiskInfo) SetFreeSpaceGb(v float64) {
	m.FreeSpaceGb = v
}

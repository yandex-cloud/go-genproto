// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/datatransfer/v1/endpoint/mongo.proto

package endpoint

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OnPremiseMongo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hosts         []string               `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	Port          int64                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	ReplicaSet    string                 `protobuf:"bytes,5,opt,name=replica_set,json=replicaSet,proto3" json:"replica_set,omitempty"`
	TlsMode       *TLSMode               `protobuf:"bytes,6,opt,name=tls_mode,json=tlsMode,proto3" json:"tls_mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnPremiseMongo) Reset() {
	*x = OnPremiseMongo{}
	mi := &file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnPremiseMongo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnPremiseMongo) ProtoMessage() {}

func (x *OnPremiseMongo) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnPremiseMongo.ProtoReflect.Descriptor instead.
func (*OnPremiseMongo) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDescGZIP(), []int{0}
}

func (x *OnPremiseMongo) GetHosts() []string {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *OnPremiseMongo) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *OnPremiseMongo) GetReplicaSet() string {
	if x != nil {
		return x.ReplicaSet
	}
	return ""
}

func (x *OnPremiseMongo) GetTlsMode() *TLSMode {
	if x != nil {
		return x.TlsMode
	}
	return nil
}

type MongoConnectionOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Address:
	//
	//	*MongoConnectionOptions_MdbClusterId
	//	*MongoConnectionOptions_OnPremise
	//	*MongoConnectionOptions_ConnectionManagerConnection
	Address isMongoConnectionOptions_Address `protobuf_oneof:"address"`
	// User name
	User string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	// Password for user
	Password *Secret `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// Database name associated with the credentials
	AuthSource    string `protobuf:"bytes,5,opt,name=auth_source,json=authSource,proto3" json:"auth_source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MongoConnectionOptions) Reset() {
	*x = MongoConnectionOptions{}
	mi := &file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MongoConnectionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoConnectionOptions) ProtoMessage() {}

func (x *MongoConnectionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoConnectionOptions.ProtoReflect.Descriptor instead.
func (*MongoConnectionOptions) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDescGZIP(), []int{1}
}

func (x *MongoConnectionOptions) GetAddress() isMongoConnectionOptions_Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MongoConnectionOptions) GetMdbClusterId() string {
	if x != nil {
		if x, ok := x.Address.(*MongoConnectionOptions_MdbClusterId); ok {
			return x.MdbClusterId
		}
	}
	return ""
}

func (x *MongoConnectionOptions) GetOnPremise() *OnPremiseMongo {
	if x != nil {
		if x, ok := x.Address.(*MongoConnectionOptions_OnPremise); ok {
			return x.OnPremise
		}
	}
	return nil
}

func (x *MongoConnectionOptions) GetConnectionManagerConnection() *MongoConnectionManagerConnection {
	if x != nil {
		if x, ok := x.Address.(*MongoConnectionOptions_ConnectionManagerConnection); ok {
			return x.ConnectionManagerConnection
		}
	}
	return nil
}

func (x *MongoConnectionOptions) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *MongoConnectionOptions) GetPassword() *Secret {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *MongoConnectionOptions) GetAuthSource() string {
	if x != nil {
		return x.AuthSource
	}
	return ""
}

type isMongoConnectionOptions_Address interface {
	isMongoConnectionOptions_Address()
}

type MongoConnectionOptions_MdbClusterId struct {
	MdbClusterId string `protobuf:"bytes,1,opt,name=mdb_cluster_id,json=mdbClusterId,proto3,oneof"`
}

type MongoConnectionOptions_OnPremise struct {
	OnPremise *OnPremiseMongo `protobuf:"bytes,2,opt,name=on_premise,json=onPremise,proto3,oneof"`
}

type MongoConnectionOptions_ConnectionManagerConnection struct {
	ConnectionManagerConnection *MongoConnectionManagerConnection `protobuf:"bytes,6,opt,name=connection_manager_connection,json=connectionManagerConnection,proto3,oneof"`
}

func (*MongoConnectionOptions_MdbClusterId) isMongoConnectionOptions_Address() {}

func (*MongoConnectionOptions_OnPremise) isMongoConnectionOptions_Address() {}

func (*MongoConnectionOptions_ConnectionManagerConnection) isMongoConnectionOptions_Address() {}

type MongoConnection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Connection:
	//
	//	*MongoConnection_ConnectionOptions
	Connection    isMongoConnection_Connection `protobuf_oneof:"connection"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MongoConnection) Reset() {
	*x = MongoConnection{}
	mi := &file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MongoConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoConnection) ProtoMessage() {}

func (x *MongoConnection) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoConnection.ProtoReflect.Descriptor instead.
func (*MongoConnection) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDescGZIP(), []int{2}
}

func (x *MongoConnection) GetConnection() isMongoConnection_Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *MongoConnection) GetConnectionOptions() *MongoConnectionOptions {
	if x != nil {
		if x, ok := x.Connection.(*MongoConnection_ConnectionOptions); ok {
			return x.ConnectionOptions
		}
	}
	return nil
}

type isMongoConnection_Connection interface {
	isMongoConnection_Connection()
}

type MongoConnection_ConnectionOptions struct {
	ConnectionOptions *MongoConnectionOptions `protobuf:"bytes,3,opt,name=connection_options,json=connectionOptions,proto3,oneof"`
}

func (*MongoConnection_ConnectionOptions) isMongoConnection_Connection() {}

type MongoCollection struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DatabaseName   string                 `protobuf:"bytes,1,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	CollectionName string                 `protobuf:"bytes,2,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MongoCollection) Reset() {
	*x = MongoCollection{}
	mi := &file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MongoCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoCollection) ProtoMessage() {}

func (x *MongoCollection) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoCollection.ProtoReflect.Descriptor instead.
func (*MongoCollection) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDescGZIP(), []int{3}
}

func (x *MongoCollection) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *MongoCollection) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

type MongoSource struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Connection *MongoConnection       `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	SubnetId   string                 `protobuf:"bytes,2,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	// List of collections for replication. Empty list implies replication of all
	// tables on the deployment. Allowed to use * as collection name.
	Collections []*MongoCollection `protobuf:"bytes,6,rep,name=collections,proto3" json:"collections,omitempty"`
	// List of forbidden collections for replication. Allowed to use * as collection
	// name for forbid all collections of concrete schema.
	ExcludedCollections []*MongoCollection `protobuf:"bytes,7,rep,name=excluded_collections,json=excludedCollections,proto3" json:"excluded_collections,omitempty"`
	// Read mode for mongo client
	SecondaryPreferredMode bool `protobuf:"varint,8,opt,name=secondary_preferred_mode,json=secondaryPreferredMode,proto3" json:"secondary_preferred_mode,omitempty"`
	// Security groups
	SecurityGroups []string `protobuf:"bytes,11,rep,name=security_groups,json=securityGroups,proto3" json:"security_groups,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MongoSource) Reset() {
	*x = MongoSource{}
	mi := &file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MongoSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoSource) ProtoMessage() {}

func (x *MongoSource) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoSource.ProtoReflect.Descriptor instead.
func (*MongoSource) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDescGZIP(), []int{4}
}

func (x *MongoSource) GetConnection() *MongoConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *MongoSource) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *MongoSource) GetCollections() []*MongoCollection {
	if x != nil {
		return x.Collections
	}
	return nil
}

func (x *MongoSource) GetExcludedCollections() []*MongoCollection {
	if x != nil {
		return x.ExcludedCollections
	}
	return nil
}

func (x *MongoSource) GetSecondaryPreferredMode() bool {
	if x != nil {
		return x.SecondaryPreferredMode
	}
	return false
}

func (x *MongoSource) GetSecurityGroups() []string {
	if x != nil {
		return x.SecurityGroups
	}
	return nil
}

type MongoTarget struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Connection *MongoConnection       `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	// Database name
	Database      string        `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	CleanupPolicy CleanupPolicy `protobuf:"varint,6,opt,name=cleanup_policy,json=cleanupPolicy,proto3,enum=yandex.cloud.datatransfer.v1.endpoint.CleanupPolicy" json:"cleanup_policy,omitempty"`
	SubnetId      string        `protobuf:"bytes,7,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	// Security groups
	SecurityGroups []string `protobuf:"bytes,8,rep,name=security_groups,json=securityGroups,proto3" json:"security_groups,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MongoTarget) Reset() {
	*x = MongoTarget{}
	mi := &file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MongoTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoTarget) ProtoMessage() {}

func (x *MongoTarget) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoTarget.ProtoReflect.Descriptor instead.
func (*MongoTarget) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDescGZIP(), []int{5}
}

func (x *MongoTarget) GetConnection() *MongoConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *MongoTarget) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *MongoTarget) GetCleanupPolicy() CleanupPolicy {
	if x != nil {
		return x.CleanupPolicy
	}
	return CleanupPolicy_CLEANUP_POLICY_UNSPECIFIED
}

func (x *MongoTarget) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *MongoTarget) GetSecurityGroups() []string {
	if x != nil {
		return x.SecurityGroups
	}
	return nil
}

type MongoConnectionManagerConnection struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	// Used only for on-premise connections
	ReplicaSet    string `protobuf:"bytes,2,opt,name=replica_set,json=replicaSet,proto3" json:"replica_set,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MongoConnectionManagerConnection) Reset() {
	*x = MongoConnectionManagerConnection{}
	mi := &file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MongoConnectionManagerConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoConnectionManagerConnection) ProtoMessage() {}

func (x *MongoConnectionManagerConnection) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoConnectionManagerConnection.ProtoReflect.Descriptor instead.
func (*MongoConnectionManagerConnection) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDescGZIP(), []int{6}
}

func (x *MongoConnectionManagerConnection) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *MongoConnectionManagerConnection) GetReplicaSet() string {
	if x != nil {
		return x.ReplicaSet
	}
	return ""
}

var File_yandex_cloud_datatransfer_v1_endpoint_mongo_proto protoreflect.FileDescriptor

const file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDesc = "" +
	"\n" +
	"1yandex/cloud/datatransfer/v1/endpoint/mongo.proto\x12%yandex.cloud.datatransfer.v1.endpoint\x1a2yandex/cloud/datatransfer/v1/endpoint/common.proto\"\xac\x01\n" +
	"\x0eOnPremiseMongo\x12\x14\n" +
	"\x05hosts\x18\x01 \x03(\tR\x05hosts\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x03R\x04port\x12\x1f\n" +
	"\vreplica_set\x18\x05 \x01(\tR\n" +
	"replicaSet\x12I\n" +
	"\btls_mode\x18\x06 \x01(\v2..yandex.cloud.datatransfer.v1.endpoint.TLSModeR\atlsModeJ\x04\b\x03\x10\x05\"\xb3\x03\n" +
	"\x16MongoConnectionOptions\x12&\n" +
	"\x0emdb_cluster_id\x18\x01 \x01(\tH\x00R\fmdbClusterId\x12V\n" +
	"\n" +
	"on_premise\x18\x02 \x01(\v25.yandex.cloud.datatransfer.v1.endpoint.OnPremiseMongoH\x00R\tonPremise\x12\x8d\x01\n" +
	"\x1dconnection_manager_connection\x18\x06 \x01(\v2G.yandex.cloud.datatransfer.v1.endpoint.MongoConnectionManagerConnectionH\x00R\x1bconnectionManagerConnection\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12I\n" +
	"\bpassword\x18\x04 \x01(\v2-.yandex.cloud.datatransfer.v1.endpoint.SecretR\bpassword\x12\x1f\n" +
	"\vauth_source\x18\x05 \x01(\tR\n" +
	"authSourceB\t\n" +
	"\aaddress\"\x95\x01\n" +
	"\x0fMongoConnection\x12n\n" +
	"\x12connection_options\x18\x03 \x01(\v2=.yandex.cloud.datatransfer.v1.endpoint.MongoConnectionOptionsH\x00R\x11connectionOptionsB\f\n" +
	"\n" +
	"connectionJ\x04\b\x01\x10\x03\"_\n" +
	"\x0fMongoCollection\x12#\n" +
	"\rdatabase_name\x18\x01 \x01(\tR\fdatabaseName\x12'\n" +
	"\x0fcollection_name\x18\x02 \x01(\tR\x0ecollectionName\"\xb6\x03\n" +
	"\vMongoSource\x12V\n" +
	"\n" +
	"connection\x18\x01 \x01(\v26.yandex.cloud.datatransfer.v1.endpoint.MongoConnectionR\n" +
	"connection\x12\x1b\n" +
	"\tsubnet_id\x18\x02 \x01(\tR\bsubnetId\x12X\n" +
	"\vcollections\x18\x06 \x03(\v26.yandex.cloud.datatransfer.v1.endpoint.MongoCollectionR\vcollections\x12i\n" +
	"\x14excluded_collections\x18\a \x03(\v26.yandex.cloud.datatransfer.v1.endpoint.MongoCollectionR\x13excludedCollections\x128\n" +
	"\x18secondary_preferred_mode\x18\b \x01(\bR\x16secondaryPreferredMode\x12'\n" +
	"\x0fsecurity_groups\x18\v \x03(\tR\x0esecurityGroupsJ\x04\b\x03\x10\x06J\x04\b\t\x10\v\"\xaa\x02\n" +
	"\vMongoTarget\x12V\n" +
	"\n" +
	"connection\x18\x01 \x01(\v26.yandex.cloud.datatransfer.v1.endpoint.MongoConnectionR\n" +
	"connection\x12\x1a\n" +
	"\bdatabase\x18\x02 \x01(\tR\bdatabase\x12[\n" +
	"\x0ecleanup_policy\x18\x06 \x01(\x0e24.yandex.cloud.datatransfer.v1.endpoint.CleanupPolicyR\rcleanupPolicy\x12\x1b\n" +
	"\tsubnet_id\x18\a \x01(\tR\bsubnetId\x12'\n" +
	"\x0fsecurity_groups\x18\b \x03(\tR\x0esecurityGroupsJ\x04\b\x03\x10\x06\"h\n" +
	" MongoConnectionManagerConnection\x12#\n" +
	"\rconnection_id\x18\x01 \x01(\tR\fconnectionId\x12\x1f\n" +
	"\vreplica_set\x18\x02 \x01(\tR\n" +
	"replicaSetB\xa7\x01\n" +
	")yandex.cloud.api.datatransfer.v1.endpointZRgithub.com/yandex-cloud/go-genproto/yandex/cloud/datatransfer/v1/endpoint;endpoint\xaa\x02%Yandex.Cloud.Datatransfer.V1.EndPointb\x06proto3"

var (
	file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDescOnce sync.Once
	file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDescData []byte
)

func file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDescGZIP() []byte {
	file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDesc), len(file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDesc)))
	})
	return file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDescData
}

var file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_goTypes = []any{
	(*OnPremiseMongo)(nil),                   // 0: yandex.cloud.datatransfer.v1.endpoint.OnPremiseMongo
	(*MongoConnectionOptions)(nil),           // 1: yandex.cloud.datatransfer.v1.endpoint.MongoConnectionOptions
	(*MongoConnection)(nil),                  // 2: yandex.cloud.datatransfer.v1.endpoint.MongoConnection
	(*MongoCollection)(nil),                  // 3: yandex.cloud.datatransfer.v1.endpoint.MongoCollection
	(*MongoSource)(nil),                      // 4: yandex.cloud.datatransfer.v1.endpoint.MongoSource
	(*MongoTarget)(nil),                      // 5: yandex.cloud.datatransfer.v1.endpoint.MongoTarget
	(*MongoConnectionManagerConnection)(nil), // 6: yandex.cloud.datatransfer.v1.endpoint.MongoConnectionManagerConnection
	(*TLSMode)(nil),                          // 7: yandex.cloud.datatransfer.v1.endpoint.TLSMode
	(*Secret)(nil),                           // 8: yandex.cloud.datatransfer.v1.endpoint.Secret
	(CleanupPolicy)(0),                       // 9: yandex.cloud.datatransfer.v1.endpoint.CleanupPolicy
}
var file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_depIdxs = []int32{
	7,  // 0: yandex.cloud.datatransfer.v1.endpoint.OnPremiseMongo.tls_mode:type_name -> yandex.cloud.datatransfer.v1.endpoint.TLSMode
	0,  // 1: yandex.cloud.datatransfer.v1.endpoint.MongoConnectionOptions.on_premise:type_name -> yandex.cloud.datatransfer.v1.endpoint.OnPremiseMongo
	6,  // 2: yandex.cloud.datatransfer.v1.endpoint.MongoConnectionOptions.connection_manager_connection:type_name -> yandex.cloud.datatransfer.v1.endpoint.MongoConnectionManagerConnection
	8,  // 3: yandex.cloud.datatransfer.v1.endpoint.MongoConnectionOptions.password:type_name -> yandex.cloud.datatransfer.v1.endpoint.Secret
	1,  // 4: yandex.cloud.datatransfer.v1.endpoint.MongoConnection.connection_options:type_name -> yandex.cloud.datatransfer.v1.endpoint.MongoConnectionOptions
	2,  // 5: yandex.cloud.datatransfer.v1.endpoint.MongoSource.connection:type_name -> yandex.cloud.datatransfer.v1.endpoint.MongoConnection
	3,  // 6: yandex.cloud.datatransfer.v1.endpoint.MongoSource.collections:type_name -> yandex.cloud.datatransfer.v1.endpoint.MongoCollection
	3,  // 7: yandex.cloud.datatransfer.v1.endpoint.MongoSource.excluded_collections:type_name -> yandex.cloud.datatransfer.v1.endpoint.MongoCollection
	2,  // 8: yandex.cloud.datatransfer.v1.endpoint.MongoTarget.connection:type_name -> yandex.cloud.datatransfer.v1.endpoint.MongoConnection
	9,  // 9: yandex.cloud.datatransfer.v1.endpoint.MongoTarget.cleanup_policy:type_name -> yandex.cloud.datatransfer.v1.endpoint.CleanupPolicy
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_init() }
func file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_init() {
	if File_yandex_cloud_datatransfer_v1_endpoint_mongo_proto != nil {
		return
	}
	file_yandex_cloud_datatransfer_v1_endpoint_common_proto_init()
	file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes[1].OneofWrappers = []any{
		(*MongoConnectionOptions_MdbClusterId)(nil),
		(*MongoConnectionOptions_OnPremise)(nil),
		(*MongoConnectionOptions_ConnectionManagerConnection)(nil),
	}
	file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes[2].OneofWrappers = []any{
		(*MongoConnection_ConnectionOptions)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDesc), len(file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_msgTypes,
	}.Build()
	File_yandex_cloud_datatransfer_v1_endpoint_mongo_proto = out.File
	file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_goTypes = nil
	file_yandex_cloud_datatransfer_v1_endpoint_mongo_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/k8s/marketplace/v1/helm_release_service.proto

package k8s_marketplace

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListHelmReleasesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the Kubernetes cluster to list Helm releases from.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The maximum number of results per page that should be returned.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Token for pagination to retrieve the next page of results.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHelmReleasesRequest) Reset() {
	*x = ListHelmReleasesRequest{}
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHelmReleasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHelmReleasesRequest) ProtoMessage() {}

func (x *ListHelmReleasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHelmReleasesRequest.ProtoReflect.Descriptor instead.
func (*ListHelmReleasesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListHelmReleasesRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListHelmReleasesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListHelmReleasesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListHelmReleasesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of Helm releases in the Kubernetes cluster.
	HelmReleases []*HelmRelease `protobuf:"bytes,1,rep,name=helm_releases,json=helmReleases,proto3" json:"helm_releases,omitempty"`
	// Token for retrieving the next page of Helm releases.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHelmReleasesResponse) Reset() {
	*x = ListHelmReleasesResponse{}
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHelmReleasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHelmReleasesResponse) ProtoMessage() {}

func (x *ListHelmReleasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHelmReleasesResponse.ProtoReflect.Descriptor instead.
func (*ListHelmReleasesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListHelmReleasesResponse) GetHelmReleases() []*HelmRelease {
	if x != nil {
		return x.HelmReleases
	}
	return nil
}

func (x *ListHelmReleasesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetHelmReleaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the Helm release to retrieve.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHelmReleaseRequest) Reset() {
	*x = GetHelmReleaseRequest{}
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHelmReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelmReleaseRequest) ProtoMessage() {}

func (x *GetHelmReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelmReleaseRequest.ProtoReflect.Descriptor instead.
func (*GetHelmReleaseRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetHelmReleaseRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type InstallHelmReleaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the Kubernetes cluster where the Helm release is to be installed.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The product version ID to install.
	ProductVersionId string `protobuf:"bytes,2,opt,name=product_version_id,json=productVersionId,proto3" json:"product_version_id,omitempty"`
	// User-defined values for the Helm chart during installation.
	UserValues    []*ValueWithKey `protobuf:"bytes,3,rep,name=user_values,json=userValues,proto3" json:"user_values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallHelmReleaseRequest) Reset() {
	*x = InstallHelmReleaseRequest{}
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallHelmReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallHelmReleaseRequest) ProtoMessage() {}

func (x *InstallHelmReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallHelmReleaseRequest.ProtoReflect.Descriptor instead.
func (*InstallHelmReleaseRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescGZIP(), []int{3}
}

func (x *InstallHelmReleaseRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *InstallHelmReleaseRequest) GetProductVersionId() string {
	if x != nil {
		return x.ProductVersionId
	}
	return ""
}

func (x *InstallHelmReleaseRequest) GetUserValues() []*ValueWithKey {
	if x != nil {
		return x.UserValues
	}
	return nil
}

type InstallHelmReleaseMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the Kubernetes cluster where the Helm release is being installed.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The ID of the Helm release being installed.
	HelmReleaseId string `protobuf:"bytes,2,opt,name=helm_release_id,json=helmReleaseId,proto3" json:"helm_release_id,omitempty"`
	// The ID of the product version being deployed.
	ProductVersionId string `protobuf:"bytes,3,opt,name=product_version_id,json=productVersionId,proto3" json:"product_version_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InstallHelmReleaseMetadata) Reset() {
	*x = InstallHelmReleaseMetadata{}
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallHelmReleaseMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallHelmReleaseMetadata) ProtoMessage() {}

func (x *InstallHelmReleaseMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallHelmReleaseMetadata.ProtoReflect.Descriptor instead.
func (*InstallHelmReleaseMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescGZIP(), []int{4}
}

func (x *InstallHelmReleaseMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *InstallHelmReleaseMetadata) GetHelmReleaseId() string {
	if x != nil {
		return x.HelmReleaseId
	}
	return ""
}

func (x *InstallHelmReleaseMetadata) GetProductVersionId() string {
	if x != nil {
		return x.ProductVersionId
	}
	return ""
}

type UpdateHelmReleaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the Helm release to update.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The ID of the new product version for the release.
	ProductVersionId string `protobuf:"bytes,2,opt,name=product_version_id,json=productVersionId,proto3" json:"product_version_id,omitempty"`
	// Custom user values to apply during the update.
	UserValues    []*ValueWithKey `protobuf:"bytes,3,rep,name=user_values,json=userValues,proto3" json:"user_values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateHelmReleaseRequest) Reset() {
	*x = UpdateHelmReleaseRequest{}
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateHelmReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHelmReleaseRequest) ProtoMessage() {}

func (x *UpdateHelmReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHelmReleaseRequest.ProtoReflect.Descriptor instead.
func (*UpdateHelmReleaseRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateHelmReleaseRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateHelmReleaseRequest) GetProductVersionId() string {
	if x != nil {
		return x.ProductVersionId
	}
	return ""
}

func (x *UpdateHelmReleaseRequest) GetUserValues() []*ValueWithKey {
	if x != nil {
		return x.UserValues
	}
	return nil
}

type UpdateHelmReleaseMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the Kubernetes cluster where the Helm release is being updated.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The ID of the Helm release being updated.
	HelmReleaseId string `protobuf:"bytes,2,opt,name=helm_release_id,json=helmReleaseId,proto3" json:"helm_release_id,omitempty"`
	// The ID of the new product version to update the Helm release to.
	ProductVersionId string `protobuf:"bytes,3,opt,name=product_version_id,json=productVersionId,proto3" json:"product_version_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateHelmReleaseMetadata) Reset() {
	*x = UpdateHelmReleaseMetadata{}
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateHelmReleaseMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHelmReleaseMetadata) ProtoMessage() {}

func (x *UpdateHelmReleaseMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHelmReleaseMetadata.ProtoReflect.Descriptor instead.
func (*UpdateHelmReleaseMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateHelmReleaseMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateHelmReleaseMetadata) GetHelmReleaseId() string {
	if x != nil {
		return x.HelmReleaseId
	}
	return ""
}

func (x *UpdateHelmReleaseMetadata) GetProductVersionId() string {
	if x != nil {
		return x.ProductVersionId
	}
	return ""
}

type UninstallHelmReleaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the Helm release to retrieve.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UninstallHelmReleaseRequest) Reset() {
	*x = UninstallHelmReleaseRequest{}
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UninstallHelmReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallHelmReleaseRequest) ProtoMessage() {}

func (x *UninstallHelmReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallHelmReleaseRequest.ProtoReflect.Descriptor instead.
func (*UninstallHelmReleaseRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescGZIP(), []int{7}
}

func (x *UninstallHelmReleaseRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UninstallHelmReleaseMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the Kubernetes cluster where the release is being uninstalled.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The ID of the Helm release being uninstalled.
	HelmReleaseId string `protobuf:"bytes,2,opt,name=helm_release_id,json=helmReleaseId,proto3" json:"helm_release_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UninstallHelmReleaseMetadata) Reset() {
	*x = UninstallHelmReleaseMetadata{}
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UninstallHelmReleaseMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallHelmReleaseMetadata) ProtoMessage() {}

func (x *UninstallHelmReleaseMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallHelmReleaseMetadata.ProtoReflect.Descriptor instead.
func (*UninstallHelmReleaseMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescGZIP(), []int{8}
}

func (x *UninstallHelmReleaseMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UninstallHelmReleaseMetadata) GetHelmReleaseId() string {
	if x != nil {
		return x.HelmReleaseId
	}
	return ""
}

type ValueWithKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The key associated with the value.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The value associated with the key.
	Value         *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValueWithKey) Reset() {
	*x = ValueWithKey{}
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValueWithKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueWithKey) ProtoMessage() {}

func (x *ValueWithKey) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueWithKey.ProtoReflect.Descriptor instead.
func (*ValueWithKey) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescGZIP(), []int{9}
}

func (x *ValueWithKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ValueWithKey) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type Value struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*Value_TypedValue
	Value         isValue_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Value) Reset() {
	*x = Value{}
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescGZIP(), []int{10}
}

func (x *Value) GetValue() isValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Value) GetTypedValue() string {
	if x != nil {
		if x, ok := x.Value.(*Value_TypedValue); ok {
			return x.TypedValue
		}
	}
	return ""
}

type isValue_Value interface {
	isValue_Value()
}

type Value_TypedValue struct {
	// The typed string value.
	TypedValue string `protobuf:"bytes,1,opt,name=typed_value,json=typedValue,proto3,oneof"`
}

func (*Value_TypedValue) isValue_Value() {}

var File_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDesc = "" +
	"\n" +
	":yandex/cloud/k8s/marketplace/v1/helm_release_service.proto\x12\x1fyandex.cloud.k8s.marketplace.v1\x1a\x1cgoogle/api/annotations.proto\x1a yandex/cloud/api/operation.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\x1a2yandex/cloud/k8s/marketplace/v1/helm_release.proto\"\x91\x01\n" +
	"\x17ListHelmReleasesRequest\x12#\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\tclusterId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x060-1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\"\x95\x01\n" +
	"\x18ListHelmReleasesResponse\x12Q\n" +
	"\rhelm_releases\x18\x01 \x03(\v2,.yandex.cloud.k8s.marketplace.v1.HelmReleaseR\fhelmReleases\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"-\n" +
	"\x15GetHelmReleaseRequest\x12\x14\n" +
	"\x02id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x02id\"\xbe\x01\n" +
	"\x19InstallHelmReleaseRequest\x12#\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\tclusterId\x12,\n" +
	"\x12product_version_id\x18\x02 \x01(\tR\x10productVersionId\x12N\n" +
	"\vuser_values\x18\x03 \x03(\v2-.yandex.cloud.k8s.marketplace.v1.ValueWithKeyR\n" +
	"userValues\"\x91\x01\n" +
	"\x1aInstallHelmReleaseMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12&\n" +
	"\x0fhelm_release_id\x18\x02 \x01(\tR\rhelmReleaseId\x12,\n" +
	"\x12product_version_id\x18\x03 \x01(\tR\x10productVersionId\"\xae\x01\n" +
	"\x18UpdateHelmReleaseRequest\x12\x14\n" +
	"\x02id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x02id\x12,\n" +
	"\x12product_version_id\x18\x02 \x01(\tR\x10productVersionId\x12N\n" +
	"\vuser_values\x18\x03 \x03(\v2-.yandex.cloud.k8s.marketplace.v1.ValueWithKeyR\n" +
	"userValues\"\x90\x01\n" +
	"\x19UpdateHelmReleaseMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12&\n" +
	"\x0fhelm_release_id\x18\x02 \x01(\tR\rhelmReleaseId\x12,\n" +
	"\x12product_version_id\x18\x03 \x01(\tR\x10productVersionId\"3\n" +
	"\x1bUninstallHelmReleaseRequest\x12\x14\n" +
	"\x02id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x02id\"q\n" +
	"\x1cUninstallHelmReleaseMetadata\x12#\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\tclusterId\x12,\n" +
	"\x0fhelm_release_id\x18\x02 \x01(\tB\x04\xe8\xc71\x01R\rhelmReleaseId\"d\n" +
	"\fValueWithKey\x12\x16\n" +
	"\x03key\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x03key\x12<\n" +
	"\x05value\x18\x02 \x01(\v2&.yandex.cloud.k8s.marketplace.v1.ValueR\x05value\"3\n" +
	"\x05Value\x12!\n" +
	"\vtyped_value\x18\x01 \x01(\tH\x00R\n" +
	"typedValueB\a\n" +
	"\x05value2\xac\b\n" +
	"\x12HelmReleaseService\x12\xb5\x01\n" +
	"\x04List\x128.yandex.cloud.k8s.marketplace.v1.ListHelmReleasesRequest\x1a9.yandex.cloud.k8s.marketplace.v1.ListHelmReleasesResponse\"8\x82\xd3\xe4\x93\x022\x120/managed-kubernetes/marketplace/v1/helm-releases\x12\xaa\x01\n" +
	"\x03Get\x126.yandex.cloud.k8s.marketplace.v1.GetHelmReleaseRequest\x1a,.yandex.cloud.k8s.marketplace.v1.HelmRelease\"=\x82\xd3\xe4\x93\x027\x125/managed-kubernetes/marketplace/v1/helm-releases/{id}\x12\xda\x01\n" +
	"\aInstall\x12:.yandex.cloud.k8s.marketplace.v1.InstallHelmReleaseRequest\x1a!.yandex.cloud.operation.Operation\"p\xb2\xd2*)\n" +
	"\x1aInstallHelmReleaseMetadata\x12\vHelmRelease\x82\xd3\xe4\x93\x02=:\x01*\"8/managed-kubernetes/marketplace/v1/helm-releases:install\x12\xd4\x01\n" +
	"\x06Update\x129.yandex.cloud.k8s.marketplace.v1.UpdateHelmReleaseRequest\x1a!.yandex.cloud.operation.Operation\"l\xb2\xd2*(\n" +
	"\x19UpdateHelmReleaseMetadata\x12\vHelmRelease\x82\xd3\xe4\x93\x02::\x01*25/managed-kubernetes/marketplace/v1/helm-releases/{id}\x12\xfc\x01\n" +
	"\tUninstall\x12<.yandex.cloud.k8s.marketplace.v1.UninstallHelmReleaseRequest\x1a!.yandex.cloud.operation.Operation\"\x8d\x01\xb2\xd2*5\n" +
	"\x1cUninstallHelmReleaseMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02N:\x01*\"I/managed-kubernetes/marketplace/v1/helm-releases/uninstall/{id}:uninstallBz\n" +
	"#yandex.cloud.api.k8s.marketplace.v1ZSgithub.com/yandex-cloud/go-genproto/yandex/cloud/k8s/marketplace/v1;k8s_marketplaceb\x06proto3"

var (
	file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescData []byte
)

func file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDesc), len(file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDesc)))
	})
	return file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDescData
}

var file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_goTypes = []any{
	(*ListHelmReleasesRequest)(nil),      // 0: yandex.cloud.k8s.marketplace.v1.ListHelmReleasesRequest
	(*ListHelmReleasesResponse)(nil),     // 1: yandex.cloud.k8s.marketplace.v1.ListHelmReleasesResponse
	(*GetHelmReleaseRequest)(nil),        // 2: yandex.cloud.k8s.marketplace.v1.GetHelmReleaseRequest
	(*InstallHelmReleaseRequest)(nil),    // 3: yandex.cloud.k8s.marketplace.v1.InstallHelmReleaseRequest
	(*InstallHelmReleaseMetadata)(nil),   // 4: yandex.cloud.k8s.marketplace.v1.InstallHelmReleaseMetadata
	(*UpdateHelmReleaseRequest)(nil),     // 5: yandex.cloud.k8s.marketplace.v1.UpdateHelmReleaseRequest
	(*UpdateHelmReleaseMetadata)(nil),    // 6: yandex.cloud.k8s.marketplace.v1.UpdateHelmReleaseMetadata
	(*UninstallHelmReleaseRequest)(nil),  // 7: yandex.cloud.k8s.marketplace.v1.UninstallHelmReleaseRequest
	(*UninstallHelmReleaseMetadata)(nil), // 8: yandex.cloud.k8s.marketplace.v1.UninstallHelmReleaseMetadata
	(*ValueWithKey)(nil),                 // 9: yandex.cloud.k8s.marketplace.v1.ValueWithKey
	(*Value)(nil),                        // 10: yandex.cloud.k8s.marketplace.v1.Value
	(*HelmRelease)(nil),                  // 11: yandex.cloud.k8s.marketplace.v1.HelmRelease
	(*operation.Operation)(nil),          // 12: yandex.cloud.operation.Operation
}
var file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_depIdxs = []int32{
	11, // 0: yandex.cloud.k8s.marketplace.v1.ListHelmReleasesResponse.helm_releases:type_name -> yandex.cloud.k8s.marketplace.v1.HelmRelease
	9,  // 1: yandex.cloud.k8s.marketplace.v1.InstallHelmReleaseRequest.user_values:type_name -> yandex.cloud.k8s.marketplace.v1.ValueWithKey
	9,  // 2: yandex.cloud.k8s.marketplace.v1.UpdateHelmReleaseRequest.user_values:type_name -> yandex.cloud.k8s.marketplace.v1.ValueWithKey
	10, // 3: yandex.cloud.k8s.marketplace.v1.ValueWithKey.value:type_name -> yandex.cloud.k8s.marketplace.v1.Value
	0,  // 4: yandex.cloud.k8s.marketplace.v1.HelmReleaseService.List:input_type -> yandex.cloud.k8s.marketplace.v1.ListHelmReleasesRequest
	2,  // 5: yandex.cloud.k8s.marketplace.v1.HelmReleaseService.Get:input_type -> yandex.cloud.k8s.marketplace.v1.GetHelmReleaseRequest
	3,  // 6: yandex.cloud.k8s.marketplace.v1.HelmReleaseService.Install:input_type -> yandex.cloud.k8s.marketplace.v1.InstallHelmReleaseRequest
	5,  // 7: yandex.cloud.k8s.marketplace.v1.HelmReleaseService.Update:input_type -> yandex.cloud.k8s.marketplace.v1.UpdateHelmReleaseRequest
	7,  // 8: yandex.cloud.k8s.marketplace.v1.HelmReleaseService.Uninstall:input_type -> yandex.cloud.k8s.marketplace.v1.UninstallHelmReleaseRequest
	1,  // 9: yandex.cloud.k8s.marketplace.v1.HelmReleaseService.List:output_type -> yandex.cloud.k8s.marketplace.v1.ListHelmReleasesResponse
	11, // 10: yandex.cloud.k8s.marketplace.v1.HelmReleaseService.Get:output_type -> yandex.cloud.k8s.marketplace.v1.HelmRelease
	12, // 11: yandex.cloud.k8s.marketplace.v1.HelmReleaseService.Install:output_type -> yandex.cloud.operation.Operation
	12, // 12: yandex.cloud.k8s.marketplace.v1.HelmReleaseService.Update:output_type -> yandex.cloud.operation.Operation
	12, // 13: yandex.cloud.k8s.marketplace.v1.HelmReleaseService.Uninstall:output_type -> yandex.cloud.operation.Operation
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_init() }
func file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_init() {
	if File_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto != nil {
		return
	}
	file_yandex_cloud_k8s_marketplace_v1_helm_release_proto_init()
	file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes[10].OneofWrappers = []any{
		(*Value_TypedValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDesc), len(file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto = out.File
	file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_goTypes = nil
	file_yandex_cloud_k8s_marketplace_v1_helm_release_service_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/k8s/v1/cluster_service.proto

package k8s

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	access "github.com/yandex-cloud/go-genproto/yandex/cloud/access"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Kubernetes cluster to return.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterRequest) Reset() {
	*x = GetClusterRequest{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterRequest) ProtoMessage() {}

func (x *GetClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterRequest.ProtoReflect.Descriptor instead.
func (*GetClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type ListClustersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to list Kubernetes cluster in.
	// To get the folder ID use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size],
	// the service returns a [ListClustersResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set `page_token` to the
	// [ListClustersResponse.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	// The expression must specify:
	// 1. The field name. Currently you can use filtering only on [Cluster.name] field.
	// 2. An `=` operator.
	// 3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
	Filter        string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersRequest) Reset() {
	*x = ListClustersRequest{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersRequest) ProtoMessage() {}

func (x *ListClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersRequest.ProtoReflect.Descriptor instead.
func (*ListClustersRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListClustersRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListClustersRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClustersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListClustersRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListClustersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of Kubernetes cluster.
	Clusters []*Cluster `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListClustersRequest.page_size], use
	// the `next_page_token` as the value
	// for the [ListClustersRequest.page_token] query parameter
	// in the next list request. Each subsequent list request will have its own
	// `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersResponse) Reset() {
	*x = ListClustersResponse{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersResponse) ProtoMessage() {}

func (x *ListClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersResponse.ProtoReflect.Descriptor instead.
func (*ListClustersResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListClustersResponse) GetClusters() []*Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *ListClustersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type DeleteClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Kubernetes cluster to delete.
	// To get Kubernetes cluster ID use a [ClusterService.List] request.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteClusterRequest) Reset() {
	*x = DeleteClusterRequest{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterRequest) ProtoMessage() {}

func (x *DeleteClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterRequest.ProtoReflect.Descriptor instead.
func (*DeleteClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type DeleteClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Kubernetes cluster that is being deleted.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteClusterMetadata) Reset() {
	*x = DeleteClusterMetadata{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterMetadata) ProtoMessage() {}

func (x *DeleteClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterMetadata.ProtoReflect.Descriptor instead.
func (*DeleteClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type StopClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Kubernetes cluster to stop.
	// To get Kubernetes cluster ID use a [ClusterService.List] request.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopClusterRequest) Reset() {
	*x = StopClusterRequest{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopClusterRequest) ProtoMessage() {}

func (x *StopClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopClusterRequest.ProtoReflect.Descriptor instead.
func (*StopClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{5}
}

func (x *StopClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type StopClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Kubernetes cluster that is being stopped.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopClusterMetadata) Reset() {
	*x = StopClusterMetadata{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopClusterMetadata) ProtoMessage() {}

func (x *StopClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopClusterMetadata.ProtoReflect.Descriptor instead.
func (*StopClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{6}
}

func (x *StopClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type StartClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Kubernetes cluster to start.
	// To get Kubernetes cluster ID use a [ClusterService.List] request.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartClusterRequest) Reset() {
	*x = StartClusterRequest{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartClusterRequest) ProtoMessage() {}

func (x *StartClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartClusterRequest.ProtoReflect.Descriptor instead.
func (*StartClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{7}
}

func (x *StartClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type StartClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Kubernetes cluster that is being started.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartClusterMetadata) Reset() {
	*x = StartClusterMetadata{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartClusterMetadata) ProtoMessage() {}

func (x *StartClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartClusterMetadata.ProtoReflect.Descriptor instead.
func (*StartClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{8}
}

func (x *StartClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type UpdateClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Kubernetes cluster to update.
	// To get the Kubernetes cluster ID use a [ClusterService.List] request.
	ClusterId  string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// Name of the Kubernetes cluster.
	// The name must be unique within the folder.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the Kubernetes cluster.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels as `key:value` pairs.
	//
	// Existing set of `labels` is completely replaced by the provided set.
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Types that are valid to be assigned to InternetGateway:
	//
	//	*UpdateClusterRequest_GatewayIpv4Address
	InternetGateway isUpdateClusterRequest_InternetGateway `protobuf_oneof:"internet_gateway"`
	// Specification of the master update.
	MasterSpec *MasterUpdateSpec `protobuf:"bytes,7,opt,name=master_spec,json=masterSpec,proto3" json:"master_spec,omitempty"`
	// Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster.
	// Selected service account should have `edit` role on the folder where the Kubernetes cluster will be
	// located and on the folder where selected network resides.
	ServiceAccountId string `protobuf:"bytes,9,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry
	// or to push node logs and metrics.
	NodeServiceAccountId       string                          `protobuf:"bytes,8,opt,name=node_service_account_id,json=nodeServiceAccountId,proto3" json:"node_service_account_id,omitempty"`
	NetworkPolicy              *NetworkPolicy                  `protobuf:"bytes,10,opt,name=network_policy,json=networkPolicy,proto3" json:"network_policy,omitempty"`
	IpAllocationPolicy         *IPAllocationPolicy             `protobuf:"bytes,11,opt,name=ip_allocation_policy,json=ipAllocationPolicy,proto3" json:"ip_allocation_policy,omitempty"`
	WorkloadIdentityFederation *WorkloadIdentityFederationSpec `protobuf:"bytes,12,opt,name=workload_identity_federation,json=workloadIdentityFederation,proto3" json:"workload_identity_federation,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *UpdateClusterRequest) Reset() {
	*x = UpdateClusterRequest{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterRequest) ProtoMessage() {}

func (x *UpdateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateClusterRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateClusterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateClusterRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateClusterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateClusterRequest) GetInternetGateway() isUpdateClusterRequest_InternetGateway {
	if x != nil {
		return x.InternetGateway
	}
	return nil
}

func (x *UpdateClusterRequest) GetGatewayIpv4Address() string {
	if x != nil {
		if x, ok := x.InternetGateway.(*UpdateClusterRequest_GatewayIpv4Address); ok {
			return x.GatewayIpv4Address
		}
	}
	return ""
}

func (x *UpdateClusterRequest) GetMasterSpec() *MasterUpdateSpec {
	if x != nil {
		return x.MasterSpec
	}
	return nil
}

func (x *UpdateClusterRequest) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *UpdateClusterRequest) GetNodeServiceAccountId() string {
	if x != nil {
		return x.NodeServiceAccountId
	}
	return ""
}

func (x *UpdateClusterRequest) GetNetworkPolicy() *NetworkPolicy {
	if x != nil {
		return x.NetworkPolicy
	}
	return nil
}

func (x *UpdateClusterRequest) GetIpAllocationPolicy() *IPAllocationPolicy {
	if x != nil {
		return x.IpAllocationPolicy
	}
	return nil
}

func (x *UpdateClusterRequest) GetWorkloadIdentityFederation() *WorkloadIdentityFederationSpec {
	if x != nil {
		return x.WorkloadIdentityFederation
	}
	return nil
}

type isUpdateClusterRequest_InternetGateway interface {
	isUpdateClusterRequest_InternetGateway()
}

type UpdateClusterRequest_GatewayIpv4Address struct {
	// Gateway IPv4 address.
	GatewayIpv4Address string `protobuf:"bytes,6,opt,name=gateway_ipv4_address,json=gatewayIpv4Address,proto3,oneof"`
}

func (*UpdateClusterRequest_GatewayIpv4Address) isUpdateClusterRequest_InternetGateway() {}

type MasterUpdateSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specification of the master update.
	Version *UpdateVersionSpec `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Maintenance policy of the master.
	MaintenancePolicy *MasterMaintenancePolicy `protobuf:"bytes,2,opt,name=maintenance_policy,json=maintenancePolicy,proto3" json:"maintenance_policy,omitempty"`
	// Master security groups.
	SecurityGroupIds []string `protobuf:"bytes,3,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
	// Cloud Logging for master components.
	MasterLogging *MasterLogging `protobuf:"bytes,4,opt,name=master_logging,json=masterLogging,proto3" json:"master_logging,omitempty"`
	// Update master instance locations.
	Locations []*LocationSpec `protobuf:"bytes,5,rep,name=locations,proto3" json:"locations,omitempty"`
	// Specification of parameters for external IPv6 networking.
	ExternalV6AddressSpec *ExternalAddressSpec `protobuf:"bytes,6,opt,name=external_v6_address_spec,json=externalV6AddressSpec,proto3" json:"external_v6_address_spec,omitempty"`
	// Scale policy of the master.
	ScalePolicy   *MasterScalePolicySpec `protobuf:"bytes,7,opt,name=scale_policy,json=scalePolicy,proto3" json:"scale_policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MasterUpdateSpec) Reset() {
	*x = MasterUpdateSpec{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MasterUpdateSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterUpdateSpec) ProtoMessage() {}

func (x *MasterUpdateSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterUpdateSpec.ProtoReflect.Descriptor instead.
func (*MasterUpdateSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{10}
}

func (x *MasterUpdateSpec) GetVersion() *UpdateVersionSpec {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *MasterUpdateSpec) GetMaintenancePolicy() *MasterMaintenancePolicy {
	if x != nil {
		return x.MaintenancePolicy
	}
	return nil
}

func (x *MasterUpdateSpec) GetSecurityGroupIds() []string {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

func (x *MasterUpdateSpec) GetMasterLogging() *MasterLogging {
	if x != nil {
		return x.MasterLogging
	}
	return nil
}

func (x *MasterUpdateSpec) GetLocations() []*LocationSpec {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *MasterUpdateSpec) GetExternalV6AddressSpec() *ExternalAddressSpec {
	if x != nil {
		return x.ExternalV6AddressSpec
	}
	return nil
}

func (x *MasterUpdateSpec) GetScalePolicy() *MasterScalePolicySpec {
	if x != nil {
		return x.ScalePolicy
	}
	return nil
}

type UpdateClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Kubernetes cluster that is being updated.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateClusterMetadata) Reset() {
	*x = UpdateClusterMetadata{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterMetadata) ProtoMessage() {}

func (x *UpdateClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterMetadata.ProtoReflect.Descriptor instead.
func (*UpdateClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type CreateClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to create a Kubernetes cluster in.
	// To get the folder ID use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Name of the Kubernetes cluster.
	// The name must be unique within the folder.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the Kubernetes cluster.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels as `key:value` pairs.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// ID of the network.
	NetworkId string `protobuf:"bytes,5,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// Master specification of the Kubernetes cluster.
	MasterSpec *MasterSpec `protobuf:"bytes,6,opt,name=master_spec,json=masterSpec,proto3" json:"master_spec,omitempty"`
	// IP allocation policy of the Kubernetes cluster.
	IpAllocationPolicy *IPAllocationPolicy `protobuf:"bytes,7,opt,name=ip_allocation_policy,json=ipAllocationPolicy,proto3" json:"ip_allocation_policy,omitempty"`
	// Types that are valid to be assigned to InternetGateway:
	//
	//	*CreateClusterRequest_GatewayIpv4Address
	InternetGateway isCreateClusterRequest_InternetGateway `protobuf_oneof:"internet_gateway"`
	// Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster.
	// Selected service account should have `edit` role on the folder where the Kubernetes cluster will be
	// located and on the folder where selected network resides.
	ServiceAccountId string `protobuf:"bytes,9,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry or to push node logs and metrics.
	NodeServiceAccountId string `protobuf:"bytes,10,opt,name=node_service_account_id,json=nodeServiceAccountId,proto3" json:"node_service_account_id,omitempty"`
	// Release channel for the master.
	ReleaseChannel ReleaseChannel `protobuf:"varint,11,opt,name=release_channel,json=releaseChannel,proto3,enum=yandex.cloud.k8s.v1.ReleaseChannel" json:"release_channel,omitempty"`
	NetworkPolicy  *NetworkPolicy `protobuf:"bytes,12,opt,name=network_policy,json=networkPolicy,proto3" json:"network_policy,omitempty"`
	// KMS provider configuration.
	KmsProvider *KMSProvider `protobuf:"bytes,13,opt,name=kms_provider,json=kmsProvider,proto3" json:"kms_provider,omitempty"`
	// Types that are valid to be assigned to NetworkImplementation:
	//
	//	*CreateClusterRequest_Cilium
	NetworkImplementation      isCreateClusterRequest_NetworkImplementation `protobuf_oneof:"network_implementation"`
	WorkloadIdentityFederation *WorkloadIdentityFederationSpec              `protobuf:"bytes,15,opt,name=workload_identity_federation,json=workloadIdentityFederation,proto3" json:"workload_identity_federation,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *CreateClusterRequest) Reset() {
	*x = CreateClusterRequest{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterRequest) ProtoMessage() {}

func (x *CreateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterRequest.ProtoReflect.Descriptor instead.
func (*CreateClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{12}
}

func (x *CreateClusterRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *CreateClusterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateClusterRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateClusterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateClusterRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *CreateClusterRequest) GetMasterSpec() *MasterSpec {
	if x != nil {
		return x.MasterSpec
	}
	return nil
}

func (x *CreateClusterRequest) GetIpAllocationPolicy() *IPAllocationPolicy {
	if x != nil {
		return x.IpAllocationPolicy
	}
	return nil
}

func (x *CreateClusterRequest) GetInternetGateway() isCreateClusterRequest_InternetGateway {
	if x != nil {
		return x.InternetGateway
	}
	return nil
}

func (x *CreateClusterRequest) GetGatewayIpv4Address() string {
	if x != nil {
		if x, ok := x.InternetGateway.(*CreateClusterRequest_GatewayIpv4Address); ok {
			return x.GatewayIpv4Address
		}
	}
	return ""
}

func (x *CreateClusterRequest) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *CreateClusterRequest) GetNodeServiceAccountId() string {
	if x != nil {
		return x.NodeServiceAccountId
	}
	return ""
}

func (x *CreateClusterRequest) GetReleaseChannel() ReleaseChannel {
	if x != nil {
		return x.ReleaseChannel
	}
	return ReleaseChannel_RELEASE_CHANNEL_UNSPECIFIED
}

func (x *CreateClusterRequest) GetNetworkPolicy() *NetworkPolicy {
	if x != nil {
		return x.NetworkPolicy
	}
	return nil
}

func (x *CreateClusterRequest) GetKmsProvider() *KMSProvider {
	if x != nil {
		return x.KmsProvider
	}
	return nil
}

func (x *CreateClusterRequest) GetNetworkImplementation() isCreateClusterRequest_NetworkImplementation {
	if x != nil {
		return x.NetworkImplementation
	}
	return nil
}

func (x *CreateClusterRequest) GetCilium() *Cilium {
	if x != nil {
		if x, ok := x.NetworkImplementation.(*CreateClusterRequest_Cilium); ok {
			return x.Cilium
		}
	}
	return nil
}

func (x *CreateClusterRequest) GetWorkloadIdentityFederation() *WorkloadIdentityFederationSpec {
	if x != nil {
		return x.WorkloadIdentityFederation
	}
	return nil
}

type isCreateClusterRequest_InternetGateway interface {
	isCreateClusterRequest_InternetGateway()
}

type CreateClusterRequest_GatewayIpv4Address struct {
	// Gateway IPv4 address.
	GatewayIpv4Address string `protobuf:"bytes,8,opt,name=gateway_ipv4_address,json=gatewayIpv4Address,proto3,oneof"`
}

func (*CreateClusterRequest_GatewayIpv4Address) isCreateClusterRequest_InternetGateway() {}

type isCreateClusterRequest_NetworkImplementation interface {
	isCreateClusterRequest_NetworkImplementation()
}

type CreateClusterRequest_Cilium struct {
	Cilium *Cilium `protobuf:"bytes,14,opt,name=cilium,proto3,oneof"`
}

func (*CreateClusterRequest_Cilium) isCreateClusterRequest_NetworkImplementation() {}

type CreateClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Kubernetes cluster that is being created.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateClusterMetadata) Reset() {
	*x = CreateClusterMetadata{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterMetadata) ProtoMessage() {}

func (x *CreateClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterMetadata.ProtoReflect.Descriptor instead.
func (*CreateClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{13}
}

func (x *CreateClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type AutoUpgradeMasterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Kubernetes cluster that is being auto upgraded.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoUpgradeMasterMetadata) Reset() {
	*x = AutoUpgradeMasterMetadata{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoUpgradeMasterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoUpgradeMasterMetadata) ProtoMessage() {}

func (x *AutoUpgradeMasterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoUpgradeMasterMetadata.ProtoReflect.Descriptor instead.
func (*AutoUpgradeMasterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{14}
}

func (x *AutoUpgradeMasterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type ListClusterOperationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Kubernetes cluster to list operations for.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The maximum number of results per page that should be returned. If the number of available
	// results is larger than [page_size], the service returns a [ListClusterOperationsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set `page_token` to the
	// [ListClusterOperationsResponse.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	// Currently you can use filtering only on [Cluster.name] field.
	Filter        string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterOperationsRequest) Reset() {
	*x = ListClusterOperationsRequest{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterOperationsRequest) ProtoMessage() {}

func (x *ListClusterOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterOperationsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterOperationsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListClusterOperationsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListClusterOperationsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterOperationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListClusterOperationsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListClusterOperationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of operations for the specified Kubernetes cluster.
	Operations []*operation.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListClusterOperationsRequest.page_size], use the `next_page_token` as the value
	// for the [ListClusterOperationsRequest.page_token] query parameter in the next list request.
	// Each subsequent list request will have its own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterOperationsResponse) Reset() {
	*x = ListClusterOperationsResponse{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterOperationsResponse) ProtoMessage() {}

func (x *ListClusterOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterOperationsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterOperationsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{16}
}

func (x *ListClusterOperationsResponse) GetOperations() []*operation.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ListClusterOperationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListClusterNodeGroupsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Kubernetes cluster to list node groups in.
	// To get the Kubernetes cluster ID use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size],
	// the service returns a [ListClusterNodeGroupsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set `page_token` to the
	// [ListClusterNodeGroupsResponse.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	// Currently you can use filtering only on [Cluster.name] field.
	Filter        string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterNodeGroupsRequest) Reset() {
	*x = ListClusterNodeGroupsRequest{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterNodeGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterNodeGroupsRequest) ProtoMessage() {}

func (x *ListClusterNodeGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterNodeGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterNodeGroupsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListClusterNodeGroupsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListClusterNodeGroupsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterNodeGroupsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListClusterNodeGroupsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListClusterNodeGroupsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of node groups for the specified Kubernetes cluster.
	NodeGroups []*NodeGroup `protobuf:"bytes,1,rep,name=node_groups,json=nodeGroups,proto3" json:"node_groups,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListClusterNodeGroupsRequest.page_size], use
	// the `next_page_token` as the value
	// for the [ListClusterNodeGroupsRequest.page_token] query parameter
	// in the next list request. Each subsequent list request will have its own
	// `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterNodeGroupsResponse) Reset() {
	*x = ListClusterNodeGroupsResponse{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterNodeGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterNodeGroupsResponse) ProtoMessage() {}

func (x *ListClusterNodeGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterNodeGroupsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterNodeGroupsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListClusterNodeGroupsResponse) GetNodeGroups() []*NodeGroup {
	if x != nil {
		return x.NodeGroups
	}
	return nil
}

func (x *ListClusterNodeGroupsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListClusterNodesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Kubernetes cluster to list nodes in.
	// To get the Kubernetes cluster ID use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size],
	// the service returns a [ListClusterNodesResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set `page_token` to the
	// [ListClusterNodeGroupsResponse.next_page_token] returned by a previous list request.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterNodesRequest) Reset() {
	*x = ListClusterNodesRequest{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterNodesRequest) ProtoMessage() {}

func (x *ListClusterNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterNodesRequest.ProtoReflect.Descriptor instead.
func (*ListClusterNodesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{19}
}

func (x *ListClusterNodesRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListClusterNodesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterNodesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListClusterNodesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of nodes for the specified Kubernetes cluster.
	Nodes []*Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListClusterNodesRequest.page_size], use
	// the `next_page_token` as the value
	// for the [ListClusterNodesRequest.page_token] query parameter
	// in the next list request. Each subsequent list request will have its own
	// `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterNodesResponse) Reset() {
	*x = ListClusterNodesResponse{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterNodesResponse) ProtoMessage() {}

func (x *ListClusterNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterNodesResponse.ProtoReflect.Descriptor instead.
func (*ListClusterNodesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{20}
}

func (x *ListClusterNodesResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ListClusterNodesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type MasterSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to MasterType:
	//
	//	*MasterSpec_ZonalMasterSpec
	//	*MasterSpec_RegionalMasterSpec
	MasterType isMasterSpec_MasterType `protobuf_oneof:"master_type"`
	// Locations specification for Kubernetes control-plane (master) instances.
	// Works in conjunction with [etcd_cluster_size]. See it's documentation for details.
	// Possible combinations:
	// - 1 location and etcd_cluster_size = 1 - a single node cluster whose availability is limited by the availability of a single Compute Instance; downtime is expected during cluster updates.
	// - 1 location and etcd_cluster_size = 3 - a highly available cluster within a single availability zone; can survive the failure of a Compute Instance, a server, or an individual server rack.
	// - 3 location and etcd_cluster_size = 3 - a highly available cluster with each etcd instance located within separate availability zone; can survive the failure of a single availability zone.
	Locations []*LocationSpec `protobuf:"bytes,8,rep,name=locations,proto3" json:"locations,omitempty"`
	// Number of etcd nodes in cluster.
	// Works in conjunction with [locations]. See it's documentation for details.
	// Optional. If not set, will be assumed equal to the number of locations.
	EtcdClusterSize int64 `protobuf:"varint,9,opt,name=etcd_cluster_size,json=etcdClusterSize,proto3" json:"etcd_cluster_size,omitempty"`
	// Specification of parameters for external IPv4 networking.
	ExternalV4AddressSpec *ExternalAddressSpec `protobuf:"bytes,10,opt,name=external_v4_address_spec,json=externalV4AddressSpec,proto3" json:"external_v4_address_spec,omitempty"`
	// Specification of parameters for external IPv6 networking.
	ExternalV6AddressSpec *ExternalAddressSpec `protobuf:"bytes,11,opt,name=external_v6_address_spec,json=externalV6AddressSpec,proto3" json:"external_v6_address_spec,omitempty"`
	// Version of Kubernetes components that runs on the master.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Maintenance policy of the master.
	MaintenancePolicy *MasterMaintenancePolicy `protobuf:"bytes,4,opt,name=maintenance_policy,json=maintenancePolicy,proto3" json:"maintenance_policy,omitempty"`
	// Master security groups.
	SecurityGroupIds []string `protobuf:"bytes,6,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
	// Cloud Logging for master components.
	MasterLogging *MasterLogging `protobuf:"bytes,7,opt,name=master_logging,json=masterLogging,proto3" json:"master_logging,omitempty"`
	// Scale policy of the master.
	ScalePolicy   *MasterScalePolicySpec `protobuf:"bytes,12,opt,name=scale_policy,json=scalePolicy,proto3" json:"scale_policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MasterSpec) Reset() {
	*x = MasterSpec{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MasterSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterSpec) ProtoMessage() {}

func (x *MasterSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterSpec.ProtoReflect.Descriptor instead.
func (*MasterSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{21}
}

func (x *MasterSpec) GetMasterType() isMasterSpec_MasterType {
	if x != nil {
		return x.MasterType
	}
	return nil
}

func (x *MasterSpec) GetZonalMasterSpec() *ZonalMasterSpec {
	if x != nil {
		if x, ok := x.MasterType.(*MasterSpec_ZonalMasterSpec); ok {
			return x.ZonalMasterSpec
		}
	}
	return nil
}

func (x *MasterSpec) GetRegionalMasterSpec() *RegionalMasterSpec {
	if x != nil {
		if x, ok := x.MasterType.(*MasterSpec_RegionalMasterSpec); ok {
			return x.RegionalMasterSpec
		}
	}
	return nil
}

func (x *MasterSpec) GetLocations() []*LocationSpec {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *MasterSpec) GetEtcdClusterSize() int64 {
	if x != nil {
		return x.EtcdClusterSize
	}
	return 0
}

func (x *MasterSpec) GetExternalV4AddressSpec() *ExternalAddressSpec {
	if x != nil {
		return x.ExternalV4AddressSpec
	}
	return nil
}

func (x *MasterSpec) GetExternalV6AddressSpec() *ExternalAddressSpec {
	if x != nil {
		return x.ExternalV6AddressSpec
	}
	return nil
}

func (x *MasterSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MasterSpec) GetMaintenancePolicy() *MasterMaintenancePolicy {
	if x != nil {
		return x.MaintenancePolicy
	}
	return nil
}

func (x *MasterSpec) GetSecurityGroupIds() []string {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

func (x *MasterSpec) GetMasterLogging() *MasterLogging {
	if x != nil {
		return x.MasterLogging
	}
	return nil
}

func (x *MasterSpec) GetScalePolicy() *MasterScalePolicySpec {
	if x != nil {
		return x.ScalePolicy
	}
	return nil
}

type isMasterSpec_MasterType interface {
	isMasterSpec_MasterType()
}

type MasterSpec_ZonalMasterSpec struct {
	// Specification of the zonal master.
	ZonalMasterSpec *ZonalMasterSpec `protobuf:"bytes,1,opt,name=zonal_master_spec,json=zonalMasterSpec,proto3,oneof"`
}

type MasterSpec_RegionalMasterSpec struct {
	// Specification of the regional master.
	RegionalMasterSpec *RegionalMasterSpec `protobuf:"bytes,2,opt,name=regional_master_spec,json=regionalMasterSpec,proto3,oneof"`
}

func (*MasterSpec_ZonalMasterSpec) isMasterSpec_MasterType() {}

func (*MasterSpec_RegionalMasterSpec) isMasterSpec_MasterType() {}

type ZonalMasterSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the availability zone.
	ZoneId string `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// Specification of parameters for internal IPv4 networking.
	InternalV4AddressSpec *InternalAddressSpec `protobuf:"bytes,2,opt,name=internal_v4_address_spec,json=internalV4AddressSpec,proto3" json:"internal_v4_address_spec,omitempty"`
	// Specification of parameters for external IPv4 networking.
	ExternalV4AddressSpec *ExternalAddressSpec `protobuf:"bytes,3,opt,name=external_v4_address_spec,json=externalV4AddressSpec,proto3" json:"external_v4_address_spec,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ZonalMasterSpec) Reset() {
	*x = ZonalMasterSpec{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZonalMasterSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZonalMasterSpec) ProtoMessage() {}

func (x *ZonalMasterSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZonalMasterSpec.ProtoReflect.Descriptor instead.
func (*ZonalMasterSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{22}
}

func (x *ZonalMasterSpec) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *ZonalMasterSpec) GetInternalV4AddressSpec() *InternalAddressSpec {
	if x != nil {
		return x.InternalV4AddressSpec
	}
	return nil
}

func (x *ZonalMasterSpec) GetExternalV4AddressSpec() *ExternalAddressSpec {
	if x != nil {
		return x.ExternalV4AddressSpec
	}
	return nil
}

type RegionalMasterSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the availability zone where the master resides.
	RegionId string `protobuf:"bytes,1,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	// List of locations where the master will be allocated.
	Locations []*MasterLocation `protobuf:"bytes,2,rep,name=locations,proto3" json:"locations,omitempty"`
	// Specify to allocate a static public IP for the master.
	ExternalV4AddressSpec *ExternalAddressSpec `protobuf:"bytes,3,opt,name=external_v4_address_spec,json=externalV4AddressSpec,proto3" json:"external_v4_address_spec,omitempty"`
	// Specification of parameters for external IPv6 networking.
	ExternalV6AddressSpec *ExternalAddressSpec `protobuf:"bytes,4,opt,name=external_v6_address_spec,json=externalV6AddressSpec,proto3" json:"external_v6_address_spec,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RegionalMasterSpec) Reset() {
	*x = RegionalMasterSpec{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegionalMasterSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionalMasterSpec) ProtoMessage() {}

func (x *RegionalMasterSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionalMasterSpec.ProtoReflect.Descriptor instead.
func (*RegionalMasterSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{23}
}

func (x *RegionalMasterSpec) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *RegionalMasterSpec) GetLocations() []*MasterLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *RegionalMasterSpec) GetExternalV4AddressSpec() *ExternalAddressSpec {
	if x != nil {
		return x.ExternalV4AddressSpec
	}
	return nil
}

func (x *RegionalMasterSpec) GetExternalV6AddressSpec() *ExternalAddressSpec {
	if x != nil {
		return x.ExternalV6AddressSpec
	}
	return nil
}

type InternalAddressSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subnet. If no ID is specified, and there only one subnet in specified zone, an address in this subnet will be allocated.
	SubnetId      string `protobuf:"bytes,2,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InternalAddressSpec) Reset() {
	*x = InternalAddressSpec{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalAddressSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalAddressSpec) ProtoMessage() {}

func (x *InternalAddressSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalAddressSpec.ProtoReflect.Descriptor instead.
func (*InternalAddressSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{24}
}

func (x *InternalAddressSpec) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

type ExternalAddressSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// IP address.
	Address       string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExternalAddressSpec) Reset() {
	*x = ExternalAddressSpec{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalAddressSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalAddressSpec) ProtoMessage() {}

func (x *ExternalAddressSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalAddressSpec.ProtoReflect.Descriptor instead.
func (*ExternalAddressSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{25}
}

func (x *ExternalAddressSpec) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type MasterLocation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the availability zone.
	ZoneId string `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// If not specified and there is a single subnet in specified zone, address
	// in this subnet will be allocated.
	InternalV4AddressSpec *InternalAddressSpec `protobuf:"bytes,2,opt,name=internal_v4_address_spec,json=internalV4AddressSpec,proto3" json:"internal_v4_address_spec,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *MasterLocation) Reset() {
	*x = MasterLocation{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MasterLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterLocation) ProtoMessage() {}

func (x *MasterLocation) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterLocation.ProtoReflect.Descriptor instead.
func (*MasterLocation) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{26}
}

func (x *MasterLocation) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *MasterLocation) GetInternalV4AddressSpec() *InternalAddressSpec {
	if x != nil {
		return x.InternalV4AddressSpec
	}
	return nil
}

type LocationSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the availability zone where the master resides.
	ZoneId string `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// ID of the VPC network's subnet where the master resides.
	// If not specified and there is a single subnet in specified zone, address in this subnet will be allocated.
	SubnetId      string `protobuf:"bytes,2,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationSpec) Reset() {
	*x = LocationSpec{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationSpec) ProtoMessage() {}

func (x *LocationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationSpec.ProtoReflect.Descriptor instead.
func (*LocationSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{27}
}

func (x *LocationSpec) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *LocationSpec) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

type RescheduleMaintenanceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Kubernetes cluster to reschedule maintenance.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Time until which the update should be postponed.
	DelayedUntil  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=delayed_until,json=delayedUntil,proto3" json:"delayed_until,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RescheduleMaintenanceRequest) Reset() {
	*x = RescheduleMaintenanceRequest{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RescheduleMaintenanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescheduleMaintenanceRequest) ProtoMessage() {}

func (x *RescheduleMaintenanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescheduleMaintenanceRequest.ProtoReflect.Descriptor instead.
func (*RescheduleMaintenanceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{28}
}

func (x *RescheduleMaintenanceRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *RescheduleMaintenanceRequest) GetDelayedUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.DelayedUntil
	}
	return nil
}

type RescheduleMaintenanceMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterId     string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RescheduleMaintenanceMetadata) Reset() {
	*x = RescheduleMaintenanceMetadata{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RescheduleMaintenanceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescheduleMaintenanceMetadata) ProtoMessage() {}

func (x *RescheduleMaintenanceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescheduleMaintenanceMetadata.ProtoReflect.Descriptor instead.
func (*RescheduleMaintenanceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{29}
}

func (x *RescheduleMaintenanceMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type MasterScalePolicySpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ScaleType:
	//
	//	*MasterScalePolicySpec_AutoScale_
	ScaleType     isMasterScalePolicySpec_ScaleType `protobuf_oneof:"scale_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MasterScalePolicySpec) Reset() {
	*x = MasterScalePolicySpec{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MasterScalePolicySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterScalePolicySpec) ProtoMessage() {}

func (x *MasterScalePolicySpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterScalePolicySpec.ProtoReflect.Descriptor instead.
func (*MasterScalePolicySpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{30}
}

func (x *MasterScalePolicySpec) GetScaleType() isMasterScalePolicySpec_ScaleType {
	if x != nil {
		return x.ScaleType
	}
	return nil
}

func (x *MasterScalePolicySpec) GetAutoScale() *MasterScalePolicySpec_AutoScale {
	if x != nil {
		if x, ok := x.ScaleType.(*MasterScalePolicySpec_AutoScale_); ok {
			return x.AutoScale
		}
	}
	return nil
}

type isMasterScalePolicySpec_ScaleType interface {
	isMasterScalePolicySpec_ScaleType()
}

type MasterScalePolicySpec_AutoScale_ struct {
	AutoScale *MasterScalePolicySpec_AutoScale `protobuf:"bytes,2,opt,name=auto_scale,json=autoScale,proto3,oneof"`
}

func (*MasterScalePolicySpec_AutoScale_) isMasterScalePolicySpec_ScaleType() {}

type WorkloadIdentityFederationSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifies whether Workload Identity Federation is enabled.
	Enabled       bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkloadIdentityFederationSpec) Reset() {
	*x = WorkloadIdentityFederationSpec{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkloadIdentityFederationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadIdentityFederationSpec) ProtoMessage() {}

func (x *WorkloadIdentityFederationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadIdentityFederationSpec.ProtoReflect.Descriptor instead.
func (*WorkloadIdentityFederationSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{31}
}

func (x *WorkloadIdentityFederationSpec) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// Scalable master instance resources.
type MasterScalePolicySpec_AutoScale struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Preset of computing resources to be used as lower boundary for scaling.
	MinResourcePresetId string `protobuf:"bytes,1,opt,name=min_resource_preset_id,json=minResourcePresetId,proto3" json:"min_resource_preset_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MasterScalePolicySpec_AutoScale) Reset() {
	*x = MasterScalePolicySpec_AutoScale{}
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MasterScalePolicySpec_AutoScale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterScalePolicySpec_AutoScale) ProtoMessage() {}

func (x *MasterScalePolicySpec_AutoScale) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterScalePolicySpec_AutoScale.ProtoReflect.Descriptor instead.
func (*MasterScalePolicySpec_AutoScale) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP(), []int{30, 0}
}

func (x *MasterScalePolicySpec_AutoScale) GetMinResourcePresetId() string {
	if x != nil {
		return x.MinResourcePresetId
	}
	return ""
}

var File_yandex_cloud_k8s_v1_cluster_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_k8s_v1_cluster_service_proto_rawDesc = "" +
	"\n" +
	")yandex/cloud/k8s/v1/cluster_service.proto\x12\x13yandex.cloud.k8s.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/api/annotations.proto\x1a google/protobuf/field_mask.proto\x1a yandex/cloud/access/access.proto\x1a yandex/cloud/api/operation.proto\x1a!yandex/cloud/k8s/v1/cluster.proto\x1a\x1eyandex/cloud/k8s/v1/node.proto\x1a$yandex/cloud/k8s/v1/node_group.proto\x1a!yandex/cloud/k8s/v1/version.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\"8\n" +
	"\x11GetClusterRequest\x12#\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\tclusterId\"\xaf\x01\n" +
	"\x13ListClustersRequest\x12!\n" +
	"\tfolder_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bfolderId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x060-1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\"x\n" +
	"\x14ListClustersResponse\x128\n" +
	"\bclusters\x18\x01 \x03(\v2\x1c.yandex.cloud.k8s.v1.ClusterR\bclusters\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\";\n" +
	"\x14DeleteClusterRequest\x12#\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\tclusterId\"6\n" +
	"\x15DeleteClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"9\n" +
	"\x12StopClusterRequest\x12#\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\tclusterId\"4\n" +
	"\x13StopClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\":\n" +
	"\x13StartClusterRequest\x12#\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\tclusterId\"5\n" +
	"\x14StartClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\xcb\a\n" +
	"\x14UpdateClusterRequest\x12#\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\tclusterId\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x128\n" +
	"\x04name\x18\x03 \x01(\tB$\xf2\xc71 |[a-z]([-a-z0-9]{0,61}[a-z0-9])?R\x04name\x12+\n" +
	"\vdescription\x18\x04 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x92\x01\n" +
	"\x06labels\x18\x05 \x03(\v25.yandex.cloud.k8s.v1.UpdateClusterRequest.LabelsEntryBC\xf2\xc71\x0f[-_./\\@0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x1c\x12\x14[a-z][-_./\\@0-9a-z]*\x1a\x041-63R\x06labels\x12<\n" +
	"\x14gateway_ipv4_address\x18\x06 \x01(\tB\b\x8a\xc81\x04<=15H\x00R\x12gatewayIpv4Address\x12F\n" +
	"\vmaster_spec\x18\a \x01(\v2%.yandex.cloud.k8s.v1.MasterUpdateSpecR\n" +
	"masterSpec\x12,\n" +
	"\x12service_account_id\x18\t \x01(\tR\x10serviceAccountId\x125\n" +
	"\x17node_service_account_id\x18\b \x01(\tR\x14nodeServiceAccountId\x12I\n" +
	"\x0enetwork_policy\x18\n" +
	" \x01(\v2\".yandex.cloud.k8s.v1.NetworkPolicyR\rnetworkPolicy\x12Y\n" +
	"\x14ip_allocation_policy\x18\v \x01(\v2'.yandex.cloud.k8s.v1.IPAllocationPolicyR\x12ipAllocationPolicy\x12u\n" +
	"\x1cworkload_identity_federation\x18\f \x01(\v23.yandex.cloud.k8s.v1.WorkloadIdentityFederationSpecR\x1aworkloadIdentityFederation\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x12\n" +
	"\x10internet_gateway\"\x9d\x04\n" +
	"\x10MasterUpdateSpec\x12@\n" +
	"\aversion\x18\x01 \x01(\v2&.yandex.cloud.k8s.v1.UpdateVersionSpecR\aversion\x12[\n" +
	"\x12maintenance_policy\x18\x02 \x01(\v2,.yandex.cloud.k8s.v1.MasterMaintenancePolicyR\x11maintenancePolicy\x12,\n" +
	"\x12security_group_ids\x18\x03 \x03(\tR\x10securityGroupIds\x12I\n" +
	"\x0emaster_logging\x18\x04 \x01(\v2\".yandex.cloud.k8s.v1.MasterLoggingR\rmasterLogging\x12?\n" +
	"\tlocations\x18\x05 \x03(\v2!.yandex.cloud.k8s.v1.LocationSpecR\tlocations\x12a\n" +
	"\x18external_v6_address_spec\x18\x06 \x01(\v2(.yandex.cloud.k8s.v1.ExternalAddressSpecR\x15externalV6AddressSpec\x12M\n" +
	"\fscale_policy\x18\a \x01(\v2*.yandex.cloud.k8s.v1.MasterScalePolicySpecR\vscalePolicy\"6\n" +
	"\x15UpdateClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\x97\t\n" +
	"\x14CreateClusterRequest\x12!\n" +
	"\tfolder_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bfolderId\x128\n" +
	"\x04name\x18\x02 \x01(\tB$\xf2\xc71 |[a-z]([-a-z0-9]{0,61}[a-z0-9])?R\x04name\x12+\n" +
	"\vdescription\x18\x03 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x92\x01\n" +
	"\x06labels\x18\x04 \x03(\v25.yandex.cloud.k8s.v1.CreateClusterRequest.LabelsEntryBC\xf2\xc71\x0f[-_./\\@0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x1c\x12\x14[a-z][-_./\\@0-9a-z]*\x1a\x041-63R\x06labels\x12#\n" +
	"\n" +
	"network_id\x18\x05 \x01(\tB\x04\xe8\xc71\x01R\tnetworkId\x12F\n" +
	"\vmaster_spec\x18\x06 \x01(\v2\x1f.yandex.cloud.k8s.v1.MasterSpecB\x04\xe8\xc71\x01R\n" +
	"masterSpec\x12Y\n" +
	"\x14ip_allocation_policy\x18\a \x01(\v2'.yandex.cloud.k8s.v1.IPAllocationPolicyR\x12ipAllocationPolicy\x122\n" +
	"\x14gateway_ipv4_address\x18\b \x01(\tH\x00R\x12gatewayIpv4Address\x122\n" +
	"\x12service_account_id\x18\t \x01(\tB\x04\xe8\xc71\x01R\x10serviceAccountId\x12;\n" +
	"\x17node_service_account_id\x18\n" +
	" \x01(\tB\x04\xe8\xc71\x01R\x14nodeServiceAccountId\x12L\n" +
	"\x0frelease_channel\x18\v \x01(\x0e2#.yandex.cloud.k8s.v1.ReleaseChannelR\x0ereleaseChannel\x12I\n" +
	"\x0enetwork_policy\x18\f \x01(\v2\".yandex.cloud.k8s.v1.NetworkPolicyR\rnetworkPolicy\x12C\n" +
	"\fkms_provider\x18\r \x01(\v2 .yandex.cloud.k8s.v1.KMSProviderR\vkmsProvider\x125\n" +
	"\x06cilium\x18\x0e \x01(\v2\x1b.yandex.cloud.k8s.v1.CiliumH\x01R\x06cilium\x12u\n" +
	"\x1cworkload_identity_federation\x18\x0f \x01(\v23.yandex.cloud.k8s.v1.WorkloadIdentityFederationSpecR\x1aworkloadIdentityFederation\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x12\n" +
	"\x10internet_gatewayB\x18\n" +
	"\x16network_implementation\"6\n" +
	"\x15CreateClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\":\n" +
	"\x19AutoUpgradeMasterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\xba\x01\n" +
	"\x1cListClusterOperationsRequest\x12#\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\tclusterId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x060-1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\"\x8a\x01\n" +
	"\x1dListClusterOperationsResponse\x12A\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2!.yandex.cloud.operation.OperationR\n" +
	"operations\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xba\x01\n" +
	"\x1cListClusterNodeGroupsRequest\x12#\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\tclusterId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x060-1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\"\x88\x01\n" +
	"\x1dListClusterNodeGroupsResponse\x12?\n" +
	"\vnode_groups\x18\x01 \x03(\v2\x1e.yandex.cloud.k8s.v1.NodeGroupR\n" +
	"nodeGroups\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x91\x01\n" +
	"\x17ListClusterNodesRequest\x12#\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\tclusterId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x060-1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\"s\n" +
	"\x18ListClusterNodesResponse\x12/\n" +
	"\x05nodes\x18\x01 \x03(\v2\x19.yandex.cloud.k8s.v1.NodeR\x05nodes\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xcf\x06\n" +
	"\n" +
	"MasterSpec\x12R\n" +
	"\x11zonal_master_spec\x18\x01 \x01(\v2$.yandex.cloud.k8s.v1.ZonalMasterSpecH\x00R\x0fzonalMasterSpec\x12[\n" +
	"\x14regional_master_spec\x18\x02 \x01(\v2'.yandex.cloud.k8s.v1.RegionalMasterSpecH\x00R\x12regionalMasterSpec\x12?\n" +
	"\tlocations\x18\b \x03(\v2!.yandex.cloud.k8s.v1.LocationSpecR\tlocations\x125\n" +
	"\x11etcd_cluster_size\x18\t \x01(\x03B\t\xfa\xc71\x050,1,3R\x0fetcdClusterSize\x12a\n" +
	"\x18external_v4_address_spec\x18\n" +
	" \x01(\v2(.yandex.cloud.k8s.v1.ExternalAddressSpecR\x15externalV4AddressSpec\x12a\n" +
	"\x18external_v6_address_spec\x18\v \x01(\v2(.yandex.cloud.k8s.v1.ExternalAddressSpecR\x15externalV6AddressSpec\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12[\n" +
	"\x12maintenance_policy\x18\x04 \x01(\v2,.yandex.cloud.k8s.v1.MasterMaintenancePolicyR\x11maintenancePolicy\x12,\n" +
	"\x12security_group_ids\x18\x06 \x03(\tR\x10securityGroupIds\x12I\n" +
	"\x0emaster_logging\x18\a \x01(\v2\".yandex.cloud.k8s.v1.MasterLoggingR\rmasterLogging\x12M\n" +
	"\fscale_policy\x18\f \x01(\v2*.yandex.cloud.k8s.v1.MasterScalePolicySpecR\vscalePolicyB\r\n" +
	"\vmaster_typeJ\x04\b\x05\x10\x06\"\xf6\x01\n" +
	"\x0fZonalMasterSpec\x12\x1d\n" +
	"\azone_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x06zoneId\x12a\n" +
	"\x18internal_v4_address_spec\x18\x02 \x01(\v2(.yandex.cloud.k8s.v1.InternalAddressSpecR\x15internalV4AddressSpec\x12a\n" +
	"\x18external_v4_address_spec\x18\x03 \x01(\v2(.yandex.cloud.k8s.v1.ExternalAddressSpecR\x15externalV4AddressSpec\"\xc0\x02\n" +
	"\x12RegionalMasterSpec\x12!\n" +
	"\tregion_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bregionId\x12A\n" +
	"\tlocations\x18\x02 \x03(\v2#.yandex.cloud.k8s.v1.MasterLocationR\tlocations\x12a\n" +
	"\x18external_v4_address_spec\x18\x03 \x01(\v2(.yandex.cloud.k8s.v1.ExternalAddressSpecR\x15externalV4AddressSpec\x12a\n" +
	"\x18external_v6_address_spec\x18\x04 \x01(\v2(.yandex.cloud.k8s.v1.ExternalAddressSpecR\x15externalV6AddressSpec\"2\n" +
	"\x13InternalAddressSpec\x12\x1b\n" +
	"\tsubnet_id\x18\x02 \x01(\tR\bsubnetId\"/\n" +
	"\x13ExternalAddressSpec\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\"\x92\x01\n" +
	"\x0eMasterLocation\x12\x1d\n" +
	"\azone_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x06zoneId\x12a\n" +
	"\x18internal_v4_address_spec\x18\x02 \x01(\v2(.yandex.cloud.k8s.v1.InternalAddressSpecR\x15internalV4AddressSpec\"J\n" +
	"\fLocationSpec\x12\x1d\n" +
	"\azone_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x06zoneId\x12\x1b\n" +
	"\tsubnet_id\x18\x02 \x01(\tR\bsubnetId\"\x8a\x01\n" +
	"\x1cRescheduleMaintenanceRequest\x12#\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\tclusterId\x12E\n" +
	"\rdelayed_until\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampB\x04\xe8\xc71\x01R\fdelayedUntil\">\n" +
	"\x1dRescheduleMaintenanceMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\xd0\x01\n" +
	"\x15MasterScalePolicySpec\x12U\n" +
	"\n" +
	"auto_scale\x18\x02 \x01(\v24.yandex.cloud.k8s.v1.MasterScalePolicySpec.AutoScaleH\x00R\tautoScale\x1aF\n" +
	"\tAutoScale\x129\n" +
	"\x16min_resource_preset_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x13minResourcePresetIdB\x12\n" +
	"\n" +
	"scale_type\x12\x04\xc0\xc11\x01J\x04\b\x01\x10\x02\":\n" +
	"\x1eWorkloadIdentityFederationSpec\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled2\x91\x15\n" +
	"\x0eClusterService\x12\x81\x01\n" +
	"\x03Get\x12&.yandex.cloud.k8s.v1.GetClusterRequest\x1a\x1c.yandex.cloud.k8s.v1.Cluster\"4\x82\xd3\xe4\x93\x02.\x12,/managed-kubernetes/v1/clusters/{cluster_id}\x12\x84\x01\n" +
	"\x04List\x12(.yandex.cloud.k8s.v1.ListClustersRequest\x1a).yandex.cloud.k8s.v1.ListClustersResponse\"'\x82\xd3\xe4\x93\x02!\x12\x1f/managed-kubernetes/v1/clusters\x12\xa6\x01\n" +
	"\x06Create\x12).yandex.cloud.k8s.v1.CreateClusterRequest\x1a!.yandex.cloud.operation.Operation\"N\xb2\xd2* \n" +
	"\x15CreateClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/managed-kubernetes/v1/clusters\x12\xb3\x01\n" +
	"\x06Update\x12).yandex.cloud.k8s.v1.UpdateClusterRequest\x1a!.yandex.cloud.operation.Operation\"[\xb2\xd2* \n" +
	"\x15UpdateClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x021:\x01*2,/managed-kubernetes/v1/clusters/{cluster_id}\x12\xbe\x01\n" +
	"\x06Delete\x12).yandex.cloud.k8s.v1.DeleteClusterRequest\x1a!.yandex.cloud.operation.Operation\"f\xb2\xd2*.\n" +
	"\x15DeleteClusterMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02.*,/managed-kubernetes/v1/clusters/{cluster_id}\x12\xb2\x01\n" +
	"\x04Stop\x12'.yandex.cloud.k8s.v1.StopClusterRequest\x1a!.yandex.cloud.operation.Operation\"^\xb2\xd2*\x1e\n" +
	"\x13StopClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x026:\x01*\"1/managed-kubernetes/v1/clusters/{cluster_id}:stop\x12\xb6\x01\n" +
	"\x05Start\x12(.yandex.cloud.k8s.v1.StartClusterRequest\x1a!.yandex.cloud.operation.Operation\"`\xb2\xd2*\x1f\n" +
	"\x14StartClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x027:\x01*\"2/managed-kubernetes/v1/clusters/{cluster_id}:start\x12\xf8\x01\n" +
	"\x15RescheduleMaintenance\x121.yandex.cloud.k8s.v1.RescheduleMaintenanceRequest\x1a!.yandex.cloud.operation.Operation\"\x88\x01\xb2\xd2*6\n" +
	"\x1dRescheduleMaintenanceMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02H:\x01*\"C/managed-kubernetes/v1/clusters/{cluster_id}:reschedule-maintenance\x12\xb8\x01\n" +
	"\x0eListNodeGroups\x121.yandex.cloud.k8s.v1.ListClusterNodeGroupsRequest\x1a2.yandex.cloud.k8s.v1.ListClusterNodeGroupsResponse\"?\x82\xd3\xe4\x93\x029\x127/managed-kubernetes/v1/clusters/{cluster_id}/nodeGroups\x12\xb8\x01\n" +
	"\x0eListOperations\x121.yandex.cloud.k8s.v1.ListClusterOperationsRequest\x1a2.yandex.cloud.k8s.v1.ListClusterOperationsResponse\"?\x82\xd3\xe4\x93\x029\x127/managed-kubernetes/v1/clusters/{cluster_id}/operations\x12\xa4\x01\n" +
	"\tListNodes\x12,.yandex.cloud.k8s.v1.ListClusterNodesRequest\x1a-.yandex.cloud.k8s.v1.ListClusterNodesResponse\":\x82\xd3\xe4\x93\x024\x122/managed-kubernetes/v1/clusters/{cluster_id}/nodes\x12\xbf\x01\n" +
	"\x12ListAccessBindings\x12..yandex.cloud.access.ListAccessBindingsRequest\x1a/.yandex.cloud.access.ListAccessBindingsResponse\"H\x82\xd3\xe4\x93\x02B\x12@/managed-kubernetes/v1/clusters/{resource_id}:listAccessBindings\x12\xfe\x01\n" +
	"\x11SetAccessBindings\x12-.yandex.cloud.access.SetAccessBindingsRequest\x1a!.yandex.cloud.operation.Operation\"\x96\x01\xb2\xd2*H\n" +
	" access.SetAccessBindingsMetadata\x12$access.AccessBindingsOperationResult\x82\xd3\xe4\x93\x02D:\x01*\"?/managed-kubernetes/v1/clusters/{resource_id}:setAccessBindings\x12\x8a\x02\n" +
	"\x14UpdateAccessBindings\x120.yandex.cloud.access.UpdateAccessBindingsRequest\x1a!.yandex.cloud.operation.Operation\"\x9c\x01\xb2\xd2*K\n" +
	"#access.UpdateAccessBindingsMetadata\x12$access.AccessBindingsOperationResult\x82\xd3\xe4\x93\x02G:\x01*2B/managed-kubernetes/v1/clusters/{resource_id}:updateAccessBindingsBV\n" +
	"\x17yandex.cloud.api.k8s.v1Z;github.com/yandex-cloud/go-genproto/yandex/cloud/k8s/v1;k8sb\x06proto3"

var (
	file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescData []byte
)

func file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_k8s_v1_cluster_service_proto_rawDesc), len(file_yandex_cloud_k8s_v1_cluster_service_proto_rawDesc)))
	})
	return file_yandex_cloud_k8s_v1_cluster_service_proto_rawDescData
}

var file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_yandex_cloud_k8s_v1_cluster_service_proto_goTypes = []any{
	(*GetClusterRequest)(nil),                  // 0: yandex.cloud.k8s.v1.GetClusterRequest
	(*ListClustersRequest)(nil),                // 1: yandex.cloud.k8s.v1.ListClustersRequest
	(*ListClustersResponse)(nil),               // 2: yandex.cloud.k8s.v1.ListClustersResponse
	(*DeleteClusterRequest)(nil),               // 3: yandex.cloud.k8s.v1.DeleteClusterRequest
	(*DeleteClusterMetadata)(nil),              // 4: yandex.cloud.k8s.v1.DeleteClusterMetadata
	(*StopClusterRequest)(nil),                 // 5: yandex.cloud.k8s.v1.StopClusterRequest
	(*StopClusterMetadata)(nil),                // 6: yandex.cloud.k8s.v1.StopClusterMetadata
	(*StartClusterRequest)(nil),                // 7: yandex.cloud.k8s.v1.StartClusterRequest
	(*StartClusterMetadata)(nil),               // 8: yandex.cloud.k8s.v1.StartClusterMetadata
	(*UpdateClusterRequest)(nil),               // 9: yandex.cloud.k8s.v1.UpdateClusterRequest
	(*MasterUpdateSpec)(nil),                   // 10: yandex.cloud.k8s.v1.MasterUpdateSpec
	(*UpdateClusterMetadata)(nil),              // 11: yandex.cloud.k8s.v1.UpdateClusterMetadata
	(*CreateClusterRequest)(nil),               // 12: yandex.cloud.k8s.v1.CreateClusterRequest
	(*CreateClusterMetadata)(nil),              // 13: yandex.cloud.k8s.v1.CreateClusterMetadata
	(*AutoUpgradeMasterMetadata)(nil),          // 14: yandex.cloud.k8s.v1.AutoUpgradeMasterMetadata
	(*ListClusterOperationsRequest)(nil),       // 15: yandex.cloud.k8s.v1.ListClusterOperationsRequest
	(*ListClusterOperationsResponse)(nil),      // 16: yandex.cloud.k8s.v1.ListClusterOperationsResponse
	(*ListClusterNodeGroupsRequest)(nil),       // 17: yandex.cloud.k8s.v1.ListClusterNodeGroupsRequest
	(*ListClusterNodeGroupsResponse)(nil),      // 18: yandex.cloud.k8s.v1.ListClusterNodeGroupsResponse
	(*ListClusterNodesRequest)(nil),            // 19: yandex.cloud.k8s.v1.ListClusterNodesRequest
	(*ListClusterNodesResponse)(nil),           // 20: yandex.cloud.k8s.v1.ListClusterNodesResponse
	(*MasterSpec)(nil),                         // 21: yandex.cloud.k8s.v1.MasterSpec
	(*ZonalMasterSpec)(nil),                    // 22: yandex.cloud.k8s.v1.ZonalMasterSpec
	(*RegionalMasterSpec)(nil),                 // 23: yandex.cloud.k8s.v1.RegionalMasterSpec
	(*InternalAddressSpec)(nil),                // 24: yandex.cloud.k8s.v1.InternalAddressSpec
	(*ExternalAddressSpec)(nil),                // 25: yandex.cloud.k8s.v1.ExternalAddressSpec
	(*MasterLocation)(nil),                     // 26: yandex.cloud.k8s.v1.MasterLocation
	(*LocationSpec)(nil),                       // 27: yandex.cloud.k8s.v1.LocationSpec
	(*RescheduleMaintenanceRequest)(nil),       // 28: yandex.cloud.k8s.v1.RescheduleMaintenanceRequest
	(*RescheduleMaintenanceMetadata)(nil),      // 29: yandex.cloud.k8s.v1.RescheduleMaintenanceMetadata
	(*MasterScalePolicySpec)(nil),              // 30: yandex.cloud.k8s.v1.MasterScalePolicySpec
	(*WorkloadIdentityFederationSpec)(nil),     // 31: yandex.cloud.k8s.v1.WorkloadIdentityFederationSpec
	nil,                                        // 32: yandex.cloud.k8s.v1.UpdateClusterRequest.LabelsEntry
	nil,                                        // 33: yandex.cloud.k8s.v1.CreateClusterRequest.LabelsEntry
	(*MasterScalePolicySpec_AutoScale)(nil),    // 34: yandex.cloud.k8s.v1.MasterScalePolicySpec.AutoScale
	(*Cluster)(nil),                            // 35: yandex.cloud.k8s.v1.Cluster
	(*fieldmaskpb.FieldMask)(nil),              // 36: google.protobuf.FieldMask
	(*NetworkPolicy)(nil),                      // 37: yandex.cloud.k8s.v1.NetworkPolicy
	(*IPAllocationPolicy)(nil),                 // 38: yandex.cloud.k8s.v1.IPAllocationPolicy
	(*UpdateVersionSpec)(nil),                  // 39: yandex.cloud.k8s.v1.UpdateVersionSpec
	(*MasterMaintenancePolicy)(nil),            // 40: yandex.cloud.k8s.v1.MasterMaintenancePolicy
	(*MasterLogging)(nil),                      // 41: yandex.cloud.k8s.v1.MasterLogging
	(ReleaseChannel)(0),                        // 42: yandex.cloud.k8s.v1.ReleaseChannel
	(*KMSProvider)(nil),                        // 43: yandex.cloud.k8s.v1.KMSProvider
	(*Cilium)(nil),                             // 44: yandex.cloud.k8s.v1.Cilium
	(*operation.Operation)(nil),                // 45: yandex.cloud.operation.Operation
	(*NodeGroup)(nil),                          // 46: yandex.cloud.k8s.v1.NodeGroup
	(*Node)(nil),                               // 47: yandex.cloud.k8s.v1.Node
	(*timestamppb.Timestamp)(nil),              // 48: google.protobuf.Timestamp
	(*access.ListAccessBindingsRequest)(nil),   // 49: yandex.cloud.access.ListAccessBindingsRequest
	(*access.SetAccessBindingsRequest)(nil),    // 50: yandex.cloud.access.SetAccessBindingsRequest
	(*access.UpdateAccessBindingsRequest)(nil), // 51: yandex.cloud.access.UpdateAccessBindingsRequest
	(*access.ListAccessBindingsResponse)(nil),  // 52: yandex.cloud.access.ListAccessBindingsResponse
}
var file_yandex_cloud_k8s_v1_cluster_service_proto_depIdxs = []int32{
	35, // 0: yandex.cloud.k8s.v1.ListClustersResponse.clusters:type_name -> yandex.cloud.k8s.v1.Cluster
	36, // 1: yandex.cloud.k8s.v1.UpdateClusterRequest.update_mask:type_name -> google.protobuf.FieldMask
	32, // 2: yandex.cloud.k8s.v1.UpdateClusterRequest.labels:type_name -> yandex.cloud.k8s.v1.UpdateClusterRequest.LabelsEntry
	10, // 3: yandex.cloud.k8s.v1.UpdateClusterRequest.master_spec:type_name -> yandex.cloud.k8s.v1.MasterUpdateSpec
	37, // 4: yandex.cloud.k8s.v1.UpdateClusterRequest.network_policy:type_name -> yandex.cloud.k8s.v1.NetworkPolicy
	38, // 5: yandex.cloud.k8s.v1.UpdateClusterRequest.ip_allocation_policy:type_name -> yandex.cloud.k8s.v1.IPAllocationPolicy
	31, // 6: yandex.cloud.k8s.v1.UpdateClusterRequest.workload_identity_federation:type_name -> yandex.cloud.k8s.v1.WorkloadIdentityFederationSpec
	39, // 7: yandex.cloud.k8s.v1.MasterUpdateSpec.version:type_name -> yandex.cloud.k8s.v1.UpdateVersionSpec
	40, // 8: yandex.cloud.k8s.v1.MasterUpdateSpec.maintenance_policy:type_name -> yandex.cloud.k8s.v1.MasterMaintenancePolicy
	41, // 9: yandex.cloud.k8s.v1.MasterUpdateSpec.master_logging:type_name -> yandex.cloud.k8s.v1.MasterLogging
	27, // 10: yandex.cloud.k8s.v1.MasterUpdateSpec.locations:type_name -> yandex.cloud.k8s.v1.LocationSpec
	25, // 11: yandex.cloud.k8s.v1.MasterUpdateSpec.external_v6_address_spec:type_name -> yandex.cloud.k8s.v1.ExternalAddressSpec
	30, // 12: yandex.cloud.k8s.v1.MasterUpdateSpec.scale_policy:type_name -> yandex.cloud.k8s.v1.MasterScalePolicySpec
	33, // 13: yandex.cloud.k8s.v1.CreateClusterRequest.labels:type_name -> yandex.cloud.k8s.v1.CreateClusterRequest.LabelsEntry
	21, // 14: yandex.cloud.k8s.v1.CreateClusterRequest.master_spec:type_name -> yandex.cloud.k8s.v1.MasterSpec
	38, // 15: yandex.cloud.k8s.v1.CreateClusterRequest.ip_allocation_policy:type_name -> yandex.cloud.k8s.v1.IPAllocationPolicy
	42, // 16: yandex.cloud.k8s.v1.CreateClusterRequest.release_channel:type_name -> yandex.cloud.k8s.v1.ReleaseChannel
	37, // 17: yandex.cloud.k8s.v1.CreateClusterRequest.network_policy:type_name -> yandex.cloud.k8s.v1.NetworkPolicy
	43, // 18: yandex.cloud.k8s.v1.CreateClusterRequest.kms_provider:type_name -> yandex.cloud.k8s.v1.KMSProvider
	44, // 19: yandex.cloud.k8s.v1.CreateClusterRequest.cilium:type_name -> yandex.cloud.k8s.v1.Cilium
	31, // 20: yandex.cloud.k8s.v1.CreateClusterRequest.workload_identity_federation:type_name -> yandex.cloud.k8s.v1.WorkloadIdentityFederationSpec
	45, // 21: yandex.cloud.k8s.v1.ListClusterOperationsResponse.operations:type_name -> yandex.cloud.operation.Operation
	46, // 22: yandex.cloud.k8s.v1.ListClusterNodeGroupsResponse.node_groups:type_name -> yandex.cloud.k8s.v1.NodeGroup
	47, // 23: yandex.cloud.k8s.v1.ListClusterNodesResponse.nodes:type_name -> yandex.cloud.k8s.v1.Node
	22, // 24: yandex.cloud.k8s.v1.MasterSpec.zonal_master_spec:type_name -> yandex.cloud.k8s.v1.ZonalMasterSpec
	23, // 25: yandex.cloud.k8s.v1.MasterSpec.regional_master_spec:type_name -> yandex.cloud.k8s.v1.RegionalMasterSpec
	27, // 26: yandex.cloud.k8s.v1.MasterSpec.locations:type_name -> yandex.cloud.k8s.v1.LocationSpec
	25, // 27: yandex.cloud.k8s.v1.MasterSpec.external_v4_address_spec:type_name -> yandex.cloud.k8s.v1.ExternalAddressSpec
	25, // 28: yandex.cloud.k8s.v1.MasterSpec.external_v6_address_spec:type_name -> yandex.cloud.k8s.v1.ExternalAddressSpec
	40, // 29: yandex.cloud.k8s.v1.MasterSpec.maintenance_policy:type_name -> yandex.cloud.k8s.v1.MasterMaintenancePolicy
	41, // 30: yandex.cloud.k8s.v1.MasterSpec.master_logging:type_name -> yandex.cloud.k8s.v1.MasterLogging
	30, // 31: yandex.cloud.k8s.v1.MasterSpec.scale_policy:type_name -> yandex.cloud.k8s.v1.MasterScalePolicySpec
	24, // 32: yandex.cloud.k8s.v1.ZonalMasterSpec.internal_v4_address_spec:type_name -> yandex.cloud.k8s.v1.InternalAddressSpec
	25, // 33: yandex.cloud.k8s.v1.ZonalMasterSpec.external_v4_address_spec:type_name -> yandex.cloud.k8s.v1.ExternalAddressSpec
	26, // 34: yandex.cloud.k8s.v1.RegionalMasterSpec.locations:type_name -> yandex.cloud.k8s.v1.MasterLocation
	25, // 35: yandex.cloud.k8s.v1.RegionalMasterSpec.external_v4_address_spec:type_name -> yandex.cloud.k8s.v1.ExternalAddressSpec
	25, // 36: yandex.cloud.k8s.v1.RegionalMasterSpec.external_v6_address_spec:type_name -> yandex.cloud.k8s.v1.ExternalAddressSpec
	24, // 37: yandex.cloud.k8s.v1.MasterLocation.internal_v4_address_spec:type_name -> yandex.cloud.k8s.v1.InternalAddressSpec
	48, // 38: yandex.cloud.k8s.v1.RescheduleMaintenanceRequest.delayed_until:type_name -> google.protobuf.Timestamp
	34, // 39: yandex.cloud.k8s.v1.MasterScalePolicySpec.auto_scale:type_name -> yandex.cloud.k8s.v1.MasterScalePolicySpec.AutoScale
	0,  // 40: yandex.cloud.k8s.v1.ClusterService.Get:input_type -> yandex.cloud.k8s.v1.GetClusterRequest
	1,  // 41: yandex.cloud.k8s.v1.ClusterService.List:input_type -> yandex.cloud.k8s.v1.ListClustersRequest
	12, // 42: yandex.cloud.k8s.v1.ClusterService.Create:input_type -> yandex.cloud.k8s.v1.CreateClusterRequest
	9,  // 43: yandex.cloud.k8s.v1.ClusterService.Update:input_type -> yandex.cloud.k8s.v1.UpdateClusterRequest
	3,  // 44: yandex.cloud.k8s.v1.ClusterService.Delete:input_type -> yandex.cloud.k8s.v1.DeleteClusterRequest
	5,  // 45: yandex.cloud.k8s.v1.ClusterService.Stop:input_type -> yandex.cloud.k8s.v1.StopClusterRequest
	7,  // 46: yandex.cloud.k8s.v1.ClusterService.Start:input_type -> yandex.cloud.k8s.v1.StartClusterRequest
	28, // 47: yandex.cloud.k8s.v1.ClusterService.RescheduleMaintenance:input_type -> yandex.cloud.k8s.v1.RescheduleMaintenanceRequest
	17, // 48: yandex.cloud.k8s.v1.ClusterService.ListNodeGroups:input_type -> yandex.cloud.k8s.v1.ListClusterNodeGroupsRequest
	15, // 49: yandex.cloud.k8s.v1.ClusterService.ListOperations:input_type -> yandex.cloud.k8s.v1.ListClusterOperationsRequest
	19, // 50: yandex.cloud.k8s.v1.ClusterService.ListNodes:input_type -> yandex.cloud.k8s.v1.ListClusterNodesRequest
	49, // 51: yandex.cloud.k8s.v1.ClusterService.ListAccessBindings:input_type -> yandex.cloud.access.ListAccessBindingsRequest
	50, // 52: yandex.cloud.k8s.v1.ClusterService.SetAccessBindings:input_type -> yandex.cloud.access.SetAccessBindingsRequest
	51, // 53: yandex.cloud.k8s.v1.ClusterService.UpdateAccessBindings:input_type -> yandex.cloud.access.UpdateAccessBindingsRequest
	35, // 54: yandex.cloud.k8s.v1.ClusterService.Get:output_type -> yandex.cloud.k8s.v1.Cluster
	2,  // 55: yandex.cloud.k8s.v1.ClusterService.List:output_type -> yandex.cloud.k8s.v1.ListClustersResponse
	45, // 56: yandex.cloud.k8s.v1.ClusterService.Create:output_type -> yandex.cloud.operation.Operation
	45, // 57: yandex.cloud.k8s.v1.ClusterService.Update:output_type -> yandex.cloud.operation.Operation
	45, // 58: yandex.cloud.k8s.v1.ClusterService.Delete:output_type -> yandex.cloud.operation.Operation
	45, // 59: yandex.cloud.k8s.v1.ClusterService.Stop:output_type -> yandex.cloud.operation.Operation
	45, // 60: yandex.cloud.k8s.v1.ClusterService.Start:output_type -> yandex.cloud.operation.Operation
	45, // 61: yandex.cloud.k8s.v1.ClusterService.RescheduleMaintenance:output_type -> yandex.cloud.operation.Operation
	18, // 62: yandex.cloud.k8s.v1.ClusterService.ListNodeGroups:output_type -> yandex.cloud.k8s.v1.ListClusterNodeGroupsResponse
	16, // 63: yandex.cloud.k8s.v1.ClusterService.ListOperations:output_type -> yandex.cloud.k8s.v1.ListClusterOperationsResponse
	20, // 64: yandex.cloud.k8s.v1.ClusterService.ListNodes:output_type -> yandex.cloud.k8s.v1.ListClusterNodesResponse
	52, // 65: yandex.cloud.k8s.v1.ClusterService.ListAccessBindings:output_type -> yandex.cloud.access.ListAccessBindingsResponse
	45, // 66: yandex.cloud.k8s.v1.ClusterService.SetAccessBindings:output_type -> yandex.cloud.operation.Operation
	45, // 67: yandex.cloud.k8s.v1.ClusterService.UpdateAccessBindings:output_type -> yandex.cloud.operation.Operation
	54, // [54:68] is the sub-list for method output_type
	40, // [40:54] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_yandex_cloud_k8s_v1_cluster_service_proto_init() }
func file_yandex_cloud_k8s_v1_cluster_service_proto_init() {
	if File_yandex_cloud_k8s_v1_cluster_service_proto != nil {
		return
	}
	file_yandex_cloud_k8s_v1_cluster_proto_init()
	file_yandex_cloud_k8s_v1_node_proto_init()
	file_yandex_cloud_k8s_v1_node_group_proto_init()
	file_yandex_cloud_k8s_v1_version_proto_init()
	file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[9].OneofWrappers = []any{
		(*UpdateClusterRequest_GatewayIpv4Address)(nil),
	}
	file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[12].OneofWrappers = []any{
		(*CreateClusterRequest_GatewayIpv4Address)(nil),
		(*CreateClusterRequest_Cilium)(nil),
	}
	file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[21].OneofWrappers = []any{
		(*MasterSpec_ZonalMasterSpec)(nil),
		(*MasterSpec_RegionalMasterSpec)(nil),
	}
	file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes[30].OneofWrappers = []any{
		(*MasterScalePolicySpec_AutoScale_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_k8s_v1_cluster_service_proto_rawDesc), len(file_yandex_cloud_k8s_v1_cluster_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_k8s_v1_cluster_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_k8s_v1_cluster_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_k8s_v1_cluster_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_k8s_v1_cluster_service_proto = out.File
	file_yandex_cloud_k8s_v1_cluster_service_proto_goTypes = nil
	file_yandex_cloud_k8s_v1_cluster_service_proto_depIdxs = nil
}

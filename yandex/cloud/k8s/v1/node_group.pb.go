// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/k8s/v1/node_group.proto

package k8s

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeGroup_Status int32

const (
	NodeGroup_STATUS_UNSPECIFIED NodeGroup_Status = 0
	// Node group is waiting for resources to be allocated.
	NodeGroup_PROVISIONING NodeGroup_Status = 1
	// Node group is running.
	NodeGroup_RUNNING NodeGroup_Status = 2
	// Node group is waiting for some work to be done, such as upgrading node software.
	NodeGroup_RECONCILING NodeGroup_Status = 3
	// Node group is being stopped.
	NodeGroup_STOPPING NodeGroup_Status = 4
	// Node group stopped.
	NodeGroup_STOPPED NodeGroup_Status = 5
	// Node group is being deleted.
	NodeGroup_DELETING NodeGroup_Status = 6
	// Node group is being started.
	NodeGroup_STARTING NodeGroup_Status = 7
)

// Enum value maps for NodeGroup_Status.
var (
	NodeGroup_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "PROVISIONING",
		2: "RUNNING",
		3: "RECONCILING",
		4: "STOPPING",
		5: "STOPPED",
		6: "DELETING",
		7: "STARTING",
	}
	NodeGroup_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"PROVISIONING":       1,
		"RUNNING":            2,
		"RECONCILING":        3,
		"STOPPING":           4,
		"STOPPED":            5,
		"DELETING":           6,
		"STARTING":           7,
	}
)

func (x NodeGroup_Status) Enum() *NodeGroup_Status {
	p := new(NodeGroup_Status)
	*p = x
	return p
}

func (x NodeGroup_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeGroup_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_k8s_v1_node_group_proto_enumTypes[0].Descriptor()
}

func (NodeGroup_Status) Type() protoreflect.EnumType {
	return &file_yandex_cloud_k8s_v1_node_group_proto_enumTypes[0]
}

func (x NodeGroup_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeGroup_Status.Descriptor instead.
func (NodeGroup_Status) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_node_group_proto_rawDescGZIP(), []int{0, 0}
}

type NodeGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the node group.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the cluster that the node group belongs to.
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Creation timestamp.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Name of the node group.
	// The name is unique within the folder.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the node group. 0-256 characters long.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels as `key:value` pairs. Maximum of 64 per resource.
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Status of the node group.
	Status NodeGroup_Status `protobuf:"varint,7,opt,name=status,proto3,enum=yandex.cloud.k8s.v1.NodeGroup_Status" json:"status,omitempty"`
	// Node template that specifies parameters of the compute instances for the node group.
	NodeTemplate *NodeTemplate `protobuf:"bytes,8,opt,name=node_template,json=nodeTemplate,proto3" json:"node_template,omitempty"`
	// Scale policy of the node group.  For more information, see [Scaling policy](/docs/compute/concepts/instance-groups/policies#scale-policy).
	ScalePolicy *ScalePolicy `protobuf:"bytes,9,opt,name=scale_policy,json=scalePolicy,proto3" json:"scale_policy,omitempty"`
	// Allocation policy by which resources for node group are allocated to zones and regions.
	AllocationPolicy *NodeGroupAllocationPolicy `protobuf:"bytes,10,opt,name=allocation_policy,json=allocationPolicy,proto3" json:"allocation_policy,omitempty"`
	// Deploy policy according to which the updates are rolled out.
	DeployPolicy *DeployPolicy `protobuf:"bytes,18,opt,name=deploy_policy,json=deployPolicy,proto3" json:"deploy_policy,omitempty"`
	// ID of the managed instance group associated with this node group.
	InstanceGroupId string `protobuf:"bytes,11,opt,name=instance_group_id,json=instanceGroupId,proto3" json:"instance_group_id,omitempty"`
	// Version of Kubernetes components that runs on the nodes.
	// Deprecated. Use version_info.current_version.
	NodeVersion string `protobuf:"bytes,12,opt,name=node_version,json=nodeVersion,proto3" json:"node_version,omitempty"`
	// Detailed information about the Kubernetes version that is running on the node.
	VersionInfo *VersionInfo `protobuf:"bytes,13,opt,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"`
	// Maintenance policy of the node group.
	MaintenancePolicy *NodeGroupMaintenancePolicy `protobuf:"bytes,14,opt,name=maintenance_policy,json=maintenancePolicy,proto3" json:"maintenance_policy,omitempty"`
	// Support for unsafe sysctl parameters. For more details see [documentation](https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/).
	AllowedUnsafeSysctls []string `protobuf:"bytes,15,rep,name=allowed_unsafe_sysctls,json=allowedUnsafeSysctls,proto3" json:"allowed_unsafe_sysctls,omitempty"`
	// Taints that are applied to the nodes of the node group at creation time.
	NodeTaints []*Taint `protobuf:"bytes,16,rep,name=node_taints,json=nodeTaints,proto3" json:"node_taints,omitempty"`
	// Labels that are assigned to the nodes of the node group at creation time.
	NodeLabels    map[string]string `protobuf:"bytes,17,rep,name=node_labels,json=nodeLabels,proto3" json:"node_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeGroup) Reset() {
	*x = NodeGroup{}
	mi := &file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeGroup) ProtoMessage() {}

func (x *NodeGroup) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeGroup.ProtoReflect.Descriptor instead.
func (*NodeGroup) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_node_group_proto_rawDescGZIP(), []int{0}
}

func (x *NodeGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NodeGroup) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *NodeGroup) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NodeGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NodeGroup) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *NodeGroup) GetStatus() NodeGroup_Status {
	if x != nil {
		return x.Status
	}
	return NodeGroup_STATUS_UNSPECIFIED
}

func (x *NodeGroup) GetNodeTemplate() *NodeTemplate {
	if x != nil {
		return x.NodeTemplate
	}
	return nil
}

func (x *NodeGroup) GetScalePolicy() *ScalePolicy {
	if x != nil {
		return x.ScalePolicy
	}
	return nil
}

func (x *NodeGroup) GetAllocationPolicy() *NodeGroupAllocationPolicy {
	if x != nil {
		return x.AllocationPolicy
	}
	return nil
}

func (x *NodeGroup) GetDeployPolicy() *DeployPolicy {
	if x != nil {
		return x.DeployPolicy
	}
	return nil
}

func (x *NodeGroup) GetInstanceGroupId() string {
	if x != nil {
		return x.InstanceGroupId
	}
	return ""
}

func (x *NodeGroup) GetNodeVersion() string {
	if x != nil {
		return x.NodeVersion
	}
	return ""
}

func (x *NodeGroup) GetVersionInfo() *VersionInfo {
	if x != nil {
		return x.VersionInfo
	}
	return nil
}

func (x *NodeGroup) GetMaintenancePolicy() *NodeGroupMaintenancePolicy {
	if x != nil {
		return x.MaintenancePolicy
	}
	return nil
}

func (x *NodeGroup) GetAllowedUnsafeSysctls() []string {
	if x != nil {
		return x.AllowedUnsafeSysctls
	}
	return nil
}

func (x *NodeGroup) GetNodeTaints() []*Taint {
	if x != nil {
		return x.NodeTaints
	}
	return nil
}

func (x *NodeGroup) GetNodeLabels() map[string]string {
	if x != nil {
		return x.NodeLabels
	}
	return nil
}

type ScalePolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ScaleType:
	//
	//	*ScalePolicy_FixedScale_
	//	*ScalePolicy_AutoScale_
	ScaleType     isScalePolicy_ScaleType `protobuf_oneof:"scale_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScalePolicy) Reset() {
	*x = ScalePolicy{}
	mi := &file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScalePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalePolicy) ProtoMessage() {}

func (x *ScalePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalePolicy.ProtoReflect.Descriptor instead.
func (*ScalePolicy) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_node_group_proto_rawDescGZIP(), []int{1}
}

func (x *ScalePolicy) GetScaleType() isScalePolicy_ScaleType {
	if x != nil {
		return x.ScaleType
	}
	return nil
}

func (x *ScalePolicy) GetFixedScale() *ScalePolicy_FixedScale {
	if x != nil {
		if x, ok := x.ScaleType.(*ScalePolicy_FixedScale_); ok {
			return x.FixedScale
		}
	}
	return nil
}

func (x *ScalePolicy) GetAutoScale() *ScalePolicy_AutoScale {
	if x != nil {
		if x, ok := x.ScaleType.(*ScalePolicy_AutoScale_); ok {
			return x.AutoScale
		}
	}
	return nil
}

type isScalePolicy_ScaleType interface {
	isScalePolicy_ScaleType()
}

type ScalePolicy_FixedScale_ struct {
	// Fixed scale policy of the node group.
	FixedScale *ScalePolicy_FixedScale `protobuf:"bytes,1,opt,name=fixed_scale,json=fixedScale,proto3,oneof"`
}

type ScalePolicy_AutoScale_ struct {
	// Auto scale policy of the node group.
	AutoScale *ScalePolicy_AutoScale `protobuf:"bytes,2,opt,name=auto_scale,json=autoScale,proto3,oneof"`
}

func (*ScalePolicy_FixedScale_) isScalePolicy_ScaleType() {}

func (*ScalePolicy_AutoScale_) isScalePolicy_ScaleType() {}

type NodeGroupAllocationPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of locations where resources for the node group will be allocated.
	Locations     []*NodeGroupLocation `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeGroupAllocationPolicy) Reset() {
	*x = NodeGroupAllocationPolicy{}
	mi := &file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeGroupAllocationPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeGroupAllocationPolicy) ProtoMessage() {}

func (x *NodeGroupAllocationPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeGroupAllocationPolicy.ProtoReflect.Descriptor instead.
func (*NodeGroupAllocationPolicy) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_node_group_proto_rawDescGZIP(), []int{2}
}

func (x *NodeGroupAllocationPolicy) GetLocations() []*NodeGroupLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

type NodeGroupLocation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the availability zone where the nodes may reside.
	ZoneId string `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// ID of the subnet. If a network chosen for the Kubernetes cluster has only one subnet in the specified zone, subnet ID may be omitted.
	SubnetId      string `protobuf:"bytes,2,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeGroupLocation) Reset() {
	*x = NodeGroupLocation{}
	mi := &file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeGroupLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeGroupLocation) ProtoMessage() {}

func (x *NodeGroupLocation) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeGroupLocation.ProtoReflect.Descriptor instead.
func (*NodeGroupLocation) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_node_group_proto_rawDescGZIP(), []int{3}
}

func (x *NodeGroupLocation) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *NodeGroupLocation) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

type NodeGroupMaintenancePolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If set to true, automatic updates are installed in the specified period of time with no interaction from the user.
	// If set to false, automatic upgrades are disabled.
	AutoUpgrade bool `protobuf:"varint,1,opt,name=auto_upgrade,json=autoUpgrade,proto3" json:"auto_upgrade,omitempty"`
	// If set to true, automatic repairs are enabled. Default value is false.
	AutoRepair bool `protobuf:"varint,2,opt,name=auto_repair,json=autoRepair,proto3" json:"auto_repair,omitempty"`
	// Maintenance window settings. Update will start at the specified time and last no more than the specified duration.
	// The time is set in UTC.
	MaintenanceWindow *MaintenanceWindow `protobuf:"bytes,3,opt,name=maintenance_window,json=maintenanceWindow,proto3" json:"maintenance_window,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NodeGroupMaintenancePolicy) Reset() {
	*x = NodeGroupMaintenancePolicy{}
	mi := &file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeGroupMaintenancePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeGroupMaintenancePolicy) ProtoMessage() {}

func (x *NodeGroupMaintenancePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeGroupMaintenancePolicy.ProtoReflect.Descriptor instead.
func (*NodeGroupMaintenancePolicy) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_node_group_proto_rawDescGZIP(), []int{4}
}

func (x *NodeGroupMaintenancePolicy) GetAutoUpgrade() bool {
	if x != nil {
		return x.AutoUpgrade
	}
	return false
}

func (x *NodeGroupMaintenancePolicy) GetAutoRepair() bool {
	if x != nil {
		return x.AutoRepair
	}
	return false
}

func (x *NodeGroupMaintenancePolicy) GetMaintenanceWindow() *MaintenanceWindow {
	if x != nil {
		return x.MaintenanceWindow
	}
	return nil
}

type DeployPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of running instances that can be taken offline (i.e.,
	// stopped or deleted) at the same time during the update process.
	// If [max_expansion] is not specified or set to zero, [max_unavailable] must
	// be set to a non-zero value.
	MaxUnavailable int64 `protobuf:"varint,1,opt,name=max_unavailable,json=maxUnavailable,proto3" json:"max_unavailable,omitempty"`
	// The maximum number of instances that can be temporarily allocated above
	// the group's target size during the update process.
	// If [max_unavailable] is not specified or set to zero, [max_expansion] must
	// be set to a non-zero value.
	MaxExpansion  int64 `protobuf:"varint,2,opt,name=max_expansion,json=maxExpansion,proto3" json:"max_expansion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeployPolicy) Reset() {
	*x = DeployPolicy{}
	mi := &file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployPolicy) ProtoMessage() {}

func (x *DeployPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployPolicy.ProtoReflect.Descriptor instead.
func (*DeployPolicy) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_node_group_proto_rawDescGZIP(), []int{5}
}

func (x *DeployPolicy) GetMaxUnavailable() int64 {
	if x != nil {
		return x.MaxUnavailable
	}
	return 0
}

func (x *DeployPolicy) GetMaxExpansion() int64 {
	if x != nil {
		return x.MaxExpansion
	}
	return 0
}

type ScalePolicy_FixedScale struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of nodes in the node group.
	Size          int64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScalePolicy_FixedScale) Reset() {
	*x = ScalePolicy_FixedScale{}
	mi := &file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScalePolicy_FixedScale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalePolicy_FixedScale) ProtoMessage() {}

func (x *ScalePolicy_FixedScale) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalePolicy_FixedScale.ProtoReflect.Descriptor instead.
func (*ScalePolicy_FixedScale) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_node_group_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ScalePolicy_FixedScale) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ScalePolicy_AutoScale struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Minimum number of nodes in the node group.
	MinSize int64 `protobuf:"varint,1,opt,name=min_size,json=minSize,proto3" json:"min_size,omitempty"`
	// Maximum number of nodes in the node group.
	MaxSize int64 `protobuf:"varint,2,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	// Initial number of nodes in the node group.
	InitialSize   int64 `protobuf:"varint,3,opt,name=initial_size,json=initialSize,proto3" json:"initial_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScalePolicy_AutoScale) Reset() {
	*x = ScalePolicy_AutoScale{}
	mi := &file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScalePolicy_AutoScale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalePolicy_AutoScale) ProtoMessage() {}

func (x *ScalePolicy_AutoScale) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalePolicy_AutoScale.ProtoReflect.Descriptor instead.
func (*ScalePolicy_AutoScale) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_node_group_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ScalePolicy_AutoScale) GetMinSize() int64 {
	if x != nil {
		return x.MinSize
	}
	return 0
}

func (x *ScalePolicy_AutoScale) GetMaxSize() int64 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *ScalePolicy_AutoScale) GetInitialSize() int64 {
	if x != nil {
		return x.InitialSize
	}
	return 0
}

var File_yandex_cloud_k8s_v1_node_group_proto protoreflect.FileDescriptor

const file_yandex_cloud_k8s_v1_node_group_proto_rawDesc = "" +
	"\n" +
	"$yandex/cloud/k8s/v1/node_group.proto\x12\x13yandex.cloud.k8s.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a%yandex/cloud/k8s/v1/maintenance.proto\x1a\x1eyandex/cloud/k8s/v1/node.proto\x1a!yandex/cloud/k8s/v1/version.proto\x1a\x1dyandex/cloud/validation.proto\"\x9c\n" +
	"\n" +
	"\tNodeGroup\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x02 \x01(\tR\tclusterId\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12B\n" +
	"\x06labels\x18\x06 \x03(\v2*.yandex.cloud.k8s.v1.NodeGroup.LabelsEntryR\x06labels\x12=\n" +
	"\x06status\x18\a \x01(\x0e2%.yandex.cloud.k8s.v1.NodeGroup.StatusR\x06status\x12F\n" +
	"\rnode_template\x18\b \x01(\v2!.yandex.cloud.k8s.v1.NodeTemplateR\fnodeTemplate\x12C\n" +
	"\fscale_policy\x18\t \x01(\v2 .yandex.cloud.k8s.v1.ScalePolicyR\vscalePolicy\x12[\n" +
	"\x11allocation_policy\x18\n" +
	" \x01(\v2..yandex.cloud.k8s.v1.NodeGroupAllocationPolicyR\x10allocationPolicy\x12F\n" +
	"\rdeploy_policy\x18\x12 \x01(\v2!.yandex.cloud.k8s.v1.DeployPolicyR\fdeployPolicy\x12*\n" +
	"\x11instance_group_id\x18\v \x01(\tR\x0finstanceGroupId\x12!\n" +
	"\fnode_version\x18\f \x01(\tR\vnodeVersion\x12C\n" +
	"\fversion_info\x18\r \x01(\v2 .yandex.cloud.k8s.v1.VersionInfoR\vversionInfo\x12^\n" +
	"\x12maintenance_policy\x18\x0e \x01(\v2/.yandex.cloud.k8s.v1.NodeGroupMaintenancePolicyR\x11maintenancePolicy\x124\n" +
	"\x16allowed_unsafe_sysctls\x18\x0f \x03(\tR\x14allowedUnsafeSysctls\x12;\n" +
	"\vnode_taints\x18\x10 \x03(\v2\x1a.yandex.cloud.k8s.v1.TaintR\n" +
	"nodeTaints\x12O\n" +
	"\vnode_labels\x18\x11 \x03(\v2..yandex.cloud.k8s.v1.NodeGroup.NodeLabelsEntryR\n" +
	"nodeLabels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a=\n" +
	"\x0fNodeLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x87\x01\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fPROVISIONING\x10\x01\x12\v\n" +
	"\aRUNNING\x10\x02\x12\x0f\n" +
	"\vRECONCILING\x10\x03\x12\f\n" +
	"\bSTOPPING\x10\x04\x12\v\n" +
	"\aSTOPPED\x10\x05\x12\f\n" +
	"\bDELETING\x10\x06\x12\f\n" +
	"\bSTARTING\x10\a\"\xf3\x02\n" +
	"\vScalePolicy\x12N\n" +
	"\vfixed_scale\x18\x01 \x01(\v2+.yandex.cloud.k8s.v1.ScalePolicy.FixedScaleH\x00R\n" +
	"fixedScale\x12K\n" +
	"\n" +
	"auto_scale\x18\x02 \x01(\v2*.yandex.cloud.k8s.v1.ScalePolicy.AutoScaleH\x00R\tautoScale\x1a+\n" +
	"\n" +
	"FixedScale\x12\x1d\n" +
	"\x04size\x18\x01 \x01(\x03B\t\xfa\xc71\x050-100R\x04size\x1a\x85\x01\n" +
	"\tAutoScale\x12$\n" +
	"\bmin_size\x18\x01 \x01(\x03B\t\xfa\xc71\x050-100R\aminSize\x12$\n" +
	"\bmax_size\x18\x02 \x01(\x03B\t\xfa\xc71\x050-100R\amaxSize\x12,\n" +
	"\finitial_size\x18\x03 \x01(\x03B\t\xfa\xc71\x050-100R\vinitialSizeB\x12\n" +
	"\n" +
	"scale_type\x12\x04\xc0\xc11\x01\"a\n" +
	"\x19NodeGroupAllocationPolicy\x12D\n" +
	"\tlocations\x18\x01 \x03(\v2&.yandex.cloud.k8s.v1.NodeGroupLocationR\tlocations\"O\n" +
	"\x11NodeGroupLocation\x12\x1d\n" +
	"\azone_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x06zoneId\x12\x1b\n" +
	"\tsubnet_id\x18\x02 \x01(\tR\bsubnetId\"\xb7\x01\n" +
	"\x1aNodeGroupMaintenancePolicy\x12!\n" +
	"\fauto_upgrade\x18\x01 \x01(\bR\vautoUpgrade\x12\x1f\n" +
	"\vauto_repair\x18\x02 \x01(\bR\n" +
	"autoRepair\x12U\n" +
	"\x12maintenance_window\x18\x03 \x01(\v2&.yandex.cloud.k8s.v1.MaintenanceWindowR\x11maintenanceWindow\"r\n" +
	"\fDeployPolicy\x122\n" +
	"\x0fmax_unavailable\x18\x01 \x01(\x03B\t\xfa\xc71\x050-100R\x0emaxUnavailable\x12.\n" +
	"\rmax_expansion\x18\x02 \x01(\x03B\t\xfa\xc71\x050-100R\fmaxExpansionBV\n" +
	"\x17yandex.cloud.api.k8s.v1Z;github.com/yandex-cloud/go-genproto/yandex/cloud/k8s/v1;k8sb\x06proto3"

var (
	file_yandex_cloud_k8s_v1_node_group_proto_rawDescOnce sync.Once
	file_yandex_cloud_k8s_v1_node_group_proto_rawDescData []byte
)

func file_yandex_cloud_k8s_v1_node_group_proto_rawDescGZIP() []byte {
	file_yandex_cloud_k8s_v1_node_group_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_k8s_v1_node_group_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_k8s_v1_node_group_proto_rawDesc), len(file_yandex_cloud_k8s_v1_node_group_proto_rawDesc)))
	})
	return file_yandex_cloud_k8s_v1_node_group_proto_rawDescData
}

var file_yandex_cloud_k8s_v1_node_group_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_k8s_v1_node_group_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_yandex_cloud_k8s_v1_node_group_proto_goTypes = []any{
	(NodeGroup_Status)(0),              // 0: yandex.cloud.k8s.v1.NodeGroup.Status
	(*NodeGroup)(nil),                  // 1: yandex.cloud.k8s.v1.NodeGroup
	(*ScalePolicy)(nil),                // 2: yandex.cloud.k8s.v1.ScalePolicy
	(*NodeGroupAllocationPolicy)(nil),  // 3: yandex.cloud.k8s.v1.NodeGroupAllocationPolicy
	(*NodeGroupLocation)(nil),          // 4: yandex.cloud.k8s.v1.NodeGroupLocation
	(*NodeGroupMaintenancePolicy)(nil), // 5: yandex.cloud.k8s.v1.NodeGroupMaintenancePolicy
	(*DeployPolicy)(nil),               // 6: yandex.cloud.k8s.v1.DeployPolicy
	nil,                                // 7: yandex.cloud.k8s.v1.NodeGroup.LabelsEntry
	nil,                                // 8: yandex.cloud.k8s.v1.NodeGroup.NodeLabelsEntry
	(*ScalePolicy_FixedScale)(nil),     // 9: yandex.cloud.k8s.v1.ScalePolicy.FixedScale
	(*ScalePolicy_AutoScale)(nil),      // 10: yandex.cloud.k8s.v1.ScalePolicy.AutoScale
	(*timestamppb.Timestamp)(nil),      // 11: google.protobuf.Timestamp
	(*NodeTemplate)(nil),               // 12: yandex.cloud.k8s.v1.NodeTemplate
	(*VersionInfo)(nil),                // 13: yandex.cloud.k8s.v1.VersionInfo
	(*Taint)(nil),                      // 14: yandex.cloud.k8s.v1.Taint
	(*MaintenanceWindow)(nil),          // 15: yandex.cloud.k8s.v1.MaintenanceWindow
}
var file_yandex_cloud_k8s_v1_node_group_proto_depIdxs = []int32{
	11, // 0: yandex.cloud.k8s.v1.NodeGroup.created_at:type_name -> google.protobuf.Timestamp
	7,  // 1: yandex.cloud.k8s.v1.NodeGroup.labels:type_name -> yandex.cloud.k8s.v1.NodeGroup.LabelsEntry
	0,  // 2: yandex.cloud.k8s.v1.NodeGroup.status:type_name -> yandex.cloud.k8s.v1.NodeGroup.Status
	12, // 3: yandex.cloud.k8s.v1.NodeGroup.node_template:type_name -> yandex.cloud.k8s.v1.NodeTemplate
	2,  // 4: yandex.cloud.k8s.v1.NodeGroup.scale_policy:type_name -> yandex.cloud.k8s.v1.ScalePolicy
	3,  // 5: yandex.cloud.k8s.v1.NodeGroup.allocation_policy:type_name -> yandex.cloud.k8s.v1.NodeGroupAllocationPolicy
	6,  // 6: yandex.cloud.k8s.v1.NodeGroup.deploy_policy:type_name -> yandex.cloud.k8s.v1.DeployPolicy
	13, // 7: yandex.cloud.k8s.v1.NodeGroup.version_info:type_name -> yandex.cloud.k8s.v1.VersionInfo
	5,  // 8: yandex.cloud.k8s.v1.NodeGroup.maintenance_policy:type_name -> yandex.cloud.k8s.v1.NodeGroupMaintenancePolicy
	14, // 9: yandex.cloud.k8s.v1.NodeGroup.node_taints:type_name -> yandex.cloud.k8s.v1.Taint
	8,  // 10: yandex.cloud.k8s.v1.NodeGroup.node_labels:type_name -> yandex.cloud.k8s.v1.NodeGroup.NodeLabelsEntry
	9,  // 11: yandex.cloud.k8s.v1.ScalePolicy.fixed_scale:type_name -> yandex.cloud.k8s.v1.ScalePolicy.FixedScale
	10, // 12: yandex.cloud.k8s.v1.ScalePolicy.auto_scale:type_name -> yandex.cloud.k8s.v1.ScalePolicy.AutoScale
	4,  // 13: yandex.cloud.k8s.v1.NodeGroupAllocationPolicy.locations:type_name -> yandex.cloud.k8s.v1.NodeGroupLocation
	15, // 14: yandex.cloud.k8s.v1.NodeGroupMaintenancePolicy.maintenance_window:type_name -> yandex.cloud.k8s.v1.MaintenanceWindow
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_yandex_cloud_k8s_v1_node_group_proto_init() }
func file_yandex_cloud_k8s_v1_node_group_proto_init() {
	if File_yandex_cloud_k8s_v1_node_group_proto != nil {
		return
	}
	file_yandex_cloud_k8s_v1_maintenance_proto_init()
	file_yandex_cloud_k8s_v1_node_proto_init()
	file_yandex_cloud_k8s_v1_version_proto_init()
	file_yandex_cloud_k8s_v1_node_group_proto_msgTypes[1].OneofWrappers = []any{
		(*ScalePolicy_FixedScale_)(nil),
		(*ScalePolicy_AutoScale_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_k8s_v1_node_group_proto_rawDesc), len(file_yandex_cloud_k8s_v1_node_group_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_k8s_v1_node_group_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_k8s_v1_node_group_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_k8s_v1_node_group_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_k8s_v1_node_group_proto_msgTypes,
	}.Build()
	File_yandex_cloud_k8s_v1_node_group_proto = out.File
	file_yandex_cloud_k8s_v1_node_group_proto_goTypes = nil
	file_yandex_cloud_k8s_v1_node_group_proto_depIdxs = nil
}

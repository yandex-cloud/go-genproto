// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/k8s/v1/version_service.proto

package k8s

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListVersionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVersionsRequest) Reset() {
	*x = ListVersionsRequest{}
	mi := &file_yandex_cloud_k8s_v1_version_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVersionsRequest) ProtoMessage() {}

func (x *ListVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_version_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListVersionsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_version_service_proto_rawDescGZIP(), []int{0}
}

type ListVersionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Versions available in the specified release channel.
	AvailableVersions []*AvailableVersions `protobuf:"bytes,1,rep,name=available_versions,json=availableVersions,proto3" json:"available_versions,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListVersionsResponse) Reset() {
	*x = ListVersionsResponse{}
	mi := &file_yandex_cloud_k8s_v1_version_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVersionsResponse) ProtoMessage() {}

func (x *ListVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_version_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListVersionsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_version_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListVersionsResponse) GetAvailableVersions() []*AvailableVersions {
	if x != nil {
		return x.AvailableVersions
	}
	return nil
}

type AvailableVersions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Release channel: `RAPID`, `REGULAR` or `STABLE`. For more details see [documentation](/docs/managed-kubernetes/concepts/release-channels-and-updates).
	ReleaseChannel ReleaseChannel `protobuf:"varint,1,opt,name=release_channel,json=releaseChannel,proto3,enum=yandex.cloud.k8s.v1.ReleaseChannel" json:"release_channel,omitempty"`
	// Version of Kubernetes components.
	Versions      []string `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AvailableVersions) Reset() {
	*x = AvailableVersions{}
	mi := &file_yandex_cloud_k8s_v1_version_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailableVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableVersions) ProtoMessage() {}

func (x *AvailableVersions) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_k8s_v1_version_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableVersions.ProtoReflect.Descriptor instead.
func (*AvailableVersions) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_k8s_v1_version_service_proto_rawDescGZIP(), []int{2}
}

func (x *AvailableVersions) GetReleaseChannel() ReleaseChannel {
	if x != nil {
		return x.ReleaseChannel
	}
	return ReleaseChannel_RELEASE_CHANNEL_UNSPECIFIED
}

func (x *AvailableVersions) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

var File_yandex_cloud_k8s_v1_version_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_k8s_v1_version_service_proto_rawDesc = "" +
	"\n" +
	")yandex/cloud/k8s/v1/version_service.proto\x12\x13yandex.cloud.k8s.v1\x1a\x1cgoogle/api/annotations.proto\x1a!yandex/cloud/k8s/v1/cluster.proto\"\x15\n" +
	"\x13ListVersionsRequest\"m\n" +
	"\x14ListVersionsResponse\x12U\n" +
	"\x12available_versions\x18\x01 \x03(\v2&.yandex.cloud.k8s.v1.AvailableVersionsR\x11availableVersions\"}\n" +
	"\x11AvailableVersions\x12L\n" +
	"\x0frelease_channel\x18\x01 \x01(\x0e2#.yandex.cloud.k8s.v1.ReleaseChannelR\x0ereleaseChannel\x12\x1a\n" +
	"\bversions\x18\x02 \x03(\tR\bversions2\x97\x01\n" +
	"\x0eVersionService\x12\x84\x01\n" +
	"\x04List\x12(.yandex.cloud.k8s.v1.ListVersionsRequest\x1a).yandex.cloud.k8s.v1.ListVersionsResponse\"'\x82\xd3\xe4\x93\x02!\x12\x1f/managed-kubernetes/v1/versionsBV\n" +
	"\x17yandex.cloud.api.k8s.v1Z;github.com/yandex-cloud/go-genproto/yandex/cloud/k8s/v1;k8sb\x06proto3"

var (
	file_yandex_cloud_k8s_v1_version_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_k8s_v1_version_service_proto_rawDescData []byte
)

func file_yandex_cloud_k8s_v1_version_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_k8s_v1_version_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_k8s_v1_version_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_k8s_v1_version_service_proto_rawDesc), len(file_yandex_cloud_k8s_v1_version_service_proto_rawDesc)))
	})
	return file_yandex_cloud_k8s_v1_version_service_proto_rawDescData
}

var file_yandex_cloud_k8s_v1_version_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_yandex_cloud_k8s_v1_version_service_proto_goTypes = []any{
	(*ListVersionsRequest)(nil),  // 0: yandex.cloud.k8s.v1.ListVersionsRequest
	(*ListVersionsResponse)(nil), // 1: yandex.cloud.k8s.v1.ListVersionsResponse
	(*AvailableVersions)(nil),    // 2: yandex.cloud.k8s.v1.AvailableVersions
	(ReleaseChannel)(0),          // 3: yandex.cloud.k8s.v1.ReleaseChannel
}
var file_yandex_cloud_k8s_v1_version_service_proto_depIdxs = []int32{
	2, // 0: yandex.cloud.k8s.v1.ListVersionsResponse.available_versions:type_name -> yandex.cloud.k8s.v1.AvailableVersions
	3, // 1: yandex.cloud.k8s.v1.AvailableVersions.release_channel:type_name -> yandex.cloud.k8s.v1.ReleaseChannel
	0, // 2: yandex.cloud.k8s.v1.VersionService.List:input_type -> yandex.cloud.k8s.v1.ListVersionsRequest
	1, // 3: yandex.cloud.k8s.v1.VersionService.List:output_type -> yandex.cloud.k8s.v1.ListVersionsResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_yandex_cloud_k8s_v1_version_service_proto_init() }
func file_yandex_cloud_k8s_v1_version_service_proto_init() {
	if File_yandex_cloud_k8s_v1_version_service_proto != nil {
		return
	}
	file_yandex_cloud_k8s_v1_cluster_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_k8s_v1_version_service_proto_rawDesc), len(file_yandex_cloud_k8s_v1_version_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_k8s_v1_version_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_k8s_v1_version_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_k8s_v1_version_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_k8s_v1_version_service_proto = out.File
	file_yandex_cloud_k8s_v1_version_service_proto_goTypes = nil
	file_yandex_cloud_k8s_v1_version_service_proto_depIdxs = nil
}

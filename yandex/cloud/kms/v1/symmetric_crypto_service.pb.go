// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/kms/v1/symmetric_crypto_service.proto

package kms

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SymmetricEncryptRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the symmetric KMS key to use for encryption.
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// ID of the key version to encrypt plaintext with.
	// Defaults to the primary version if not specified.
	VersionId string `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// Additional authenticated data (AAD context), optional.
	// If specified, this data will be required for decryption with the [SymmetricDecryptRequest].
	// Should be encoded with base64.
	AadContext []byte `protobuf:"bytes,3,opt,name=aad_context,json=aadContext,proto3" json:"aad_context,omitempty"`
	// Plaintext to be encrypted.
	// Should be encoded with base64.
	Plaintext     []byte `protobuf:"bytes,4,opt,name=plaintext,proto3" json:"plaintext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymmetricEncryptRequest) Reset() {
	*x = SymmetricEncryptRequest{}
	mi := &file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymmetricEncryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymmetricEncryptRequest) ProtoMessage() {}

func (x *SymmetricEncryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymmetricEncryptRequest.ProtoReflect.Descriptor instead.
func (*SymmetricEncryptRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDescGZIP(), []int{0}
}

func (x *SymmetricEncryptRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *SymmetricEncryptRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *SymmetricEncryptRequest) GetAadContext() []byte {
	if x != nil {
		return x.AadContext
	}
	return nil
}

func (x *SymmetricEncryptRequest) GetPlaintext() []byte {
	if x != nil {
		return x.Plaintext
	}
	return nil
}

type SymmetricEncryptResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the symmetric KMS key that was used for encryption.
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// ID of the key version that was used for encryption.
	VersionId string `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// Resulting ciphertext.
	Ciphertext    []byte `protobuf:"bytes,3,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymmetricEncryptResponse) Reset() {
	*x = SymmetricEncryptResponse{}
	mi := &file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymmetricEncryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymmetricEncryptResponse) ProtoMessage() {}

func (x *SymmetricEncryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymmetricEncryptResponse.ProtoReflect.Descriptor instead.
func (*SymmetricEncryptResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDescGZIP(), []int{1}
}

func (x *SymmetricEncryptResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *SymmetricEncryptResponse) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *SymmetricEncryptResponse) GetCiphertext() []byte {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type SymmetricDecryptRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the symmetric KMS key to use for decryption.
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// Additional authenticated data, must be the same as was provided
	// in the corresponding [SymmetricEncryptRequest].
	// Should be encoded with base64.
	AadContext []byte `protobuf:"bytes,2,opt,name=aad_context,json=aadContext,proto3" json:"aad_context,omitempty"`
	// Ciphertext to be decrypted.
	// Should be encoded with base64.
	Ciphertext    []byte `protobuf:"bytes,3,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymmetricDecryptRequest) Reset() {
	*x = SymmetricDecryptRequest{}
	mi := &file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymmetricDecryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymmetricDecryptRequest) ProtoMessage() {}

func (x *SymmetricDecryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymmetricDecryptRequest.ProtoReflect.Descriptor instead.
func (*SymmetricDecryptRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDescGZIP(), []int{2}
}

func (x *SymmetricDecryptRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *SymmetricDecryptRequest) GetAadContext() []byte {
	if x != nil {
		return x.AadContext
	}
	return nil
}

func (x *SymmetricDecryptRequest) GetCiphertext() []byte {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type SymmetricDecryptResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the symmetric KMS key that was used for decryption.
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// ID of the key version that was used for decryption.
	VersionId string `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// Decrypted plaintext.
	Plaintext     []byte `protobuf:"bytes,3,opt,name=plaintext,proto3" json:"plaintext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymmetricDecryptResponse) Reset() {
	*x = SymmetricDecryptResponse{}
	mi := &file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymmetricDecryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymmetricDecryptResponse) ProtoMessage() {}

func (x *SymmetricDecryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymmetricDecryptResponse.ProtoReflect.Descriptor instead.
func (*SymmetricDecryptResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDescGZIP(), []int{3}
}

func (x *SymmetricDecryptResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *SymmetricDecryptResponse) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *SymmetricDecryptResponse) GetPlaintext() []byte {
	if x != nil {
		return x.Plaintext
	}
	return nil
}

type GenerateDataKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the symmetric KMS key that the generated data key should be encrypted with.
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// ID of the key version to encrypt the generated data key with.
	// Defaults to the primary version if not specified.
	VersionId string `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// Additional authenticated data (AAD context), optional.
	// If specified, this data will be required for decryption with the [SymmetricDecryptRequest].
	// Should be encoded with base64.
	AadContext []byte `protobuf:"bytes,3,opt,name=aad_context,json=aadContext,proto3" json:"aad_context,omitempty"`
	// Encryption algorithm and key length for the generated data key.
	DataKeySpec SymmetricAlgorithm `protobuf:"varint,4,opt,name=data_key_spec,json=dataKeySpec,proto3,enum=yandex.cloud.kms.v1.SymmetricAlgorithm" json:"data_key_spec,omitempty"`
	// If `true`, the method won't return the data key as plaintext.
	// Default value is `false`.
	SkipPlaintext bool `protobuf:"varint,5,opt,name=skip_plaintext,json=skipPlaintext,proto3" json:"skip_plaintext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateDataKeyRequest) Reset() {
	*x = GenerateDataKeyRequest{}
	mi := &file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateDataKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateDataKeyRequest) ProtoMessage() {}

func (x *GenerateDataKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateDataKeyRequest.ProtoReflect.Descriptor instead.
func (*GenerateDataKeyRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDescGZIP(), []int{4}
}

func (x *GenerateDataKeyRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *GenerateDataKeyRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *GenerateDataKeyRequest) GetAadContext() []byte {
	if x != nil {
		return x.AadContext
	}
	return nil
}

func (x *GenerateDataKeyRequest) GetDataKeySpec() SymmetricAlgorithm {
	if x != nil {
		return x.DataKeySpec
	}
	return SymmetricAlgorithm_SYMMETRIC_ALGORITHM_UNSPECIFIED
}

func (x *GenerateDataKeyRequest) GetSkipPlaintext() bool {
	if x != nil {
		return x.SkipPlaintext
	}
	return false
}

type GenerateDataKeyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the symmetric KMS key that was used to encrypt the generated data key.
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// ID of the key version that was used for encryption.
	VersionId string `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// Generated data key as plaintext.
	// The field is empty, if the [GenerateDataKeyRequest.skip_plaintext] parameter
	// was set to `true`.
	DataKeyPlaintext []byte `protobuf:"bytes,3,opt,name=data_key_plaintext,json=dataKeyPlaintext,proto3" json:"data_key_plaintext,omitempty"`
	// The encrypted data key.
	DataKeyCiphertext []byte `protobuf:"bytes,4,opt,name=data_key_ciphertext,json=dataKeyCiphertext,proto3" json:"data_key_ciphertext,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GenerateDataKeyResponse) Reset() {
	*x = GenerateDataKeyResponse{}
	mi := &file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateDataKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateDataKeyResponse) ProtoMessage() {}

func (x *GenerateDataKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateDataKeyResponse.ProtoReflect.Descriptor instead.
func (*GenerateDataKeyResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDescGZIP(), []int{5}
}

func (x *GenerateDataKeyResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *GenerateDataKeyResponse) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *GenerateDataKeyResponse) GetDataKeyPlaintext() []byte {
	if x != nil {
		return x.DataKeyPlaintext
	}
	return nil
}

func (x *GenerateDataKeyResponse) GetDataKeyCiphertext() []byte {
	if x != nil {
		return x.DataKeyCiphertext
	}
	return nil
}

type SymmetricReEncryptRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the new key to be used for encryption.
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// ID of the version of the new key to be used for encryption.
	// Defaults to the primary version if not specified.
	VersionId string `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// Additional authenticated data to be required for decryption.
	// Should be encoded with base64.
	AadContext []byte `protobuf:"bytes,3,opt,name=aad_context,json=aadContext,proto3" json:"aad_context,omitempty"`
	// ID of the key that the ciphertext is currently encrypted with. May be the same as for the new key.
	SourceKeyId string `protobuf:"bytes,4,opt,name=source_key_id,json=sourceKeyId,proto3" json:"source_key_id,omitempty"`
	// Additional authenticated data provided with the initial encryption request.
	// Should be encoded with base64.
	SourceAadContext []byte `protobuf:"bytes,5,opt,name=source_aad_context,json=sourceAadContext,proto3" json:"source_aad_context,omitempty"`
	// Ciphertext to re-encrypt.
	// Should be encoded with base64.
	Ciphertext    []byte `protobuf:"bytes,6,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymmetricReEncryptRequest) Reset() {
	*x = SymmetricReEncryptRequest{}
	mi := &file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymmetricReEncryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymmetricReEncryptRequest) ProtoMessage() {}

func (x *SymmetricReEncryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymmetricReEncryptRequest.ProtoReflect.Descriptor instead.
func (*SymmetricReEncryptRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDescGZIP(), []int{6}
}

func (x *SymmetricReEncryptRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *SymmetricReEncryptRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *SymmetricReEncryptRequest) GetAadContext() []byte {
	if x != nil {
		return x.AadContext
	}
	return nil
}

func (x *SymmetricReEncryptRequest) GetSourceKeyId() string {
	if x != nil {
		return x.SourceKeyId
	}
	return ""
}

func (x *SymmetricReEncryptRequest) GetSourceAadContext() []byte {
	if x != nil {
		return x.SourceAadContext
	}
	return nil
}

func (x *SymmetricReEncryptRequest) GetCiphertext() []byte {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type SymmetricReEncryptResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the key that the ciphertext is encrypted with now.
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// ID of key version that was used for encryption.
	VersionId string `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// ID of the key that the ciphertext was encrypted with previously.
	SourceKeyId string `protobuf:"bytes,3,opt,name=source_key_id,json=sourceKeyId,proto3" json:"source_key_id,omitempty"`
	// ID of the key version that was used to decrypt the re-encrypted ciphertext.
	SourceVersionId string `protobuf:"bytes,4,opt,name=source_version_id,json=sourceVersionId,proto3" json:"source_version_id,omitempty"`
	// Resulting re-encrypted ciphertext.
	Ciphertext    []byte `protobuf:"bytes,5,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymmetricReEncryptResponse) Reset() {
	*x = SymmetricReEncryptResponse{}
	mi := &file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymmetricReEncryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymmetricReEncryptResponse) ProtoMessage() {}

func (x *SymmetricReEncryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymmetricReEncryptResponse.ProtoReflect.Descriptor instead.
func (*SymmetricReEncryptResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDescGZIP(), []int{7}
}

func (x *SymmetricReEncryptResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *SymmetricReEncryptResponse) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *SymmetricReEncryptResponse) GetSourceKeyId() string {
	if x != nil {
		return x.SourceKeyId
	}
	return ""
}

func (x *SymmetricReEncryptResponse) GetSourceVersionId() string {
	if x != nil {
		return x.SourceVersionId
	}
	return ""
}

func (x *SymmetricReEncryptResponse) GetCiphertext() []byte {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

var File_yandex_cloud_kms_v1_symmetric_crypto_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDesc = "" +
	"\n" +
	"2yandex/cloud/kms/v1/symmetric_crypto_service.proto\x12\x13yandex.cloud.kms.v1\x1a\x1cgoogle/api/annotations.proto\x1a'yandex/cloud/kms/v1/symmetric_key.proto\x1a\x1dyandex/cloud/validation.proto\"\xc3\x01\n" +
	"\x17SymmetricEncryptRequest\x12#\n" +
	"\x06key_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x05keyId\x12'\n" +
	"\n" +
	"version_id\x18\x02 \x01(\tB\b\x8a\xc81\x04<=50R\tversionId\x12+\n" +
	"\vaad_context\x18\x03 \x01(\fB\n" +
	"\x8a\xc81\x06<=8192R\n" +
	"aadContext\x12-\n" +
	"\tplaintext\x18\x04 \x01(\fB\x0f\xe8\xc71\x01\x8a\xc81\a<=32768R\tplaintext\"\x88\x01\n" +
	"\x18SymmetricEncryptResponse\x12#\n" +
	"\x06key_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x05keyId\x12'\n" +
	"\n" +
	"version_id\x18\x02 \x01(\tB\b\x8a\xc81\x04<=50R\tversionId\x12\x1e\n" +
	"\n" +
	"ciphertext\x18\x03 \x01(\fR\n" +
	"ciphertext\"\x91\x01\n" +
	"\x17SymmetricDecryptRequest\x12#\n" +
	"\x06key_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x05keyId\x12+\n" +
	"\vaad_context\x18\x02 \x01(\fB\n" +
	"\x8a\xc81\x06<=8192R\n" +
	"aadContext\x12$\n" +
	"\n" +
	"ciphertext\x18\x03 \x01(\fB\x04\xe8\xc71\x01R\n" +
	"ciphertext\"n\n" +
	"\x18SymmetricDecryptResponse\x12\x15\n" +
	"\x06key_id\x18\x01 \x01(\tR\x05keyId\x12\x1d\n" +
	"\n" +
	"version_id\x18\x02 \x01(\tR\tversionId\x12\x1c\n" +
	"\tplaintext\x18\x03 \x01(\fR\tplaintext\"\x87\x02\n" +
	"\x16GenerateDataKeyRequest\x12#\n" +
	"\x06key_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x05keyId\x12'\n" +
	"\n" +
	"version_id\x18\x02 \x01(\tB\b\x8a\xc81\x04<=50R\tversionId\x12+\n" +
	"\vaad_context\x18\x03 \x01(\fB\n" +
	"\x8a\xc81\x06<=8192R\n" +
	"aadContext\x12K\n" +
	"\rdata_key_spec\x18\x04 \x01(\x0e2'.yandex.cloud.kms.v1.SymmetricAlgorithmR\vdataKeySpec\x12%\n" +
	"\x0eskip_plaintext\x18\x05 \x01(\bR\rskipPlaintext\"\xad\x01\n" +
	"\x17GenerateDataKeyResponse\x12\x15\n" +
	"\x06key_id\x18\x01 \x01(\tR\x05keyId\x12\x1d\n" +
	"\n" +
	"version_id\x18\x02 \x01(\tR\tversionId\x12,\n" +
	"\x12data_key_plaintext\x18\x03 \x01(\fR\x10dataKeyPlaintext\x12.\n" +
	"\x13data_key_ciphertext\x18\x04 \x01(\fR\x11dataKeyCiphertext\"\xa8\x02\n" +
	"\x19SymmetricReEncryptRequest\x12#\n" +
	"\x06key_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x05keyId\x12'\n" +
	"\n" +
	"version_id\x18\x02 \x01(\tB\b\x8a\xc81\x04<=50R\tversionId\x12+\n" +
	"\vaad_context\x18\x03 \x01(\fB\n" +
	"\x8a\xc81\x06<=8192R\n" +
	"aadContext\x120\n" +
	"\rsource_key_id\x18\x04 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\vsourceKeyId\x128\n" +
	"\x12source_aad_context\x18\x05 \x01(\fB\n" +
	"\x8a\xc81\x06<=8192R\x10sourceAadContext\x12$\n" +
	"\n" +
	"ciphertext\x18\x06 \x01(\fB\x04\xe8\xc71\x01R\n" +
	"ciphertext\"\xc2\x01\n" +
	"\x1aSymmetricReEncryptResponse\x12\x15\n" +
	"\x06key_id\x18\x01 \x01(\tR\x05keyId\x12\x1d\n" +
	"\n" +
	"version_id\x18\x02 \x01(\tR\tversionId\x12\"\n" +
	"\rsource_key_id\x18\x03 \x01(\tR\vsourceKeyId\x12*\n" +
	"\x11source_version_id\x18\x04 \x01(\tR\x0fsourceVersionId\x12\x1e\n" +
	"\n" +
	"ciphertext\x18\x05 \x01(\fR\n" +
	"ciphertext2\xfa\x04\n" +
	"\x16SymmetricCryptoService\x12\x90\x01\n" +
	"\aEncrypt\x12,.yandex.cloud.kms.v1.SymmetricEncryptRequest\x1a-.yandex.cloud.kms.v1.SymmetricEncryptResponse\"(\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/kms/v1/keys/{key_id}:encrypt\x12\x90\x01\n" +
	"\aDecrypt\x12,.yandex.cloud.kms.v1.SymmetricDecryptRequest\x1a-.yandex.cloud.kms.v1.SymmetricDecryptResponse\"(\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/kms/v1/keys/{key_id}:decrypt\x12\x98\x01\n" +
	"\tReEncrypt\x12..yandex.cloud.kms.v1.SymmetricReEncryptRequest\x1a/.yandex.cloud.kms.v1.SymmetricReEncryptResponse\"*\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/kms/v1/keys/{key_id}:reEncrypt\x12\x9e\x01\n" +
	"\x0fGenerateDataKey\x12+.yandex.cloud.kms.v1.GenerateDataKeyRequest\x1a,.yandex.cloud.kms.v1.GenerateDataKeyResponse\"0\x82\xd3\xe4\x93\x02*:\x01*\"%/kms/v1/keys/{key_id}:generateDataKeyBV\n" +
	"\x17yandex.cloud.api.kms.v1Z;github.com/yandex-cloud/go-genproto/yandex/cloud/kms/v1;kmsb\x06proto3"

var (
	file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDescData []byte
)

func file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDesc), len(file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDesc)))
	})
	return file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDescData
}

var file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_goTypes = []any{
	(*SymmetricEncryptRequest)(nil),    // 0: yandex.cloud.kms.v1.SymmetricEncryptRequest
	(*SymmetricEncryptResponse)(nil),   // 1: yandex.cloud.kms.v1.SymmetricEncryptResponse
	(*SymmetricDecryptRequest)(nil),    // 2: yandex.cloud.kms.v1.SymmetricDecryptRequest
	(*SymmetricDecryptResponse)(nil),   // 3: yandex.cloud.kms.v1.SymmetricDecryptResponse
	(*GenerateDataKeyRequest)(nil),     // 4: yandex.cloud.kms.v1.GenerateDataKeyRequest
	(*GenerateDataKeyResponse)(nil),    // 5: yandex.cloud.kms.v1.GenerateDataKeyResponse
	(*SymmetricReEncryptRequest)(nil),  // 6: yandex.cloud.kms.v1.SymmetricReEncryptRequest
	(*SymmetricReEncryptResponse)(nil), // 7: yandex.cloud.kms.v1.SymmetricReEncryptResponse
	(SymmetricAlgorithm)(0),            // 8: yandex.cloud.kms.v1.SymmetricAlgorithm
}
var file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_depIdxs = []int32{
	8, // 0: yandex.cloud.kms.v1.GenerateDataKeyRequest.data_key_spec:type_name -> yandex.cloud.kms.v1.SymmetricAlgorithm
	0, // 1: yandex.cloud.kms.v1.SymmetricCryptoService.Encrypt:input_type -> yandex.cloud.kms.v1.SymmetricEncryptRequest
	2, // 2: yandex.cloud.kms.v1.SymmetricCryptoService.Decrypt:input_type -> yandex.cloud.kms.v1.SymmetricDecryptRequest
	6, // 3: yandex.cloud.kms.v1.SymmetricCryptoService.ReEncrypt:input_type -> yandex.cloud.kms.v1.SymmetricReEncryptRequest
	4, // 4: yandex.cloud.kms.v1.SymmetricCryptoService.GenerateDataKey:input_type -> yandex.cloud.kms.v1.GenerateDataKeyRequest
	1, // 5: yandex.cloud.kms.v1.SymmetricCryptoService.Encrypt:output_type -> yandex.cloud.kms.v1.SymmetricEncryptResponse
	3, // 6: yandex.cloud.kms.v1.SymmetricCryptoService.Decrypt:output_type -> yandex.cloud.kms.v1.SymmetricDecryptResponse
	7, // 7: yandex.cloud.kms.v1.SymmetricCryptoService.ReEncrypt:output_type -> yandex.cloud.kms.v1.SymmetricReEncryptResponse
	5, // 8: yandex.cloud.kms.v1.SymmetricCryptoService.GenerateDataKey:output_type -> yandex.cloud.kms.v1.GenerateDataKeyResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_init() }
func file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_init() {
	if File_yandex_cloud_kms_v1_symmetric_crypto_service_proto != nil {
		return
	}
	file_yandex_cloud_kms_v1_symmetric_key_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDesc), len(file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_kms_v1_symmetric_crypto_service_proto = out.File
	file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_goTypes = nil
	file_yandex_cloud_kms_v1_symmetric_crypto_service_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/marketplace/licensemanager/v1/external_instance.proto

package licensemanager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ExternalInstance attachment to external service subscription.
type ExternalInstance struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional external subscription name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Mapping of vendor defined properties in key, value format.
	Properties map[string]string `protobuf:"bytes,21,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Types that are valid to be assigned to Vendor:
	//
	//	*ExternalInstance_Subscription
	//	*ExternalInstance_License
	Vendor        isExternalInstance_Vendor `protobuf_oneof:"vendor"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExternalInstance) Reset() {
	*x = ExternalInstance{}
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalInstance) ProtoMessage() {}

func (x *ExternalInstance) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalInstance.ProtoReflect.Descriptor instead.
func (*ExternalInstance) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescGZIP(), []int{0}
}

func (x *ExternalInstance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExternalInstance) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *ExternalInstance) GetVendor() isExternalInstance_Vendor {
	if x != nil {
		return x.Vendor
	}
	return nil
}

func (x *ExternalInstance) GetSubscription() *ExternalSubscription {
	if x != nil {
		if x, ok := x.Vendor.(*ExternalInstance_Subscription); ok {
			return x.Subscription
		}
	}
	return nil
}

func (x *ExternalInstance) GetLicense() *ExternalLicense {
	if x != nil {
		if x, ok := x.Vendor.(*ExternalInstance_License); ok {
			return x.License
		}
	}
	return nil
}

type isExternalInstance_Vendor interface {
	isExternalInstance_Vendor()
}

type ExternalInstance_Subscription struct {
	Subscription *ExternalSubscription `protobuf:"bytes,22,opt,name=subscription,proto3,oneof"`
}

type ExternalInstance_License struct {
	License *ExternalLicense `protobuf:"bytes,23,opt,name=license,proto3,oneof"`
}

func (*ExternalInstance_Subscription) isExternalInstance_Vendor() {}

func (*ExternalInstance_License) isExternalInstance_Vendor() {}

type ExternalSubscription struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// External subscription id.
	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	// Optional: paired license id for external subscription.
	LicenseId string `protobuf:"bytes,2,opt,name=license_id,json=licenseId,proto3" json:"license_id,omitempty"`
	// Optional: default activation key for external subscription.
	ActivationKey string `protobuf:"bytes,3,opt,name=activation_key,json=activationKey,proto3" json:"activation_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExternalSubscription) Reset() {
	*x = ExternalSubscription{}
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalSubscription) ProtoMessage() {}

func (x *ExternalSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalSubscription.ProtoReflect.Descriptor instead.
func (*ExternalSubscription) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescGZIP(), []int{1}
}

func (x *ExternalSubscription) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *ExternalSubscription) GetLicenseId() string {
	if x != nil {
		return x.LicenseId
	}
	return ""
}

func (x *ExternalSubscription) GetActivationKey() string {
	if x != nil {
		return x.ActivationKey
	}
	return ""
}

type ExternalLicense struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// External license bound to subscription instance.
	LicenseId string `protobuf:"bytes,1,opt,name=license_id,json=licenseId,proto3" json:"license_id,omitempty"`
	// License (vendor specific) payload.
	Payload       []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExternalLicense) Reset() {
	*x = ExternalLicense{}
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalLicense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalLicense) ProtoMessage() {}

func (x *ExternalLicense) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalLicense.ProtoReflect.Descriptor instead.
func (*ExternalLicense) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescGZIP(), []int{2}
}

func (x *ExternalLicense) GetLicenseId() string {
	if x != nil {
		return x.LicenseId
	}
	return ""
}

func (x *ExternalLicense) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto protoreflect.FileDescriptor

const file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDesc = "" +
	"\n" +
	"Byandex/cloud/marketplace/licensemanager/v1/external_instance.proto\x12*yandex.cloud.marketplace.licensemanager.v1\"\xa4\x03\n" +
	"\x10ExternalInstance\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12l\n" +
	"\n" +
	"properties\x18\x15 \x03(\v2L.yandex.cloud.marketplace.licensemanager.v1.ExternalInstance.PropertiesEntryR\n" +
	"properties\x12f\n" +
	"\fsubscription\x18\x16 \x01(\v2@.yandex.cloud.marketplace.licensemanager.v1.ExternalSubscriptionH\x00R\fsubscription\x12W\n" +
	"\alicense\x18\x17 \x01(\v2;.yandex.cloud.marketplace.licensemanager.v1.ExternalLicenseH\x00R\alicense\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\b\n" +
	"\x06vendorJ\x04\b\x02\x10\x15\"\x85\x01\n" +
	"\x14ExternalSubscription\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\x12\x1d\n" +
	"\n" +
	"license_id\x18\x02 \x01(\tR\tlicenseId\x12%\n" +
	"\x0eactivation_key\x18\x03 \x01(\tR\ractivationKey\"J\n" +
	"\x0fExternalLicense\x12\x1d\n" +
	"\n" +
	"license_id\x18\x01 \x01(\tR\tlicenseId\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayloadB\x8f\x01\n" +
	".yandex.cloud.api.marketplace.licensemanager.v1Z]github.com/yandex-cloud/go-genproto/yandex/cloud/marketplace/licensemanager/v1;licensemanagerb\x06proto3"

var (
	file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescOnce sync.Once
	file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescData []byte
)

func file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescGZIP() []byte {
	file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDesc), len(file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDesc)))
	})
	return file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescData
}

var file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_goTypes = []any{
	(*ExternalInstance)(nil),     // 0: yandex.cloud.marketplace.licensemanager.v1.ExternalInstance
	(*ExternalSubscription)(nil), // 1: yandex.cloud.marketplace.licensemanager.v1.ExternalSubscription
	(*ExternalLicense)(nil),      // 2: yandex.cloud.marketplace.licensemanager.v1.ExternalLicense
	nil,                          // 3: yandex.cloud.marketplace.licensemanager.v1.ExternalInstance.PropertiesEntry
}
var file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_depIdxs = []int32{
	3, // 0: yandex.cloud.marketplace.licensemanager.v1.ExternalInstance.properties:type_name -> yandex.cloud.marketplace.licensemanager.v1.ExternalInstance.PropertiesEntry
	1, // 1: yandex.cloud.marketplace.licensemanager.v1.ExternalInstance.subscription:type_name -> yandex.cloud.marketplace.licensemanager.v1.ExternalSubscription
	2, // 2: yandex.cloud.marketplace.licensemanager.v1.ExternalInstance.license:type_name -> yandex.cloud.marketplace.licensemanager.v1.ExternalLicense
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_init() }
func file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_init() {
	if File_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto != nil {
		return
	}
	file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[0].OneofWrappers = []any{
		(*ExternalInstance_Subscription)(nil),
		(*ExternalInstance_License)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDesc), len(file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes,
	}.Build()
	File_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto = out.File
	file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_goTypes = nil
	file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_depIdxs = nil
}

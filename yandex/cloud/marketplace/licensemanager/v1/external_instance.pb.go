// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: yandex/cloud/marketplace/licensemanager/v1/external_instance.proto

package licensemanager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ExternalInstance attachment to external service subscription.
type ExternalInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional external subscription name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Mapping of vendor defined properties in key, value format.
	Properties map[string]string `protobuf:"bytes,21,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are assignable to Vendor:
	//
	//	*ExternalInstance_Subscription
	//	*ExternalInstance_License
	Vendor isExternalInstance_Vendor `protobuf_oneof:"vendor"`
}

func (x *ExternalInstance) Reset() {
	*x = ExternalInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalInstance) ProtoMessage() {}

func (x *ExternalInstance) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalInstance.ProtoReflect.Descriptor instead.
func (*ExternalInstance) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescGZIP(), []int{0}
}

func (x *ExternalInstance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExternalInstance) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (m *ExternalInstance) GetVendor() isExternalInstance_Vendor {
	if m != nil {
		return m.Vendor
	}
	return nil
}

func (x *ExternalInstance) GetSubscription() *ExternalSubscription {
	if x, ok := x.GetVendor().(*ExternalInstance_Subscription); ok {
		return x.Subscription
	}
	return nil
}

func (x *ExternalInstance) GetLicense() *ExternalLicense {
	if x, ok := x.GetVendor().(*ExternalInstance_License); ok {
		return x.License
	}
	return nil
}

type isExternalInstance_Vendor interface {
	isExternalInstance_Vendor()
}

type ExternalInstance_Subscription struct {
	Subscription *ExternalSubscription `protobuf:"bytes,22,opt,name=subscription,proto3,oneof"`
}

type ExternalInstance_License struct {
	License *ExternalLicense `protobuf:"bytes,23,opt,name=license,proto3,oneof"`
}

func (*ExternalInstance_Subscription) isExternalInstance_Vendor() {}

func (*ExternalInstance_License) isExternalInstance_Vendor() {}

type ExternalSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// External subscription id.
	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	// Optional: paired license id for external subscription.
	LicenseId string `protobuf:"bytes,2,opt,name=license_id,json=licenseId,proto3" json:"license_id,omitempty"`
	// Optional: default activation key for external subscription.
	ActivationKey string `protobuf:"bytes,3,opt,name=activation_key,json=activationKey,proto3" json:"activation_key,omitempty"`
}

func (x *ExternalSubscription) Reset() {
	*x = ExternalSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalSubscription) ProtoMessage() {}

func (x *ExternalSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalSubscription.ProtoReflect.Descriptor instead.
func (*ExternalSubscription) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescGZIP(), []int{1}
}

func (x *ExternalSubscription) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *ExternalSubscription) GetLicenseId() string {
	if x != nil {
		return x.LicenseId
	}
	return ""
}

func (x *ExternalSubscription) GetActivationKey() string {
	if x != nil {
		return x.ActivationKey
	}
	return ""
}

type ExternalLicense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// External license bound to subscription instance.
	LicenseId string `protobuf:"bytes,1,opt,name=license_id,json=licenseId,proto3" json:"license_id,omitempty"`
	// License (vendor specific) payload.
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ExternalLicense) Reset() {
	*x = ExternalLicense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalLicense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalLicense) ProtoMessage() {}

func (x *ExternalLicense) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalLicense.ProtoReflect.Descriptor instead.
func (*ExternalLicense) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescGZIP(), []int{2}
}

func (x *ExternalLicense) GetLicenseId() string {
	if x != nil {
		return x.LicenseId
	}
	return ""
}

func (x *ExternalLicense) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto protoreflect.FileDescriptor

var file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDesc = []byte{
	0x0a, 0x42, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2f, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2a, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x22, 0xa4, 0x03, 0x0a, 0x10, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x6c, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x57, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x15, 0x22, 0x85, 0x01, 0x0a, 0x14, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22,
	0x4a, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x8f, 0x01, 0x0a, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x5a, 0x5d,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2f, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescOnce sync.Once
	file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescData = file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDesc
)

func file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescGZIP() []byte {
	file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescData)
	})
	return file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDescData
}

var file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_goTypes = []any{
	(*ExternalInstance)(nil),     // 0: yandex.cloud.marketplace.licensemanager.v1.ExternalInstance
	(*ExternalSubscription)(nil), // 1: yandex.cloud.marketplace.licensemanager.v1.ExternalSubscription
	(*ExternalLicense)(nil),      // 2: yandex.cloud.marketplace.licensemanager.v1.ExternalLicense
	nil,                          // 3: yandex.cloud.marketplace.licensemanager.v1.ExternalInstance.PropertiesEntry
}
var file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_depIdxs = []int32{
	3, // 0: yandex.cloud.marketplace.licensemanager.v1.ExternalInstance.properties:type_name -> yandex.cloud.marketplace.licensemanager.v1.ExternalInstance.PropertiesEntry
	1, // 1: yandex.cloud.marketplace.licensemanager.v1.ExternalInstance.subscription:type_name -> yandex.cloud.marketplace.licensemanager.v1.ExternalSubscription
	2, // 2: yandex.cloud.marketplace.licensemanager.v1.ExternalInstance.license:type_name -> yandex.cloud.marketplace.licensemanager.v1.ExternalLicense
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_init() }
func file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_init() {
	if File_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ExternalInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ExternalSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ExternalLicense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes[0].OneofWrappers = []any{
		(*ExternalInstance_Subscription)(nil),
		(*ExternalInstance_License)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_msgTypes,
	}.Build()
	File_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto = out.File
	file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_rawDesc = nil
	file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_goTypes = nil
	file_yandex_cloud_marketplace_licensemanager_v1_external_instance_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/marketplace/licensemanager/v1/lock_service.proto

package licensemanager

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetLockRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subscription lock.
	LockId        string `protobuf:"bytes,1,opt,name=lock_id,json=lockId,proto3" json:"lock_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLockRequest) Reset() {
	*x = GetLockRequest{}
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLockRequest) ProtoMessage() {}

func (x *GetLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLockRequest.ProtoReflect.Descriptor instead.
func (*GetLockRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetLockRequest) GetLockId() string {
	if x != nil {
		return x.LockId
	}
	return ""
}

type CreateLockRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subscription instance.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// ID of the resource to which the subscription will be locked.
	ResourceId    string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLockRequest) Reset() {
	*x = CreateLockRequest{}
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLockRequest) ProtoMessage() {}

func (x *CreateLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLockRequest.ProtoReflect.Descriptor instead.
func (*CreateLockRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateLockRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *CreateLockRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type EnsureLockRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subscription instance.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// ID of the resource to which the subscription will be locked.
	ResourceId    string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnsureLockRequest) Reset() {
	*x = EnsureLockRequest{}
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnsureLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnsureLockRequest) ProtoMessage() {}

func (x *EnsureLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnsureLockRequest.ProtoReflect.Descriptor instead.
func (*EnsureLockRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDescGZIP(), []int{2}
}

func (x *EnsureLockRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *EnsureLockRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type CreateLockMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subscription lock.
	LockId        string `protobuf:"bytes,1,opt,name=lock_id,json=lockId,proto3" json:"lock_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLockMetadata) Reset() {
	*x = CreateLockMetadata{}
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLockMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLockMetadata) ProtoMessage() {}

func (x *CreateLockMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLockMetadata.ProtoReflect.Descriptor instead.
func (*CreateLockMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateLockMetadata) GetLockId() string {
	if x != nil {
		return x.LockId
	}
	return ""
}

type EnsureLockMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subscription lock.
	LockId        string `protobuf:"bytes,1,opt,name=lock_id,json=lockId,proto3" json:"lock_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnsureLockMetadata) Reset() {
	*x = EnsureLockMetadata{}
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnsureLockMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnsureLockMetadata) ProtoMessage() {}

func (x *EnsureLockMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnsureLockMetadata.ProtoReflect.Descriptor instead.
func (*EnsureLockMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDescGZIP(), []int{4}
}

func (x *EnsureLockMetadata) GetLockId() string {
	if x != nil {
		return x.LockId
	}
	return ""
}

type DeleteLockRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subscription lock.
	LockId        string `protobuf:"bytes,1,opt,name=lock_id,json=lockId,proto3" json:"lock_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLockRequest) Reset() {
	*x = DeleteLockRequest{}
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLockRequest) ProtoMessage() {}

func (x *DeleteLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLockRequest.ProtoReflect.Descriptor instead.
func (*DeleteLockRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteLockRequest) GetLockId() string {
	if x != nil {
		return x.LockId
	}
	return ""
}

type DeleteLockMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subscription lock.
	LockId        string `protobuf:"bytes,1,opt,name=lock_id,json=lockId,proto3" json:"lock_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLockMetadata) Reset() {
	*x = DeleteLockMetadata{}
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLockMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLockMetadata) ProtoMessage() {}

func (x *DeleteLockMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLockMetadata.ProtoReflect.Descriptor instead.
func (*DeleteLockMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteLockMetadata) GetLockId() string {
	if x != nil {
		return x.LockId
	}
	return ""
}

type GetLockByInstanceAndResourceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subscription instance.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// ID of the resource to which the subscription will be locked.
	ResourceId    string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLockByInstanceAndResourceRequest) Reset() {
	*x = GetLockByInstanceAndResourceRequest{}
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLockByInstanceAndResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLockByInstanceAndResourceRequest) ProtoMessage() {}

func (x *GetLockByInstanceAndResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLockByInstanceAndResourceRequest.ProtoReflect.Descriptor instead.
func (*GetLockByInstanceAndResourceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetLockByInstanceAndResourceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *GetLockByInstanceAndResourceRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type ListLocksRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the resource that the subscription locks belong to.
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// ID of the folder that the subscription locks belong to.
	FolderId string `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than `page_size`, the service returns a [ListLocksResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value: 100.
	PageSize int64 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set `page_token` to the
	// [ListLocksResponse.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters subscription locks listed in the response.
	//
	// The expression must specify:
	// 1. The field name. Currently you can use filtering only on [Lock.product_id] field.
	// 2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
	// 3. The value. Must be in double quotes `""`. Must be 3-63 characters long and match the regular expression `^[a-z][-a-z0-9]{1,61}[a-z0-9]`.
	// Example of a filter: `product_id="my-product-id"`.
	Filter string `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	// Sorting order for the list of subscription locks.
	OrderBy       string `protobuf:"bytes,6,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLocksRequest) Reset() {
	*x = ListLocksRequest{}
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocksRequest) ProtoMessage() {}

func (x *ListLocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocksRequest.ProtoReflect.Descriptor instead.
func (*ListLocksRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListLocksRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ListLocksRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListLocksRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListLocksRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListLocksRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListLocksRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListLocksResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of subscription locks.
	Locks []*Lock `protobuf:"bytes,1,rep,name=locks,proto3" json:"locks,omitempty"`
	// Token for getting the next page of the list. If the number of results is greater than
	// the specified [ListLocksRequest.page_size], use `next_page_token` as the value
	// for the [ListLocksRequest.page_token] parameter in the next list request.
	//
	// Each subsequent page will have its own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLocksResponse) Reset() {
	*x = ListLocksResponse{}
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocksResponse) ProtoMessage() {}

func (x *ListLocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocksResponse.ProtoReflect.Descriptor instead.
func (*ListLocksResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListLocksResponse) GetLocks() []*Lock {
	if x != nil {
		return x.Locks
	}
	return nil
}

func (x *ListLocksResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDesc = "" +
	"\n" +
	"=yandex/cloud/marketplace/licensemanager/v1/lock_service.proto\x12*yandex.cloud.marketplace.licensemanager.v1\x1a\x1cgoogle/api/annotations.proto\x1a yandex/cloud/api/operation.proto\x1a5yandex/cloud/marketplace/licensemanager/v1/lock.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\"/\n" +
	"\x0eGetLockRequest\x12\x1d\n" +
	"\alock_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x06lockId\"a\n" +
	"\x11CreateLockRequest\x12%\n" +
	"\vinstance_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\n" +
	"instanceId\x12%\n" +
	"\vresource_id\x18\x02 \x01(\tB\x04\xe8\xc71\x01R\n" +
	"resourceId\"a\n" +
	"\x11EnsureLockRequest\x12%\n" +
	"\vinstance_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\n" +
	"instanceId\x12%\n" +
	"\vresource_id\x18\x02 \x01(\tB\x04\xe8\xc71\x01R\n" +
	"resourceId\"-\n" +
	"\x12CreateLockMetadata\x12\x17\n" +
	"\alock_id\x18\x01 \x01(\tR\x06lockId\"-\n" +
	"\x12EnsureLockMetadata\x12\x17\n" +
	"\alock_id\x18\x01 \x01(\tR\x06lockId\"2\n" +
	"\x11DeleteLockRequest\x12\x1d\n" +
	"\alock_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x06lockId\"-\n" +
	"\x12DeleteLockMetadata\x12\x17\n" +
	"\alock_id\x18\x01 \x01(\tR\x06lockId\"s\n" +
	"#GetLockByInstanceAndResourceRequest\x12%\n" +
	"\vinstance_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\n" +
	"instanceId\x12%\n" +
	"\vresource_id\x18\x02 \x01(\tB\x04\xe8\xc71\x01R\n" +
	"resourceId\"\xf9\x01\n" +
	"\x10ListLocksRequest\x12%\n" +
	"\vresource_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\n" +
	"resourceId\x12!\n" +
	"\tfolder_id\x18\x02 \x01(\tB\x04\xe8\xc71\x01R\bfolderId\x12'\n" +
	"\tpage_size\x18\x03 \x01(\x03B\n" +
	"\xfa\xc71\x060-1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x05 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\x12$\n" +
	"\border_by\x18\x06 \x01(\tB\t\x8a\xc81\x05<=100R\aorderBy\"\x83\x01\n" +
	"\x11ListLocksResponse\x12F\n" +
	"\x05locks\x18\x01 \x03(\v20.yandex.cloud.marketplace.licensemanager.v1.LockR\x05locks\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken2\xbd\t\n" +
	"\vLockService\x12\xac\x01\n" +
	"\x03Get\x12:.yandex.cloud.marketplace.licensemanager.v1.GetLockRequest\x1a0.yandex.cloud.marketplace.licensemanager.v1.Lock\"7\x82\xd3\xe4\x93\x021\x12//marketplace/license-manager/v1/locks/{lock_id}\x12\xe5\x01\n" +
	"\x18GetByInstanceAndResource\x12O.yandex.cloud.marketplace.licensemanager.v1.GetLockByInstanceAndResourceRequest\x1a0.yandex.cloud.marketplace.licensemanager.v1.Lock\"F\x82\xd3\xe4\x93\x02@\x12>/marketplace/license-manager/v1/locks:getByInstanceAndResource\x12\xb2\x01\n" +
	"\x04List\x12<.yandex.cloud.marketplace.licensemanager.v1.ListLocksRequest\x1a=.yandex.cloud.marketplace.licensemanager.v1.ListLocksResponse\"-\x82\xd3\xe4\x93\x02'\x12%/marketplace/license-manager/v1/locks\x12\xba\x01\n" +
	"\x06Create\x12=.yandex.cloud.marketplace.licensemanager.v1.CreateLockRequest\x1a!.yandex.cloud.operation.Operation\"N\xb2\xd2*\x1a\n" +
	"\x12CreateLockMetadata\x12\x04Lock\x82\xd3\xe4\x93\x02*:\x01*\"%/marketplace/license-manager/v1/locks\x12\xcf\x01\n" +
	"\x06Ensure\x12=.yandex.cloud.marketplace.licensemanager.v1.EnsureLockRequest\x1a!.yandex.cloud.operation.Operation\"c\xb2\xd2*\x1a\n" +
	"\x12EnsureLockMetadata\x12\x04Lock\x82\xd3\xe4\x93\x02?:\x01*\":/marketplace/license-manager/v1/locks/{instance_id}:ensure\x12\xd2\x01\n" +
	"\x06Delete\x12=.yandex.cloud.marketplace.licensemanager.v1.DeleteLockRequest\x1a!.yandex.cloud.operation.Operation\"f\xb2\xd2*+\n" +
	"\x12DeleteLockMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x021*//marketplace/license-manager/v1/locks/{lock_id}B\x8f\x01\n" +
	".yandex.cloud.api.marketplace.licensemanager.v1Z]github.com/yandex-cloud/go-genproto/yandex/cloud/marketplace/licensemanager/v1;licensemanagerb\x06proto3"

var (
	file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDescData []byte
)

func file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDesc), len(file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDesc)))
	})
	return file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDescData
}

var file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_goTypes = []any{
	(*GetLockRequest)(nil),                      // 0: yandex.cloud.marketplace.licensemanager.v1.GetLockRequest
	(*CreateLockRequest)(nil),                   // 1: yandex.cloud.marketplace.licensemanager.v1.CreateLockRequest
	(*EnsureLockRequest)(nil),                   // 2: yandex.cloud.marketplace.licensemanager.v1.EnsureLockRequest
	(*CreateLockMetadata)(nil),                  // 3: yandex.cloud.marketplace.licensemanager.v1.CreateLockMetadata
	(*EnsureLockMetadata)(nil),                  // 4: yandex.cloud.marketplace.licensemanager.v1.EnsureLockMetadata
	(*DeleteLockRequest)(nil),                   // 5: yandex.cloud.marketplace.licensemanager.v1.DeleteLockRequest
	(*DeleteLockMetadata)(nil),                  // 6: yandex.cloud.marketplace.licensemanager.v1.DeleteLockMetadata
	(*GetLockByInstanceAndResourceRequest)(nil), // 7: yandex.cloud.marketplace.licensemanager.v1.GetLockByInstanceAndResourceRequest
	(*ListLocksRequest)(nil),                    // 8: yandex.cloud.marketplace.licensemanager.v1.ListLocksRequest
	(*ListLocksResponse)(nil),                   // 9: yandex.cloud.marketplace.licensemanager.v1.ListLocksResponse
	(*Lock)(nil),                                // 10: yandex.cloud.marketplace.licensemanager.v1.Lock
	(*operation.Operation)(nil),                 // 11: yandex.cloud.operation.Operation
}
var file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_depIdxs = []int32{
	10, // 0: yandex.cloud.marketplace.licensemanager.v1.ListLocksResponse.locks:type_name -> yandex.cloud.marketplace.licensemanager.v1.Lock
	0,  // 1: yandex.cloud.marketplace.licensemanager.v1.LockService.Get:input_type -> yandex.cloud.marketplace.licensemanager.v1.GetLockRequest
	7,  // 2: yandex.cloud.marketplace.licensemanager.v1.LockService.GetByInstanceAndResource:input_type -> yandex.cloud.marketplace.licensemanager.v1.GetLockByInstanceAndResourceRequest
	8,  // 3: yandex.cloud.marketplace.licensemanager.v1.LockService.List:input_type -> yandex.cloud.marketplace.licensemanager.v1.ListLocksRequest
	1,  // 4: yandex.cloud.marketplace.licensemanager.v1.LockService.Create:input_type -> yandex.cloud.marketplace.licensemanager.v1.CreateLockRequest
	2,  // 5: yandex.cloud.marketplace.licensemanager.v1.LockService.Ensure:input_type -> yandex.cloud.marketplace.licensemanager.v1.EnsureLockRequest
	5,  // 6: yandex.cloud.marketplace.licensemanager.v1.LockService.Delete:input_type -> yandex.cloud.marketplace.licensemanager.v1.DeleteLockRequest
	10, // 7: yandex.cloud.marketplace.licensemanager.v1.LockService.Get:output_type -> yandex.cloud.marketplace.licensemanager.v1.Lock
	10, // 8: yandex.cloud.marketplace.licensemanager.v1.LockService.GetByInstanceAndResource:output_type -> yandex.cloud.marketplace.licensemanager.v1.Lock
	9,  // 9: yandex.cloud.marketplace.licensemanager.v1.LockService.List:output_type -> yandex.cloud.marketplace.licensemanager.v1.ListLocksResponse
	11, // 10: yandex.cloud.marketplace.licensemanager.v1.LockService.Create:output_type -> yandex.cloud.operation.Operation
	11, // 11: yandex.cloud.marketplace.licensemanager.v1.LockService.Ensure:output_type -> yandex.cloud.operation.Operation
	11, // 12: yandex.cloud.marketplace.licensemanager.v1.LockService.Delete:output_type -> yandex.cloud.operation.Operation
	7,  // [7:13] is the sub-list for method output_type
	1,  // [1:7] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_init() }
func file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_init() {
	if File_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto != nil {
		return
	}
	file_yandex_cloud_marketplace_licensemanager_v1_lock_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDesc), len(file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto = out.File
	file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_goTypes = nil
	file_yandex_cloud_marketplace_licensemanager_v1_lock_service_proto_depIdxs = nil
}

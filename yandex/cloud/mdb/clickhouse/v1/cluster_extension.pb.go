// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: yandex/cloud/mdb/clickhouse/v1/cluster_extension.proto

package clickhouse

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClusterExtension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Extension name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. ID of the ClickHouse cluster.
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Required. Extension version.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ClusterExtension) Reset() {
	*x = ClusterExtension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterExtension) ProtoMessage() {}

func (x *ClusterExtension) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterExtension.ProtoReflect.Descriptor instead.
func (*ClusterExtension) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_rawDescGZIP(), []int{0}
}

func (x *ClusterExtension) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClusterExtension) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ClusterExtension) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ClusterExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extensions []*ClusterExtension `protobuf:"bytes,1,rep,name=extensions,proto3" json:"extensions,omitempty"`
}

func (x *ClusterExtensions) Reset() {
	*x = ClusterExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterExtensions) ProtoMessage() {}

func (x *ClusterExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterExtensions.ProtoReflect.Descriptor instead.
func (*ClusterExtensions) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_rawDescGZIP(), []int{1}
}

func (x *ClusterExtensions) GetExtensions() []*ClusterExtension {
	if x != nil {
		return x.Extensions
	}
	return nil
}

var File_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto protoreflect.FileDescriptor

var file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_rawDesc = []byte{
	0x0a, 0x36, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6d,
	0x64, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x64, 0x62, 0x2e, 0x63, 0x6c, 0x69, 0x63, 0x6b,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1d, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x10, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe8, 0xc7, 0x31, 0x01,
	0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x36, 0x33, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b,
	0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0xe8, 0xc7, 0x31, 0x01, 0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30,
	0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0xc7,
	0x31, 0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x11, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x50, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6d, 0x64, 0x62, 0x2e, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x42, 0x73, 0x0a, 0x22, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x64, 0x62, 0x2e, 0x63, 0x6c, 0x69, 0x63, 0x6b,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6d, 0x64, 0x62, 0x2f, 0x63,
	0x6c, 0x69, 0x63, 0x6b, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6c, 0x69,
	0x63, 0x6b, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_rawDescOnce sync.Once
	file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_rawDescData = file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_rawDesc
)

func file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_rawDescGZIP() []byte {
	file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_rawDescData)
	})
	return file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_rawDescData
}

var file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_goTypes = []any{
	(*ClusterExtension)(nil),  // 0: yandex.cloud.mdb.clickhouse.v1.ClusterExtension
	(*ClusterExtensions)(nil), // 1: yandex.cloud.mdb.clickhouse.v1.ClusterExtensions
}
var file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_depIdxs = []int32{
	0, // 0: yandex.cloud.mdb.clickhouse.v1.ClusterExtensions.extensions:type_name -> yandex.cloud.mdb.clickhouse.v1.ClusterExtension
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_init() }
func file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_init() {
	if File_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ClusterExtension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ClusterExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_msgTypes,
	}.Build()
	File_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto = out.File
	file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_rawDesc = nil
	file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_goTypes = nil
	file_yandex_cloud_mdb_clickhouse_v1_cluster_extension_proto_depIdxs = nil
}

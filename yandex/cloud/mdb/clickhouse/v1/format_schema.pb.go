// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/mdb/clickhouse/v1/format_schema.proto

package clickhouse

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FormatSchemaType int32

const (
	FormatSchemaType_FORMAT_SCHEMA_TYPE_UNSPECIFIED FormatSchemaType = 0
	FormatSchemaType_FORMAT_SCHEMA_TYPE_PROTOBUF    FormatSchemaType = 1
	FormatSchemaType_FORMAT_SCHEMA_TYPE_CAPNPROTO   FormatSchemaType = 2
)

// Enum value maps for FormatSchemaType.
var (
	FormatSchemaType_name = map[int32]string{
		0: "FORMAT_SCHEMA_TYPE_UNSPECIFIED",
		1: "FORMAT_SCHEMA_TYPE_PROTOBUF",
		2: "FORMAT_SCHEMA_TYPE_CAPNPROTO",
	}
	FormatSchemaType_value = map[string]int32{
		"FORMAT_SCHEMA_TYPE_UNSPECIFIED": 0,
		"FORMAT_SCHEMA_TYPE_PROTOBUF":    1,
		"FORMAT_SCHEMA_TYPE_CAPNPROTO":   2,
	}
)

func (x FormatSchemaType) Enum() *FormatSchemaType {
	p := new(FormatSchemaType)
	*p = x
	return p
}

func (x FormatSchemaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FormatSchemaType) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_enumTypes[0].Descriptor()
}

func (FormatSchemaType) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_enumTypes[0]
}

func (x FormatSchemaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FormatSchemaType.Descriptor instead.
func (FormatSchemaType) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_rawDescGZIP(), []int{0}
}

type FormatSchema struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Format schema name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// ClickHouse cluster ID.
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Schema type. Possible values are the following:
	//
	// * FORMAT_SCHEMA_TYPE_PROTOBUF - [Protobuf](https://protobuf.dev/) data format (including [ProtobufSingle](https://clickhouse.com/docs/en/interfaces/formats#protobufsingle)).
	// * FORMAT_SCHEMA_TYPE_CAPNPROTO - [Cap'n Proto](https://capnproto.org/) data format.
	Type FormatSchemaType `protobuf:"varint,3,opt,name=type,proto3,enum=yandex.cloud.mdb.clickhouse.v1.FormatSchemaType" json:"type,omitempty"`
	// Link to the file of a format schema in Yandex Object Storage. Managed Service for ClickHouse works only with format schemas imported to Object Storage.
	Uri           string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FormatSchema) Reset() {
	*x = FormatSchema{}
	mi := &file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FormatSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatSchema) ProtoMessage() {}

func (x *FormatSchema) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatSchema.ProtoReflect.Descriptor instead.
func (*FormatSchema) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_rawDescGZIP(), []int{0}
}

func (x *FormatSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FormatSchema) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *FormatSchema) GetType() FormatSchemaType {
	if x != nil {
		return x.Type
	}
	return FormatSchemaType_FORMAT_SCHEMA_TYPE_UNSPECIFIED
}

func (x *FormatSchema) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

var File_yandex_cloud_mdb_clickhouse_v1_format_schema_proto protoreflect.FileDescriptor

const file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_rawDesc = "" +
	"\n" +
	"2yandex/cloud/mdb/clickhouse/v1/format_schema.proto\x12\x1eyandex.cloud.mdb.clickhouse.v1\"\x99\x01\n" +
	"\fFormatSchema\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x02 \x01(\tR\tclusterId\x12D\n" +
	"\x04type\x18\x03 \x01(\x0e20.yandex.cloud.mdb.clickhouse.v1.FormatSchemaTypeR\x04type\x12\x10\n" +
	"\x03uri\x18\x04 \x01(\tR\x03uri*y\n" +
	"\x10FormatSchemaType\x12\"\n" +
	"\x1eFORMAT_SCHEMA_TYPE_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bFORMAT_SCHEMA_TYPE_PROTOBUF\x10\x01\x12 \n" +
	"\x1cFORMAT_SCHEMA_TYPE_CAPNPROTO\x10\x02Bs\n" +
	"\"yandex.cloud.api.mdb.clickhouse.v1ZMgithub.com/yandex-cloud/go-genproto/yandex/cloud/mdb/clickhouse/v1;clickhouseb\x06proto3"

var (
	file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_rawDescOnce sync.Once
	file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_rawDescData []byte
)

func file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_rawDescGZIP() []byte {
	file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_rawDesc), len(file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_rawDesc)))
	})
	return file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_rawDescData
}

var file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_goTypes = []any{
	(FormatSchemaType)(0), // 0: yandex.cloud.mdb.clickhouse.v1.FormatSchemaType
	(*FormatSchema)(nil),  // 1: yandex.cloud.mdb.clickhouse.v1.FormatSchema
}
var file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_depIdxs = []int32{
	0, // 0: yandex.cloud.mdb.clickhouse.v1.FormatSchema.type:type_name -> yandex.cloud.mdb.clickhouse.v1.FormatSchemaType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_init() }
func file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_init() {
	if File_yandex_cloud_mdb_clickhouse_v1_format_schema_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_rawDesc), len(file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_msgTypes,
	}.Build()
	File_yandex_cloud_mdb_clickhouse_v1_format_schema_proto = out.File
	file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_goTypes = nil
	file_yandex_cloud_mdb_clickhouse_v1_format_schema_proto_depIdxs = nil
}

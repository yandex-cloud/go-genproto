// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/mdb/elasticsearch/v1/cluster_service.proto

package elasticsearch

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	config "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/elasticsearch/v1/config"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListClusterLogsRequest_ServiceType int32

const (
	ListClusterLogsRequest_SERVICE_TYPE_UNSPECIFIED ListClusterLogsRequest_ServiceType = 0
	ListClusterLogsRequest_ELASTICSEARCH            ListClusterLogsRequest_ServiceType = 1
	ListClusterLogsRequest_KIBANA                   ListClusterLogsRequest_ServiceType = 2
)

// Enum value maps for ListClusterLogsRequest_ServiceType.
var (
	ListClusterLogsRequest_ServiceType_name = map[int32]string{
		0: "SERVICE_TYPE_UNSPECIFIED",
		1: "ELASTICSEARCH",
		2: "KIBANA",
	}
	ListClusterLogsRequest_ServiceType_value = map[string]int32{
		"SERVICE_TYPE_UNSPECIFIED": 0,
		"ELASTICSEARCH":            1,
		"KIBANA":                   2,
	}
)

func (x ListClusterLogsRequest_ServiceType) Enum() *ListClusterLogsRequest_ServiceType {
	p := new(ListClusterLogsRequest_ServiceType)
	*p = x
	return p
}

func (x ListClusterLogsRequest_ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListClusterLogsRequest_ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_enumTypes[0].Descriptor()
}

func (ListClusterLogsRequest_ServiceType) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_enumTypes[0]
}

func (x ListClusterLogsRequest_ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListClusterLogsRequest_ServiceType.Descriptor instead.
func (ListClusterLogsRequest_ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{9, 0}
}

type StreamClusterLogsRequest_ServiceType int32

const (
	StreamClusterLogsRequest_SERVICE_TYPE_UNSPECIFIED StreamClusterLogsRequest_ServiceType = 0
	StreamClusterLogsRequest_ELASTICSEARCH            StreamClusterLogsRequest_ServiceType = 1
	StreamClusterLogsRequest_KIBANA                   StreamClusterLogsRequest_ServiceType = 2
)

// Enum value maps for StreamClusterLogsRequest_ServiceType.
var (
	StreamClusterLogsRequest_ServiceType_name = map[int32]string{
		0: "SERVICE_TYPE_UNSPECIFIED",
		1: "ELASTICSEARCH",
		2: "KIBANA",
	}
	StreamClusterLogsRequest_ServiceType_value = map[string]int32{
		"SERVICE_TYPE_UNSPECIFIED": 0,
		"ELASTICSEARCH":            1,
		"KIBANA":                   2,
	}
)

func (x StreamClusterLogsRequest_ServiceType) Enum() *StreamClusterLogsRequest_ServiceType {
	p := new(StreamClusterLogsRequest_ServiceType)
	*p = x
	return p
}

func (x StreamClusterLogsRequest_ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamClusterLogsRequest_ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_enumTypes[1].Descriptor()
}

func (StreamClusterLogsRequest_ServiceType) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_enumTypes[1]
}

func (x StreamClusterLogsRequest_ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamClusterLogsRequest_ServiceType.Descriptor instead.
func (StreamClusterLogsRequest_ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{13, 0}
}

type RescheduleMaintenanceRequest_RescheduleType int32

const (
	RescheduleMaintenanceRequest_RESCHEDULE_TYPE_UNSPECIFIED RescheduleMaintenanceRequest_RescheduleType = 0
	RescheduleMaintenanceRequest_IMMEDIATE                   RescheduleMaintenanceRequest_RescheduleType = 1
	RescheduleMaintenanceRequest_NEXT_AVAILABLE_WINDOW       RescheduleMaintenanceRequest_RescheduleType = 2
	RescheduleMaintenanceRequest_SPECIFIC_TIME               RescheduleMaintenanceRequest_RescheduleType = 3
)

// Enum value maps for RescheduleMaintenanceRequest_RescheduleType.
var (
	RescheduleMaintenanceRequest_RescheduleType_name = map[int32]string{
		0: "RESCHEDULE_TYPE_UNSPECIFIED",
		1: "IMMEDIATE",
		2: "NEXT_AVAILABLE_WINDOW",
		3: "SPECIFIC_TIME",
	}
	RescheduleMaintenanceRequest_RescheduleType_value = map[string]int32{
		"RESCHEDULE_TYPE_UNSPECIFIED": 0,
		"IMMEDIATE":                   1,
		"NEXT_AVAILABLE_WINDOW":       2,
		"SPECIFIC_TIME":               3,
	}
)

func (x RescheduleMaintenanceRequest_RescheduleType) Enum() *RescheduleMaintenanceRequest_RescheduleType {
	p := new(RescheduleMaintenanceRequest_RescheduleType)
	*p = x
	return p
}

func (x RescheduleMaintenanceRequest_RescheduleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RescheduleMaintenanceRequest_RescheduleType) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_enumTypes[2].Descriptor()
}

func (RescheduleMaintenanceRequest_RescheduleType) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_enumTypes[2]
}

func (x RescheduleMaintenanceRequest_RescheduleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RescheduleMaintenanceRequest_RescheduleType.Descriptor instead.
func (RescheduleMaintenanceRequest_RescheduleType) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{32, 0}
}

type GetClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster to return.
	//
	// To get the cluster ID, make a [ClusterService.List] request.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterRequest) Reset() {
	*x = GetClusterRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterRequest) ProtoMessage() {}

func (x *GetClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterRequest.ProtoReflect.Descriptor instead.
func (*GetClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type ListClustersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to list Elasticsearch clusters in.
	//
	// To get the folder ID, make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// The maximum number of results per page to return.
	// If the number of available results is larger than `page_size`, the service returns a [ListClustersResponse.next_page_token] that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token.
	// To get the next page of results, set `page_token` to the [ListClustersResponse.next_page_token] returned by the previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	//
	// The expression must specify:
	// 1. The field name to filter by. Currently you can only use filtering with the [Cluster.name] field.
	// 2. An `=` operator.
	// 3. The value in double quotes (`"`). Must be 1-63 characters long and match the regular expression `[a-zA-Z0-9_-]+`.
	//
	// Example of a filter: `name NOT IN 'test,beta'`.
	Filter        string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersRequest) Reset() {
	*x = ListClustersRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersRequest) ProtoMessage() {}

func (x *ListClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersRequest.ProtoReflect.Descriptor instead.
func (*ListClustersRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListClustersRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListClustersRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClustersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListClustersRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListClustersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of Elasticsearch clusters.
	Clusters []*Cluster `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	// Token that allows you to get the next page of results for list requests.
	//
	// If the number of results is larger than [ListClustersRequest.page_size], use `next_page_token` as the value
	// for the [ListClustersRequest.page_token] parameter in the next list request.
	// Each subsequent list request will have its own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersResponse) Reset() {
	*x = ListClustersResponse{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersResponse) ProtoMessage() {}

func (x *ListClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersResponse.ProtoReflect.Descriptor instead.
func (*ListClustersResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListClustersResponse) GetClusters() []*Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *ListClustersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to create the Elasticsearch cluster in.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Name of the Elasticsearch cluster. The name must be unique within the folder.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the Elasticsearch cluster.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Custom labels for the Elasticsearch cluster as `key:value` pairs.
	//
	// For example, "project": "mvp" or "source": "dictionary".
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Deployment environment of the Elasticsearch cluster.
	Environment Cluster_Environment `protobuf:"varint,5,opt,name=environment,proto3,enum=yandex.cloud.mdb.elasticsearch.v1.Cluster_Environment" json:"environment,omitempty"`
	// Elasticsearch and hosts configuration for the cluster.
	ConfigSpec *ConfigSpec `protobuf:"bytes,6,opt,name=config_spec,json=configSpec,proto3" json:"config_spec,omitempty"`
	// One or more descriptions of users to be created in Elasticsearch cluster.
	UserSpecs []*UserSpec `protobuf:"bytes,8,rep,name=user_specs,json=userSpecs,proto3" json:"user_specs,omitempty"` // optional, depricated will be removed in future versions
	// One or more configurations of hosts to be created in the Elasticsearch cluster.
	HostSpecs []*HostSpec `protobuf:"bytes,9,rep,name=host_specs,json=hostSpecs,proto3" json:"host_specs,omitempty"`
	// ID of the network to create the Elasticsearch cluster in.
	NetworkId string `protobuf:"bytes,10,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// User security groups
	SecurityGroupIds []string `protobuf:"bytes,11,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
	// ID of the service account used for access to Object Storage.
	ServiceAccountId string `protobuf:"bytes,12,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Deletion Protection inhibits deletion of the cluster
	DeletionProtection bool `protobuf:"varint,13,opt,name=deletion_protection,json=deletionProtection,proto3" json:"deletion_protection,omitempty"`
	// Window of maintenance operations.
	MaintenanceWindow *MaintenanceWindow `protobuf:"bytes,14,opt,name=maintenance_window,json=maintenanceWindow,proto3" json:"maintenance_window,omitempty"`
	ExtensionSpecs    []*ExtensionSpec   `protobuf:"bytes,15,rep,name=extension_specs,json=extensionSpecs,proto3" json:"extension_specs,omitempty"` // optional
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateClusterRequest) Reset() {
	*x = CreateClusterRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterRequest) ProtoMessage() {}

func (x *CreateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterRequest.ProtoReflect.Descriptor instead.
func (*CreateClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateClusterRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *CreateClusterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateClusterRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateClusterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateClusterRequest) GetEnvironment() Cluster_Environment {
	if x != nil {
		return x.Environment
	}
	return Cluster_ENVIRONMENT_UNSPECIFIED
}

func (x *CreateClusterRequest) GetConfigSpec() *ConfigSpec {
	if x != nil {
		return x.ConfigSpec
	}
	return nil
}

func (x *CreateClusterRequest) GetUserSpecs() []*UserSpec {
	if x != nil {
		return x.UserSpecs
	}
	return nil
}

func (x *CreateClusterRequest) GetHostSpecs() []*HostSpec {
	if x != nil {
		return x.HostSpecs
	}
	return nil
}

func (x *CreateClusterRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *CreateClusterRequest) GetSecurityGroupIds() []string {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

func (x *CreateClusterRequest) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *CreateClusterRequest) GetDeletionProtection() bool {
	if x != nil {
		return x.DeletionProtection
	}
	return false
}

func (x *CreateClusterRequest) GetMaintenanceWindow() *MaintenanceWindow {
	if x != nil {
		return x.MaintenanceWindow
	}
	return nil
}

func (x *CreateClusterRequest) GetExtensionSpecs() []*ExtensionSpec {
	if x != nil {
		return x.ExtensionSpecs
	}
	return nil
}

type CreateClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster that is being created.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateClusterMetadata) Reset() {
	*x = CreateClusterMetadata{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterMetadata) ProtoMessage() {}

func (x *CreateClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterMetadata.ProtoReflect.Descriptor instead.
func (*CreateClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type UpdateClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster to update.
	//
	// To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
	ClusterId  string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// New description of the Elasticsearch cluster.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Custom labels for the Elasticsearch cluster as `key:value` pairs.
	//
	// For example, "project": "mvp" or "source": "dictionary".
	//
	// The new set of labels will completely replace the old ones.
	// To add a label, request the current set with the [ClusterService.Get] method, then send an [ClusterService.Update] request with the new label added to the set.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// New configuration and resources for hosts in the Elasticsearch cluster.
	//
	// Use [update_mask] to prevent reverting all cluster settings that are not listed in `config_spec` to their default values.
	ConfigSpec *ConfigSpecUpdate `protobuf:"bytes,5,opt,name=config_spec,json=configSpec,proto3" json:"config_spec,omitempty"`
	// New name for the Elasticsearch cluster.
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// User security groups
	SecurityGroupIds []string `protobuf:"bytes,7,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
	// ID of the service account used for access to Object Storage.
	ServiceAccountId string `protobuf:"bytes,8,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Deletion Protection inhibits deletion of the cluster
	DeletionProtection bool `protobuf:"varint,9,opt,name=deletion_protection,json=deletionProtection,proto3" json:"deletion_protection,omitempty"`
	// Window of maintenance operations.
	MaintenanceWindow *MaintenanceWindow `protobuf:"bytes,10,opt,name=maintenance_window,json=maintenanceWindow,proto3" json:"maintenance_window,omitempty"`
	// ID of the network to move the cluster to.
	NetworkId     string `protobuf:"bytes,11,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateClusterRequest) Reset() {
	*x = UpdateClusterRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterRequest) ProtoMessage() {}

func (x *UpdateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateClusterRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateClusterRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateClusterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateClusterRequest) GetConfigSpec() *ConfigSpecUpdate {
	if x != nil {
		return x.ConfigSpec
	}
	return nil
}

func (x *UpdateClusterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateClusterRequest) GetSecurityGroupIds() []string {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

func (x *UpdateClusterRequest) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *UpdateClusterRequest) GetDeletionProtection() bool {
	if x != nil {
		return x.DeletionProtection
	}
	return false
}

func (x *UpdateClusterRequest) GetMaintenanceWindow() *MaintenanceWindow {
	if x != nil {
		return x.MaintenanceWindow
	}
	return nil
}

func (x *UpdateClusterRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

type UpdateClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster that is being updated.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateClusterMetadata) Reset() {
	*x = UpdateClusterMetadata{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterMetadata) ProtoMessage() {}

func (x *UpdateClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterMetadata.ProtoReflect.Descriptor instead.
func (*UpdateClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type DeleteClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster to delete.
	//
	// To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteClusterRequest) Reset() {
	*x = DeleteClusterRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterRequest) ProtoMessage() {}

func (x *DeleteClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterRequest.ProtoReflect.Descriptor instead.
func (*DeleteClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type DeleteClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster that is being deleted.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteClusterMetadata) Reset() {
	*x = DeleteClusterMetadata{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterMetadata) ProtoMessage() {}

func (x *DeleteClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterMetadata.ProtoReflect.Descriptor instead.
func (*DeleteClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type ListClusterLogsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster to request logs for.
	//
	// To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Columns from the logs table to request.
	//
	// If no columns are specified, full log records are returned.
	ColumnFilter []string `protobuf:"bytes,2,rep,name=column_filter,json=columnFilter,proto3" json:"column_filter,omitempty"`
	// Start timestamp for the logs request.
	FromTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=from_time,json=fromTime,proto3" json:"from_time,omitempty"`
	// End timestamp for the logs request.
	ToTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=to_time,json=toTime,proto3" json:"to_time,omitempty"`
	// The maximum number of results per page to return.
	//
	// If the number of available results is larger than `page_size`, the service returns a [ListClusterLogsResponse.next_page_token] that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token.
	//
	// To get the next page of results, set `page_token` to the [ListClusterLogsResponse.next_page_token] returned by the previous list request.
	PageToken string `protobuf:"bytes,6,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The flag that defines behavior of providing the next page token.
	//
	// If this flag is set to `true`, this API method will always return [ListClusterLogsResponse.next_page_token], even if current page is empty.
	AlwaysNextPageToken bool `protobuf:"varint,7,opt,name=always_next_page_token,json=alwaysNextPageToken,proto3" json:"always_next_page_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	//
	// The expression must specify:
	// 1. The field name to filter by. Currently filtering can be applied to the `hostname` field.
	// 2. An `=` operator.
	// 3. The value in double quotes (`"`). Must be 1-63 characters long and match the regular expression `[a-z0-9.-]{1,61}`.
	//
	// Example of a filter: `message.hostname='node1.db.cloud.yandex.net'`
	Filter string `protobuf:"bytes,8,opt,name=filter,proto3" json:"filter,omitempty"`
	// Type of the service to request logs about.
	ServiceType   ListClusterLogsRequest_ServiceType `protobuf:"varint,9,opt,name=service_type,json=serviceType,proto3,enum=yandex.cloud.mdb.elasticsearch.v1.ListClusterLogsRequest_ServiceType" json:"service_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterLogsRequest) Reset() {
	*x = ListClusterLogsRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterLogsRequest) ProtoMessage() {}

func (x *ListClusterLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterLogsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterLogsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListClusterLogsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListClusterLogsRequest) GetColumnFilter() []string {
	if x != nil {
		return x.ColumnFilter
	}
	return nil
}

func (x *ListClusterLogsRequest) GetFromTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FromTime
	}
	return nil
}

func (x *ListClusterLogsRequest) GetToTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ToTime
	}
	return nil
}

func (x *ListClusterLogsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterLogsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListClusterLogsRequest) GetAlwaysNextPageToken() bool {
	if x != nil {
		return x.AlwaysNextPageToken
	}
	return false
}

func (x *ListClusterLogsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListClusterLogsRequest) GetServiceType() ListClusterLogsRequest_ServiceType {
	if x != nil {
		return x.ServiceType
	}
	return ListClusterLogsRequest_SERVICE_TYPE_UNSPECIFIED
}

// A single log record.
type LogRecord struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Log record timestamp.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Contents of the log record.
	Message       map[string]string `protobuf:"bytes,2,rep,name=message,proto3" json:"message,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogRecord) Reset() {
	*x = LogRecord{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRecord) ProtoMessage() {}

func (x *LogRecord) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRecord.ProtoReflect.Descriptor instead.
func (*LogRecord) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{10}
}

func (x *LogRecord) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *LogRecord) GetMessage() map[string]string {
	if x != nil {
		return x.Message
	}
	return nil
}

type ListClusterLogsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Requested log records.
	Logs []*LogRecord `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	// Token that allows you to get the next page of results for list requests.
	//
	// If the number of results is larger than [ListClusterLogsRequest.page_size], use `next_page_token` as the value for the [ListClusterLogsRequest.page_token] query parameter in the next list request.
	// Each subsequent list request will have its own `next_page_token` to continue paging through the results.
	//
	// This value is interchangeable with [StreamLogRecord.next_record_token] from StreamLogs method.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterLogsResponse) Reset() {
	*x = ListClusterLogsResponse{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterLogsResponse) ProtoMessage() {}

func (x *ListClusterLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterLogsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterLogsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListClusterLogsResponse) GetLogs() []*LogRecord {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *ListClusterLogsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type StreamLogRecord struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// One of the requested log records.
	Record *LogRecord `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
	// This token allows you to continue streaming logs starting from the exact same record.
	//
	// To continue streaming, specify value of `next_record_token` as value for [StreamClusterLogsRequest.record_token] parameter in the next StreamLogs request.
	//
	// This value is interchangeable with [ListClusterLogsResponse.next_page_token] from ListLogs method.
	NextRecordToken string `protobuf:"bytes,2,opt,name=next_record_token,json=nextRecordToken,proto3" json:"next_record_token,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StreamLogRecord) Reset() {
	*x = StreamLogRecord{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamLogRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLogRecord) ProtoMessage() {}

func (x *StreamLogRecord) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLogRecord.ProtoReflect.Descriptor instead.
func (*StreamLogRecord) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{12}
}

func (x *StreamLogRecord) GetRecord() *LogRecord {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *StreamLogRecord) GetNextRecordToken() string {
	if x != nil {
		return x.NextRecordToken
	}
	return ""
}

type StreamClusterLogsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster.
	//
	// To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Columns from logs table to get in the response.
	//
	// If no columns are specified, full log records are returned.
	ColumnFilter []string `protobuf:"bytes,2,rep,name=column_filter,json=columnFilter,proto3" json:"column_filter,omitempty"`
	// Start timestamp for the logs request.
	FromTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=from_time,json=fromTime,proto3" json:"from_time,omitempty"`
	// End timestamp for the logs request.
	//
	// If this field is not set, all existing logs will be sent and then the new ones asthey appear.
	// In essence it has `tail -f` semantics.
	ToTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=to_time,json=toTime,proto3" json:"to_time,omitempty"`
	// Record token.
	//
	// Set `record_token` to the [StreamLogRecord.next_record_token] returned by a previous [ClusterService.StreamLogs] request to start streaming from next log record.
	RecordToken string `protobuf:"bytes,5,opt,name=record_token,json=recordToken,proto3" json:"record_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	//
	// The expression must specify:
	// 1. The field name to filter by. Currently filtering can be applied to the `hostname` field.
	// 2. An `=` operator.
	// 3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
	//
	// Example of a filter: `message.hostname='node1.db.cloud.yandex.net'`
	Filter string `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	// Type of the service to request logs about.
	ServiceType   StreamClusterLogsRequest_ServiceType `protobuf:"varint,7,opt,name=service_type,json=serviceType,proto3,enum=yandex.cloud.mdb.elasticsearch.v1.StreamClusterLogsRequest_ServiceType" json:"service_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamClusterLogsRequest) Reset() {
	*x = StreamClusterLogsRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamClusterLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamClusterLogsRequest) ProtoMessage() {}

func (x *StreamClusterLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamClusterLogsRequest.ProtoReflect.Descriptor instead.
func (*StreamClusterLogsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{13}
}

func (x *StreamClusterLogsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *StreamClusterLogsRequest) GetColumnFilter() []string {
	if x != nil {
		return x.ColumnFilter
	}
	return nil
}

func (x *StreamClusterLogsRequest) GetFromTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FromTime
	}
	return nil
}

func (x *StreamClusterLogsRequest) GetToTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ToTime
	}
	return nil
}

func (x *StreamClusterLogsRequest) GetRecordToken() string {
	if x != nil {
		return x.RecordToken
	}
	return ""
}

func (x *StreamClusterLogsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *StreamClusterLogsRequest) GetServiceType() StreamClusterLogsRequest_ServiceType {
	if x != nil {
		return x.ServiceType
	}
	return StreamClusterLogsRequest_SERVICE_TYPE_UNSPECIFIED
}

type ListClusterOperationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster to list operations for.
	//
	// To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The maximum number of results per page to return.
	//
	// If the number of available results is larger than `page_size`, the service returns a [ListClusterOperationsResponse.next_page_token] that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token.
	//
	// To get the next page of results, set `page_token` to the [ListClusterOperationsResponse.next_page_token] returned by the previous list request.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterOperationsRequest) Reset() {
	*x = ListClusterOperationsRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterOperationsRequest) ProtoMessage() {}

func (x *ListClusterOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterOperationsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterOperationsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListClusterOperationsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListClusterOperationsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterOperationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListClusterOperationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of operations for the specified Elasticsearch cluster.
	Operations []*operation.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	// Token that allows you to get the next page of results for list requests.
	//
	// If the number of results is larger than [ListClusterOperationsRequest.page_size], use the `next_page_token` as the value for the [ListClusterOperationsRequest.page_token] query parameter in the next list request.
	// Each subsequent list request will have its own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterOperationsResponse) Reset() {
	*x = ListClusterOperationsResponse{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterOperationsResponse) ProtoMessage() {}

func (x *ListClusterOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterOperationsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterOperationsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListClusterOperationsResponse) GetOperations() []*operation.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ListClusterOperationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListClusterHostsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster.
	//
	// To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The maximum number of results per page to return.
	//
	// If the number of available results is larger than `page_size`, the service returns a [ListClusterHostsResponse.next_page_token] that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token.
	//
	// To get the next page of results, set `page_token` to the [ListClusterHostsResponse.next_page_token] returned by the previous list request.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterHostsRequest) Reset() {
	*x = ListClusterHostsRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterHostsRequest) ProtoMessage() {}

func (x *ListClusterHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterHostsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterHostsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{16}
}

func (x *ListClusterHostsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListClusterHostsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterHostsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListClusterHostsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of hosts.
	Hosts []*Host `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	// Token that allows you to get the next page of results for list requests.
	//
	// If the number of results is larger than [ListClusterHostsRequest.page_size], use the `next_page_token` as the value for the [ListClusterHostsRequest.page_token] query parameter in the next list request.
	// Each subsequent list request will have its own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterHostsResponse) Reset() {
	*x = ListClusterHostsResponse{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterHostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterHostsResponse) ProtoMessage() {}

func (x *ListClusterHostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterHostsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterHostsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListClusterHostsResponse) GetHosts() []*Host {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *ListClusterHostsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type MoveClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster to move.
	//
	// To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// ID of the destination folder.
	DestinationFolderId string `protobuf:"bytes,2,opt,name=destination_folder_id,json=destinationFolderId,proto3" json:"destination_folder_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MoveClusterRequest) Reset() {
	*x = MoveClusterRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveClusterRequest) ProtoMessage() {}

func (x *MoveClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveClusterRequest.ProtoReflect.Descriptor instead.
func (*MoveClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{18}
}

func (x *MoveClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *MoveClusterRequest) GetDestinationFolderId() string {
	if x != nil {
		return x.DestinationFolderId
	}
	return ""
}

type MoveClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster being moved.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// ID of the source folder.
	SourceFolderId string `protobuf:"bytes,2,opt,name=source_folder_id,json=sourceFolderId,proto3" json:"source_folder_id,omitempty"`
	// ID of the destination folder.
	DestinationFolderId string `protobuf:"bytes,3,opt,name=destination_folder_id,json=destinationFolderId,proto3" json:"destination_folder_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MoveClusterMetadata) Reset() {
	*x = MoveClusterMetadata{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveClusterMetadata) ProtoMessage() {}

func (x *MoveClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveClusterMetadata.ProtoReflect.Descriptor instead.
func (*MoveClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{19}
}

func (x *MoveClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *MoveClusterMetadata) GetSourceFolderId() string {
	if x != nil {
		return x.SourceFolderId
	}
	return ""
}

func (x *MoveClusterMetadata) GetDestinationFolderId() string {
	if x != nil {
		return x.DestinationFolderId
	}
	return ""
}

type StartClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster to start.
	//
	// To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartClusterRequest) Reset() {
	*x = StartClusterRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartClusterRequest) ProtoMessage() {}

func (x *StartClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartClusterRequest.ProtoReflect.Descriptor instead.
func (*StartClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{20}
}

func (x *StartClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type StartClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartClusterMetadata) Reset() {
	*x = StartClusterMetadata{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartClusterMetadata) ProtoMessage() {}

func (x *StartClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartClusterMetadata.ProtoReflect.Descriptor instead.
func (*StartClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{21}
}

func (x *StartClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type StopClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster to stop.
	//
	// To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopClusterRequest) Reset() {
	*x = StopClusterRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopClusterRequest) ProtoMessage() {}

func (x *StopClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopClusterRequest.ProtoReflect.Descriptor instead.
func (*StopClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{22}
}

func (x *StopClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type StopClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopClusterMetadata) Reset() {
	*x = StopClusterMetadata{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopClusterMetadata) ProtoMessage() {}

func (x *StopClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopClusterMetadata.ProtoReflect.Descriptor instead.
func (*StopClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{23}
}

func (x *StopClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type HostSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the availability zone where the host resides.
	ZoneId string `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// ID of the subnet the host resides in.
	SubnetId string `protobuf:"bytes,2,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	// The flag that defines whether a public IP address is assigned to the host.
	//
	// If the value is `true`, then this host is available on the Internet via it's public IP address.
	AssignPublicIp bool `protobuf:"varint,3,opt,name=assign_public_ip,json=assignPublicIp,proto3" json:"assign_public_ip,omitempty"`
	// Host type.
	Type Host_Type `protobuf:"varint,4,opt,name=type,proto3,enum=yandex.cloud.mdb.elasticsearch.v1.Host_Type" json:"type,omitempty"`
	// The shard name to create on the host.
	ShardName     string `protobuf:"bytes,5,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostSpec) Reset() {
	*x = HostSpec{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSpec) ProtoMessage() {}

func (x *HostSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostSpec.ProtoReflect.Descriptor instead.
func (*HostSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{24}
}

func (x *HostSpec) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *HostSpec) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *HostSpec) GetAssignPublicIp() bool {
	if x != nil {
		return x.AssignPublicIp
	}
	return false
}

func (x *HostSpec) GetType() Host_Type {
	if x != nil {
		return x.Type
	}
	return Host_TYPE_UNSPECIFIED
}

func (x *HostSpec) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

type ElasticsearchSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Configuration and resource allocation for Elasticsearch data nodes.
	DataNode *ElasticsearchSpec_DataNode `protobuf:"bytes,1,opt,name=data_node,json=dataNode,proto3" json:"data_node,omitempty"`
	// Configuration and resource allocation for Elasticsearch master nodes.
	MasterNode *ElasticsearchSpec_MasterNode `protobuf:"bytes,2,opt,name=master_node,json=masterNode,proto3" json:"master_node,omitempty"`
	// Cluster wide plugins
	Plugins       []string `protobuf:"bytes,3,rep,name=plugins,proto3" json:"plugins,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ElasticsearchSpec) Reset() {
	*x = ElasticsearchSpec{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElasticsearchSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElasticsearchSpec) ProtoMessage() {}

func (x *ElasticsearchSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElasticsearchSpec.ProtoReflect.Descriptor instead.
func (*ElasticsearchSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{25}
}

func (x *ElasticsearchSpec) GetDataNode() *ElasticsearchSpec_DataNode {
	if x != nil {
		return x.DataNode
	}
	return nil
}

func (x *ElasticsearchSpec) GetMasterNode() *ElasticsearchSpec_MasterNode {
	if x != nil {
		return x.MasterNode
	}
	return nil
}

func (x *ElasticsearchSpec) GetPlugins() []string {
	if x != nil {
		return x.Plugins
	}
	return nil
}

type ConfigSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Elasticsearch version.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"` // No formal validation, a list of supported versions should suffice.
	// Configuration and resource allocation for Elasticsearch nodes.
	ElasticsearchSpec *ElasticsearchSpec `protobuf:"bytes,2,opt,name=elasticsearch_spec,json=elasticsearchSpec,proto3" json:"elasticsearch_spec,omitempty"`
	// ElasticSearch edition.
	Edition string `protobuf:"bytes,3,opt,name=edition,proto3" json:"edition,omitempty"`
	// ElasticSearch admin password.
	AdminPassword string `protobuf:"bytes,4,opt,name=admin_password,json=adminPassword,proto3" json:"admin_password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigSpec) Reset() {
	*x = ConfigSpec{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSpec) ProtoMessage() {}

func (x *ConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSpec.ProtoReflect.Descriptor instead.
func (*ConfigSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{26}
}

func (x *ConfigSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ConfigSpec) GetElasticsearchSpec() *ElasticsearchSpec {
	if x != nil {
		return x.ElasticsearchSpec
	}
	return nil
}

func (x *ConfigSpec) GetEdition() string {
	if x != nil {
		return x.Edition
	}
	return ""
}

func (x *ConfigSpec) GetAdminPassword() string {
	if x != nil {
		return x.AdminPassword
	}
	return ""
}

type ConfigSpecUpdate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Elasticsearch version.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"` // No formal validation, a list of supported versions should suffice.
	// Configuration and resource allocation for Elasticsearch nodes.
	ElasticsearchSpec *ElasticsearchSpec `protobuf:"bytes,2,opt,name=elasticsearch_spec,json=elasticsearchSpec,proto3" json:"elasticsearch_spec,omitempty"`
	// ElasticSearch edition.
	Edition string `protobuf:"bytes,3,opt,name=edition,proto3" json:"edition,omitempty"`
	// ElasticSearch admin password.
	AdminPassword string `protobuf:"bytes,4,opt,name=admin_password,json=adminPassword,proto3" json:"admin_password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigSpecUpdate) Reset() {
	*x = ConfigSpecUpdate{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigSpecUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSpecUpdate) ProtoMessage() {}

func (x *ConfigSpecUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSpecUpdate.ProtoReflect.Descriptor instead.
func (*ConfigSpecUpdate) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{27}
}

func (x *ConfigSpecUpdate) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ConfigSpecUpdate) GetElasticsearchSpec() *ElasticsearchSpec {
	if x != nil {
		return x.ElasticsearchSpec
	}
	return nil
}

func (x *ConfigSpecUpdate) GetEdition() string {
	if x != nil {
		return x.Edition
	}
	return ""
}

func (x *ConfigSpecUpdate) GetAdminPassword() string {
	if x != nil {
		return x.AdminPassword
	}
	return ""
}

type AddClusterHostsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster.
	//
	// To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// One or more configurations of hosts to be added to the Elasticsearch cluster.
	HostSpecs     []*HostSpec `protobuf:"bytes,2,rep,name=host_specs,json=hostSpecs,proto3" json:"host_specs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddClusterHostsRequest) Reset() {
	*x = AddClusterHostsRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddClusterHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClusterHostsRequest) ProtoMessage() {}

func (x *AddClusterHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClusterHostsRequest.ProtoReflect.Descriptor instead.
func (*AddClusterHostsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{28}
}

func (x *AddClusterHostsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *AddClusterHostsRequest) GetHostSpecs() []*HostSpec {
	if x != nil {
		return x.HostSpecs
	}
	return nil
}

type AddClusterHostsMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Names of the host that are being added.
	HostNames     []string `protobuf:"bytes,2,rep,name=host_names,json=hostNames,proto3" json:"host_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddClusterHostsMetadata) Reset() {
	*x = AddClusterHostsMetadata{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddClusterHostsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClusterHostsMetadata) ProtoMessage() {}

func (x *AddClusterHostsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClusterHostsMetadata.ProtoReflect.Descriptor instead.
func (*AddClusterHostsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{29}
}

func (x *AddClusterHostsMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *AddClusterHostsMetadata) GetHostNames() []string {
	if x != nil {
		return x.HostNames
	}
	return nil
}

type DeleteClusterHostsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster.
	//
	// To get the Elasticsearch cluster ID, make a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Names of the hosts to delete.
	HostNames     []string `protobuf:"bytes,2,rep,name=host_names,json=hostNames,proto3" json:"host_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteClusterHostsRequest) Reset() {
	*x = DeleteClusterHostsRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterHostsRequest) ProtoMessage() {}

func (x *DeleteClusterHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterHostsRequest.ProtoReflect.Descriptor instead.
func (*DeleteClusterHostsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteClusterHostsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *DeleteClusterHostsRequest) GetHostNames() []string {
	if x != nil {
		return x.HostNames
	}
	return nil
}

type DeleteClusterHostsMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Elasticsearch cluster.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Names of the hosts that are being deleted.
	HostNames     []string `protobuf:"bytes,2,rep,name=host_names,json=hostNames,proto3" json:"host_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteClusterHostsMetadata) Reset() {
	*x = DeleteClusterHostsMetadata{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterHostsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterHostsMetadata) ProtoMessage() {}

func (x *DeleteClusterHostsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterHostsMetadata.ProtoReflect.Descriptor instead.
func (*DeleteClusterHostsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteClusterHostsMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *DeleteClusterHostsMetadata) GetHostNames() []string {
	if x != nil {
		return x.HostNames
	}
	return nil
}

type RescheduleMaintenanceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the Elasticsearch cluster to maintenance reschedule.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Required. The type of reschedule request.
	RescheduleType RescheduleMaintenanceRequest_RescheduleType `protobuf:"varint,2,opt,name=reschedule_type,json=rescheduleType,proto3,enum=yandex.cloud.mdb.elasticsearch.v1.RescheduleMaintenanceRequest_RescheduleType" json:"reschedule_type,omitempty"`
	// The time for SPECIFIC_TIME reschedule. Limited by two weeks since first time scheduled.
	DelayedUntil  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=delayed_until,json=delayedUntil,proto3" json:"delayed_until,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RescheduleMaintenanceRequest) Reset() {
	*x = RescheduleMaintenanceRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RescheduleMaintenanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescheduleMaintenanceRequest) ProtoMessage() {}

func (x *RescheduleMaintenanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescheduleMaintenanceRequest.ProtoReflect.Descriptor instead.
func (*RescheduleMaintenanceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{32}
}

func (x *RescheduleMaintenanceRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *RescheduleMaintenanceRequest) GetRescheduleType() RescheduleMaintenanceRequest_RescheduleType {
	if x != nil {
		return x.RescheduleType
	}
	return RescheduleMaintenanceRequest_RESCHEDULE_TYPE_UNSPECIFIED
}

func (x *RescheduleMaintenanceRequest) GetDelayedUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.DelayedUntil
	}
	return nil
}

type RescheduleMaintenanceMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the Elasticsearch cluster.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Required. New time of the planned maintenance. Can be in the past for rescheduled to "IMMEDIATE".
	DelayedUntil  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=delayed_until,json=delayedUntil,proto3" json:"delayed_until,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RescheduleMaintenanceMetadata) Reset() {
	*x = RescheduleMaintenanceMetadata{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RescheduleMaintenanceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescheduleMaintenanceMetadata) ProtoMessage() {}

func (x *RescheduleMaintenanceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescheduleMaintenanceMetadata.ProtoReflect.Descriptor instead.
func (*RescheduleMaintenanceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{33}
}

func (x *RescheduleMaintenanceMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *RescheduleMaintenanceMetadata) GetDelayedUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.DelayedUntil
	}
	return nil
}

type RestoreClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the backup to restore from.
	BackupId string `protobuf:"bytes,1,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	// Name of the ElasticSearch cluster. The name must be unique within the folder.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the ElasticSearch cluster.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Custom labels for the ElasticSearch cluster as “ key:value “ pairs. Maximum 64 per resource.
	// For example, "project": "mvp" or "source": "dictionary".
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Deployment environment of the ElasticSearch cluster.
	Environment Cluster_Environment `protobuf:"varint,5,opt,name=environment,proto3,enum=yandex.cloud.mdb.elasticsearch.v1.Cluster_Environment" json:"environment,omitempty"`
	// Configuration and resources for hosts that should be created for the ElasticSearch cluster.
	ConfigSpec *ConfigSpec `protobuf:"bytes,6,opt,name=config_spec,json=configSpec,proto3" json:"config_spec,omitempty"`
	// Required. Configuration of ElasticSearch hosts.
	HostSpecs []*HostSpec `protobuf:"bytes,9,rep,name=host_specs,json=hostSpecs,proto3" json:"host_specs,omitempty"`
	// ID of the network to create the cluster in.
	NetworkId string `protobuf:"bytes,10,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// User security groups
	SecurityGroupIds []string `protobuf:"bytes,11,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
	// ID of the service account used for access to Object Storage.
	ServiceAccountId string `protobuf:"bytes,12,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Deletion Protection inhibits deletion of the cluster
	DeletionProtection bool `protobuf:"varint,13,opt,name=deletion_protection,json=deletionProtection,proto3" json:"deletion_protection,omitempty"`
	// ID of the folder to create the ElasticSearch cluster in.
	FolderId       string           `protobuf:"bytes,14,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	ExtensionSpecs []*ExtensionSpec `protobuf:"bytes,15,rep,name=extension_specs,json=extensionSpecs,proto3" json:"extension_specs,omitempty"` // optional
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RestoreClusterRequest) Reset() {
	*x = RestoreClusterRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreClusterRequest) ProtoMessage() {}

func (x *RestoreClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreClusterRequest.ProtoReflect.Descriptor instead.
func (*RestoreClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{34}
}

func (x *RestoreClusterRequest) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

func (x *RestoreClusterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RestoreClusterRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RestoreClusterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *RestoreClusterRequest) GetEnvironment() Cluster_Environment {
	if x != nil {
		return x.Environment
	}
	return Cluster_ENVIRONMENT_UNSPECIFIED
}

func (x *RestoreClusterRequest) GetConfigSpec() *ConfigSpec {
	if x != nil {
		return x.ConfigSpec
	}
	return nil
}

func (x *RestoreClusterRequest) GetHostSpecs() []*HostSpec {
	if x != nil {
		return x.HostSpecs
	}
	return nil
}

func (x *RestoreClusterRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *RestoreClusterRequest) GetSecurityGroupIds() []string {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

func (x *RestoreClusterRequest) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *RestoreClusterRequest) GetDeletionProtection() bool {
	if x != nil {
		return x.DeletionProtection
	}
	return false
}

func (x *RestoreClusterRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *RestoreClusterRequest) GetExtensionSpecs() []*ExtensionSpec {
	if x != nil {
		return x.ExtensionSpecs
	}
	return nil
}

type RestoreClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the new ElasticSearch cluster.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Required. ID of the backup used for recovery.
	BackupId      string `protobuf:"bytes,2,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreClusterMetadata) Reset() {
	*x = RestoreClusterMetadata{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreClusterMetadata) ProtoMessage() {}

func (x *RestoreClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreClusterMetadata.ProtoReflect.Descriptor instead.
func (*RestoreClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{35}
}

func (x *RestoreClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *RestoreClusterMetadata) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

type BackupClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the ElasticSearch cluster to back up.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupClusterRequest) Reset() {
	*x = BackupClusterRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupClusterRequest) ProtoMessage() {}

func (x *BackupClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupClusterRequest.ProtoReflect.Descriptor instead.
func (*BackupClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{36}
}

func (x *BackupClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type BackupClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the ElasticSearch cluster.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupClusterMetadata) Reset() {
	*x = BackupClusterMetadata{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupClusterMetadata) ProtoMessage() {}

func (x *BackupClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupClusterMetadata.ProtoReflect.Descriptor instead.
func (*BackupClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{37}
}

func (x *BackupClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type ListClusterBackupsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the Elasticsearch cluster.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The maximum number of results per page that should be returned. If the number of available
	// results is larger than `page_size`, the service returns a `next_page_token` that can be used
	// to get the next page of results in subsequent ListClusterBackups requests.
	// Acceptable values are 0 to 1000, inclusive. Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. Set `page_token` to the `next_page_token` returned by a previous ListClusterBackups
	// request to get the next page of results.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterBackupsRequest) Reset() {
	*x = ListClusterBackupsRequest{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterBackupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterBackupsRequest) ProtoMessage() {}

func (x *ListClusterBackupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterBackupsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterBackupsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{38}
}

func (x *ListClusterBackupsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListClusterBackupsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterBackupsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListClusterBackupsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Requested list of backups.
	Backups []*Backup `protobuf:"bytes,1,rep,name=backups,proto3" json:"backups,omitempty"`
	// This token allows you to get the next page of results for ListClusterBackups requests,
	// if the number of results is larger than `page_size` specified in the request.
	// To get the next page, specify the value of `next_page_token` as a value for
	// the `page_token` parameter in the next ListClusterBackups request. Subsequent ListClusterBackups
	// requests will have their own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterBackupsResponse) Reset() {
	*x = ListClusterBackupsResponse{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterBackupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterBackupsResponse) ProtoMessage() {}

func (x *ListClusterBackupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterBackupsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterBackupsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{39}
}

func (x *ListClusterBackupsResponse) GetBackups() []*Backup {
	if x != nil {
		return x.Backups
	}
	return nil
}

func (x *ListClusterBackupsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ElasticsearchSpec_DataNode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Elasticsearch data node configuration.
	//
	// Types that are valid to be assigned to Config:
	//
	//	*ElasticsearchSpec_DataNode_ElasticsearchConfig_7
	Config isElasticsearchSpec_DataNode_Config `protobuf_oneof:"config"`
	// Resources allocated to Elasticsearch data nodes.
	Resources     *Resources `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ElasticsearchSpec_DataNode) Reset() {
	*x = ElasticsearchSpec_DataNode{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElasticsearchSpec_DataNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElasticsearchSpec_DataNode) ProtoMessage() {}

func (x *ElasticsearchSpec_DataNode) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElasticsearchSpec_DataNode.ProtoReflect.Descriptor instead.
func (*ElasticsearchSpec_DataNode) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{25, 0}
}

func (x *ElasticsearchSpec_DataNode) GetConfig() isElasticsearchSpec_DataNode_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ElasticsearchSpec_DataNode) GetElasticsearchConfig_7() *config.ElasticsearchConfig7 {
	if x != nil {
		if x, ok := x.Config.(*ElasticsearchSpec_DataNode_ElasticsearchConfig_7); ok {
			return x.ElasticsearchConfig_7
		}
	}
	return nil
}

func (x *ElasticsearchSpec_DataNode) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

type isElasticsearchSpec_DataNode_Config interface {
	isElasticsearchSpec_DataNode_Config()
}

type ElasticsearchSpec_DataNode_ElasticsearchConfig_7 struct {
	ElasticsearchConfig_7 *config.ElasticsearchConfig7 `protobuf:"bytes,1,opt,name=elasticsearch_config_7,json=elasticsearchConfig_7,proto3,oneof"`
}

func (*ElasticsearchSpec_DataNode_ElasticsearchConfig_7) isElasticsearchSpec_DataNode_Config() {}

type ElasticsearchSpec_MasterNode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Resources allocated to Elasticsearch master nodes.
	Resources     *Resources `protobuf:"bytes,1,opt,name=resources,proto3" json:"resources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ElasticsearchSpec_MasterNode) Reset() {
	*x = ElasticsearchSpec_MasterNode{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElasticsearchSpec_MasterNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElasticsearchSpec_MasterNode) ProtoMessage() {}

func (x *ElasticsearchSpec_MasterNode) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElasticsearchSpec_MasterNode.ProtoReflect.Descriptor instead.
func (*ElasticsearchSpec_MasterNode) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP(), []int{25, 1}
}

func (x *ElasticsearchSpec_MasterNode) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

var File_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDesc = "" +
	"\n" +
	"7yandex/cloud/mdb/elasticsearch/v1/cluster_service.proto\x12!yandex.cloud.mdb.elasticsearch.v1\x1a\x1cgoogle/api/annotations.proto\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a yandex/cloud/api/operation.proto\x1a.yandex/cloud/mdb/elasticsearch/v1/backup.proto\x1a/yandex/cloud/mdb/elasticsearch/v1/cluster.proto\x1a<yandex/cloud/mdb/elasticsearch/v1/config/elasticsearch.proto\x1a1yandex/cloud/mdb/elasticsearch/v1/extension.proto\x1a3yandex/cloud/mdb/elasticsearch/v1/maintenance.proto\x1a,yandex/cloud/mdb/elasticsearch/v1/user.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\"@\n" +
	"\x11GetClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\"\xb7\x01\n" +
	"\x13ListClustersRequest\x12)\n" +
	"\tfolder_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\"\x86\x01\n" +
	"\x14ListClustersResponse\x12F\n" +
	"\bclusters\x18\x01 \x03(\v2*.yandex.cloud.mdb.elasticsearch.v1.ClusterR\bclusters\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xc8\b\n" +
	"\x14CreateClusterRequest\x12)\n" +
	"\tfolder_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x122\n" +
	"\x04name\x18\x02 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\x04name\x12+\n" +
	"\vdescription\x18\x03 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x98\x01\n" +
	"\x06labels\x18\x04 \x03(\v2C.yandex.cloud.mdb.elasticsearch.v1.CreateClusterRequest.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x041-63R\x06labels\x12X\n" +
	"\venvironment\x18\x05 \x01(\x0e26.yandex.cloud.mdb.elasticsearch.v1.Cluster.EnvironmentR\venvironment\x12T\n" +
	"\vconfig_spec\x18\x06 \x01(\v2-.yandex.cloud.mdb.elasticsearch.v1.ConfigSpecB\x04\xe8\xc71\x01R\n" +
	"configSpec\x12J\n" +
	"\n" +
	"user_specs\x18\b \x03(\v2+.yandex.cloud.mdb.elasticsearch.v1.UserSpecR\tuserSpecs\x12R\n" +
	"\n" +
	"host_specs\x18\t \x03(\v2+.yandex.cloud.mdb.elasticsearch.v1.HostSpecB\x06\x82\xc81\x02>0R\thostSpecs\x12+\n" +
	"\n" +
	"network_id\x18\n" +
	" \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tnetworkId\x12,\n" +
	"\x12security_group_ids\x18\v \x03(\tR\x10securityGroupIds\x12,\n" +
	"\x12service_account_id\x18\f \x01(\tR\x10serviceAccountId\x12/\n" +
	"\x13deletion_protection\x18\r \x01(\bR\x12deletionProtection\x12c\n" +
	"\x12maintenance_window\x18\x0e \x01(\v24.yandex.cloud.mdb.elasticsearch.v1.MaintenanceWindowR\x11maintenanceWindow\x12Y\n" +
	"\x0fextension_specs\x18\x0f \x03(\v20.yandex.cloud.mdb.elasticsearch.v1.ExtensionSpecR\x0eextensionSpecs\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01J\x04\b\a\x10\b\"6\n" +
	"\x15CreateClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\xa4\x06\n" +
	"\x14UpdateClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12+\n" +
	"\vdescription\x18\x03 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x98\x01\n" +
	"\x06labels\x18\x04 \x03(\v2C.yandex.cloud.mdb.elasticsearch.v1.UpdateClusterRequest.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x041-63R\x06labels\x12T\n" +
	"\vconfig_spec\x18\x05 \x01(\v23.yandex.cloud.mdb.elasticsearch.v1.ConfigSpecUpdateR\n" +
	"configSpec\x12.\n" +
	"\x04name\x18\x06 \x01(\tB\x1a\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\x04name\x12,\n" +
	"\x12security_group_ids\x18\a \x03(\tR\x10securityGroupIds\x12,\n" +
	"\x12service_account_id\x18\b \x01(\tR\x10serviceAccountId\x12/\n" +
	"\x13deletion_protection\x18\t \x01(\bR\x12deletionProtection\x12c\n" +
	"\x12maintenance_window\x18\n" +
	" \x01(\v24.yandex.cloud.mdb.elasticsearch.v1.MaintenanceWindowR\x11maintenanceWindow\x12'\n" +
	"\n" +
	"network_id\x18\v \x01(\tB\b\x8a\xc81\x04<=50R\tnetworkId\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"6\n" +
	"\x15UpdateClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"C\n" +
	"\x14DeleteClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\"6\n" +
	"\x15DeleteClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\xba\x04\n" +
	"\x16ListClusterLogsRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12#\n" +
	"\rcolumn_filter\x18\x02 \x03(\tR\fcolumnFilter\x127\n" +
	"\tfrom_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\bfromTime\x123\n" +
	"\ato_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x06toTime\x12'\n" +
	"\tpage_size\x18\x05 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x06 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x123\n" +
	"\x16always_next_page_token\x18\a \x01(\bR\x13alwaysNextPageToken\x12\"\n" +
	"\x06filter\x18\b \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\x12h\n" +
	"\fservice_type\x18\t \x01(\x0e2E.yandex.cloud.mdb.elasticsearch.v1.ListClusterLogsRequest.ServiceTypeR\vserviceType\"J\n" +
	"\vServiceType\x12\x1c\n" +
	"\x18SERVICE_TYPE_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rELASTICSEARCH\x10\x01\x12\n" +
	"\n" +
	"\x06KIBANA\x10\x02\"\xd6\x01\n" +
	"\tLogRecord\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12S\n" +
	"\amessage\x18\x02 \x03(\v29.yandex.cloud.mdb.elasticsearch.v1.LogRecord.MessageEntryR\amessage\x1a:\n" +
	"\fMessageEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x83\x01\n" +
	"\x17ListClusterLogsResponse\x12@\n" +
	"\x04logs\x18\x01 \x03(\v2,.yandex.cloud.mdb.elasticsearch.v1.LogRecordR\x04logs\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x83\x01\n" +
	"\x0fStreamLogRecord\x12D\n" +
	"\x06record\x18\x01 \x01(\v2,.yandex.cloud.mdb.elasticsearch.v1.LogRecordR\x06record\x12*\n" +
	"\x11next_record_token\x18\x02 \x01(\tR\x0fnextRecordToken\"\xe4\x03\n" +
	"\x18StreamClusterLogsRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12#\n" +
	"\rcolumn_filter\x18\x02 \x03(\tR\fcolumnFilter\x127\n" +
	"\tfrom_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\bfromTime\x123\n" +
	"\ato_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x06toTime\x12,\n" +
	"\frecord_token\x18\x05 \x01(\tB\t\x8a\xc81\x05<=100R\vrecordToken\x12\"\n" +
	"\x06filter\x18\x06 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\x12j\n" +
	"\fservice_type\x18\a \x01(\x0e2G.yandex.cloud.mdb.elasticsearch.v1.StreamClusterLogsRequest.ServiceTypeR\vserviceType\"J\n" +
	"\vServiceType\x12\x1c\n" +
	"\x18SERVICE_TYPE_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rELASTICSEARCH\x10\x01\x12\n" +
	"\n" +
	"\x06KIBANA\x10\x02\"\x9e\x01\n" +
	"\x1cListClusterOperationsRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\"\x8a\x01\n" +
	"\x1dListClusterOperationsResponse\x12A\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2!.yandex.cloud.operation.OperationR\n" +
	"operations\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x99\x01\n" +
	"\x17ListClusterHostsRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\"\x81\x01\n" +
	"\x18ListClusterHostsResponse\x12=\n" +
	"\x05hosts\x18\x01 \x03(\v2'.yandex.cloud.mdb.elasticsearch.v1.HostR\x05hosts\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x83\x01\n" +
	"\x12MoveClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12@\n" +
	"\x15destination_folder_id\x18\x02 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x13destinationFolderId\"\x92\x01\n" +
	"\x13MoveClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12(\n" +
	"\x10source_folder_id\x18\x02 \x01(\tR\x0esourceFolderId\x122\n" +
	"\x15destination_folder_id\x18\x03 \x01(\tR\x13destinationFolderId\"B\n" +
	"\x13StartClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\"5\n" +
	"\x14StartClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"A\n" +
	"\x12StopClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\"4\n" +
	"\x13StopClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\x81\x02\n" +
	"\bHostSpec\x12!\n" +
	"\azone_id\x18\x01 \x01(\tB\b\x8a\xc81\x04<=50R\x06zoneId\x12%\n" +
	"\tsubnet_id\x18\x02 \x01(\tB\b\x8a\xc81\x04<=50R\bsubnetId\x12(\n" +
	"\x10assign_public_ip\x18\x03 \x01(\bR\x0eassignPublicIp\x12F\n" +
	"\x04type\x18\x04 \x01(\x0e2,.yandex.cloud.mdb.elasticsearch.v1.Host.TypeB\x04\xe8\xc71\x01R\x04type\x129\n" +
	"\n" +
	"shard_name\x18\x05 \x01(\tB\x1a\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\tshardName\"\xab\x04\n" +
	"\x11ElasticsearchSpec\x12Z\n" +
	"\tdata_node\x18\x01 \x01(\v2=.yandex.cloud.mdb.elasticsearch.v1.ElasticsearchSpec.DataNodeR\bdataNode\x12`\n" +
	"\vmaster_node\x18\x02 \x01(\v2?.yandex.cloud.mdb.elasticsearch.v1.ElasticsearchSpec.MasterNodeR\n" +
	"masterNode\x12\"\n" +
	"\aplugins\x18\x03 \x03(\tB\b\x8a\xc81\x04<=50R\aplugins\x1a\xd9\x01\n" +
	"\bDataNode\x12w\n" +
	"\x16elasticsearch_config_7\x18\x01 \x01(\v2>.yandex.cloud.mdb.elasticsearch.v1.config.ElasticsearchConfig7H\x00R\x15elasticsearchConfig_7\x12J\n" +
	"\tresources\x18\x02 \x01(\v2,.yandex.cloud.mdb.elasticsearch.v1.ResourcesR\tresourcesB\b\n" +
	"\x06config\x1aX\n" +
	"\n" +
	"MasterNode\x12J\n" +
	"\tresources\x18\x01 \x01(\v2,.yandex.cloud.mdb.elasticsearch.v1.ResourcesR\tresources\"\xd2\x01\n" +
	"\n" +
	"ConfigSpec\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12c\n" +
	"\x12elasticsearch_spec\x18\x02 \x01(\v24.yandex.cloud.mdb.elasticsearch.v1.ElasticsearchSpecR\x11elasticsearchSpec\x12\x18\n" +
	"\aedition\x18\x03 \x01(\tR\aedition\x12+\n" +
	"\x0eadmin_password\x18\x04 \x01(\tB\x04\xe8\xc71\x01R\radminPassword\"\xd2\x01\n" +
	"\x10ConfigSpecUpdate\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12c\n" +
	"\x12elasticsearch_spec\x18\x02 \x01(\v24.yandex.cloud.mdb.elasticsearch.v1.ElasticsearchSpecR\x11elasticsearchSpec\x12\x18\n" +
	"\aedition\x18\x03 \x01(\tR\aedition\x12%\n" +
	"\x0eadmin_password\x18\x04 \x01(\tR\radminPassword\"\x99\x01\n" +
	"\x16AddClusterHostsRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12R\n" +
	"\n" +
	"host_specs\x18\x02 \x03(\v2+.yandex.cloud.mdb.elasticsearch.v1.HostSpecB\x06\x82\xc81\x02>0R\thostSpecs\"W\n" +
	"\x17AddClusterHostsMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1d\n" +
	"\n" +
	"host_names\x18\x02 \x03(\tR\thostNames\"x\n" +
	"\x19DeleteClusterHostsRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12.\n" +
	"\n" +
	"host_names\x18\x02 \x03(\tB\x0f\x82\xc81\x02>0\x8a\xc81\x05<=253R\thostNames\"Z\n" +
	"\x1aDeleteClusterHostsMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1d\n" +
	"\n" +
	"host_names\x18\x02 \x03(\tR\thostNames\"\xfb\x02\n" +
	"\x1cRescheduleMaintenanceRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12}\n" +
	"\x0freschedule_type\x18\x02 \x01(\x0e2N.yandex.cloud.mdb.elasticsearch.v1.RescheduleMaintenanceRequest.RescheduleTypeB\x04\xe8\xc71\x01R\x0erescheduleType\x12?\n" +
	"\rdelayed_until\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\fdelayedUntil\"n\n" +
	"\x0eRescheduleType\x12\x1f\n" +
	"\x1bRESCHEDULE_TYPE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tIMMEDIATE\x10\x01\x12\x19\n" +
	"\x15NEXT_AVAILABLE_WINDOW\x10\x02\x12\x11\n" +
	"\rSPECIFIC_TIME\x10\x03\"\x85\x01\n" +
	"\x1dRescheduleMaintenanceMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12?\n" +
	"\rdelayed_until\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\fdelayedUntilJ\x04\b\x02\x10\x04\"\xbc\a\n" +
	"\x15RestoreClusterRequest\x12!\n" +
	"\tbackup_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bbackupId\x122\n" +
	"\x04name\x18\x02 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\x04name\x12+\n" +
	"\vdescription\x18\x03 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x99\x01\n" +
	"\x06labels\x18\x04 \x03(\v2D.yandex.cloud.mdb.elasticsearch.v1.RestoreClusterRequest.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x041-63R\x06labels\x12X\n" +
	"\venvironment\x18\x05 \x01(\x0e26.yandex.cloud.mdb.elasticsearch.v1.Cluster.EnvironmentR\venvironment\x12T\n" +
	"\vconfig_spec\x18\x06 \x01(\v2-.yandex.cloud.mdb.elasticsearch.v1.ConfigSpecB\x04\xe8\xc71\x01R\n" +
	"configSpec\x12R\n" +
	"\n" +
	"host_specs\x18\t \x03(\v2+.yandex.cloud.mdb.elasticsearch.v1.HostSpecB\x06\x82\xc81\x02>0R\thostSpecs\x12+\n" +
	"\n" +
	"network_id\x18\n" +
	" \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tnetworkId\x12,\n" +
	"\x12security_group_ids\x18\v \x03(\tR\x10securityGroupIds\x12,\n" +
	"\x12service_account_id\x18\f \x01(\tR\x10serviceAccountId\x12/\n" +
	"\x13deletion_protection\x18\r \x01(\bR\x12deletionProtection\x12)\n" +
	"\tfolder_id\x18\x0e \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x12Y\n" +
	"\x0fextension_specs\x18\x0f \x03(\v20.yandex.cloud.mdb.elasticsearch.v1.ExtensionSpecR\x0eextensionSpecs\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01J\x04\b\a\x10\t\"T\n" +
	"\x16RestoreClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1b\n" +
	"\tbackup_id\x18\x02 \x01(\tR\bbackupId\"C\n" +
	"\x14BackupClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\"6\n" +
	"\x15BackupClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\x9b\x01\n" +
	"\x19ListClusterBackupsRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x060-1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\"\x89\x01\n" +
	"\x1aListClusterBackupsResponse\x12C\n" +
	"\abackups\x18\x01 \x03(\v2).yandex.cloud.mdb.elasticsearch.v1.BackupR\abackups\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken2\xe4\x1c\n" +
	"\x0eClusterService\x12\xa0\x01\n" +
	"\x03Get\x124.yandex.cloud.mdb.elasticsearch.v1.GetClusterRequest\x1a*.yandex.cloud.mdb.elasticsearch.v1.Cluster\"7\x82\xd3\xe4\x93\x021\x12//managed-elasticsearch/v1/clusters/{cluster_id}\x12\xa3\x01\n" +
	"\x04List\x126.yandex.cloud.mdb.elasticsearch.v1.ListClustersRequest\x1a7.yandex.cloud.mdb.elasticsearch.v1.ListClustersResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/managed-elasticsearch/v1/clusters\x12\xb7\x01\n" +
	"\x06Create\x127.yandex.cloud.mdb.elasticsearch.v1.CreateClusterRequest\x1a!.yandex.cloud.operation.Operation\"Q\xb2\xd2* \n" +
	"\x15CreateClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x02':\x01*\"\"/managed-elasticsearch/v1/clusters\x12\xc4\x01\n" +
	"\x06Update\x127.yandex.cloud.mdb.elasticsearch.v1.UpdateClusterRequest\x1a!.yandex.cloud.operation.Operation\"^\xb2\xd2* \n" +
	"\x15UpdateClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x024:\x01*2//managed-elasticsearch/v1/clusters/{cluster_id}\x12\xcf\x01\n" +
	"\x06Delete\x127.yandex.cloud.mdb.elasticsearch.v1.DeleteClusterRequest\x1a!.yandex.cloud.operation.Operation\"i\xb2\xd2*.\n" +
	"\x15DeleteClusterMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x021*//managed-elasticsearch/v1/clusters/{cluster_id}\x12\xc3\x01\n" +
	"\x04Move\x125.yandex.cloud.mdb.elasticsearch.v1.MoveClusterRequest\x1a!.yandex.cloud.operation.Operation\"a\xb2\xd2*\x1e\n" +
	"\x13MoveClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x029:\x01*\"4/managed-elasticsearch/v1/clusters/{cluster_id}:move\x12\xc4\x01\n" +
	"\x05Start\x126.yandex.cloud.mdb.elasticsearch.v1.StartClusterRequest\x1a!.yandex.cloud.operation.Operation\"`\xb2\xd2*\x1f\n" +
	"\x14StartClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x027\"5/managed-elasticsearch/v1/clusters/{cluster_id}:start\x12\xc0\x01\n" +
	"\x04Stop\x125.yandex.cloud.mdb.elasticsearch.v1.StopClusterRequest\x1a!.yandex.cloud.operation.Operation\"^\xb2\xd2*\x1e\n" +
	"\x13StopClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x026\"4/managed-elasticsearch/v1/clusters/{cluster_id}:stop\x12\xc8\x01\n" +
	"\x06Backup\x127.yandex.cloud.mdb.elasticsearch.v1.BackupClusterRequest\x1a!.yandex.cloud.operation.Operation\"b\xb2\xd2* \n" +
	"\x15BackupClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x028\"6/managed-elasticsearch/v1/clusters/{cluster_id}:backup\x12\xcb\x01\n" +
	"\vListBackups\x12<.yandex.cloud.mdb.elasticsearch.v1.ListClusterBackupsRequest\x1a=.yandex.cloud.mdb.elasticsearch.v1.ListClusterBackupsResponse\"?\x82\xd3\xe4\x93\x029\x127/managed-elasticsearch/v1/clusters/{cluster_id}/backups\x12\xc2\x01\n" +
	"\aRestore\x128.yandex.cloud.mdb.elasticsearch.v1.RestoreClusterRequest\x1a!.yandex.cloud.operation.Operation\"Z\xb2\xd2*!\n" +
	"\x16RestoreClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x02/:\x01*\"*/managed-elasticsearch/v1/clusters:restore\x12\xbf\x01\n" +
	"\bListLogs\x129.yandex.cloud.mdb.elasticsearch.v1.ListClusterLogsRequest\x1a:.yandex.cloud.mdb.elasticsearch.v1.ListClusterLogsResponse\"<\x82\xd3\xe4\x93\x026\x124/managed-elasticsearch/v1/clusters/{cluster_id}:logs\x12\xc4\x01\n" +
	"\n" +
	"StreamLogs\x12;.yandex.cloud.mdb.elasticsearch.v1.StreamClusterLogsRequest\x1a2.yandex.cloud.mdb.elasticsearch.v1.StreamLogRecord\"C\x82\xd3\xe4\x93\x02=\x12;/managed-elasticsearch/v1/clusters/{cluster_id}:stream_logs0\x01\x12\xd7\x01\n" +
	"\x0eListOperations\x12?.yandex.cloud.mdb.elasticsearch.v1.ListClusterOperationsRequest\x1a@.yandex.cloud.mdb.elasticsearch.v1.ListClusterOperationsResponse\"B\x82\xd3\xe4\x93\x02<\x12:/managed-elasticsearch/v1/clusters/{cluster_id}/operations\x12\xc3\x01\n" +
	"\tListHosts\x12:.yandex.cloud.mdb.elasticsearch.v1.ListClusterHostsRequest\x1a;.yandex.cloud.mdb.elasticsearch.v1.ListClusterHostsResponse\"=\x82\xd3\xe4\x93\x027\x125/managed-elasticsearch/v1/clusters/{cluster_id}/hosts\x12\xeb\x01\n" +
	"\bAddHosts\x129.yandex.cloud.mdb.elasticsearch.v1.AddClusterHostsRequest\x1a!.yandex.cloud.operation.Operation\"\x80\x01\xb2\xd2*0\n" +
	"\x17AddClusterHostsMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02F:\x01*\"A/managed-elasticsearch/v1/clusters/{cluster_id}/hosts:batchCreate\x12\xf4\x01\n" +
	"\vDeleteHosts\x12<.yandex.cloud.mdb.elasticsearch.v1.DeleteClusterHostsRequest\x1a!.yandex.cloud.operation.Operation\"\x83\x01\xb2\xd2*3\n" +
	"\x1aDeleteClusterHostsMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02F:\x01*\"A/managed-elasticsearch/v1/clusters/{cluster_id}/hosts:batchDelete\x12\xf9\x01\n" +
	"\x15RescheduleMaintenance\x12?.yandex.cloud.mdb.elasticsearch.v1.RescheduleMaintenanceRequest\x1a!.yandex.cloud.operation.Operation\"|\xb2\xd2*(\n" +
	"\x1dRescheduleMaintenanceMetadata\x12\aCluster\x82\xd3\xe4\x93\x02J:\x01*\"E/managed-elasticsearch/v1/clusters/{cluster_id}:rescheduleMaintenanceB|\n" +
	"%yandex.cloud.api.mdb.elasticsearch.v1ZSgithub.com/yandex-cloud/go-genproto/yandex/cloud/mdb/elasticsearch/v1;elasticsearchb\x06proto3"

var (
	file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescData []byte
)

func file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDesc), len(file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDesc)))
	})
	return file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDescData
}

var file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_goTypes = []any{
	(ListClusterLogsRequest_ServiceType)(0),          // 0: yandex.cloud.mdb.elasticsearch.v1.ListClusterLogsRequest.ServiceType
	(StreamClusterLogsRequest_ServiceType)(0),        // 1: yandex.cloud.mdb.elasticsearch.v1.StreamClusterLogsRequest.ServiceType
	(RescheduleMaintenanceRequest_RescheduleType)(0), // 2: yandex.cloud.mdb.elasticsearch.v1.RescheduleMaintenanceRequest.RescheduleType
	(*GetClusterRequest)(nil),                        // 3: yandex.cloud.mdb.elasticsearch.v1.GetClusterRequest
	(*ListClustersRequest)(nil),                      // 4: yandex.cloud.mdb.elasticsearch.v1.ListClustersRequest
	(*ListClustersResponse)(nil),                     // 5: yandex.cloud.mdb.elasticsearch.v1.ListClustersResponse
	(*CreateClusterRequest)(nil),                     // 6: yandex.cloud.mdb.elasticsearch.v1.CreateClusterRequest
	(*CreateClusterMetadata)(nil),                    // 7: yandex.cloud.mdb.elasticsearch.v1.CreateClusterMetadata
	(*UpdateClusterRequest)(nil),                     // 8: yandex.cloud.mdb.elasticsearch.v1.UpdateClusterRequest
	(*UpdateClusterMetadata)(nil),                    // 9: yandex.cloud.mdb.elasticsearch.v1.UpdateClusterMetadata
	(*DeleteClusterRequest)(nil),                     // 10: yandex.cloud.mdb.elasticsearch.v1.DeleteClusterRequest
	(*DeleteClusterMetadata)(nil),                    // 11: yandex.cloud.mdb.elasticsearch.v1.DeleteClusterMetadata
	(*ListClusterLogsRequest)(nil),                   // 12: yandex.cloud.mdb.elasticsearch.v1.ListClusterLogsRequest
	(*LogRecord)(nil),                                // 13: yandex.cloud.mdb.elasticsearch.v1.LogRecord
	(*ListClusterLogsResponse)(nil),                  // 14: yandex.cloud.mdb.elasticsearch.v1.ListClusterLogsResponse
	(*StreamLogRecord)(nil),                          // 15: yandex.cloud.mdb.elasticsearch.v1.StreamLogRecord
	(*StreamClusterLogsRequest)(nil),                 // 16: yandex.cloud.mdb.elasticsearch.v1.StreamClusterLogsRequest
	(*ListClusterOperationsRequest)(nil),             // 17: yandex.cloud.mdb.elasticsearch.v1.ListClusterOperationsRequest
	(*ListClusterOperationsResponse)(nil),            // 18: yandex.cloud.mdb.elasticsearch.v1.ListClusterOperationsResponse
	(*ListClusterHostsRequest)(nil),                  // 19: yandex.cloud.mdb.elasticsearch.v1.ListClusterHostsRequest
	(*ListClusterHostsResponse)(nil),                 // 20: yandex.cloud.mdb.elasticsearch.v1.ListClusterHostsResponse
	(*MoveClusterRequest)(nil),                       // 21: yandex.cloud.mdb.elasticsearch.v1.MoveClusterRequest
	(*MoveClusterMetadata)(nil),                      // 22: yandex.cloud.mdb.elasticsearch.v1.MoveClusterMetadata
	(*StartClusterRequest)(nil),                      // 23: yandex.cloud.mdb.elasticsearch.v1.StartClusterRequest
	(*StartClusterMetadata)(nil),                     // 24: yandex.cloud.mdb.elasticsearch.v1.StartClusterMetadata
	(*StopClusterRequest)(nil),                       // 25: yandex.cloud.mdb.elasticsearch.v1.StopClusterRequest
	(*StopClusterMetadata)(nil),                      // 26: yandex.cloud.mdb.elasticsearch.v1.StopClusterMetadata
	(*HostSpec)(nil),                                 // 27: yandex.cloud.mdb.elasticsearch.v1.HostSpec
	(*ElasticsearchSpec)(nil),                        // 28: yandex.cloud.mdb.elasticsearch.v1.ElasticsearchSpec
	(*ConfigSpec)(nil),                               // 29: yandex.cloud.mdb.elasticsearch.v1.ConfigSpec
	(*ConfigSpecUpdate)(nil),                         // 30: yandex.cloud.mdb.elasticsearch.v1.ConfigSpecUpdate
	(*AddClusterHostsRequest)(nil),                   // 31: yandex.cloud.mdb.elasticsearch.v1.AddClusterHostsRequest
	(*AddClusterHostsMetadata)(nil),                  // 32: yandex.cloud.mdb.elasticsearch.v1.AddClusterHostsMetadata
	(*DeleteClusterHostsRequest)(nil),                // 33: yandex.cloud.mdb.elasticsearch.v1.DeleteClusterHostsRequest
	(*DeleteClusterHostsMetadata)(nil),               // 34: yandex.cloud.mdb.elasticsearch.v1.DeleteClusterHostsMetadata
	(*RescheduleMaintenanceRequest)(nil),             // 35: yandex.cloud.mdb.elasticsearch.v1.RescheduleMaintenanceRequest
	(*RescheduleMaintenanceMetadata)(nil),            // 36: yandex.cloud.mdb.elasticsearch.v1.RescheduleMaintenanceMetadata
	(*RestoreClusterRequest)(nil),                    // 37: yandex.cloud.mdb.elasticsearch.v1.RestoreClusterRequest
	(*RestoreClusterMetadata)(nil),                   // 38: yandex.cloud.mdb.elasticsearch.v1.RestoreClusterMetadata
	(*BackupClusterRequest)(nil),                     // 39: yandex.cloud.mdb.elasticsearch.v1.BackupClusterRequest
	(*BackupClusterMetadata)(nil),                    // 40: yandex.cloud.mdb.elasticsearch.v1.BackupClusterMetadata
	(*ListClusterBackupsRequest)(nil),                // 41: yandex.cloud.mdb.elasticsearch.v1.ListClusterBackupsRequest
	(*ListClusterBackupsResponse)(nil),               // 42: yandex.cloud.mdb.elasticsearch.v1.ListClusterBackupsResponse
	nil,                                              // 43: yandex.cloud.mdb.elasticsearch.v1.CreateClusterRequest.LabelsEntry
	nil,                                              // 44: yandex.cloud.mdb.elasticsearch.v1.UpdateClusterRequest.LabelsEntry
	nil,                                              // 45: yandex.cloud.mdb.elasticsearch.v1.LogRecord.MessageEntry
	(*ElasticsearchSpec_DataNode)(nil),               // 46: yandex.cloud.mdb.elasticsearch.v1.ElasticsearchSpec.DataNode
	(*ElasticsearchSpec_MasterNode)(nil),             // 47: yandex.cloud.mdb.elasticsearch.v1.ElasticsearchSpec.MasterNode
	nil,                                              // 48: yandex.cloud.mdb.elasticsearch.v1.RestoreClusterRequest.LabelsEntry
	(*Cluster)(nil),                                  // 49: yandex.cloud.mdb.elasticsearch.v1.Cluster
	(Cluster_Environment)(0),                         // 50: yandex.cloud.mdb.elasticsearch.v1.Cluster.Environment
	(*UserSpec)(nil),                                 // 51: yandex.cloud.mdb.elasticsearch.v1.UserSpec
	(*MaintenanceWindow)(nil),                        // 52: yandex.cloud.mdb.elasticsearch.v1.MaintenanceWindow
	(*ExtensionSpec)(nil),                            // 53: yandex.cloud.mdb.elasticsearch.v1.ExtensionSpec
	(*fieldmaskpb.FieldMask)(nil),                    // 54: google.protobuf.FieldMask
	(*timestamppb.Timestamp)(nil),                    // 55: google.protobuf.Timestamp
	(*operation.Operation)(nil),                      // 56: yandex.cloud.operation.Operation
	(*Host)(nil),                                     // 57: yandex.cloud.mdb.elasticsearch.v1.Host
	(Host_Type)(0),                                   // 58: yandex.cloud.mdb.elasticsearch.v1.Host.Type
	(*Backup)(nil),                                   // 59: yandex.cloud.mdb.elasticsearch.v1.Backup
	(*config.ElasticsearchConfig7)(nil),              // 60: yandex.cloud.mdb.elasticsearch.v1.config.ElasticsearchConfig7
	(*Resources)(nil),                                // 61: yandex.cloud.mdb.elasticsearch.v1.Resources
}
var file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_depIdxs = []int32{
	49, // 0: yandex.cloud.mdb.elasticsearch.v1.ListClustersResponse.clusters:type_name -> yandex.cloud.mdb.elasticsearch.v1.Cluster
	43, // 1: yandex.cloud.mdb.elasticsearch.v1.CreateClusterRequest.labels:type_name -> yandex.cloud.mdb.elasticsearch.v1.CreateClusterRequest.LabelsEntry
	50, // 2: yandex.cloud.mdb.elasticsearch.v1.CreateClusterRequest.environment:type_name -> yandex.cloud.mdb.elasticsearch.v1.Cluster.Environment
	29, // 3: yandex.cloud.mdb.elasticsearch.v1.CreateClusterRequest.config_spec:type_name -> yandex.cloud.mdb.elasticsearch.v1.ConfigSpec
	51, // 4: yandex.cloud.mdb.elasticsearch.v1.CreateClusterRequest.user_specs:type_name -> yandex.cloud.mdb.elasticsearch.v1.UserSpec
	27, // 5: yandex.cloud.mdb.elasticsearch.v1.CreateClusterRequest.host_specs:type_name -> yandex.cloud.mdb.elasticsearch.v1.HostSpec
	52, // 6: yandex.cloud.mdb.elasticsearch.v1.CreateClusterRequest.maintenance_window:type_name -> yandex.cloud.mdb.elasticsearch.v1.MaintenanceWindow
	53, // 7: yandex.cloud.mdb.elasticsearch.v1.CreateClusterRequest.extension_specs:type_name -> yandex.cloud.mdb.elasticsearch.v1.ExtensionSpec
	54, // 8: yandex.cloud.mdb.elasticsearch.v1.UpdateClusterRequest.update_mask:type_name -> google.protobuf.FieldMask
	44, // 9: yandex.cloud.mdb.elasticsearch.v1.UpdateClusterRequest.labels:type_name -> yandex.cloud.mdb.elasticsearch.v1.UpdateClusterRequest.LabelsEntry
	30, // 10: yandex.cloud.mdb.elasticsearch.v1.UpdateClusterRequest.config_spec:type_name -> yandex.cloud.mdb.elasticsearch.v1.ConfigSpecUpdate
	52, // 11: yandex.cloud.mdb.elasticsearch.v1.UpdateClusterRequest.maintenance_window:type_name -> yandex.cloud.mdb.elasticsearch.v1.MaintenanceWindow
	55, // 12: yandex.cloud.mdb.elasticsearch.v1.ListClusterLogsRequest.from_time:type_name -> google.protobuf.Timestamp
	55, // 13: yandex.cloud.mdb.elasticsearch.v1.ListClusterLogsRequest.to_time:type_name -> google.protobuf.Timestamp
	0,  // 14: yandex.cloud.mdb.elasticsearch.v1.ListClusterLogsRequest.service_type:type_name -> yandex.cloud.mdb.elasticsearch.v1.ListClusterLogsRequest.ServiceType
	55, // 15: yandex.cloud.mdb.elasticsearch.v1.LogRecord.timestamp:type_name -> google.protobuf.Timestamp
	45, // 16: yandex.cloud.mdb.elasticsearch.v1.LogRecord.message:type_name -> yandex.cloud.mdb.elasticsearch.v1.LogRecord.MessageEntry
	13, // 17: yandex.cloud.mdb.elasticsearch.v1.ListClusterLogsResponse.logs:type_name -> yandex.cloud.mdb.elasticsearch.v1.LogRecord
	13, // 18: yandex.cloud.mdb.elasticsearch.v1.StreamLogRecord.record:type_name -> yandex.cloud.mdb.elasticsearch.v1.LogRecord
	55, // 19: yandex.cloud.mdb.elasticsearch.v1.StreamClusterLogsRequest.from_time:type_name -> google.protobuf.Timestamp
	55, // 20: yandex.cloud.mdb.elasticsearch.v1.StreamClusterLogsRequest.to_time:type_name -> google.protobuf.Timestamp
	1,  // 21: yandex.cloud.mdb.elasticsearch.v1.StreamClusterLogsRequest.service_type:type_name -> yandex.cloud.mdb.elasticsearch.v1.StreamClusterLogsRequest.ServiceType
	56, // 22: yandex.cloud.mdb.elasticsearch.v1.ListClusterOperationsResponse.operations:type_name -> yandex.cloud.operation.Operation
	57, // 23: yandex.cloud.mdb.elasticsearch.v1.ListClusterHostsResponse.hosts:type_name -> yandex.cloud.mdb.elasticsearch.v1.Host
	58, // 24: yandex.cloud.mdb.elasticsearch.v1.HostSpec.type:type_name -> yandex.cloud.mdb.elasticsearch.v1.Host.Type
	46, // 25: yandex.cloud.mdb.elasticsearch.v1.ElasticsearchSpec.data_node:type_name -> yandex.cloud.mdb.elasticsearch.v1.ElasticsearchSpec.DataNode
	47, // 26: yandex.cloud.mdb.elasticsearch.v1.ElasticsearchSpec.master_node:type_name -> yandex.cloud.mdb.elasticsearch.v1.ElasticsearchSpec.MasterNode
	28, // 27: yandex.cloud.mdb.elasticsearch.v1.ConfigSpec.elasticsearch_spec:type_name -> yandex.cloud.mdb.elasticsearch.v1.ElasticsearchSpec
	28, // 28: yandex.cloud.mdb.elasticsearch.v1.ConfigSpecUpdate.elasticsearch_spec:type_name -> yandex.cloud.mdb.elasticsearch.v1.ElasticsearchSpec
	27, // 29: yandex.cloud.mdb.elasticsearch.v1.AddClusterHostsRequest.host_specs:type_name -> yandex.cloud.mdb.elasticsearch.v1.HostSpec
	2,  // 30: yandex.cloud.mdb.elasticsearch.v1.RescheduleMaintenanceRequest.reschedule_type:type_name -> yandex.cloud.mdb.elasticsearch.v1.RescheduleMaintenanceRequest.RescheduleType
	55, // 31: yandex.cloud.mdb.elasticsearch.v1.RescheduleMaintenanceRequest.delayed_until:type_name -> google.protobuf.Timestamp
	55, // 32: yandex.cloud.mdb.elasticsearch.v1.RescheduleMaintenanceMetadata.delayed_until:type_name -> google.protobuf.Timestamp
	48, // 33: yandex.cloud.mdb.elasticsearch.v1.RestoreClusterRequest.labels:type_name -> yandex.cloud.mdb.elasticsearch.v1.RestoreClusterRequest.LabelsEntry
	50, // 34: yandex.cloud.mdb.elasticsearch.v1.RestoreClusterRequest.environment:type_name -> yandex.cloud.mdb.elasticsearch.v1.Cluster.Environment
	29, // 35: yandex.cloud.mdb.elasticsearch.v1.RestoreClusterRequest.config_spec:type_name -> yandex.cloud.mdb.elasticsearch.v1.ConfigSpec
	27, // 36: yandex.cloud.mdb.elasticsearch.v1.RestoreClusterRequest.host_specs:type_name -> yandex.cloud.mdb.elasticsearch.v1.HostSpec
	53, // 37: yandex.cloud.mdb.elasticsearch.v1.RestoreClusterRequest.extension_specs:type_name -> yandex.cloud.mdb.elasticsearch.v1.ExtensionSpec
	59, // 38: yandex.cloud.mdb.elasticsearch.v1.ListClusterBackupsResponse.backups:type_name -> yandex.cloud.mdb.elasticsearch.v1.Backup
	60, // 39: yandex.cloud.mdb.elasticsearch.v1.ElasticsearchSpec.DataNode.elasticsearch_config_7:type_name -> yandex.cloud.mdb.elasticsearch.v1.config.ElasticsearchConfig7
	61, // 40: yandex.cloud.mdb.elasticsearch.v1.ElasticsearchSpec.DataNode.resources:type_name -> yandex.cloud.mdb.elasticsearch.v1.Resources
	61, // 41: yandex.cloud.mdb.elasticsearch.v1.ElasticsearchSpec.MasterNode.resources:type_name -> yandex.cloud.mdb.elasticsearch.v1.Resources
	3,  // 42: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Get:input_type -> yandex.cloud.mdb.elasticsearch.v1.GetClusterRequest
	4,  // 43: yandex.cloud.mdb.elasticsearch.v1.ClusterService.List:input_type -> yandex.cloud.mdb.elasticsearch.v1.ListClustersRequest
	6,  // 44: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Create:input_type -> yandex.cloud.mdb.elasticsearch.v1.CreateClusterRequest
	8,  // 45: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Update:input_type -> yandex.cloud.mdb.elasticsearch.v1.UpdateClusterRequest
	10, // 46: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Delete:input_type -> yandex.cloud.mdb.elasticsearch.v1.DeleteClusterRequest
	21, // 47: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Move:input_type -> yandex.cloud.mdb.elasticsearch.v1.MoveClusterRequest
	23, // 48: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Start:input_type -> yandex.cloud.mdb.elasticsearch.v1.StartClusterRequest
	25, // 49: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Stop:input_type -> yandex.cloud.mdb.elasticsearch.v1.StopClusterRequest
	39, // 50: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Backup:input_type -> yandex.cloud.mdb.elasticsearch.v1.BackupClusterRequest
	41, // 51: yandex.cloud.mdb.elasticsearch.v1.ClusterService.ListBackups:input_type -> yandex.cloud.mdb.elasticsearch.v1.ListClusterBackupsRequest
	37, // 52: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Restore:input_type -> yandex.cloud.mdb.elasticsearch.v1.RestoreClusterRequest
	12, // 53: yandex.cloud.mdb.elasticsearch.v1.ClusterService.ListLogs:input_type -> yandex.cloud.mdb.elasticsearch.v1.ListClusterLogsRequest
	16, // 54: yandex.cloud.mdb.elasticsearch.v1.ClusterService.StreamLogs:input_type -> yandex.cloud.mdb.elasticsearch.v1.StreamClusterLogsRequest
	17, // 55: yandex.cloud.mdb.elasticsearch.v1.ClusterService.ListOperations:input_type -> yandex.cloud.mdb.elasticsearch.v1.ListClusterOperationsRequest
	19, // 56: yandex.cloud.mdb.elasticsearch.v1.ClusterService.ListHosts:input_type -> yandex.cloud.mdb.elasticsearch.v1.ListClusterHostsRequest
	31, // 57: yandex.cloud.mdb.elasticsearch.v1.ClusterService.AddHosts:input_type -> yandex.cloud.mdb.elasticsearch.v1.AddClusterHostsRequest
	33, // 58: yandex.cloud.mdb.elasticsearch.v1.ClusterService.DeleteHosts:input_type -> yandex.cloud.mdb.elasticsearch.v1.DeleteClusterHostsRequest
	35, // 59: yandex.cloud.mdb.elasticsearch.v1.ClusterService.RescheduleMaintenance:input_type -> yandex.cloud.mdb.elasticsearch.v1.RescheduleMaintenanceRequest
	49, // 60: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Get:output_type -> yandex.cloud.mdb.elasticsearch.v1.Cluster
	5,  // 61: yandex.cloud.mdb.elasticsearch.v1.ClusterService.List:output_type -> yandex.cloud.mdb.elasticsearch.v1.ListClustersResponse
	56, // 62: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Create:output_type -> yandex.cloud.operation.Operation
	56, // 63: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Update:output_type -> yandex.cloud.operation.Operation
	56, // 64: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Delete:output_type -> yandex.cloud.operation.Operation
	56, // 65: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Move:output_type -> yandex.cloud.operation.Operation
	56, // 66: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Start:output_type -> yandex.cloud.operation.Operation
	56, // 67: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Stop:output_type -> yandex.cloud.operation.Operation
	56, // 68: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Backup:output_type -> yandex.cloud.operation.Operation
	42, // 69: yandex.cloud.mdb.elasticsearch.v1.ClusterService.ListBackups:output_type -> yandex.cloud.mdb.elasticsearch.v1.ListClusterBackupsResponse
	56, // 70: yandex.cloud.mdb.elasticsearch.v1.ClusterService.Restore:output_type -> yandex.cloud.operation.Operation
	14, // 71: yandex.cloud.mdb.elasticsearch.v1.ClusterService.ListLogs:output_type -> yandex.cloud.mdb.elasticsearch.v1.ListClusterLogsResponse
	15, // 72: yandex.cloud.mdb.elasticsearch.v1.ClusterService.StreamLogs:output_type -> yandex.cloud.mdb.elasticsearch.v1.StreamLogRecord
	18, // 73: yandex.cloud.mdb.elasticsearch.v1.ClusterService.ListOperations:output_type -> yandex.cloud.mdb.elasticsearch.v1.ListClusterOperationsResponse
	20, // 74: yandex.cloud.mdb.elasticsearch.v1.ClusterService.ListHosts:output_type -> yandex.cloud.mdb.elasticsearch.v1.ListClusterHostsResponse
	56, // 75: yandex.cloud.mdb.elasticsearch.v1.ClusterService.AddHosts:output_type -> yandex.cloud.operation.Operation
	56, // 76: yandex.cloud.mdb.elasticsearch.v1.ClusterService.DeleteHosts:output_type -> yandex.cloud.operation.Operation
	56, // 77: yandex.cloud.mdb.elasticsearch.v1.ClusterService.RescheduleMaintenance:output_type -> yandex.cloud.operation.Operation
	60, // [60:78] is the sub-list for method output_type
	42, // [42:60] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_init() }
func file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_init() {
	if File_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto != nil {
		return
	}
	file_yandex_cloud_mdb_elasticsearch_v1_backup_proto_init()
	file_yandex_cloud_mdb_elasticsearch_v1_cluster_proto_init()
	file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_init()
	file_yandex_cloud_mdb_elasticsearch_v1_maintenance_proto_init()
	file_yandex_cloud_mdb_elasticsearch_v1_user_proto_init()
	file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes[43].OneofWrappers = []any{
		(*ElasticsearchSpec_DataNode_ElasticsearchConfig_7)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDesc), len(file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto = out.File
	file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_goTypes = nil
	file_yandex_cloud_mdb_elasticsearch_v1_cluster_service_proto_depIdxs = nil
}

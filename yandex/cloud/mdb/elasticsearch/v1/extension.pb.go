// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/mdb/elasticsearch/v1/extension.proto

package elasticsearch

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Extension struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the extension.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Unique ID of the extension.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the Elasticsearch cluster the extension belongs to.
	ClusterId string `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Version of the extension.
	Version int64 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	// The flag shows whether the extension is active.
	Active        bool `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Extension) Reset() {
	*x = Extension{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Extension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extension) ProtoMessage() {}

func (x *Extension) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extension.ProtoReflect.Descriptor instead.
func (*Extension) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_rawDescGZIP(), []int{0}
}

func (x *Extension) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Extension) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Extension) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *Extension) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Extension) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type ExtensionSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the extension.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// URI of the zip archive to create the new extension from. Currently only supports links that are stored in Object Storage.
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// The flag shows whether to create the extension in disabled state.
	Disabled      bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtensionSpec) Reset() {
	*x = ExtensionSpec{}
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtensionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionSpec) ProtoMessage() {}

func (x *ExtensionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionSpec.ProtoReflect.Descriptor instead.
func (*ExtensionSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_rawDescGZIP(), []int{1}
}

func (x *ExtensionSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExtensionSpec) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ExtensionSpec) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

var File_yandex_cloud_mdb_elasticsearch_v1_extension_proto protoreflect.FileDescriptor

const file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_rawDesc = "" +
	"\n" +
	"1yandex/cloud/mdb/elasticsearch/v1/extension.proto\x12!yandex.cloud.mdb.elasticsearch.v1\x1a\x1dyandex/cloud/validation.proto\"\x80\x01\n" +
	"\tExtension\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x03R\aversion\x12\x16\n" +
	"\x06active\x18\x05 \x01(\bR\x06active\"_\n" +
	"\rExtensionSpec\x12 \n" +
	"\x04name\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x04name\x12\x10\n" +
	"\x03uri\x18\x02 \x01(\tR\x03uri\x12\x1a\n" +
	"\bdisabled\x18\x03 \x01(\bR\bdisabledB|\n" +
	"%yandex.cloud.api.mdb.elasticsearch.v1ZSgithub.com/yandex-cloud/go-genproto/yandex/cloud/mdb/elasticsearch/v1;elasticsearchb\x06proto3"

var (
	file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_rawDescOnce sync.Once
	file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_rawDescData []byte
)

func file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_rawDescGZIP() []byte {
	file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_rawDesc), len(file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_rawDesc)))
	})
	return file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_rawDescData
}

var file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_goTypes = []any{
	(*Extension)(nil),     // 0: yandex.cloud.mdb.elasticsearch.v1.Extension
	(*ExtensionSpec)(nil), // 1: yandex.cloud.mdb.elasticsearch.v1.ExtensionSpec
}
var file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_init() }
func file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_init() {
	if File_yandex_cloud_mdb_elasticsearch_v1_extension_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_rawDesc), len(file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_msgTypes,
	}.Build()
	File_yandex_cloud_mdb_elasticsearch_v1_extension_proto = out.File
	file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_goTypes = nil
	file_yandex_cloud_mdb_elasticsearch_v1_extension_proto_depIdxs = nil
}

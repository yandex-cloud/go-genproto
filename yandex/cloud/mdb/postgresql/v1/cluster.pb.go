// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/mdb/postgresql/v1/cluster.proto

package postgresql

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	config "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/postgresql/v1/config"
	timeofday "google.golang.org/genproto/googleapis/type/timeofday"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Cluster_Environment int32

const (
	Cluster_ENVIRONMENT_UNSPECIFIED Cluster_Environment = 0
	// Stable environment with a conservative update policy:
	// only hotfixes are applied during regular maintenance.
	Cluster_PRODUCTION Cluster_Environment = 1
	// Environment with more aggressive update policy: new versions
	// are rolled out irrespective of backward compatibility.
	Cluster_PRESTABLE Cluster_Environment = 2
)

// Enum value maps for Cluster_Environment.
var (
	Cluster_Environment_name = map[int32]string{
		0: "ENVIRONMENT_UNSPECIFIED",
		1: "PRODUCTION",
		2: "PRESTABLE",
	}
	Cluster_Environment_value = map[string]int32{
		"ENVIRONMENT_UNSPECIFIED": 0,
		"PRODUCTION":              1,
		"PRESTABLE":               2,
	}
)

func (x Cluster_Environment) Enum() *Cluster_Environment {
	p := new(Cluster_Environment)
	*p = x
	return p
}

func (x Cluster_Environment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cluster_Environment) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[0].Descriptor()
}

func (Cluster_Environment) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[0]
}

func (x Cluster_Environment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cluster_Environment.Descriptor instead.
func (Cluster_Environment) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{0, 0}
}

type Cluster_Health int32

const (
	// State of the cluster is unknown ([Host.health] for every host in the cluster is UNKNOWN).
	Cluster_HEALTH_UNKNOWN Cluster_Health = 0
	// Cluster is alive and well ([Host.health] for every host in the cluster is ALIVE).
	Cluster_ALIVE Cluster_Health = 1
	// Cluster is inoperable ([Host.health] for every host in the cluster is DEAD).
	Cluster_DEAD Cluster_Health = 2
	// Cluster is working below capacity ([Host.health] for at least one host in the cluster is not ALIVE).
	Cluster_DEGRADED Cluster_Health = 3
)

// Enum value maps for Cluster_Health.
var (
	Cluster_Health_name = map[int32]string{
		0: "HEALTH_UNKNOWN",
		1: "ALIVE",
		2: "DEAD",
		3: "DEGRADED",
	}
	Cluster_Health_value = map[string]int32{
		"HEALTH_UNKNOWN": 0,
		"ALIVE":          1,
		"DEAD":           2,
		"DEGRADED":       3,
	}
)

func (x Cluster_Health) Enum() *Cluster_Health {
	p := new(Cluster_Health)
	*p = x
	return p
}

func (x Cluster_Health) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cluster_Health) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[1].Descriptor()
}

func (Cluster_Health) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[1]
}

func (x Cluster_Health) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cluster_Health.Descriptor instead.
func (Cluster_Health) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{0, 1}
}

type Cluster_Status int32

const (
	// Cluster state is unknown.
	Cluster_STATUS_UNKNOWN Cluster_Status = 0
	// Cluster is being created.
	Cluster_CREATING Cluster_Status = 1
	// Cluster is running normally.
	Cluster_RUNNING Cluster_Status = 2
	// Cluster encountered a problem and cannot operate.
	Cluster_ERROR Cluster_Status = 3
	// Cluster is being updated.
	Cluster_UPDATING Cluster_Status = 4
	// Cluster is stopping.
	Cluster_STOPPING Cluster_Status = 5
	// Cluster stopped.
	Cluster_STOPPED Cluster_Status = 6
	// Cluster is starting.
	Cluster_STARTING Cluster_Status = 7
)

// Enum value maps for Cluster_Status.
var (
	Cluster_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "CREATING",
		2: "RUNNING",
		3: "ERROR",
		4: "UPDATING",
		5: "STOPPING",
		6: "STOPPED",
		7: "STARTING",
	}
	Cluster_Status_value = map[string]int32{
		"STATUS_UNKNOWN": 0,
		"CREATING":       1,
		"RUNNING":        2,
		"ERROR":          3,
		"UPDATING":       4,
		"STOPPING":       5,
		"STOPPED":        6,
		"STARTING":       7,
	}
)

func (x Cluster_Status) Enum() *Cluster_Status {
	p := new(Cluster_Status)
	*p = x
	return p
}

func (x Cluster_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cluster_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[2].Descriptor()
}

func (Cluster_Status) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[2]
}

func (x Cluster_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cluster_Status.Descriptor instead.
func (Cluster_Status) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{0, 2}
}

type ConnectionPoolerConfig_PoolingMode int32

const (
	ConnectionPoolerConfig_POOLING_MODE_UNSPECIFIED ConnectionPoolerConfig_PoolingMode = 0
	// Session pooling mode.
	ConnectionPoolerConfig_SESSION ConnectionPoolerConfig_PoolingMode = 1
	// Transaction pooling mode.
	ConnectionPoolerConfig_TRANSACTION ConnectionPoolerConfig_PoolingMode = 2
	// Statement pooling mode.
	ConnectionPoolerConfig_STATEMENT ConnectionPoolerConfig_PoolingMode = 3
)

// Enum value maps for ConnectionPoolerConfig_PoolingMode.
var (
	ConnectionPoolerConfig_PoolingMode_name = map[int32]string{
		0: "POOLING_MODE_UNSPECIFIED",
		1: "SESSION",
		2: "TRANSACTION",
		3: "STATEMENT",
	}
	ConnectionPoolerConfig_PoolingMode_value = map[string]int32{
		"POOLING_MODE_UNSPECIFIED": 0,
		"SESSION":                  1,
		"TRANSACTION":              2,
		"STATEMENT":                3,
	}
)

func (x ConnectionPoolerConfig_PoolingMode) Enum() *ConnectionPoolerConfig_PoolingMode {
	p := new(ConnectionPoolerConfig_PoolingMode)
	*p = x
	return p
}

func (x ConnectionPoolerConfig_PoolingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionPoolerConfig_PoolingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[3].Descriptor()
}

func (ConnectionPoolerConfig_PoolingMode) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[3]
}

func (x ConnectionPoolerConfig_PoolingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionPoolerConfig_PoolingMode.Descriptor instead.
func (ConnectionPoolerConfig_PoolingMode) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{3, 0}
}

type Host_Role int32

const (
	// Role of the host in the cluster is unknown. Default value.
	Host_ROLE_UNKNOWN Host_Role = 0
	// Host is the master PostgreSQL server in the cluster.
	Host_MASTER Host_Role = 1
	// Host is a replica (standby) PostgreSQL server in the cluster.
	Host_REPLICA Host_Role = 2
)

// Enum value maps for Host_Role.
var (
	Host_Role_name = map[int32]string{
		0: "ROLE_UNKNOWN",
		1: "MASTER",
		2: "REPLICA",
	}
	Host_Role_value = map[string]int32{
		"ROLE_UNKNOWN": 0,
		"MASTER":       1,
		"REPLICA":      2,
	}
)

func (x Host_Role) Enum() *Host_Role {
	p := new(Host_Role)
	*p = x
	return p
}

func (x Host_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Host_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[4].Descriptor()
}

func (Host_Role) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[4]
}

func (x Host_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Host_Role.Descriptor instead.
func (Host_Role) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{4, 0}
}

type Host_ReplicaType int32

const (
	Host_REPLICA_TYPE_UNKNOWN Host_ReplicaType = 0 // Replica type is unknown (we have no data) or it's master
	Host_ASYNC                Host_ReplicaType = 1
	Host_SYNC                 Host_ReplicaType = 2
	Host_QUORUM               Host_ReplicaType = 3
)

// Enum value maps for Host_ReplicaType.
var (
	Host_ReplicaType_name = map[int32]string{
		0: "REPLICA_TYPE_UNKNOWN",
		1: "ASYNC",
		2: "SYNC",
		3: "QUORUM",
	}
	Host_ReplicaType_value = map[string]int32{
		"REPLICA_TYPE_UNKNOWN": 0,
		"ASYNC":                1,
		"SYNC":                 2,
		"QUORUM":               3,
	}
)

func (x Host_ReplicaType) Enum() *Host_ReplicaType {
	p := new(Host_ReplicaType)
	*p = x
	return p
}

func (x Host_ReplicaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Host_ReplicaType) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[5].Descriptor()
}

func (Host_ReplicaType) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[5]
}

func (x Host_ReplicaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Host_ReplicaType.Descriptor instead.
func (Host_ReplicaType) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{4, 1}
}

type Host_Health int32

const (
	// Health of the host is unknown. Default value.
	Host_HEALTH_UNKNOWN Host_Health = 0
	// The host is performing all its functions normally.
	Host_ALIVE Host_Health = 1
	// The host is inoperable, and cannot perform any of its essential functions.
	Host_DEAD Host_Health = 2
	// The host is degraded, and can perform only some of its essential functions.
	Host_DEGRADED Host_Health = 3
	// The host is alive, but in read-only mode.
	Host_READONLY Host_Health = 4
)

// Enum value maps for Host_Health.
var (
	Host_Health_name = map[int32]string{
		0: "HEALTH_UNKNOWN",
		1: "ALIVE",
		2: "DEAD",
		3: "DEGRADED",
		4: "READONLY",
	}
	Host_Health_value = map[string]int32{
		"HEALTH_UNKNOWN": 0,
		"ALIVE":          1,
		"DEAD":           2,
		"DEGRADED":       3,
		"READONLY":       4,
	}
)

func (x Host_Health) Enum() *Host_Health {
	p := new(Host_Health)
	*p = x
	return p
}

func (x Host_Health) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Host_Health) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[6].Descriptor()
}

func (Host_Health) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[6]
}

func (x Host_Health) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Host_Health.Descriptor instead.
func (Host_Health) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{4, 2}
}

type Service_Type int32

const (
	// Service type of the host is unspecified. Default value.
	Service_TYPE_UNSPECIFIED Service_Type = 0
	// The host is a PostgreSQL server.
	Service_POSTGRESQL Service_Type = 1
	// The host is a PgBouncer server.
	Service_POOLER Service_Type = 2
)

// Enum value maps for Service_Type.
var (
	Service_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "POSTGRESQL",
		2: "POOLER",
	}
	Service_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"POSTGRESQL":       1,
		"POOLER":           2,
	}
)

func (x Service_Type) Enum() *Service_Type {
	p := new(Service_Type)
	*p = x
	return p
}

func (x Service_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Service_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[7].Descriptor()
}

func (Service_Type) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[7]
}

func (x Service_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Service_Type.Descriptor instead.
func (Service_Type) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{6, 0}
}

type Service_Health int32

const (
	// Health of the server is unknown. Default value.
	Service_HEALTH_UNKNOWN Service_Health = 0
	// The server is working normally.
	Service_ALIVE Service_Health = 1
	// The server is dead or unresponsive.
	Service_DEAD Service_Health = 2
	// The server is in read-only mode.
	Service_READONLY Service_Health = 3
)

// Enum value maps for Service_Health.
var (
	Service_Health_name = map[int32]string{
		0: "HEALTH_UNKNOWN",
		1: "ALIVE",
		2: "DEAD",
		3: "READONLY",
	}
	Service_Health_value = map[string]int32{
		"HEALTH_UNKNOWN": 0,
		"ALIVE":          1,
		"DEAD":           2,
		"READONLY":       3,
	}
)

func (x Service_Health) Enum() *Service_Health {
	p := new(Service_Health)
	*p = x
	return p
}

func (x Service_Health) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Service_Health) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[8].Descriptor()
}

func (Service_Health) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes[8]
}

func (x Service_Health) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Service_Health.Descriptor instead.
func (Service_Health) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{6, 1}
}

// A PostgreSQL Cluster resource. For more information, see
// the [Concepts](/docs/managed-postgresql/concepts) section of the documentation.
type Cluster struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster.
	// This ID is assigned by MDB at creation time.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the folder that the PostgreSQL cluster belongs to.
	FolderId string `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Name of the PostgreSQL cluster.
	// The name is unique within the folder. 1-63 characters long.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the PostgreSQL cluster. 0-256 characters long.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Custom labels for the PostgreSQL cluster as “ key:value “ pairs.
	// Maximum 64 per resource.
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Deployment environment of the PostgreSQL cluster.
	Environment Cluster_Environment `protobuf:"varint,7,opt,name=environment,proto3,enum=yandex.cloud.mdb.postgresql.v1.Cluster_Environment" json:"environment,omitempty"`
	// Description of monitoring systems relevant to the PostgreSQL cluster.
	Monitoring []*Monitoring `protobuf:"bytes,8,rep,name=monitoring,proto3" json:"monitoring,omitempty"`
	// Configuration of the PostgreSQL cluster.
	Config *ClusterConfig `protobuf:"bytes,9,opt,name=config,proto3" json:"config,omitempty"`
	// ID of the network that the cluster belongs to.
	NetworkId string `protobuf:"bytes,10,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// Aggregated cluster health.
	Health Cluster_Health `protobuf:"varint,11,opt,name=health,proto3,enum=yandex.cloud.mdb.postgresql.v1.Cluster_Health" json:"health,omitempty"`
	// Current state of the cluster.
	Status Cluster_Status `protobuf:"varint,12,opt,name=status,proto3,enum=yandex.cloud.mdb.postgresql.v1.Cluster_Status" json:"status,omitempty"`
	// Maintenance window for the cluster.
	MaintenanceWindow *MaintenanceWindow `protobuf:"bytes,13,opt,name=maintenance_window,json=maintenanceWindow,proto3" json:"maintenance_window,omitempty"`
	// Planned maintenance operation to be started for the cluster within the nearest [maintenance_window].
	PlannedOperation *MaintenanceOperation `protobuf:"bytes,14,opt,name=planned_operation,json=plannedOperation,proto3" json:"planned_operation,omitempty"`
	// User security groups
	SecurityGroupIds []string `protobuf:"bytes,15,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
	// Deletion Protection inhibits deletion of the cluster
	DeletionProtection bool `protobuf:"varint,16,opt,name=deletion_protection,json=deletionProtection,proto3" json:"deletion_protection,omitempty"`
	// Host groups hosting VMs of the cluster.
	HostGroupIds []string `protobuf:"bytes,17,rep,name=host_group_ids,json=hostGroupIds,proto3" json:"host_group_ids,omitempty"`
	// ID of the key to encrypt cluster disks.
	DiskEncryptionKeyId *wrapperspb.StringValue `protobuf:"bytes,18,opt,name=disk_encryption_key_id,json=diskEncryptionKeyId,proto3" json:"disk_encryption_key_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *Cluster) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Cluster) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *Cluster) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Cluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cluster) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Cluster) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Cluster) GetEnvironment() Cluster_Environment {
	if x != nil {
		return x.Environment
	}
	return Cluster_ENVIRONMENT_UNSPECIFIED
}

func (x *Cluster) GetMonitoring() []*Monitoring {
	if x != nil {
		return x.Monitoring
	}
	return nil
}

func (x *Cluster) GetConfig() *ClusterConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Cluster) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *Cluster) GetHealth() Cluster_Health {
	if x != nil {
		return x.Health
	}
	return Cluster_HEALTH_UNKNOWN
}

func (x *Cluster) GetStatus() Cluster_Status {
	if x != nil {
		return x.Status
	}
	return Cluster_STATUS_UNKNOWN
}

func (x *Cluster) GetMaintenanceWindow() *MaintenanceWindow {
	if x != nil {
		return x.MaintenanceWindow
	}
	return nil
}

func (x *Cluster) GetPlannedOperation() *MaintenanceOperation {
	if x != nil {
		return x.PlannedOperation
	}
	return nil
}

func (x *Cluster) GetSecurityGroupIds() []string {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

func (x *Cluster) GetDeletionProtection() bool {
	if x != nil {
		return x.DeletionProtection
	}
	return false
}

func (x *Cluster) GetHostGroupIds() []string {
	if x != nil {
		return x.HostGroupIds
	}
	return nil
}

func (x *Cluster) GetDiskEncryptionKeyId() *wrapperspb.StringValue {
	if x != nil {
		return x.DiskEncryptionKeyId
	}
	return nil
}

// Monitoring system.
type Monitoring struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the monitoring system.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the monitoring system.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Link to the monitoring system charts for the PostgreSQL cluster.
	Link          string `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Monitoring) Reset() {
	*x = Monitoring{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Monitoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monitoring) ProtoMessage() {}

func (x *Monitoring) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monitoring.ProtoReflect.Descriptor instead.
func (*Monitoring) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *Monitoring) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Monitoring) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Monitoring) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type ClusterConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version of PostgreSQL server software.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Configuration for PostgreSQL servers in the cluster.
	//
	// Types that are valid to be assigned to PostgresqlConfig:
	//
	//	*ClusterConfig_PostgresqlConfig_9_6
	//	*ClusterConfig_PostgresqlConfig_10_1C
	//	*ClusterConfig_PostgresqlConfig_10
	//	*ClusterConfig_PostgresqlConfig_11
	//	*ClusterConfig_PostgresqlConfig_11_1C
	//	*ClusterConfig_PostgresqlConfig_12
	//	*ClusterConfig_PostgresqlConfig_12_1C
	//	*ClusterConfig_PostgresqlConfig_13
	//	*ClusterConfig_PostgresqlConfig_13_1C
	//	*ClusterConfig_PostgresqlConfig_14
	//	*ClusterConfig_PostgresqlConfig_14_1C
	//	*ClusterConfig_PostgresqlConfig_15
	//	*ClusterConfig_PostgresqlConfig_15_1C
	//	*ClusterConfig_PostgresqlConfig_16
	//	*ClusterConfig_PostgresqlConfig_16_1C
	//	*ClusterConfig_PostgresqlConfig_17
	//	*ClusterConfig_PostgresqlConfig_17_1C
	//	*ClusterConfig_PostgresqlConfig_18
	//	*ClusterConfig_PostgresqlConfig_18_1C
	PostgresqlConfig isClusterConfig_PostgresqlConfig `protobuf_oneof:"postgresql_config"`
	// Configuration of the connection pooler.
	PoolerConfig *ConnectionPoolerConfig `protobuf:"bytes,4,opt,name=pooler_config,json=poolerConfig,proto3" json:"pooler_config,omitempty"`
	// Resources allocated to PostgreSQL hosts.
	Resources *Resources `protobuf:"bytes,5,opt,name=resources,proto3" json:"resources,omitempty"`
	// Configuration setting which enables/disables autofailover in cluster.
	Autofailover *wrapperspb.BoolValue `protobuf:"bytes,6,opt,name=autofailover,proto3" json:"autofailover,omitempty"`
	// Time to start the daily backup, in the UTC timezone.
	BackupWindowStart *timeofday.TimeOfDay `protobuf:"bytes,7,opt,name=backup_window_start,json=backupWindowStart,proto3" json:"backup_window_start,omitempty"`
	// Retention policy of automated backups.
	BackupRetainPeriodDays *wrapperspb.Int64Value `protobuf:"bytes,17,opt,name=backup_retain_period_days,json=backupRetainPeriodDays,proto3" json:"backup_retain_period_days,omitempty"`
	// Access policy to DB
	Access *Access `protobuf:"bytes,9,opt,name=access,proto3" json:"access,omitempty"`
	// Configuration of the performance diagnostics service.
	PerformanceDiagnostics *PerformanceDiagnostics `protobuf:"bytes,12,opt,name=performance_diagnostics,json=performanceDiagnostics,proto3" json:"performance_diagnostics,omitempty"`
	// Disk size autoscaling
	DiskSizeAutoscaling *DiskSizeAutoscaling `protobuf:"bytes,23,opt,name=disk_size_autoscaling,json=diskSizeAutoscaling,proto3" json:"disk_size_autoscaling,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ClusterConfig) Reset() {
	*x = ClusterConfig{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterConfig) ProtoMessage() {}

func (x *ClusterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterConfig.ProtoReflect.Descriptor instead.
func (*ClusterConfig) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *ClusterConfig) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ClusterConfig) GetPostgresqlConfig() isClusterConfig_PostgresqlConfig {
	if x != nil {
		return x.PostgresqlConfig
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_9_6() *config.PostgresqlConfigSet9_6 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_9_6); ok {
			return x.PostgresqlConfig_9_6
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_10_1C() *config.PostgresqlConfigSet10_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_10_1C); ok {
			return x.PostgresqlConfig_10_1C
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_10() *config.PostgresqlConfigSet10 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_10); ok {
			return x.PostgresqlConfig_10
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_11() *config.PostgresqlConfigSet11 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_11); ok {
			return x.PostgresqlConfig_11
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_11_1C() *config.PostgresqlConfigSet11_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_11_1C); ok {
			return x.PostgresqlConfig_11_1C
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_12() *config.PostgresqlConfigSet12 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_12); ok {
			return x.PostgresqlConfig_12
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_12_1C() *config.PostgresqlConfigSet12_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_12_1C); ok {
			return x.PostgresqlConfig_12_1C
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_13() *config.PostgresqlConfigSet13 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_13); ok {
			return x.PostgresqlConfig_13
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_13_1C() *config.PostgresqlConfigSet13_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_13_1C); ok {
			return x.PostgresqlConfig_13_1C
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_14() *config.PostgresqlConfigSet14 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_14); ok {
			return x.PostgresqlConfig_14
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_14_1C() *config.PostgresqlConfigSet14_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_14_1C); ok {
			return x.PostgresqlConfig_14_1C
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_15() *config.PostgresqlConfigSet15 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_15); ok {
			return x.PostgresqlConfig_15
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_15_1C() *config.PostgresqlConfigSet15_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_15_1C); ok {
			return x.PostgresqlConfig_15_1C
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_16() *config.PostgresqlConfigSet16 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_16); ok {
			return x.PostgresqlConfig_16
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_16_1C() *config.PostgresqlConfigSet16_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_16_1C); ok {
			return x.PostgresqlConfig_16_1C
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_17() *config.PostgresqlConfigSet17 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_17); ok {
			return x.PostgresqlConfig_17
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_17_1C() *config.PostgresqlConfigSet17_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_17_1C); ok {
			return x.PostgresqlConfig_17_1C
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_18() *config.PostgresqlConfigSet18 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_18); ok {
			return x.PostgresqlConfig_18
		}
	}
	return nil
}

func (x *ClusterConfig) GetPostgresqlConfig_18_1C() *config.PostgresqlConfigSet18_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ClusterConfig_PostgresqlConfig_18_1C); ok {
			return x.PostgresqlConfig_18_1C
		}
	}
	return nil
}

func (x *ClusterConfig) GetPoolerConfig() *ConnectionPoolerConfig {
	if x != nil {
		return x.PoolerConfig
	}
	return nil
}

func (x *ClusterConfig) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ClusterConfig) GetAutofailover() *wrapperspb.BoolValue {
	if x != nil {
		return x.Autofailover
	}
	return nil
}

func (x *ClusterConfig) GetBackupWindowStart() *timeofday.TimeOfDay {
	if x != nil {
		return x.BackupWindowStart
	}
	return nil
}

func (x *ClusterConfig) GetBackupRetainPeriodDays() *wrapperspb.Int64Value {
	if x != nil {
		return x.BackupRetainPeriodDays
	}
	return nil
}

func (x *ClusterConfig) GetAccess() *Access {
	if x != nil {
		return x.Access
	}
	return nil
}

func (x *ClusterConfig) GetPerformanceDiagnostics() *PerformanceDiagnostics {
	if x != nil {
		return x.PerformanceDiagnostics
	}
	return nil
}

func (x *ClusterConfig) GetDiskSizeAutoscaling() *DiskSizeAutoscaling {
	if x != nil {
		return x.DiskSizeAutoscaling
	}
	return nil
}

type isClusterConfig_PostgresqlConfig interface {
	isClusterConfig_PostgresqlConfig()
}

type ClusterConfig_PostgresqlConfig_9_6 struct {
	// Configuration of a PostgreSQL 9.6 server.
	PostgresqlConfig_9_6 *config.PostgresqlConfigSet9_6 `protobuf:"bytes,2,opt,name=postgresql_config_9_6,json=postgresqlConfig_9_6,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_10_1C struct {
	// Configuration of a PostgreSQL 10 1C server.
	PostgresqlConfig_10_1C *config.PostgresqlConfigSet10_1C `protobuf:"bytes,10,opt,name=postgresql_config_10_1c,json=postgresqlConfig_10_1c,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_10 struct {
	// Configuration of a PostgreSQL 10 server.
	PostgresqlConfig_10 *config.PostgresqlConfigSet10 `protobuf:"bytes,3,opt,name=postgresql_config_10,json=postgresqlConfig_10,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_11 struct {
	// Configuration of a PostgreSQL 11 server.
	PostgresqlConfig_11 *config.PostgresqlConfigSet11 `protobuf:"bytes,8,opt,name=postgresql_config_11,json=postgresqlConfig_11,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_11_1C struct {
	// Configuration of a PostgreSQL 11 1C server.
	PostgresqlConfig_11_1C *config.PostgresqlConfigSet11_1C `protobuf:"bytes,13,opt,name=postgresql_config_11_1c,json=postgresqlConfig_11_1c,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_12 struct {
	// Configuration of a PostgreSQL 12 server.
	PostgresqlConfig_12 *config.PostgresqlConfigSet12 `protobuf:"bytes,11,opt,name=postgresql_config_12,json=postgresqlConfig_12,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_12_1C struct {
	// Configuration of a PostgreSQL 12 1C server.
	PostgresqlConfig_12_1C *config.PostgresqlConfigSet12_1C `protobuf:"bytes,14,opt,name=postgresql_config_12_1c,json=postgresqlConfig_12_1c,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_13 struct {
	// Configuration of a PostgreSQL 13 server.
	PostgresqlConfig_13 *config.PostgresqlConfigSet13 `protobuf:"bytes,15,opt,name=postgresql_config_13,json=postgresqlConfig_13,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_13_1C struct {
	// Configuration of a PostgreSQL 13 1C server.
	PostgresqlConfig_13_1C *config.PostgresqlConfigSet13_1C `protobuf:"bytes,18,opt,name=postgresql_config_13_1c,json=postgresqlConfig_13_1c,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_14 struct {
	// Configuration of a PostgreSQL 14 server.
	PostgresqlConfig_14 *config.PostgresqlConfigSet14 `protobuf:"bytes,16,opt,name=postgresql_config_14,json=postgresqlConfig_14,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_14_1C struct {
	// Configuration of a PostgreSQL 14 1C server.
	PostgresqlConfig_14_1C *config.PostgresqlConfigSet14_1C `protobuf:"bytes,19,opt,name=postgresql_config_14_1c,json=postgresqlConfig_14_1c,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_15 struct {
	// Configuration of a PostgreSQL 15 server.
	PostgresqlConfig_15 *config.PostgresqlConfigSet15 `protobuf:"bytes,21,opt,name=postgresql_config_15,json=postgresqlConfig_15,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_15_1C struct {
	// Configuration of a PostgreSQL 15 1C server.
	PostgresqlConfig_15_1C *config.PostgresqlConfigSet15_1C `protobuf:"bytes,22,opt,name=postgresql_config_15_1c,json=postgresqlConfig_15_1c,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_16 struct {
	// Configuration of a PostgreSQL 16 server.
	PostgresqlConfig_16 *config.PostgresqlConfigSet16 `protobuf:"bytes,24,opt,name=postgresql_config_16,json=postgresqlConfig_16,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_16_1C struct {
	// Configuration of a PostgreSQL 16 1C server.
	PostgresqlConfig_16_1C *config.PostgresqlConfigSet16_1C `protobuf:"bytes,25,opt,name=postgresql_config_16_1c,json=postgresqlConfig_16_1c,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_17 struct {
	// Configuration of a PostgreSQL 17 server.
	PostgresqlConfig_17 *config.PostgresqlConfigSet17 `protobuf:"bytes,27,opt,name=postgresql_config_17,json=postgresqlConfig_17,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_17_1C struct {
	// Configuration of a PostgreSQL 17 1C server.
	PostgresqlConfig_17_1C *config.PostgresqlConfigSet17_1C `protobuf:"bytes,28,opt,name=postgresql_config_17_1c,json=postgresqlConfig_17_1c,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_18 struct {
	// Configuration of a PostgreSQL 18 server.
	PostgresqlConfig_18 *config.PostgresqlConfigSet18 `protobuf:"bytes,29,opt,name=postgresql_config_18,json=postgresqlConfig_18,proto3,oneof"`
}

type ClusterConfig_PostgresqlConfig_18_1C struct {
	// Configuration of a PostgreSQL 18 1C server.
	PostgresqlConfig_18_1C *config.PostgresqlConfigSet18_1C `protobuf:"bytes,30,opt,name=postgresql_config_18_1c,json=postgresqlConfig_18_1c,proto3,oneof"`
}

func (*ClusterConfig_PostgresqlConfig_9_6) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_10_1C) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_10) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_11) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_11_1C) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_12) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_12_1C) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_13) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_13_1C) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_14) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_14_1C) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_15) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_15_1C) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_16) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_16_1C) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_17) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_17_1C) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_18) isClusterConfig_PostgresqlConfig() {}

func (*ClusterConfig_PostgresqlConfig_18_1C) isClusterConfig_PostgresqlConfig() {}

type ConnectionPoolerConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Mode that the connection pooler is working in.
	// See descriptions of all modes in the [documentation for PgBouncer](https://pgbouncer.github.io/usage).
	PoolingMode ConnectionPoolerConfig_PoolingMode `protobuf:"varint,1,opt,name=pooling_mode,json=poolingMode,proto3,enum=yandex.cloud.mdb.postgresql.v1.ConnectionPoolerConfig_PoolingMode" json:"pooling_mode,omitempty"`
	// Setting `server_reset_query_always` parameter in PgBouncer.
	PoolDiscard   *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=pool_discard,json=poolDiscard,proto3" json:"pool_discard,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionPoolerConfig) Reset() {
	*x = ConnectionPoolerConfig{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionPoolerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionPoolerConfig) ProtoMessage() {}

func (x *ConnectionPoolerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionPoolerConfig.ProtoReflect.Descriptor instead.
func (*ConnectionPoolerConfig) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectionPoolerConfig) GetPoolingMode() ConnectionPoolerConfig_PoolingMode {
	if x != nil {
		return x.PoolingMode
	}
	return ConnectionPoolerConfig_POOLING_MODE_UNSPECIFIED
}

func (x *ConnectionPoolerConfig) GetPoolDiscard() *wrapperspb.BoolValue {
	if x != nil {
		return x.PoolDiscard
	}
	return nil
}

type Host struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the PostgreSQL host. The host name is assigned by MDB at creation time, and cannot be changed.
	// 1-63 characters long.
	//
	// The name is unique across all MDB hosts that exist on the platform, as it defines the FQDN of the host.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// ID of the PostgreSQL host. The ID is assigned by MDB at creation time.
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// ID of the availability zone where the PostgreSQL host resides.
	ZoneId string `protobuf:"bytes,3,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// Resources allocated to the PostgreSQL host.
	Resources *Resources `protobuf:"bytes,4,opt,name=resources,proto3" json:"resources,omitempty"`
	// Role of the host in the cluster. If the field has default value, it is not returned in the response.
	Role Host_Role `protobuf:"varint,5,opt,name=role,proto3,enum=yandex.cloud.mdb.postgresql.v1.Host_Role" json:"role,omitempty"`
	// Aggregated health of the host. If the field has default value, it is not returned in the response.
	Health Host_Health `protobuf:"varint,6,opt,name=health,proto3,enum=yandex.cloud.mdb.postgresql.v1.Host_Health" json:"health,omitempty"`
	// Services provided by the host.
	Services []*Service `protobuf:"bytes,7,rep,name=services,proto3" json:"services,omitempty"`
	// ID of the subnet that the host belongs to.
	SubnetId string `protobuf:"bytes,8,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	// Name of the host to be used as the replication source for cascading replication.
	ReplicationSource string `protobuf:"bytes,9,opt,name=replication_source,json=replicationSource,proto3" json:"replication_source,omitempty"`
	// Priority of the host as a replica. Higher value means higher priority.
	//
	// The host with the highest priority is the synchronous replica. All others are asynchronous.
	// The synchronous replica replaces the master when needed.
	//
	// When a replica becomes the master, its priority is ignored.
	Priority *wrapperspb.Int64Value `protobuf:"bytes,10,opt,name=priority,proto3" json:"priority,omitempty"`
	// Configuration of a PostgreSQL server for the host.
	Config *HostConfig `protobuf:"bytes,11,opt,name=config,proto3" json:"config,omitempty"`
	// Flag showing public IP assignment status to this host.
	AssignPublicIp bool             `protobuf:"varint,12,opt,name=assign_public_ip,json=assignPublicIp,proto3" json:"assign_public_ip,omitempty"`
	ReplicaType    Host_ReplicaType `protobuf:"varint,13,opt,name=replica_type,json=replicaType,proto3,enum=yandex.cloud.mdb.postgresql.v1.Host_ReplicaType" json:"replica_type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Host) Reset() {
	*x = Host{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{4}
}

func (x *Host) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Host) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *Host) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *Host) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Host) GetRole() Host_Role {
	if x != nil {
		return x.Role
	}
	return Host_ROLE_UNKNOWN
}

func (x *Host) GetHealth() Host_Health {
	if x != nil {
		return x.Health
	}
	return Host_HEALTH_UNKNOWN
}

func (x *Host) GetServices() []*Service {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *Host) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *Host) GetReplicationSource() string {
	if x != nil {
		return x.ReplicationSource
	}
	return ""
}

func (x *Host) GetPriority() *wrapperspb.Int64Value {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *Host) GetConfig() *HostConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Host) GetAssignPublicIp() bool {
	if x != nil {
		return x.AssignPublicIp
	}
	return false
}

func (x *Host) GetReplicaType() Host_ReplicaType {
	if x != nil {
		return x.ReplicaType
	}
	return Host_REPLICA_TYPE_UNKNOWN
}

type HostConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Configuration of a PostgreSQL server for the host.
	//
	// Types that are valid to be assigned to PostgresqlConfig:
	//
	//	*HostConfig_PostgresqlConfig_9_6
	//	*HostConfig_PostgresqlConfig_10_1C
	//	*HostConfig_PostgresqlConfig_10
	//	*HostConfig_PostgresqlConfig_11
	//	*HostConfig_PostgresqlConfig_11_1C
	//	*HostConfig_PostgresqlConfig_12
	//	*HostConfig_PostgresqlConfig_12_1C
	//	*HostConfig_PostgresqlConfig_13
	//	*HostConfig_PostgresqlConfig_13_1C
	//	*HostConfig_PostgresqlConfig_14
	//	*HostConfig_PostgresqlConfig_14_1C
	//	*HostConfig_PostgresqlConfig_15
	//	*HostConfig_PostgresqlConfig_15_1C
	//	*HostConfig_PostgresqlConfig_16
	//	*HostConfig_PostgresqlConfig_16_1C
	//	*HostConfig_PostgresqlConfig_17
	//	*HostConfig_PostgresqlConfig_17_1C
	//	*HostConfig_PostgresqlConfig_18
	//	*HostConfig_PostgresqlConfig_18_1C
	PostgresqlConfig isHostConfig_PostgresqlConfig `protobuf_oneof:"postgresql_config"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *HostConfig) Reset() {
	*x = HostConfig{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostConfig) ProtoMessage() {}

func (x *HostConfig) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostConfig.ProtoReflect.Descriptor instead.
func (*HostConfig) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *HostConfig) GetPostgresqlConfig() isHostConfig_PostgresqlConfig {
	if x != nil {
		return x.PostgresqlConfig
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_9_6() *config.PostgresqlHostConfig9_6 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_9_6); ok {
			return x.PostgresqlConfig_9_6
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_10_1C() *config.PostgresqlHostConfig10_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_10_1C); ok {
			return x.PostgresqlConfig_10_1C
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_10() *config.PostgresqlHostConfig10 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_10); ok {
			return x.PostgresqlConfig_10
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_11() *config.PostgresqlHostConfig11 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_11); ok {
			return x.PostgresqlConfig_11
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_11_1C() *config.PostgresqlHostConfig11_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_11_1C); ok {
			return x.PostgresqlConfig_11_1C
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_12() *config.PostgresqlHostConfig12 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_12); ok {
			return x.PostgresqlConfig_12
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_12_1C() *config.PostgresqlHostConfig12_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_12_1C); ok {
			return x.PostgresqlConfig_12_1C
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_13() *config.PostgresqlHostConfig13 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_13); ok {
			return x.PostgresqlConfig_13
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_13_1C() *config.PostgresqlHostConfig13_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_13_1C); ok {
			return x.PostgresqlConfig_13_1C
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_14() *config.PostgresqlHostConfig14 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_14); ok {
			return x.PostgresqlConfig_14
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_14_1C() *config.PostgresqlHostConfig14_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_14_1C); ok {
			return x.PostgresqlConfig_14_1C
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_15() *config.PostgresqlHostConfig15 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_15); ok {
			return x.PostgresqlConfig_15
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_15_1C() *config.PostgresqlHostConfig15_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_15_1C); ok {
			return x.PostgresqlConfig_15_1C
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_16() *config.PostgresqlHostConfig16 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_16); ok {
			return x.PostgresqlConfig_16
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_16_1C() *config.PostgresqlHostConfig16_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_16_1C); ok {
			return x.PostgresqlConfig_16_1C
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_17() *config.PostgresqlHostConfig17 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_17); ok {
			return x.PostgresqlConfig_17
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_17_1C() *config.PostgresqlHostConfig17_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_17_1C); ok {
			return x.PostgresqlConfig_17_1C
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_18() *config.PostgresqlHostConfig18 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_18); ok {
			return x.PostgresqlConfig_18
		}
	}
	return nil
}

func (x *HostConfig) GetPostgresqlConfig_18_1C() *config.PostgresqlHostConfig18_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*HostConfig_PostgresqlConfig_18_1C); ok {
			return x.PostgresqlConfig_18_1C
		}
	}
	return nil
}

type isHostConfig_PostgresqlConfig interface {
	isHostConfig_PostgresqlConfig()
}

type HostConfig_PostgresqlConfig_9_6 struct {
	// Configuration for a host with PostgreSQL 9.6 server deployed.
	PostgresqlConfig_9_6 *config.PostgresqlHostConfig9_6 `protobuf:"bytes,1,opt,name=postgresql_config_9_6,json=postgresqlHostConfig_9_6,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_10_1C struct {
	// Configuration for a host with PostgreSQL 10 1C server deployed.
	PostgresqlConfig_10_1C *config.PostgresqlHostConfig10_1C `protobuf:"bytes,4,opt,name=postgresql_config_10_1c,json=postgresqlHostConfig_10_1c,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_10 struct {
	// Configuration for a host with PostgreSQL 10 server deployed.
	PostgresqlConfig_10 *config.PostgresqlHostConfig10 `protobuf:"bytes,2,opt,name=postgresql_config_10,json=postgresqlHostConfig_10,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_11 struct {
	// Configuration for a host with PostgreSQL 11 server deployed.
	PostgresqlConfig_11 *config.PostgresqlHostConfig11 `protobuf:"bytes,3,opt,name=postgresql_config_11,json=postgresqlHostConfig_11,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_11_1C struct {
	// Configuration for a host with PostgreSQL 11 1C server deployed.
	PostgresqlConfig_11_1C *config.PostgresqlHostConfig11_1C `protobuf:"bytes,6,opt,name=postgresql_config_11_1c,json=postgresqlHostConfig_11_1c,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_12 struct {
	// Configuration for a host with PostgreSQL 12 server deployed.
	PostgresqlConfig_12 *config.PostgresqlHostConfig12 `protobuf:"bytes,5,opt,name=postgresql_config_12,json=postgresqlHostConfig_12,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_12_1C struct {
	// Configuration for a host with PostgreSQL 12 1C server deployed.
	PostgresqlConfig_12_1C *config.PostgresqlHostConfig12_1C `protobuf:"bytes,7,opt,name=postgresql_config_12_1c,json=postgresqlHostConfig_12_1c,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_13 struct {
	// Configuration for a host with PostgreSQL 13 server deployed.
	PostgresqlConfig_13 *config.PostgresqlHostConfig13 `protobuf:"bytes,8,opt,name=postgresql_config_13,json=postgresqlHostConfig_13,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_13_1C struct {
	// Configuration for a host with PostgreSQL 13 1C server deployed.
	PostgresqlConfig_13_1C *config.PostgresqlHostConfig13_1C `protobuf:"bytes,10,opt,name=postgresql_config_13_1c,json=postgresqlHostConfig_13_1c,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_14 struct {
	// Configuration for a host with PostgreSQL 14 server deployed.
	PostgresqlConfig_14 *config.PostgresqlHostConfig14 `protobuf:"bytes,9,opt,name=postgresql_config_14,json=postgresqlHostConfig_14,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_14_1C struct {
	// Configuration for a host with PostgreSQL 14 1C server deployed.
	PostgresqlConfig_14_1C *config.PostgresqlHostConfig14_1C `protobuf:"bytes,11,opt,name=postgresql_config_14_1c,json=postgresqlHostConfig_14_1c,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_15 struct {
	// Configuration for a host with PostgreSQL 15 server deployed.
	PostgresqlConfig_15 *config.PostgresqlHostConfig15 `protobuf:"bytes,12,opt,name=postgresql_config_15,json=postgresqlHostConfig_15,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_15_1C struct {
	// Configuration for a host with PostgreSQL 15 1C server deployed.
	PostgresqlConfig_15_1C *config.PostgresqlHostConfig15_1C `protobuf:"bytes,13,opt,name=postgresql_config_15_1c,json=postgresqlHostConfig_15_1c,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_16 struct {
	// Configuration for a host with PostgreSQL 16 server deployed.
	PostgresqlConfig_16 *config.PostgresqlHostConfig16 `protobuf:"bytes,14,opt,name=postgresql_config_16,json=postgresqlHostConfig_16,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_16_1C struct {
	// Configuration for a host with PostgreSQL 16 1C server deployed.
	PostgresqlConfig_16_1C *config.PostgresqlHostConfig16_1C `protobuf:"bytes,15,opt,name=postgresql_config_16_1c,json=postgresqlHostConfig_16_1c,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_17 struct {
	// Configuration for a host with PostgreSQL 17 server deployed.
	PostgresqlConfig_17 *config.PostgresqlHostConfig17 `protobuf:"bytes,16,opt,name=postgresql_config_17,json=postgresqlHostConfig_17,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_17_1C struct {
	// Configuration for a host with PostgreSQL 17 1C server deployed.
	PostgresqlConfig_17_1C *config.PostgresqlHostConfig17_1C `protobuf:"bytes,17,opt,name=postgresql_config_17_1c,json=postgresqlHostConfig_17_1c,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_18 struct {
	// Configuration for a host with PostgreSQL 18 server deployed.
	PostgresqlConfig_18 *config.PostgresqlHostConfig18 `protobuf:"bytes,18,opt,name=postgresql_config_18,json=postgresqlHostConfig_18,proto3,oneof"`
}

type HostConfig_PostgresqlConfig_18_1C struct {
	// Configuration for a host with PostgreSQL 18 1C server deployed.
	PostgresqlConfig_18_1C *config.PostgresqlHostConfig18_1C `protobuf:"bytes,19,opt,name=postgresql_config_18_1c,json=postgresqlHostConfig_18_1c,proto3,oneof"`
}

func (*HostConfig_PostgresqlConfig_9_6) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_10_1C) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_10) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_11) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_11_1C) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_12) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_12_1C) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_13) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_13_1C) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_14) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_14_1C) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_15) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_15_1C) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_16) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_16_1C) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_17) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_17_1C) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_18) isHostConfig_PostgresqlConfig() {}

func (*HostConfig_PostgresqlConfig_18_1C) isHostConfig_PostgresqlConfig() {}

type Service struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type of the service provided by the host. If the field has default value, it is not returned in the response.
	Type Service_Type `protobuf:"varint,1,opt,name=type,proto3,enum=yandex.cloud.mdb.postgresql.v1.Service_Type" json:"type,omitempty"`
	// Aggregated health of the service. If the field has default value, it is not returned in the response.
	Health        Service_Health `protobuf:"varint,2,opt,name=health,proto3,enum=yandex.cloud.mdb.postgresql.v1.Service_Health" json:"health,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Service) Reset() {
	*x = Service{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{6}
}

func (x *Service) GetType() Service_Type {
	if x != nil {
		return x.Type
	}
	return Service_TYPE_UNSPECIFIED
}

func (x *Service) GetHealth() Service_Health {
	if x != nil {
		return x.Health
	}
	return Service_HEALTH_UNKNOWN
}

type Resources struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the preset for computational resources available to a host (CPU, memory etc.).
	// All available presets are listed in the [documentation](/docs/managed-postgresql/concepts/instance-types).
	ResourcePresetId string `protobuf:"bytes,1,opt,name=resource_preset_id,json=resourcePresetId,proto3" json:"resource_preset_id,omitempty"`
	// Volume of the storage available to a host, in bytes.
	DiskSize int64 `protobuf:"varint,2,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"`
	// Type of the storage environment for the host.
	// Possible values:
	// * network-hdd - network HDD drive,
	// * network-ssd - network SSD drive,
	// * local-ssd - local SSD storage.
	DiskTypeId    string `protobuf:"bytes,3,opt,name=disk_type_id,json=diskTypeId,proto3" json:"disk_type_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resources) Reset() {
	*x = Resources{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{7}
}

func (x *Resources) GetResourcePresetId() string {
	if x != nil {
		return x.ResourcePresetId
	}
	return ""
}

func (x *Resources) GetDiskSize() int64 {
	if x != nil {
		return x.DiskSize
	}
	return 0
}

func (x *Resources) GetDiskTypeId() string {
	if x != nil {
		return x.DiskTypeId
	}
	return ""
}

type Access struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Allow access for DataLens
	DataLens bool `protobuf:"varint,1,opt,name=data_lens,json=dataLens,proto3" json:"data_lens,omitempty"`
	// Allow SQL queries to the cluster databases from the management console.
	//
	// See [SQL queries in the management console](/docs/managed-postgresql/operations/web-sql-query) for more details.
	WebSql bool `protobuf:"varint,2,opt,name=web_sql,json=webSql,proto3" json:"web_sql,omitempty"`
	// Allow access for Serverless
	Serverless bool `protobuf:"varint,3,opt,name=serverless,proto3" json:"serverless,omitempty"`
	// Allow access for DataTransfer.
	DataTransfer bool `protobuf:"varint,4,opt,name=data_transfer,json=dataTransfer,proto3" json:"data_transfer,omitempty"`
	// Allow access for YandexQuery.
	YandexQuery   bool `protobuf:"varint,5,opt,name=yandex_query,json=yandexQuery,proto3" json:"yandex_query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Access) Reset() {
	*x = Access{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Access) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Access) ProtoMessage() {}

func (x *Access) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Access.ProtoReflect.Descriptor instead.
func (*Access) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{8}
}

func (x *Access) GetDataLens() bool {
	if x != nil {
		return x.DataLens
	}
	return false
}

func (x *Access) GetWebSql() bool {
	if x != nil {
		return x.WebSql
	}
	return false
}

func (x *Access) GetServerless() bool {
	if x != nil {
		return x.Serverless
	}
	return false
}

func (x *Access) GetDataTransfer() bool {
	if x != nil {
		return x.DataTransfer
	}
	return false
}

func (x *Access) GetYandexQuery() bool {
	if x != nil {
		return x.YandexQuery
	}
	return false
}

type PerformanceDiagnostics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Configuration setting which enables/disables performance diagnostics service in cluster.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Interval (in seconds) for pg_stat_activity sampling
	SessionsSamplingInterval int64 `protobuf:"varint,2,opt,name=sessions_sampling_interval,json=sessionsSamplingInterval,proto3" json:"sessions_sampling_interval,omitempty"`
	// Interval (in seconds) for pg_stat_statements sampling
	StatementsSamplingInterval int64 `protobuf:"varint,3,opt,name=statements_sampling_interval,json=statementsSamplingInterval,proto3" json:"statements_sampling_interval,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *PerformanceDiagnostics) Reset() {
	*x = PerformanceDiagnostics{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceDiagnostics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceDiagnostics) ProtoMessage() {}

func (x *PerformanceDiagnostics) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceDiagnostics.ProtoReflect.Descriptor instead.
func (*PerformanceDiagnostics) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{9}
}

func (x *PerformanceDiagnostics) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *PerformanceDiagnostics) GetSessionsSamplingInterval() int64 {
	if x != nil {
		return x.SessionsSamplingInterval
	}
	return 0
}

func (x *PerformanceDiagnostics) GetStatementsSamplingInterval() int64 {
	if x != nil {
		return x.StatementsSamplingInterval
	}
	return 0
}

type DiskSizeAutoscaling struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Threshold of storage usage (in percent) that triggers automatic scaling of the storage during the maintenance window. Zero value means disabled threshold.
	PlannedUsageThreshold int64 `protobuf:"varint,1,opt,name=planned_usage_threshold,json=plannedUsageThreshold,proto3" json:"planned_usage_threshold,omitempty"`
	// Threshold of storage usage (in percent) that triggers immediate automatic scaling of the storage. Zero value means disabled threshold.
	EmergencyUsageThreshold int64 `protobuf:"varint,2,opt,name=emergency_usage_threshold,json=emergencyUsageThreshold,proto3" json:"emergency_usage_threshold,omitempty"`
	// New storage size (in bytes) that is set when one of the thresholds is achieved.
	DiskSizeLimit int64 `protobuf:"varint,3,opt,name=disk_size_limit,json=diskSizeLimit,proto3" json:"disk_size_limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskSizeAutoscaling) Reset() {
	*x = DiskSizeAutoscaling{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskSizeAutoscaling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskSizeAutoscaling) ProtoMessage() {}

func (x *DiskSizeAutoscaling) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskSizeAutoscaling.ProtoReflect.Descriptor instead.
func (*DiskSizeAutoscaling) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP(), []int{10}
}

func (x *DiskSizeAutoscaling) GetPlannedUsageThreshold() int64 {
	if x != nil {
		return x.PlannedUsageThreshold
	}
	return 0
}

func (x *DiskSizeAutoscaling) GetEmergencyUsageThreshold() int64 {
	if x != nil {
		return x.EmergencyUsageThreshold
	}
	return 0
}

func (x *DiskSizeAutoscaling) GetDiskSizeLimit() int64 {
	if x != nil {
		return x.DiskSizeLimit
	}
	return 0
}

var File_yandex_cloud_mdb_postgresql_v1_cluster_proto protoreflect.FileDescriptor

const file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDesc = "" +
	"\n" +
	",yandex/cloud/mdb/postgresql/v1/cluster.proto\x12\x1eyandex.cloud.mdb.postgresql.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1bgoogle/type/timeofday.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host10.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host10_1c.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host11.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host11_1c.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host12.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host12_1c.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host13.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host13_1c.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host14.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host14_1c.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host15.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host15_1c.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host16.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host16_1c.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host17.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host17_1c.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host18.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host18_1c.proto\x1a3yandex/cloud/mdb/postgresql/v1/config/host9_6.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql10.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql10_1c.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql11.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql11_1c.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql12.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql12_1c.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql13.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql13_1c.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql14.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql14_1c.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql15.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql15_1c.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql16.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql16_1c.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql17.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql17_1c.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql18.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql18_1c.proto\x1a9yandex/cloud/mdb/postgresql/v1/config/postgresql9_6.proto\x1a0yandex/cloud/mdb/postgresql/v1/maintenance.proto\x1a\x1dyandex/cloud/validation.proto\"\xec\n" +
	"\n" +
	"\aCluster\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tfolder_id\x18\x02 \x01(\tR\bfolderId\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12K\n" +
	"\x06labels\x18\x06 \x03(\v23.yandex.cloud.mdb.postgresql.v1.Cluster.LabelsEntryR\x06labels\x12U\n" +
	"\venvironment\x18\a \x01(\x0e23.yandex.cloud.mdb.postgresql.v1.Cluster.EnvironmentR\venvironment\x12J\n" +
	"\n" +
	"monitoring\x18\b \x03(\v2*.yandex.cloud.mdb.postgresql.v1.MonitoringR\n" +
	"monitoring\x12E\n" +
	"\x06config\x18\t \x01(\v2-.yandex.cloud.mdb.postgresql.v1.ClusterConfigR\x06config\x12\x1d\n" +
	"\n" +
	"network_id\x18\n" +
	" \x01(\tR\tnetworkId\x12F\n" +
	"\x06health\x18\v \x01(\x0e2..yandex.cloud.mdb.postgresql.v1.Cluster.HealthR\x06health\x12F\n" +
	"\x06status\x18\f \x01(\x0e2..yandex.cloud.mdb.postgresql.v1.Cluster.StatusR\x06status\x12`\n" +
	"\x12maintenance_window\x18\r \x01(\v21.yandex.cloud.mdb.postgresql.v1.MaintenanceWindowR\x11maintenanceWindow\x12a\n" +
	"\x11planned_operation\x18\x0e \x01(\v24.yandex.cloud.mdb.postgresql.v1.MaintenanceOperationR\x10plannedOperation\x12,\n" +
	"\x12security_group_ids\x18\x0f \x03(\tR\x10securityGroupIds\x12/\n" +
	"\x13deletion_protection\x18\x10 \x01(\bR\x12deletionProtection\x12$\n" +
	"\x0ehost_group_ids\x18\x11 \x03(\tR\fhostGroupIds\x12Q\n" +
	"\x16disk_encryption_key_id\x18\x12 \x01(\v2\x1c.google.protobuf.StringValueR\x13diskEncryptionKeyId\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"I\n" +
	"\vEnvironment\x12\x1b\n" +
	"\x17ENVIRONMENT_UNSPECIFIED\x10\x00\x12\x0e\n" +
	"\n" +
	"PRODUCTION\x10\x01\x12\r\n" +
	"\tPRESTABLE\x10\x02\"?\n" +
	"\x06Health\x12\x12\n" +
	"\x0eHEALTH_UNKNOWN\x10\x00\x12\t\n" +
	"\x05ALIVE\x10\x01\x12\b\n" +
	"\x04DEAD\x10\x02\x12\f\n" +
	"\bDEGRADED\x10\x03\"y\n" +
	"\x06Status\x12\x12\n" +
	"\x0eSTATUS_UNKNOWN\x10\x00\x12\f\n" +
	"\bCREATING\x10\x01\x12\v\n" +
	"\aRUNNING\x10\x02\x12\t\n" +
	"\x05ERROR\x10\x03\x12\f\n" +
	"\bUPDATING\x10\x04\x12\f\n" +
	"\bSTOPPING\x10\x05\x12\v\n" +
	"\aSTOPPED\x10\x06\x12\f\n" +
	"\bSTARTING\x10\a\"V\n" +
	"\n" +
	"Monitoring\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x12\n" +
	"\x04link\x18\x03 \x01(\tR\x04link\"\xd1\x17\n" +
	"\rClusterConfig\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12t\n" +
	"\x15postgresql_config_9_6\x18\x02 \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet9_6H\x00R\x14postgresqlConfig_9_6\x12z\n" +
	"\x17postgresql_config_10_1c\x18\n" +
	" \x01(\v2?.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet10_1CH\x00R\x16postgresqlConfig_10_1c\x12q\n" +
	"\x14postgresql_config_10\x18\x03 \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet10H\x00R\x13postgresqlConfig_10\x12q\n" +
	"\x14postgresql_config_11\x18\b \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet11H\x00R\x13postgresqlConfig_11\x12z\n" +
	"\x17postgresql_config_11_1c\x18\r \x01(\v2?.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet11_1CH\x00R\x16postgresqlConfig_11_1c\x12q\n" +
	"\x14postgresql_config_12\x18\v \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet12H\x00R\x13postgresqlConfig_12\x12z\n" +
	"\x17postgresql_config_12_1c\x18\x0e \x01(\v2?.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet12_1CH\x00R\x16postgresqlConfig_12_1c\x12q\n" +
	"\x14postgresql_config_13\x18\x0f \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet13H\x00R\x13postgresqlConfig_13\x12z\n" +
	"\x17postgresql_config_13_1c\x18\x12 \x01(\v2?.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet13_1CH\x00R\x16postgresqlConfig_13_1c\x12q\n" +
	"\x14postgresql_config_14\x18\x10 \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet14H\x00R\x13postgresqlConfig_14\x12z\n" +
	"\x17postgresql_config_14_1c\x18\x13 \x01(\v2?.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet14_1CH\x00R\x16postgresqlConfig_14_1c\x12q\n" +
	"\x14postgresql_config_15\x18\x15 \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet15H\x00R\x13postgresqlConfig_15\x12z\n" +
	"\x17postgresql_config_15_1c\x18\x16 \x01(\v2?.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet15_1CH\x00R\x16postgresqlConfig_15_1c\x12q\n" +
	"\x14postgresql_config_16\x18\x18 \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet16H\x00R\x13postgresqlConfig_16\x12z\n" +
	"\x17postgresql_config_16_1c\x18\x19 \x01(\v2?.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet16_1CH\x00R\x16postgresqlConfig_16_1c\x12q\n" +
	"\x14postgresql_config_17\x18\x1b \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet17H\x00R\x13postgresqlConfig_17\x12z\n" +
	"\x17postgresql_config_17_1c\x18\x1c \x01(\v2?.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet17_1CH\x00R\x16postgresqlConfig_17_1c\x12q\n" +
	"\x14postgresql_config_18\x18\x1d \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet18H\x00R\x13postgresqlConfig_18\x12z\n" +
	"\x17postgresql_config_18_1c\x18\x1e \x01(\v2?.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet18_1CH\x00R\x16postgresqlConfig_18_1c\x12[\n" +
	"\rpooler_config\x18\x04 \x01(\v26.yandex.cloud.mdb.postgresql.v1.ConnectionPoolerConfigR\fpoolerConfig\x12G\n" +
	"\tresources\x18\x05 \x01(\v2).yandex.cloud.mdb.postgresql.v1.ResourcesR\tresources\x12>\n" +
	"\fautofailover\x18\x06 \x01(\v2\x1a.google.protobuf.BoolValueR\fautofailover\x12F\n" +
	"\x13backup_window_start\x18\a \x01(\v2\x16.google.type.TimeOfDayR\x11backupWindowStart\x12`\n" +
	"\x19backup_retain_period_days\x18\x11 \x01(\v2\x1b.google.protobuf.Int64ValueB\b\xfa\xc71\x047-60R\x16backupRetainPeriodDays\x12>\n" +
	"\x06access\x18\t \x01(\v2&.yandex.cloud.mdb.postgresql.v1.AccessR\x06access\x12o\n" +
	"\x17performance_diagnostics\x18\f \x01(\v26.yandex.cloud.mdb.postgresql.v1.PerformanceDiagnosticsR\x16performanceDiagnostics\x12g\n" +
	"\x15disk_size_autoscaling\x18\x17 \x01(\v23.yandex.cloud.mdb.postgresql.v1.DiskSizeAutoscalingR\x13diskSizeAutoscalingB\x13\n" +
	"\x11postgresql_configJ\x04\b\x14\x10\x15J\x04\b\x1a\x10\x1b\"\x98\x02\n" +
	"\x16ConnectionPoolerConfig\x12e\n" +
	"\fpooling_mode\x18\x01 \x01(\x0e2B.yandex.cloud.mdb.postgresql.v1.ConnectionPoolerConfig.PoolingModeR\vpoolingMode\x12=\n" +
	"\fpool_discard\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR\vpoolDiscard\"X\n" +
	"\vPoolingMode\x12\x1c\n" +
	"\x18POOLING_MODE_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aSESSION\x10\x01\x12\x0f\n" +
	"\vTRANSACTION\x10\x02\x12\r\n" +
	"\tSTATEMENT\x10\x03\"\xf8\x06\n" +
	"\x04Host\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x02 \x01(\tR\tclusterId\x12\x17\n" +
	"\azone_id\x18\x03 \x01(\tR\x06zoneId\x12G\n" +
	"\tresources\x18\x04 \x01(\v2).yandex.cloud.mdb.postgresql.v1.ResourcesR\tresources\x12=\n" +
	"\x04role\x18\x05 \x01(\x0e2).yandex.cloud.mdb.postgresql.v1.Host.RoleR\x04role\x12C\n" +
	"\x06health\x18\x06 \x01(\x0e2+.yandex.cloud.mdb.postgresql.v1.Host.HealthR\x06health\x12C\n" +
	"\bservices\x18\a \x03(\v2'.yandex.cloud.mdb.postgresql.v1.ServiceR\bservices\x12\x1b\n" +
	"\tsubnet_id\x18\b \x01(\tR\bsubnetId\x12-\n" +
	"\x12replication_source\x18\t \x01(\tR\x11replicationSource\x127\n" +
	"\bpriority\x18\n" +
	" \x01(\v2\x1b.google.protobuf.Int64ValueR\bpriority\x12B\n" +
	"\x06config\x18\v \x01(\v2*.yandex.cloud.mdb.postgresql.v1.HostConfigR\x06config\x12(\n" +
	"\x10assign_public_ip\x18\f \x01(\bR\x0eassignPublicIp\x12S\n" +
	"\freplica_type\x18\r \x01(\x0e20.yandex.cloud.mdb.postgresql.v1.Host.ReplicaTypeR\vreplicaType\"1\n" +
	"\x04Role\x12\x10\n" +
	"\fROLE_UNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06MASTER\x10\x01\x12\v\n" +
	"\aREPLICA\x10\x02\"H\n" +
	"\vReplicaType\x12\x18\n" +
	"\x14REPLICA_TYPE_UNKNOWN\x10\x00\x12\t\n" +
	"\x05ASYNC\x10\x01\x12\b\n" +
	"\x04SYNC\x10\x02\x12\n" +
	"\n" +
	"\x06QUORUM\x10\x03\"M\n" +
	"\x06Health\x12\x12\n" +
	"\x0eHEALTH_UNKNOWN\x10\x00\x12\t\n" +
	"\x05ALIVE\x10\x01\x12\b\n" +
	"\x04DEAD\x10\x02\x12\f\n" +
	"\bDEGRADED\x10\x03\x12\f\n" +
	"\bREADONLY\x10\x04\"\xdd\x12\n" +
	"\n" +
	"HostConfig\x12y\n" +
	"\x15postgresql_config_9_6\x18\x01 \x01(\v2>.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig9_6H\x00R\x18postgresqlHostConfig_9_6\x12\x7f\n" +
	"\x17postgresql_config_10_1c\x18\x04 \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig10_1CH\x00R\x1apostgresqlHostConfig_10_1c\x12v\n" +
	"\x14postgresql_config_10\x18\x02 \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig10H\x00R\x17postgresqlHostConfig_10\x12v\n" +
	"\x14postgresql_config_11\x18\x03 \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11H\x00R\x17postgresqlHostConfig_11\x12\x7f\n" +
	"\x17postgresql_config_11_1c\x18\x06 \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_1CH\x00R\x1apostgresqlHostConfig_11_1c\x12v\n" +
	"\x14postgresql_config_12\x18\x05 \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12H\x00R\x17postgresqlHostConfig_12\x12\x7f\n" +
	"\x17postgresql_config_12_1c\x18\a \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_1CH\x00R\x1apostgresqlHostConfig_12_1c\x12v\n" +
	"\x14postgresql_config_13\x18\b \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig13H\x00R\x17postgresqlHostConfig_13\x12\x7f\n" +
	"\x17postgresql_config_13_1c\x18\n" +
	" \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig13_1CH\x00R\x1apostgresqlHostConfig_13_1c\x12v\n" +
	"\x14postgresql_config_14\x18\t \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig14H\x00R\x17postgresqlHostConfig_14\x12\x7f\n" +
	"\x17postgresql_config_14_1c\x18\v \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig14_1CH\x00R\x1apostgresqlHostConfig_14_1c\x12v\n" +
	"\x14postgresql_config_15\x18\f \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig15H\x00R\x17postgresqlHostConfig_15\x12\x7f\n" +
	"\x17postgresql_config_15_1c\x18\r \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig15_1CH\x00R\x1apostgresqlHostConfig_15_1c\x12v\n" +
	"\x14postgresql_config_16\x18\x0e \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig16H\x00R\x17postgresqlHostConfig_16\x12\x7f\n" +
	"\x17postgresql_config_16_1c\x18\x0f \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig16_1CH\x00R\x1apostgresqlHostConfig_16_1c\x12v\n" +
	"\x14postgresql_config_17\x18\x10 \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig17H\x00R\x17postgresqlHostConfig_17\x12\x7f\n" +
	"\x17postgresql_config_17_1c\x18\x11 \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig17_1CH\x00R\x1apostgresqlHostConfig_17_1c\x12v\n" +
	"\x14postgresql_config_18\x18\x12 \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig18H\x00R\x17postgresqlHostConfig_18\x12\x7f\n" +
	"\x17postgresql_config_18_1c\x18\x13 \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig18_1CH\x00R\x1apostgresqlHostConfig_18_1cB\x13\n" +
	"\x11postgresql_config\"\x8e\x02\n" +
	"\aService\x12@\n" +
	"\x04type\x18\x01 \x01(\x0e2,.yandex.cloud.mdb.postgresql.v1.Service.TypeR\x04type\x12F\n" +
	"\x06health\x18\x02 \x01(\x0e2..yandex.cloud.mdb.postgresql.v1.Service.HealthR\x06health\"8\n" +
	"\x04Type\x12\x14\n" +
	"\x10TYPE_UNSPECIFIED\x10\x00\x12\x0e\n" +
	"\n" +
	"POSTGRESQL\x10\x01\x12\n" +
	"\n" +
	"\x06POOLER\x10\x02\"?\n" +
	"\x06Health\x12\x12\n" +
	"\x0eHEALTH_UNKNOWN\x10\x00\x12\t\n" +
	"\x05ALIVE\x10\x01\x12\b\n" +
	"\x04DEAD\x10\x02\x12\f\n" +
	"\bREADONLY\x10\x03\"x\n" +
	"\tResources\x12,\n" +
	"\x12resource_preset_id\x18\x01 \x01(\tR\x10resourcePresetId\x12\x1b\n" +
	"\tdisk_size\x18\x02 \x01(\x03R\bdiskSize\x12 \n" +
	"\fdisk_type_id\x18\x03 \x01(\tR\n" +
	"diskTypeId\"\xa6\x01\n" +
	"\x06Access\x12\x1b\n" +
	"\tdata_lens\x18\x01 \x01(\bR\bdataLens\x12\x17\n" +
	"\aweb_sql\x18\x02 \x01(\bR\x06webSql\x12\x1e\n" +
	"\n" +
	"serverless\x18\x03 \x01(\bR\n" +
	"serverless\x12#\n" +
	"\rdata_transfer\x18\x04 \x01(\bR\fdataTransfer\x12!\n" +
	"\fyandex_query\x18\x05 \x01(\bR\vyandexQuery\"\xcc\x01\n" +
	"\x16PerformanceDiagnostics\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12I\n" +
	"\x1asessions_sampling_interval\x18\x02 \x01(\x03B\v\xfa\xc71\a1-86400R\x18sessionsSamplingInterval\x12M\n" +
	"\x1cstatements_sampling_interval\x18\x03 \x01(\x03B\v\xfa\xc71\a1-86400R\x1astatementsSamplingInterval\"\xcf\x01\n" +
	"\x13DiskSizeAutoscaling\x12E\n" +
	"\x17planned_usage_threshold\x18\x01 \x01(\x03B\r\xe8\xc71\x00\xfa\xc71\x050-100R\x15plannedUsageThreshold\x12I\n" +
	"\x19emergency_usage_threshold\x18\x02 \x01(\x03B\r\xe8\xc71\x00\xfa\xc71\x050-100R\x17emergencyUsageThreshold\x12&\n" +
	"\x0fdisk_size_limit\x18\x03 \x01(\x03R\rdiskSizeLimitBs\n" +
	"\"yandex.cloud.api.mdb.postgresql.v1ZMgithub.com/yandex-cloud/go-genproto/yandex/cloud/mdb/postgresql/v1;postgresqlb\x06proto3"

var (
	file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescOnce sync.Once
	file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescData []byte
)

func file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescGZIP() []byte {
	file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDesc), len(file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDesc)))
	})
	return file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDescData
}

var file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_yandex_cloud_mdb_postgresql_v1_cluster_proto_goTypes = []any{
	(Cluster_Environment)(0),                 // 0: yandex.cloud.mdb.postgresql.v1.Cluster.Environment
	(Cluster_Health)(0),                      // 1: yandex.cloud.mdb.postgresql.v1.Cluster.Health
	(Cluster_Status)(0),                      // 2: yandex.cloud.mdb.postgresql.v1.Cluster.Status
	(ConnectionPoolerConfig_PoolingMode)(0),  // 3: yandex.cloud.mdb.postgresql.v1.ConnectionPoolerConfig.PoolingMode
	(Host_Role)(0),                           // 4: yandex.cloud.mdb.postgresql.v1.Host.Role
	(Host_ReplicaType)(0),                    // 5: yandex.cloud.mdb.postgresql.v1.Host.ReplicaType
	(Host_Health)(0),                         // 6: yandex.cloud.mdb.postgresql.v1.Host.Health
	(Service_Type)(0),                        // 7: yandex.cloud.mdb.postgresql.v1.Service.Type
	(Service_Health)(0),                      // 8: yandex.cloud.mdb.postgresql.v1.Service.Health
	(*Cluster)(nil),                          // 9: yandex.cloud.mdb.postgresql.v1.Cluster
	(*Monitoring)(nil),                       // 10: yandex.cloud.mdb.postgresql.v1.Monitoring
	(*ClusterConfig)(nil),                    // 11: yandex.cloud.mdb.postgresql.v1.ClusterConfig
	(*ConnectionPoolerConfig)(nil),           // 12: yandex.cloud.mdb.postgresql.v1.ConnectionPoolerConfig
	(*Host)(nil),                             // 13: yandex.cloud.mdb.postgresql.v1.Host
	(*HostConfig)(nil),                       // 14: yandex.cloud.mdb.postgresql.v1.HostConfig
	(*Service)(nil),                          // 15: yandex.cloud.mdb.postgresql.v1.Service
	(*Resources)(nil),                        // 16: yandex.cloud.mdb.postgresql.v1.Resources
	(*Access)(nil),                           // 17: yandex.cloud.mdb.postgresql.v1.Access
	(*PerformanceDiagnostics)(nil),           // 18: yandex.cloud.mdb.postgresql.v1.PerformanceDiagnostics
	(*DiskSizeAutoscaling)(nil),              // 19: yandex.cloud.mdb.postgresql.v1.DiskSizeAutoscaling
	nil,                                      // 20: yandex.cloud.mdb.postgresql.v1.Cluster.LabelsEntry
	(*timestamppb.Timestamp)(nil),            // 21: google.protobuf.Timestamp
	(*MaintenanceWindow)(nil),                // 22: yandex.cloud.mdb.postgresql.v1.MaintenanceWindow
	(*MaintenanceOperation)(nil),             // 23: yandex.cloud.mdb.postgresql.v1.MaintenanceOperation
	(*wrapperspb.StringValue)(nil),           // 24: google.protobuf.StringValue
	(*config.PostgresqlConfigSet9_6)(nil),    // 25: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet9_6
	(*config.PostgresqlConfigSet10_1C)(nil),  // 26: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet10_1C
	(*config.PostgresqlConfigSet10)(nil),     // 27: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet10
	(*config.PostgresqlConfigSet11)(nil),     // 28: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet11
	(*config.PostgresqlConfigSet11_1C)(nil),  // 29: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet11_1C
	(*config.PostgresqlConfigSet12)(nil),     // 30: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet12
	(*config.PostgresqlConfigSet12_1C)(nil),  // 31: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet12_1C
	(*config.PostgresqlConfigSet13)(nil),     // 32: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet13
	(*config.PostgresqlConfigSet13_1C)(nil),  // 33: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet13_1C
	(*config.PostgresqlConfigSet14)(nil),     // 34: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet14
	(*config.PostgresqlConfigSet14_1C)(nil),  // 35: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet14_1C
	(*config.PostgresqlConfigSet15)(nil),     // 36: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet15
	(*config.PostgresqlConfigSet15_1C)(nil),  // 37: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet15_1C
	(*config.PostgresqlConfigSet16)(nil),     // 38: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet16
	(*config.PostgresqlConfigSet16_1C)(nil),  // 39: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet16_1C
	(*config.PostgresqlConfigSet17)(nil),     // 40: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet17
	(*config.PostgresqlConfigSet17_1C)(nil),  // 41: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet17_1C
	(*config.PostgresqlConfigSet18)(nil),     // 42: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet18
	(*config.PostgresqlConfigSet18_1C)(nil),  // 43: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet18_1C
	(*wrapperspb.BoolValue)(nil),             // 44: google.protobuf.BoolValue
	(*timeofday.TimeOfDay)(nil),              // 45: google.type.TimeOfDay
	(*wrapperspb.Int64Value)(nil),            // 46: google.protobuf.Int64Value
	(*config.PostgresqlHostConfig9_6)(nil),   // 47: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig9_6
	(*config.PostgresqlHostConfig10_1C)(nil), // 48: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig10_1C
	(*config.PostgresqlHostConfig10)(nil),    // 49: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig10
	(*config.PostgresqlHostConfig11)(nil),    // 50: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11
	(*config.PostgresqlHostConfig11_1C)(nil), // 51: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_1C
	(*config.PostgresqlHostConfig12)(nil),    // 52: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12
	(*config.PostgresqlHostConfig12_1C)(nil), // 53: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_1C
	(*config.PostgresqlHostConfig13)(nil),    // 54: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig13
	(*config.PostgresqlHostConfig13_1C)(nil), // 55: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig13_1C
	(*config.PostgresqlHostConfig14)(nil),    // 56: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig14
	(*config.PostgresqlHostConfig14_1C)(nil), // 57: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig14_1C
	(*config.PostgresqlHostConfig15)(nil),    // 58: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig15
	(*config.PostgresqlHostConfig15_1C)(nil), // 59: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig15_1C
	(*config.PostgresqlHostConfig16)(nil),    // 60: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig16
	(*config.PostgresqlHostConfig16_1C)(nil), // 61: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig16_1C
	(*config.PostgresqlHostConfig17)(nil),    // 62: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig17
	(*config.PostgresqlHostConfig17_1C)(nil), // 63: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig17_1C
	(*config.PostgresqlHostConfig18)(nil),    // 64: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig18
	(*config.PostgresqlHostConfig18_1C)(nil), // 65: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig18_1C
}
var file_yandex_cloud_mdb_postgresql_v1_cluster_proto_depIdxs = []int32{
	21, // 0: yandex.cloud.mdb.postgresql.v1.Cluster.created_at:type_name -> google.protobuf.Timestamp
	20, // 1: yandex.cloud.mdb.postgresql.v1.Cluster.labels:type_name -> yandex.cloud.mdb.postgresql.v1.Cluster.LabelsEntry
	0,  // 2: yandex.cloud.mdb.postgresql.v1.Cluster.environment:type_name -> yandex.cloud.mdb.postgresql.v1.Cluster.Environment
	10, // 3: yandex.cloud.mdb.postgresql.v1.Cluster.monitoring:type_name -> yandex.cloud.mdb.postgresql.v1.Monitoring
	11, // 4: yandex.cloud.mdb.postgresql.v1.Cluster.config:type_name -> yandex.cloud.mdb.postgresql.v1.ClusterConfig
	1,  // 5: yandex.cloud.mdb.postgresql.v1.Cluster.health:type_name -> yandex.cloud.mdb.postgresql.v1.Cluster.Health
	2,  // 6: yandex.cloud.mdb.postgresql.v1.Cluster.status:type_name -> yandex.cloud.mdb.postgresql.v1.Cluster.Status
	22, // 7: yandex.cloud.mdb.postgresql.v1.Cluster.maintenance_window:type_name -> yandex.cloud.mdb.postgresql.v1.MaintenanceWindow
	23, // 8: yandex.cloud.mdb.postgresql.v1.Cluster.planned_operation:type_name -> yandex.cloud.mdb.postgresql.v1.MaintenanceOperation
	24, // 9: yandex.cloud.mdb.postgresql.v1.Cluster.disk_encryption_key_id:type_name -> google.protobuf.StringValue
	25, // 10: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_9_6:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet9_6
	26, // 11: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_10_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet10_1C
	27, // 12: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_10:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet10
	28, // 13: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_11:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet11
	29, // 14: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_11_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet11_1C
	30, // 15: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_12:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet12
	31, // 16: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_12_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet12_1C
	32, // 17: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_13:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet13
	33, // 18: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_13_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet13_1C
	34, // 19: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_14:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet14
	35, // 20: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_14_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet14_1C
	36, // 21: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_15:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet15
	37, // 22: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_15_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet15_1C
	38, // 23: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_16:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet16
	39, // 24: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_16_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet16_1C
	40, // 25: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_17:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet17
	41, // 26: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_17_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet17_1C
	42, // 27: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_18:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet18
	43, // 28: yandex.cloud.mdb.postgresql.v1.ClusterConfig.postgresql_config_18_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet18_1C
	12, // 29: yandex.cloud.mdb.postgresql.v1.ClusterConfig.pooler_config:type_name -> yandex.cloud.mdb.postgresql.v1.ConnectionPoolerConfig
	16, // 30: yandex.cloud.mdb.postgresql.v1.ClusterConfig.resources:type_name -> yandex.cloud.mdb.postgresql.v1.Resources
	44, // 31: yandex.cloud.mdb.postgresql.v1.ClusterConfig.autofailover:type_name -> google.protobuf.BoolValue
	45, // 32: yandex.cloud.mdb.postgresql.v1.ClusterConfig.backup_window_start:type_name -> google.type.TimeOfDay
	46, // 33: yandex.cloud.mdb.postgresql.v1.ClusterConfig.backup_retain_period_days:type_name -> google.protobuf.Int64Value
	17, // 34: yandex.cloud.mdb.postgresql.v1.ClusterConfig.access:type_name -> yandex.cloud.mdb.postgresql.v1.Access
	18, // 35: yandex.cloud.mdb.postgresql.v1.ClusterConfig.performance_diagnostics:type_name -> yandex.cloud.mdb.postgresql.v1.PerformanceDiagnostics
	19, // 36: yandex.cloud.mdb.postgresql.v1.ClusterConfig.disk_size_autoscaling:type_name -> yandex.cloud.mdb.postgresql.v1.DiskSizeAutoscaling
	3,  // 37: yandex.cloud.mdb.postgresql.v1.ConnectionPoolerConfig.pooling_mode:type_name -> yandex.cloud.mdb.postgresql.v1.ConnectionPoolerConfig.PoolingMode
	44, // 38: yandex.cloud.mdb.postgresql.v1.ConnectionPoolerConfig.pool_discard:type_name -> google.protobuf.BoolValue
	16, // 39: yandex.cloud.mdb.postgresql.v1.Host.resources:type_name -> yandex.cloud.mdb.postgresql.v1.Resources
	4,  // 40: yandex.cloud.mdb.postgresql.v1.Host.role:type_name -> yandex.cloud.mdb.postgresql.v1.Host.Role
	6,  // 41: yandex.cloud.mdb.postgresql.v1.Host.health:type_name -> yandex.cloud.mdb.postgresql.v1.Host.Health
	15, // 42: yandex.cloud.mdb.postgresql.v1.Host.services:type_name -> yandex.cloud.mdb.postgresql.v1.Service
	46, // 43: yandex.cloud.mdb.postgresql.v1.Host.priority:type_name -> google.protobuf.Int64Value
	14, // 44: yandex.cloud.mdb.postgresql.v1.Host.config:type_name -> yandex.cloud.mdb.postgresql.v1.HostConfig
	5,  // 45: yandex.cloud.mdb.postgresql.v1.Host.replica_type:type_name -> yandex.cloud.mdb.postgresql.v1.Host.ReplicaType
	47, // 46: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_9_6:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig9_6
	48, // 47: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_10_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig10_1C
	49, // 48: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_10:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig10
	50, // 49: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_11:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11
	51, // 50: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_11_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_1C
	52, // 51: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_12:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12
	53, // 52: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_12_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_1C
	54, // 53: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_13:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig13
	55, // 54: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_13_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig13_1C
	56, // 55: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_14:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig14
	57, // 56: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_14_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig14_1C
	58, // 57: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_15:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig15
	59, // 58: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_15_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig15_1C
	60, // 59: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_16:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig16
	61, // 60: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_16_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig16_1C
	62, // 61: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_17:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig17
	63, // 62: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_17_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig17_1C
	64, // 63: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_18:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig18
	65, // 64: yandex.cloud.mdb.postgresql.v1.HostConfig.postgresql_config_18_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig18_1C
	7,  // 65: yandex.cloud.mdb.postgresql.v1.Service.type:type_name -> yandex.cloud.mdb.postgresql.v1.Service.Type
	8,  // 66: yandex.cloud.mdb.postgresql.v1.Service.health:type_name -> yandex.cloud.mdb.postgresql.v1.Service.Health
	67, // [67:67] is the sub-list for method output_type
	67, // [67:67] is the sub-list for method input_type
	67, // [67:67] is the sub-list for extension type_name
	67, // [67:67] is the sub-list for extension extendee
	0,  // [0:67] is the sub-list for field type_name
}

func init() { file_yandex_cloud_mdb_postgresql_v1_cluster_proto_init() }
func file_yandex_cloud_mdb_postgresql_v1_cluster_proto_init() {
	if File_yandex_cloud_mdb_postgresql_v1_cluster_proto != nil {
		return
	}
	file_yandex_cloud_mdb_postgresql_v1_maintenance_proto_init()
	file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[2].OneofWrappers = []any{
		(*ClusterConfig_PostgresqlConfig_9_6)(nil),
		(*ClusterConfig_PostgresqlConfig_10_1C)(nil),
		(*ClusterConfig_PostgresqlConfig_10)(nil),
		(*ClusterConfig_PostgresqlConfig_11)(nil),
		(*ClusterConfig_PostgresqlConfig_11_1C)(nil),
		(*ClusterConfig_PostgresqlConfig_12)(nil),
		(*ClusterConfig_PostgresqlConfig_12_1C)(nil),
		(*ClusterConfig_PostgresqlConfig_13)(nil),
		(*ClusterConfig_PostgresqlConfig_13_1C)(nil),
		(*ClusterConfig_PostgresqlConfig_14)(nil),
		(*ClusterConfig_PostgresqlConfig_14_1C)(nil),
		(*ClusterConfig_PostgresqlConfig_15)(nil),
		(*ClusterConfig_PostgresqlConfig_15_1C)(nil),
		(*ClusterConfig_PostgresqlConfig_16)(nil),
		(*ClusterConfig_PostgresqlConfig_16_1C)(nil),
		(*ClusterConfig_PostgresqlConfig_17)(nil),
		(*ClusterConfig_PostgresqlConfig_17_1C)(nil),
		(*ClusterConfig_PostgresqlConfig_18)(nil),
		(*ClusterConfig_PostgresqlConfig_18_1C)(nil),
	}
	file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes[5].OneofWrappers = []any{
		(*HostConfig_PostgresqlConfig_9_6)(nil),
		(*HostConfig_PostgresqlConfig_10_1C)(nil),
		(*HostConfig_PostgresqlConfig_10)(nil),
		(*HostConfig_PostgresqlConfig_11)(nil),
		(*HostConfig_PostgresqlConfig_11_1C)(nil),
		(*HostConfig_PostgresqlConfig_12)(nil),
		(*HostConfig_PostgresqlConfig_12_1C)(nil),
		(*HostConfig_PostgresqlConfig_13)(nil),
		(*HostConfig_PostgresqlConfig_13_1C)(nil),
		(*HostConfig_PostgresqlConfig_14)(nil),
		(*HostConfig_PostgresqlConfig_14_1C)(nil),
		(*HostConfig_PostgresqlConfig_15)(nil),
		(*HostConfig_PostgresqlConfig_15_1C)(nil),
		(*HostConfig_PostgresqlConfig_16)(nil),
		(*HostConfig_PostgresqlConfig_16_1C)(nil),
		(*HostConfig_PostgresqlConfig_17)(nil),
		(*HostConfig_PostgresqlConfig_17_1C)(nil),
		(*HostConfig_PostgresqlConfig_18)(nil),
		(*HostConfig_PostgresqlConfig_18_1C)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDesc), len(file_yandex_cloud_mdb_postgresql_v1_cluster_proto_rawDesc)),
			NumEnums:      9,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_mdb_postgresql_v1_cluster_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_mdb_postgresql_v1_cluster_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_mdb_postgresql_v1_cluster_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_mdb_postgresql_v1_cluster_proto_msgTypes,
	}.Build()
	File_yandex_cloud_mdb_postgresql_v1_cluster_proto = out.File
	file_yandex_cloud_mdb_postgresql_v1_cluster_proto_goTypes = nil
	file_yandex_cloud_mdb_postgresql_v1_cluster_proto_depIdxs = nil
}

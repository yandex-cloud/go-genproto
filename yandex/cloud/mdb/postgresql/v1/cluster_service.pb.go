// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/mdb/postgresql/v1/cluster_service.proto

package postgresql

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	access "github.com/yandex-cloud/go-genproto/yandex/cloud/access"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	v1 "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/operationlog/v1"
	config "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/postgresql/v1/config"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	timeofday "google.golang.org/genproto/googleapis/type/timeofday"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RescheduleMaintenanceRequest_RescheduleType int32

const (
	RescheduleMaintenanceRequest_RESCHEDULE_TYPE_UNSPECIFIED RescheduleMaintenanceRequest_RescheduleType = 0
	// Start the maintenance operation immediately.
	RescheduleMaintenanceRequest_IMMEDIATE RescheduleMaintenanceRequest_RescheduleType = 1
	// Start the maintenance operation within the next available maintenance window.
	RescheduleMaintenanceRequest_NEXT_AVAILABLE_WINDOW RescheduleMaintenanceRequest_RescheduleType = 2
	// Start the maintenance operation at the specific time.
	RescheduleMaintenanceRequest_SPECIFIC_TIME RescheduleMaintenanceRequest_RescheduleType = 3
)

// Enum value maps for RescheduleMaintenanceRequest_RescheduleType.
var (
	RescheduleMaintenanceRequest_RescheduleType_name = map[int32]string{
		0: "RESCHEDULE_TYPE_UNSPECIFIED",
		1: "IMMEDIATE",
		2: "NEXT_AVAILABLE_WINDOW",
		3: "SPECIFIC_TIME",
	}
	RescheduleMaintenanceRequest_RescheduleType_value = map[string]int32{
		"RESCHEDULE_TYPE_UNSPECIFIED": 0,
		"IMMEDIATE":                   1,
		"NEXT_AVAILABLE_WINDOW":       2,
		"SPECIFIC_TIME":               3,
	}
)

func (x RescheduleMaintenanceRequest_RescheduleType) Enum() *RescheduleMaintenanceRequest_RescheduleType {
	p := new(RescheduleMaintenanceRequest_RescheduleType)
	*p = x
	return p
}

func (x RescheduleMaintenanceRequest_RescheduleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RescheduleMaintenanceRequest_RescheduleType) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_enumTypes[0].Descriptor()
}

func (RescheduleMaintenanceRequest_RescheduleType) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_enumTypes[0]
}

func (x RescheduleMaintenanceRequest_RescheduleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RescheduleMaintenanceRequest_RescheduleType.Descriptor instead.
func (RescheduleMaintenanceRequest_RescheduleType) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{22, 0}
}

type ListClusterLogsRequest_ServiceType int32

const (
	ListClusterLogsRequest_SERVICE_TYPE_UNSPECIFIED ListClusterLogsRequest_ServiceType = 0
	// Logs of PostgreSQL activity.
	ListClusterLogsRequest_POSTGRESQL ListClusterLogsRequest_ServiceType = 1
	// Logs of connection pooler activity.
	ListClusterLogsRequest_POOLER ListClusterLogsRequest_ServiceType = 2
)

// Enum value maps for ListClusterLogsRequest_ServiceType.
var (
	ListClusterLogsRequest_ServiceType_name = map[int32]string{
		0: "SERVICE_TYPE_UNSPECIFIED",
		1: "POSTGRESQL",
		2: "POOLER",
	}
	ListClusterLogsRequest_ServiceType_value = map[string]int32{
		"SERVICE_TYPE_UNSPECIFIED": 0,
		"POSTGRESQL":               1,
		"POOLER":                   2,
	}
)

func (x ListClusterLogsRequest_ServiceType) Enum() *ListClusterLogsRequest_ServiceType {
	p := new(ListClusterLogsRequest_ServiceType)
	*p = x
	return p
}

func (x ListClusterLogsRequest_ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListClusterLogsRequest_ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_enumTypes[1].Descriptor()
}

func (ListClusterLogsRequest_ServiceType) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_enumTypes[1]
}

func (x ListClusterLogsRequest_ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListClusterLogsRequest_ServiceType.Descriptor instead.
func (ListClusterLogsRequest_ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{25, 0}
}

type StreamClusterLogsRequest_ServiceType int32

const (
	StreamClusterLogsRequest_SERVICE_TYPE_UNSPECIFIED StreamClusterLogsRequest_ServiceType = 0
	// Logs of PostgreSQL activity.
	StreamClusterLogsRequest_POSTGRESQL StreamClusterLogsRequest_ServiceType = 1
	// Logs of connection pooler activity.
	StreamClusterLogsRequest_POOLER StreamClusterLogsRequest_ServiceType = 2
)

// Enum value maps for StreamClusterLogsRequest_ServiceType.
var (
	StreamClusterLogsRequest_ServiceType_name = map[int32]string{
		0: "SERVICE_TYPE_UNSPECIFIED",
		1: "POSTGRESQL",
		2: "POOLER",
	}
	StreamClusterLogsRequest_ServiceType_value = map[string]int32{
		"SERVICE_TYPE_UNSPECIFIED": 0,
		"POSTGRESQL":               1,
		"POOLER":                   2,
	}
)

func (x StreamClusterLogsRequest_ServiceType) Enum() *StreamClusterLogsRequest_ServiceType {
	p := new(StreamClusterLogsRequest_ServiceType)
	*p = x
	return p
}

func (x StreamClusterLogsRequest_ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamClusterLogsRequest_ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_enumTypes[2].Descriptor()
}

func (StreamClusterLogsRequest_ServiceType) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_enumTypes[2]
}

func (x StreamClusterLogsRequest_ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamClusterLogsRequest_ServiceType.Descriptor instead.
func (StreamClusterLogsRequest_ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{28, 0}
}

type GetClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL Cluster resource to return.
	// To get the cluster ID use a [ClusterService.List] request.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterRequest) Reset() {
	*x = GetClusterRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterRequest) ProtoMessage() {}

func (x *GetClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterRequest.ProtoReflect.Descriptor instead.
func (*GetClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type ListClustersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to list PostgreSQL clusters in.
	// To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size], the service returns a [ListClustersResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token] to the [ListClustersResponse.next_page_token]
	// returned by the previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	// The expression must specify:
	// 1. The field name. Currently you can only use filtering with the [Cluster.name] field.
	// 2. An `=` operator.
	// 3. The value in double quotes (`"`). Must be 1-63 characters long and match the regular expression `[a-zA-Z0-9_-]+`.
	Filter        string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersRequest) Reset() {
	*x = ListClustersRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersRequest) ProtoMessage() {}

func (x *ListClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersRequest.ProtoReflect.Descriptor instead.
func (*ListClustersRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListClustersRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListClustersRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClustersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListClustersRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListClustersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of PostgreSQL Cluster resources.
	Clusters []*Cluster `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListClustersRequest.page_size], use the [next_page_token] as the value
	// for the [ListClustersRequest.page_token] parameter in the next list request. Each subsequent
	// list request will have its own [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersResponse) Reset() {
	*x = ListClustersResponse{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersResponse) ProtoMessage() {}

func (x *ListClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersResponse.ProtoReflect.Descriptor instead.
func (*ListClustersResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListClustersResponse) GetClusters() []*Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *ListClustersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Message to describe a new retention policy for cluster backups.
type BackupRetentionPolicySpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Policy name.
	PolicyName string `protobuf:"bytes,1,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// CronTab schedule.
	Cron *CronTab `protobuf:"bytes,2,opt,name=cron,proto3" json:"cron,omitempty"`
	// Retention duration.
	RetainForDays int64 `protobuf:"varint,3,opt,name=retain_for_days,json=retainForDays,proto3" json:"retain_for_days,omitempty"`
	// Human-readable description.
	Description   string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupRetentionPolicySpec) Reset() {
	*x = BackupRetentionPolicySpec{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupRetentionPolicySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupRetentionPolicySpec) ProtoMessage() {}

func (x *BackupRetentionPolicySpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupRetentionPolicySpec.ProtoReflect.Descriptor instead.
func (*BackupRetentionPolicySpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{3}
}

func (x *BackupRetentionPolicySpec) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *BackupRetentionPolicySpec) GetCron() *CronTab {
	if x != nil {
		return x.Cron
	}
	return nil
}

func (x *BackupRetentionPolicySpec) GetRetainForDays() int64 {
	if x != nil {
		return x.RetainForDays
	}
	return 0
}

func (x *BackupRetentionPolicySpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to create the PostgreSQL cluster in.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Name of the PostgreSQL cluster. The name must be unique within the folder.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the PostgreSQL cluster.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Custom labels for the PostgreSQL cluster as “ key:value “ pairs. Maximum 64 per resource.
	// For example, "project": "mvp" or "source": "dictionary".
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Deployment environment of the PostgreSQL cluster.
	Environment Cluster_Environment `protobuf:"varint,5,opt,name=environment,proto3,enum=yandex.cloud.mdb.postgresql.v1.Cluster_Environment" json:"environment,omitempty"`
	// Configuration and resources for hosts that should be created for the PostgreSQL cluster.
	ConfigSpec *ConfigSpec `protobuf:"bytes,6,opt,name=config_spec,json=configSpec,proto3" json:"config_spec,omitempty"`
	// Descriptions of databases to be created in the PostgreSQL cluster.
	DatabaseSpecs []*DatabaseSpec `protobuf:"bytes,7,rep,name=database_specs,json=databaseSpecs,proto3" json:"database_specs,omitempty"`
	// Descriptions of database users to be created in the PostgreSQL cluster.
	UserSpecs []*UserSpec `protobuf:"bytes,8,rep,name=user_specs,json=userSpecs,proto3" json:"user_specs,omitempty"`
	// Individual configurations for hosts that should be created for the PostgreSQL cluster.
	HostSpecs []*HostSpec `protobuf:"bytes,9,rep,name=host_specs,json=hostSpecs,proto3" json:"host_specs,omitempty"`
	// ID of the network to create the cluster in.
	NetworkId string `protobuf:"bytes,10,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// User security groups
	SecurityGroupIds []string `protobuf:"bytes,11,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
	// Deletion Protection inhibits deletion of the cluster
	DeletionProtection bool `protobuf:"varint,12,opt,name=deletion_protection,json=deletionProtection,proto3" json:"deletion_protection,omitempty"`
	// Host groups hosting VMs of the cluster.
	HostGroupIds []string `protobuf:"bytes,13,rep,name=host_group_ids,json=hostGroupIds,proto3" json:"host_group_ids,omitempty"`
	// Window of maintenance operations.
	MaintenanceWindow *MaintenanceWindow `protobuf:"bytes,14,opt,name=maintenance_window,json=maintenanceWindow,proto3" json:"maintenance_window,omitempty"`
	// Backup long-term retention policies setting.
	RetentionPolicies []*BackupRetentionPolicySpec `protobuf:"bytes,15,rep,name=retention_policies,json=retentionPolicies,proto3" json:"retention_policies,omitempty"`
	// ID of the key to encrypt cluster disks.
	DiskEncryptionKeyId *wrapperspb.StringValue `protobuf:"bytes,16,opt,name=disk_encryption_key_id,json=diskEncryptionKeyId,proto3" json:"disk_encryption_key_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateClusterRequest) Reset() {
	*x = CreateClusterRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterRequest) ProtoMessage() {}

func (x *CreateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterRequest.ProtoReflect.Descriptor instead.
func (*CreateClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateClusterRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *CreateClusterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateClusterRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateClusterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateClusterRequest) GetEnvironment() Cluster_Environment {
	if x != nil {
		return x.Environment
	}
	return Cluster_ENVIRONMENT_UNSPECIFIED
}

func (x *CreateClusterRequest) GetConfigSpec() *ConfigSpec {
	if x != nil {
		return x.ConfigSpec
	}
	return nil
}

func (x *CreateClusterRequest) GetDatabaseSpecs() []*DatabaseSpec {
	if x != nil {
		return x.DatabaseSpecs
	}
	return nil
}

func (x *CreateClusterRequest) GetUserSpecs() []*UserSpec {
	if x != nil {
		return x.UserSpecs
	}
	return nil
}

func (x *CreateClusterRequest) GetHostSpecs() []*HostSpec {
	if x != nil {
		return x.HostSpecs
	}
	return nil
}

func (x *CreateClusterRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *CreateClusterRequest) GetSecurityGroupIds() []string {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

func (x *CreateClusterRequest) GetDeletionProtection() bool {
	if x != nil {
		return x.DeletionProtection
	}
	return false
}

func (x *CreateClusterRequest) GetHostGroupIds() []string {
	if x != nil {
		return x.HostGroupIds
	}
	return nil
}

func (x *CreateClusterRequest) GetMaintenanceWindow() *MaintenanceWindow {
	if x != nil {
		return x.MaintenanceWindow
	}
	return nil
}

func (x *CreateClusterRequest) GetRetentionPolicies() []*BackupRetentionPolicySpec {
	if x != nil {
		return x.RetentionPolicies
	}
	return nil
}

func (x *CreateClusterRequest) GetDiskEncryptionKeyId() *wrapperspb.StringValue {
	if x != nil {
		return x.DiskEncryptionKeyId
	}
	return nil
}

type CreateClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster that is being created.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Log of actions during operation
	OperationLog  *v1.OperationLog `protobuf:"bytes,2,opt,name=operation_log,json=operationLog,proto3" json:"operation_log,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateClusterMetadata) Reset() {
	*x = CreateClusterMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterMetadata) ProtoMessage() {}

func (x *CreateClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterMetadata.ProtoReflect.Descriptor instead.
func (*CreateClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *CreateClusterMetadata) GetOperationLog() *v1.OperationLog {
	if x != nil {
		return x.OperationLog
	}
	return nil
}

type UpdateClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL Cluster resource to update.
	// To get the PostgreSQL cluster ID, use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Field mask that specifies which fields of the PostgreSQL Cluster resource should be updated.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// New description of the PostgreSQL cluster.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Custom labels for the PostgreSQL cluster as “ key:value “ pairs. Maximum 64 per resource.
	// For example, "project": "mvp" or "source": "dictionary".
	//
	// The new set of labels will completely replace the old ones. To add a label, request the current
	// set with the [ClusterService.Get] method, then send an [ClusterService.Update] request with the new label added to the set.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// New configuration and resources for hosts in the cluster.
	ConfigSpec *ConfigSpec `protobuf:"bytes,5,opt,name=config_spec,json=configSpec,proto3" json:"config_spec,omitempty"`
	// New name for the cluster.
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// New maintenance window settings for the cluster.
	MaintenanceWindow *MaintenanceWindow `protobuf:"bytes,7,opt,name=maintenance_window,json=maintenanceWindow,proto3" json:"maintenance_window,omitempty"`
	// User security groups
	SecurityGroupIds []string `protobuf:"bytes,8,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
	// Deletion Protection inhibits deletion of the cluster
	DeletionProtection bool `protobuf:"varint,9,opt,name=deletion_protection,json=deletionProtection,proto3" json:"deletion_protection,omitempty"`
	// ID of the network to move the cluster to.
	NetworkId     string `protobuf:"bytes,11,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateClusterRequest) Reset() {
	*x = UpdateClusterRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterRequest) ProtoMessage() {}

func (x *UpdateClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateClusterRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateClusterRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateClusterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateClusterRequest) GetConfigSpec() *ConfigSpec {
	if x != nil {
		return x.ConfigSpec
	}
	return nil
}

func (x *UpdateClusterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateClusterRequest) GetMaintenanceWindow() *MaintenanceWindow {
	if x != nil {
		return x.MaintenanceWindow
	}
	return nil
}

func (x *UpdateClusterRequest) GetSecurityGroupIds() []string {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

func (x *UpdateClusterRequest) GetDeletionProtection() bool {
	if x != nil {
		return x.DeletionProtection
	}
	return false
}

func (x *UpdateClusterRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

type UpdateClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL Cluster resource that is being updated.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Log of actions during operation
	OperationLog  *v1.OperationLog `protobuf:"bytes,2,opt,name=operation_log,json=operationLog,proto3" json:"operation_log,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateClusterMetadata) Reset() {
	*x = UpdateClusterMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterMetadata) ProtoMessage() {}

func (x *UpdateClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterMetadata.ProtoReflect.Descriptor instead.
func (*UpdateClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateClusterMetadata) GetOperationLog() *v1.OperationLog {
	if x != nil {
		return x.OperationLog
	}
	return nil
}

type DeleteClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster to delete.
	// To get the PostgreSQL cluster ID, use a [ClusterService.List] request.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteClusterRequest) Reset() {
	*x = DeleteClusterRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterRequest) ProtoMessage() {}

func (x *DeleteClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterRequest.ProtoReflect.Descriptor instead.
func (*DeleteClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type DeleteClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster that is being deleted.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteClusterMetadata) Reset() {
	*x = DeleteClusterMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterMetadata) ProtoMessage() {}

func (x *DeleteClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterMetadata.ProtoReflect.Descriptor instead.
func (*DeleteClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type StartClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster to start.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartClusterRequest) Reset() {
	*x = StartClusterRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartClusterRequest) ProtoMessage() {}

func (x *StartClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartClusterRequest.ProtoReflect.Descriptor instead.
func (*StartClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{10}
}

func (x *StartClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type StartClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartClusterMetadata) Reset() {
	*x = StartClusterMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartClusterMetadata) ProtoMessage() {}

func (x *StartClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartClusterMetadata.ProtoReflect.Descriptor instead.
func (*StartClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{11}
}

func (x *StartClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type StopClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster to stop.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopClusterRequest) Reset() {
	*x = StopClusterRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopClusterRequest) ProtoMessage() {}

func (x *StopClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopClusterRequest.ProtoReflect.Descriptor instead.
func (*StopClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{12}
}

func (x *StopClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type StopClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopClusterMetadata) Reset() {
	*x = StopClusterMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopClusterMetadata) ProtoMessage() {}

func (x *StopClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopClusterMetadata.ProtoReflect.Descriptor instead.
func (*StopClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{13}
}

func (x *StopClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type MoveClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster to move.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// ID of the destination folder.
	DestinationFolderId string `protobuf:"bytes,2,opt,name=destination_folder_id,json=destinationFolderId,proto3" json:"destination_folder_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MoveClusterRequest) Reset() {
	*x = MoveClusterRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveClusterRequest) ProtoMessage() {}

func (x *MoveClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveClusterRequest.ProtoReflect.Descriptor instead.
func (*MoveClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{14}
}

func (x *MoveClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *MoveClusterRequest) GetDestinationFolderId() string {
	if x != nil {
		return x.DestinationFolderId
	}
	return ""
}

type MoveClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster being moved.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// ID of the source folder.
	SourceFolderId string `protobuf:"bytes,2,opt,name=source_folder_id,json=sourceFolderId,proto3" json:"source_folder_id,omitempty"`
	// ID of the destnation folder.
	DestinationFolderId string `protobuf:"bytes,3,opt,name=destination_folder_id,json=destinationFolderId,proto3" json:"destination_folder_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MoveClusterMetadata) Reset() {
	*x = MoveClusterMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveClusterMetadata) ProtoMessage() {}

func (x *MoveClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveClusterMetadata.ProtoReflect.Descriptor instead.
func (*MoveClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{15}
}

func (x *MoveClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *MoveClusterMetadata) GetSourceFolderId() string {
	if x != nil {
		return x.SourceFolderId
	}
	return ""
}

func (x *MoveClusterMetadata) GetDestinationFolderId() string {
	if x != nil {
		return x.DestinationFolderId
	}
	return ""
}

type BackupClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster to back up.
	// To get the PostgreSQL cluster ID, use a [ClusterService.List] request.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupClusterRequest) Reset() {
	*x = BackupClusterRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupClusterRequest) ProtoMessage() {}

func (x *BackupClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupClusterRequest.ProtoReflect.Descriptor instead.
func (*BackupClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{16}
}

func (x *BackupClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type BackupClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster that is being backed up.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// ID of the PostgreSQL backup that is being created.
	BackupId      string `protobuf:"bytes,2,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackupClusterMetadata) Reset() {
	*x = BackupClusterMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupClusterMetadata) ProtoMessage() {}

func (x *BackupClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupClusterMetadata.ProtoReflect.Descriptor instead.
func (*BackupClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{17}
}

func (x *BackupClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *BackupClusterMetadata) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

type RestoreClusterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the backup to create a cluster from.
	// To get the backup ID, use a [ClusterService.ListBackups] request.
	BackupId string `protobuf:"bytes,1,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	// Timestamp of the moment to which the PostgreSQL cluster should be restored.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// Flag that indicates whether a database should be restored to the first backup point
	// available just after the timestamp specified in the [time] field instead of just before.
	//
	// Possible values:
	// * false (default) - the restore point refers to the first backup moment before [time].
	// * true - the restore point refers to the first backup point after [time].
	TimeInclusive bool `protobuf:"varint,3,opt,name=time_inclusive,json=timeInclusive,proto3" json:"time_inclusive,omitempty"`
	// Name of the new PostgreSQL cluster. The name must be unique within the folder.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the new PostgreSQL cluster.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Custom labels for the PostgreSQL cluster as “ key:value “ pairs. Maximum 64 per resource.
	// For example, "project": "mvp" or "source": "dictionary".
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Deployment environment of the new PostgreSQL cluster.
	Environment Cluster_Environment `protobuf:"varint,7,opt,name=environment,proto3,enum=yandex.cloud.mdb.postgresql.v1.Cluster_Environment" json:"environment,omitempty"`
	// Configuration for the PostgreSQL cluster to be created.
	ConfigSpec *ConfigSpec `protobuf:"bytes,8,opt,name=config_spec,json=configSpec,proto3" json:"config_spec,omitempty"`
	// Configurations for PostgreSQL hosts that should be created for
	// the cluster that is being created from the backup.
	HostSpecs []*HostSpec `protobuf:"bytes,9,rep,name=host_specs,json=hostSpecs,proto3" json:"host_specs,omitempty"`
	// ID of the network to create the PostgreSQL cluster in.
	NetworkId string `protobuf:"bytes,10,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// ID of the folder to create the PostgreSQL cluster in.
	FolderId string `protobuf:"bytes,11,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// User security groups
	SecurityGroupIds []string `protobuf:"bytes,12,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
	// Deletion Protection inhibits deletion of the cluster
	DeletionProtection bool `protobuf:"varint,13,opt,name=deletion_protection,json=deletionProtection,proto3" json:"deletion_protection,omitempty"`
	// Host groups hosting VMs of the cluster.
	HostGroupIds []string `protobuf:"bytes,14,rep,name=host_group_ids,json=hostGroupIds,proto3" json:"host_group_ids,omitempty"`
	// Window of maintenance operations.
	MaintenanceWindow *MaintenanceWindow `protobuf:"bytes,15,opt,name=maintenance_window,json=maintenanceWindow,proto3" json:"maintenance_window,omitempty"`
	// ID of the key to encrypt cluster disks.
	DiskEncryptionKeyId *wrapperspb.StringValue `protobuf:"bytes,16,opt,name=disk_encryption_key_id,json=diskEncryptionKeyId,proto3" json:"disk_encryption_key_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RestoreClusterRequest) Reset() {
	*x = RestoreClusterRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreClusterRequest) ProtoMessage() {}

func (x *RestoreClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreClusterRequest.ProtoReflect.Descriptor instead.
func (*RestoreClusterRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{18}
}

func (x *RestoreClusterRequest) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

func (x *RestoreClusterRequest) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *RestoreClusterRequest) GetTimeInclusive() bool {
	if x != nil {
		return x.TimeInclusive
	}
	return false
}

func (x *RestoreClusterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RestoreClusterRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RestoreClusterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *RestoreClusterRequest) GetEnvironment() Cluster_Environment {
	if x != nil {
		return x.Environment
	}
	return Cluster_ENVIRONMENT_UNSPECIFIED
}

func (x *RestoreClusterRequest) GetConfigSpec() *ConfigSpec {
	if x != nil {
		return x.ConfigSpec
	}
	return nil
}

func (x *RestoreClusterRequest) GetHostSpecs() []*HostSpec {
	if x != nil {
		return x.HostSpecs
	}
	return nil
}

func (x *RestoreClusterRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *RestoreClusterRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *RestoreClusterRequest) GetSecurityGroupIds() []string {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

func (x *RestoreClusterRequest) GetDeletionProtection() bool {
	if x != nil {
		return x.DeletionProtection
	}
	return false
}

func (x *RestoreClusterRequest) GetHostGroupIds() []string {
	if x != nil {
		return x.HostGroupIds
	}
	return nil
}

func (x *RestoreClusterRequest) GetMaintenanceWindow() *MaintenanceWindow {
	if x != nil {
		return x.MaintenanceWindow
	}
	return nil
}

func (x *RestoreClusterRequest) GetDiskEncryptionKeyId() *wrapperspb.StringValue {
	if x != nil {
		return x.DiskEncryptionKeyId
	}
	return nil
}

type RestoreClusterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the new PostgreSQL cluster that is being created from a backup.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// ID of the backup that is being used for creating a cluster.
	BackupId      string `protobuf:"bytes,2,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreClusterMetadata) Reset() {
	*x = RestoreClusterMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreClusterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreClusterMetadata) ProtoMessage() {}

func (x *RestoreClusterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreClusterMetadata.ProtoReflect.Descriptor instead.
func (*RestoreClusterMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{19}
}

func (x *RestoreClusterMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *RestoreClusterMetadata) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

type StartClusterFailoverRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of PostgreSQL cluster.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// New master host. Switch to the most up-to-date replica if not provided.
	HostName      string `protobuf:"bytes,2,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartClusterFailoverRequest) Reset() {
	*x = StartClusterFailoverRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartClusterFailoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartClusterFailoverRequest) ProtoMessage() {}

func (x *StartClusterFailoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartClusterFailoverRequest.ProtoReflect.Descriptor instead.
func (*StartClusterFailoverRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{20}
}

func (x *StartClusterFailoverRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *StartClusterFailoverRequest) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

type StartClusterFailoverMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster being failovered.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartClusterFailoverMetadata) Reset() {
	*x = StartClusterFailoverMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartClusterFailoverMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartClusterFailoverMetadata) ProtoMessage() {}

func (x *StartClusterFailoverMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartClusterFailoverMetadata.ProtoReflect.Descriptor instead.
func (*StartClusterFailoverMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{21}
}

func (x *StartClusterFailoverMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type RescheduleMaintenanceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster to reschedule the maintenance operation for.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The type of reschedule request.
	RescheduleType RescheduleMaintenanceRequest_RescheduleType `protobuf:"varint,2,opt,name=reschedule_type,json=rescheduleType,proto3,enum=yandex.cloud.mdb.postgresql.v1.RescheduleMaintenanceRequest_RescheduleType" json:"reschedule_type,omitempty"`
	// The time until which this maintenance operation should be delayed. The value should be ahead of the first time when the maintenance operation has been scheduled for no more than two weeks. The value can also point to the past moment of time if [reschedule_type.IMMEDIATE] reschedule type is chosen.
	DelayedUntil  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=delayed_until,json=delayedUntil,proto3" json:"delayed_until,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RescheduleMaintenanceRequest) Reset() {
	*x = RescheduleMaintenanceRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RescheduleMaintenanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescheduleMaintenanceRequest) ProtoMessage() {}

func (x *RescheduleMaintenanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescheduleMaintenanceRequest.ProtoReflect.Descriptor instead.
func (*RescheduleMaintenanceRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{22}
}

func (x *RescheduleMaintenanceRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *RescheduleMaintenanceRequest) GetRescheduleType() RescheduleMaintenanceRequest_RescheduleType {
	if x != nil {
		return x.RescheduleType
	}
	return RescheduleMaintenanceRequest_RESCHEDULE_TYPE_UNSPECIFIED
}

func (x *RescheduleMaintenanceRequest) GetDelayedUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.DelayedUntil
	}
	return nil
}

// Rescheduled maintenance operation metadata.
type RescheduleMaintenanceMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the PostgreSQL cluster.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Required. The time until which this maintenance operation is to be delayed.
	DelayedUntil  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=delayed_until,json=delayedUntil,proto3" json:"delayed_until,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RescheduleMaintenanceMetadata) Reset() {
	*x = RescheduleMaintenanceMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RescheduleMaintenanceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescheduleMaintenanceMetadata) ProtoMessage() {}

func (x *RescheduleMaintenanceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescheduleMaintenanceMetadata.ProtoReflect.Descriptor instead.
func (*RescheduleMaintenanceMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{23}
}

func (x *RescheduleMaintenanceMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *RescheduleMaintenanceMetadata) GetDelayedUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.DelayedUntil
	}
	return nil
}

type LogRecord struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Log record timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Contents of the log record.
	Message       map[string]string `protobuf:"bytes,2,rep,name=message,proto3" json:"message,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogRecord) Reset() {
	*x = LogRecord{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRecord) ProtoMessage() {}

func (x *LogRecord) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRecord.ProtoReflect.Descriptor instead.
func (*LogRecord) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{24}
}

func (x *LogRecord) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *LogRecord) GetMessage() map[string]string {
	if x != nil {
		return x.Message
	}
	return nil
}

type ListClusterLogsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster to request logs for.
	// To get the PostgreSQL cluster ID use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Columns from the logs table to request.
	// If no columns are specified, entire log records are returned.
	ColumnFilter []string `protobuf:"bytes,2,rep,name=column_filter,json=columnFilter,proto3" json:"column_filter,omitempty"`
	// Type of the service to request logs about.
	ServiceType ListClusterLogsRequest_ServiceType `protobuf:"varint,3,opt,name=service_type,json=serviceType,proto3,enum=yandex.cloud.mdb.postgresql.v1.ListClusterLogsRequest_ServiceType" json:"service_type,omitempty"`
	// Start timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
	FromTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=from_time,json=fromTime,proto3" json:"from_time,omitempty"`
	// End timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
	ToTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=to_time,json=toTime,proto3" json:"to_time,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size], the service returns a [ListClusterLogsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token] to the
	// [ListClusterLogsResponse.next_page_token] returned by the previous list request.
	PageToken string `protobuf:"bytes,7,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Always return `next_page_token`, even if current page is empty.
	AlwaysNextPageToken bool `protobuf:"varint,8,opt,name=always_next_page_token,json=alwaysNextPageToken,proto3" json:"always_next_page_token,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListClusterLogsRequest) Reset() {
	*x = ListClusterLogsRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterLogsRequest) ProtoMessage() {}

func (x *ListClusterLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterLogsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterLogsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{25}
}

func (x *ListClusterLogsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListClusterLogsRequest) GetColumnFilter() []string {
	if x != nil {
		return x.ColumnFilter
	}
	return nil
}

func (x *ListClusterLogsRequest) GetServiceType() ListClusterLogsRequest_ServiceType {
	if x != nil {
		return x.ServiceType
	}
	return ListClusterLogsRequest_SERVICE_TYPE_UNSPECIFIED
}

func (x *ListClusterLogsRequest) GetFromTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FromTime
	}
	return nil
}

func (x *ListClusterLogsRequest) GetToTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ToTime
	}
	return nil
}

func (x *ListClusterLogsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterLogsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListClusterLogsRequest) GetAlwaysNextPageToken() bool {
	if x != nil {
		return x.AlwaysNextPageToken
	}
	return false
}

type ListClusterLogsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Requested log records.
	Logs []*LogRecord `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListClusterLogsRequest.page_size], use the [next_page_token] as the value
	// for the [ListClusterLogsRequest.page_token] query parameter in the next list request.
	// Each subsequent list request will have its own [next_page_token] to continue paging through the results.
	// This value is interchangeable with `next_record_token` from StreamLogs method.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterLogsResponse) Reset() {
	*x = ListClusterLogsResponse{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterLogsResponse) ProtoMessage() {}

func (x *ListClusterLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterLogsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterLogsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{26}
}

func (x *ListClusterLogsResponse) GetLogs() []*LogRecord {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *ListClusterLogsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type StreamLogRecord struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// One of the requested log records.
	Record *LogRecord `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
	// This token allows you to continue streaming logs starting from the exact
	// same record. To continue streaming, specify value of `next_record_token`
	// as value for `record_token` parameter in the next StreamLogs request.
	// This value is interchangeable with `next_page_token` from ListLogs method.
	NextRecordToken string `protobuf:"bytes,2,opt,name=next_record_token,json=nextRecordToken,proto3" json:"next_record_token,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StreamLogRecord) Reset() {
	*x = StreamLogRecord{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamLogRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLogRecord) ProtoMessage() {}

func (x *StreamLogRecord) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLogRecord.ProtoReflect.Descriptor instead.
func (*StreamLogRecord) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{27}
}

func (x *StreamLogRecord) GetRecord() *LogRecord {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *StreamLogRecord) GetNextRecordToken() string {
	if x != nil {
		return x.NextRecordToken
	}
	return ""
}

type StreamClusterLogsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the PostgreSQL cluster.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Columns from logs table to get in the response.
	ColumnFilter []string                             `protobuf:"bytes,2,rep,name=column_filter,json=columnFilter,proto3" json:"column_filter,omitempty"`
	ServiceType  StreamClusterLogsRequest_ServiceType `protobuf:"varint,3,opt,name=service_type,json=serviceType,proto3,enum=yandex.cloud.mdb.postgresql.v1.StreamClusterLogsRequest_ServiceType" json:"service_type,omitempty"`
	// Start timestamp for the logs request.
	FromTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=from_time,json=fromTime,proto3" json:"from_time,omitempty"`
	// End timestamp for the logs request.
	// If this field is not set, all existing logs will be sent and then the new ones as
	// they appear. In essence it has 'tail -f' semantics.
	ToTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=to_time,json=toTime,proto3" json:"to_time,omitempty"`
	// Record token. Set `record_token` to the `next_record_token` returned by a previous StreamLogs
	// request to start streaming from next log record.
	RecordToken string `protobuf:"bytes,6,opt,name=record_token,json=recordToken,proto3" json:"record_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	// The expression must specify:
	// 1. The field name. Currently filtering can be applied to the [LogRecord.logs.message.hostname],
	// [LogRecord.logs.message.error_severity] (for POSTGRESQL service), [LogRecord.logs.message.level] (for POOLER service) fields.
	// 2. An `=` operator.
	// 3. The value in double quotes (`"`). Must be 1-63 characters long and match the regular expression `[a-z0-9.-]{1,61}`.
	// Examples of a filter:
	// `message.hostname='node1.db.cloud.yandex.net'`
	// `message.error_severity IN ("ERROR", "FATAL", "PANIC") AND message.hostname = "node1.db.cloud.yandex.net"`
	Filter        string `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamClusterLogsRequest) Reset() {
	*x = StreamClusterLogsRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamClusterLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamClusterLogsRequest) ProtoMessage() {}

func (x *StreamClusterLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamClusterLogsRequest.ProtoReflect.Descriptor instead.
func (*StreamClusterLogsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{28}
}

func (x *StreamClusterLogsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *StreamClusterLogsRequest) GetColumnFilter() []string {
	if x != nil {
		return x.ColumnFilter
	}
	return nil
}

func (x *StreamClusterLogsRequest) GetServiceType() StreamClusterLogsRequest_ServiceType {
	if x != nil {
		return x.ServiceType
	}
	return StreamClusterLogsRequest_SERVICE_TYPE_UNSPECIFIED
}

func (x *StreamClusterLogsRequest) GetFromTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FromTime
	}
	return nil
}

func (x *StreamClusterLogsRequest) GetToTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ToTime
	}
	return nil
}

func (x *StreamClusterLogsRequest) GetRecordToken() string {
	if x != nil {
		return x.RecordToken
	}
	return ""
}

func (x *StreamClusterLogsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListClusterOperationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL Cluster resource to list operations for.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size], the service returns a [ListClusterOperationsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token.  To get the next page of results, set [page_token] to the [ListClusterOperationsResponse.next_page_token]
	// returned by the previous list request.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterOperationsRequest) Reset() {
	*x = ListClusterOperationsRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterOperationsRequest) ProtoMessage() {}

func (x *ListClusterOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterOperationsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterOperationsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{29}
}

func (x *ListClusterOperationsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListClusterOperationsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterOperationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListClusterOperationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of Operation resources for the specified PostgreSQL cluster.
	Operations []*operation.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListClusterOperationsRequest.page_size], use the [next_page_token] as the value
	// for the [ListClusterOperationsRequest.page_token] query parameter in the next list request.
	// Each subsequent list request will have its own [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterOperationsResponse) Reset() {
	*x = ListClusterOperationsResponse{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterOperationsResponse) ProtoMessage() {}

func (x *ListClusterOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterOperationsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterOperationsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{30}
}

func (x *ListClusterOperationsResponse) GetOperations() []*operation.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ListClusterOperationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListClusterBackupsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster.
	// To get the PostgreSQL cluster ID use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size], the service returns a [ListClusterBackupsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token.  To get the next page of results, set [page_token] to the [ListClusterBackupsResponse.next_page_token]
	// returned by the previous list request.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterBackupsRequest) Reset() {
	*x = ListClusterBackupsRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterBackupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterBackupsRequest) ProtoMessage() {}

func (x *ListClusterBackupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterBackupsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterBackupsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{31}
}

func (x *ListClusterBackupsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListClusterBackupsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterBackupsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListClusterBackupsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of PostgreSQL Backup resources.
	Backups []*Backup `protobuf:"bytes,1,rep,name=backups,proto3" json:"backups,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListClusterBackupsRequest.page_size], use the [next_page_token] as the value
	// for the [ListClusterBackupsRequest.page_token] query parameter in the next list request.
	// Each subsequent list request will have its own [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterBackupsResponse) Reset() {
	*x = ListClusterBackupsResponse{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterBackupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterBackupsResponse) ProtoMessage() {}

func (x *ListClusterBackupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterBackupsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterBackupsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{32}
}

func (x *ListClusterBackupsResponse) GetBackups() []*Backup {
	if x != nil {
		return x.Backups
	}
	return nil
}

func (x *ListClusterBackupsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListClusterHostsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster.
	// To get the PostgreSQL cluster ID use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size], the service returns a [ListClusterHostsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token.  To get the next page of results, set [page_token] to the [ListClusterHostsResponse.next_page_token]
	// returned by the previous list request.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterHostsRequest) Reset() {
	*x = ListClusterHostsRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterHostsRequest) ProtoMessage() {}

func (x *ListClusterHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterHostsRequest.ProtoReflect.Descriptor instead.
func (*ListClusterHostsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{33}
}

func (x *ListClusterHostsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListClusterHostsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterHostsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListClusterHostsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of Host resources.
	Hosts []*Host `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListClusterHostsRequest.page_size], use the [next_page_token] as the value
	// for the [ListClusterHostsRequest.page_token] query parameter in the next list request.
	// Each subsequent list request will have its own [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterHostsResponse) Reset() {
	*x = ListClusterHostsResponse{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterHostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterHostsResponse) ProtoMessage() {}

func (x *ListClusterHostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterHostsResponse.ProtoReflect.Descriptor instead.
func (*ListClusterHostsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{34}
}

func (x *ListClusterHostsResponse) GetHosts() []*Host {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *ListClusterHostsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type AddClusterHostsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster to add hosts to.
	// To get the PostgreSQL cluster ID, use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Configurations for PostgreSQL hosts that should be added to the cluster.
	HostSpecs     []*HostSpec `protobuf:"bytes,2,rep,name=host_specs,json=hostSpecs,proto3" json:"host_specs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddClusterHostsRequest) Reset() {
	*x = AddClusterHostsRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddClusterHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClusterHostsRequest) ProtoMessage() {}

func (x *AddClusterHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClusterHostsRequest.ProtoReflect.Descriptor instead.
func (*AddClusterHostsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{35}
}

func (x *AddClusterHostsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *AddClusterHostsRequest) GetHostSpecs() []*HostSpec {
	if x != nil {
		return x.HostSpecs
	}
	return nil
}

type AddClusterHostsMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster to which the hosts are being added.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Names of hosts that are being added to the cluster.
	HostNames     []string `protobuf:"bytes,2,rep,name=host_names,json=hostNames,proto3" json:"host_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddClusterHostsMetadata) Reset() {
	*x = AddClusterHostsMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddClusterHostsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClusterHostsMetadata) ProtoMessage() {}

func (x *AddClusterHostsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClusterHostsMetadata.ProtoReflect.Descriptor instead.
func (*AddClusterHostsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{36}
}

func (x *AddClusterHostsMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *AddClusterHostsMetadata) GetHostNames() []string {
	if x != nil {
		return x.HostNames
	}
	return nil
}

type DeleteClusterHostsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster to remove hosts from.
	// To get the PostgreSQL cluster ID, use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Names of hosts to delete.
	HostNames     []string `protobuf:"bytes,2,rep,name=host_names,json=hostNames,proto3" json:"host_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteClusterHostsRequest) Reset() {
	*x = DeleteClusterHostsRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterHostsRequest) ProtoMessage() {}

func (x *DeleteClusterHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterHostsRequest.ProtoReflect.Descriptor instead.
func (*DeleteClusterHostsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteClusterHostsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *DeleteClusterHostsRequest) GetHostNames() []string {
	if x != nil {
		return x.HostNames
	}
	return nil
}

type DeleteClusterHostsMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster to remove hosts from.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Names of hosts that are being deleted.
	HostNames     []string `protobuf:"bytes,2,rep,name=host_names,json=hostNames,proto3" json:"host_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteClusterHostsMetadata) Reset() {
	*x = DeleteClusterHostsMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteClusterHostsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterHostsMetadata) ProtoMessage() {}

func (x *DeleteClusterHostsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterHostsMetadata.ProtoReflect.Descriptor instead.
func (*DeleteClusterHostsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteClusterHostsMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *DeleteClusterHostsMetadata) GetHostNames() []string {
	if x != nil {
		return x.HostNames
	}
	return nil
}

type UpdateClusterHostsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster to update hosts in.
	// To get the PostgreSQL cluster ID, use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// New configurations to apply to hosts.
	UpdateHostSpecs []*UpdateHostSpec `protobuf:"bytes,2,rep,name=update_host_specs,json=updateHostSpecs,proto3" json:"update_host_specs,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateClusterHostsRequest) Reset() {
	*x = UpdateClusterHostsRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterHostsRequest) ProtoMessage() {}

func (x *UpdateClusterHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterHostsRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterHostsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateClusterHostsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateClusterHostsRequest) GetUpdateHostSpecs() []*UpdateHostSpec {
	if x != nil {
		return x.UpdateHostSpecs
	}
	return nil
}

type UpdateClusterHostsMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster to update hosts in.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Names of hosts that are being updated.
	HostNames     []string `protobuf:"bytes,2,rep,name=host_names,json=hostNames,proto3" json:"host_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateClusterHostsMetadata) Reset() {
	*x = UpdateClusterHostsMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterHostsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterHostsMetadata) ProtoMessage() {}

func (x *UpdateClusterHostsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterHostsMetadata.ProtoReflect.Descriptor instead.
func (*UpdateClusterHostsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateClusterHostsMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateClusterHostsMetadata) GetHostNames() []string {
	if x != nil {
		return x.HostNames
	}
	return nil
}

type UpdateHostSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the host to update.
	// To get the PostgreSQL host name, use a [ClusterService.ListHosts] request.
	HostName string `protobuf:"bytes,1,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	// [Host.name] of the host to be used as the replication source (for cascading replication).
	// To get the PostgreSQL host name, use a [ClusterService.ListHosts] request.
	ReplicationSource string `protobuf:"bytes,2,opt,name=replication_source,json=replicationSource,proto3" json:"replication_source,omitempty"`
	// The host with the highest priority is the synchronous replica. All others are asynchronous.
	// The synchronous replica replaces the master when needed.
	//
	// When a replica becomes the master, its priority is ignored.
	Priority *wrapperspb.Int64Value `protobuf:"bytes,3,opt,name=priority,proto3" json:"priority,omitempty"`
	// Configuration of a PostgreSQL server for the host.
	ConfigSpec *ConfigHostSpec `protobuf:"bytes,4,opt,name=config_spec,json=configSpec,proto3" json:"config_spec,omitempty"`
	// Field mask that specifies which fields of the PostgreSQL host should be updated.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,5,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// Whether the host should get a public IP address on creation.
	AssignPublicIp bool `protobuf:"varint,6,opt,name=assign_public_ip,json=assignPublicIp,proto3" json:"assign_public_ip,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateHostSpec) Reset() {
	*x = UpdateHostSpec{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateHostSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHostSpec) ProtoMessage() {}

func (x *UpdateHostSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHostSpec.ProtoReflect.Descriptor instead.
func (*UpdateHostSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateHostSpec) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *UpdateHostSpec) GetReplicationSource() string {
	if x != nil {
		return x.ReplicationSource
	}
	return ""
}

func (x *UpdateHostSpec) GetPriority() *wrapperspb.Int64Value {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *UpdateHostSpec) GetConfigSpec() *ConfigHostSpec {
	if x != nil {
		return x.ConfigSpec
	}
	return nil
}

func (x *UpdateHostSpec) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateHostSpec) GetAssignPublicIp() bool {
	if x != nil {
		return x.AssignPublicIp
	}
	return false
}

type HostSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the availability zone where the host resides.
	// To get a list of available zones, use the [yandex.cloud.compute.v1.ZoneService.List] request.
	ZoneId string `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// ID of the subnet that the host should belong to. This subnet should be a part
	// of the network that the cluster belongs to.
	// The ID of the network is set in the field [Cluster.network_id].
	SubnetId string `protobuf:"bytes,2,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	// Whether the host should get a public IP address on creation.
	//
	// After a host has been created, this setting cannot be changed. To remove an assigned public IP, or to assign
	// a public IP to a host without one, recreate the host with [assign_public_ip] set as needed.
	//
	// Possible values:
	// * false - don't assign a public IP to the host.
	// * true - the host should have a public IP address.
	AssignPublicIp bool `protobuf:"varint,3,opt,name=assign_public_ip,json=assignPublicIp,proto3" json:"assign_public_ip,omitempty"`
	// [Host.name] of the host to be used as the replication source (for cascading replication).
	ReplicationSource string `protobuf:"bytes,4,opt,name=replication_source,json=replicationSource,proto3" json:"replication_source,omitempty"`
	// Priority of the host as a replica. A higher value corresponds to higher priority.
	//
	// The host with the highest priority is the synchronous replica. All others are asynchronous.
	// The synchronous replica replaces the master when needed.
	//
	// When a replica becomes the master, its priority is ignored.
	Priority *wrapperspb.Int64Value `protobuf:"bytes,5,opt,name=priority,proto3" json:"priority,omitempty"`
	// Configuration of a PostgreSQL server for the host.
	ConfigSpec    *ConfigHostSpec `protobuf:"bytes,6,opt,name=config_spec,json=configSpec,proto3" json:"config_spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostSpec) Reset() {
	*x = HostSpec{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSpec) ProtoMessage() {}

func (x *HostSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostSpec.ProtoReflect.Descriptor instead.
func (*HostSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{42}
}

func (x *HostSpec) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *HostSpec) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *HostSpec) GetAssignPublicIp() bool {
	if x != nil {
		return x.AssignPublicIp
	}
	return false
}

func (x *HostSpec) GetReplicationSource() string {
	if x != nil {
		return x.ReplicationSource
	}
	return ""
}

func (x *HostSpec) GetPriority() *wrapperspb.Int64Value {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *HostSpec) GetConfigSpec() *ConfigHostSpec {
	if x != nil {
		return x.ConfigSpec
	}
	return nil
}

type ConfigSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version of PostgreSQL used in the cluster.
	// Possible values: `9.6`, `10`, `10_1c`, `11`, `12`, `13`, `14`, `15`, `16`, `17`, `18`
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Configuration of a PostgreSQL cluster.
	//
	// Types that are valid to be assigned to PostgresqlConfig:
	//
	//	*ConfigSpec_PostgresqlConfig_9_6
	//	*ConfigSpec_PostgresqlConfig_10_1C
	//	*ConfigSpec_PostgresqlConfig_10
	//	*ConfigSpec_PostgresqlConfig_11
	//	*ConfigSpec_PostgresqlConfig_11_1C
	//	*ConfigSpec_PostgresqlConfig_12
	//	*ConfigSpec_PostgresqlConfig_12_1C
	//	*ConfigSpec_PostgresqlConfig_13
	//	*ConfigSpec_PostgresqlConfig_13_1C
	//	*ConfigSpec_PostgresqlConfig_14
	//	*ConfigSpec_PostgresqlConfig_14_1C
	//	*ConfigSpec_PostgresqlConfig_15
	//	*ConfigSpec_PostgresqlConfig_15_1C
	//	*ConfigSpec_PostgresqlConfig_16
	//	*ConfigSpec_PostgresqlConfig_16_1C
	//	*ConfigSpec_PostgresqlConfig_17
	//	*ConfigSpec_PostgresqlConfig_17_1C
	//	*ConfigSpec_PostgresqlConfig_18
	//	*ConfigSpec_PostgresqlConfig_18_1C
	PostgresqlConfig isConfigSpec_PostgresqlConfig `protobuf_oneof:"postgresql_config"`
	// Configuration of the connection pooler.
	PoolerConfig *ConnectionPoolerConfig `protobuf:"bytes,4,opt,name=pooler_config,json=poolerConfig,proto3" json:"pooler_config,omitempty"`
	// Resources allocated to PostgreSQL hosts.
	Resources *Resources `protobuf:"bytes,5,opt,name=resources,proto3" json:"resources,omitempty"`
	// Configuration setting which enables/disables autofailover in cluster.
	Autofailover *wrapperspb.BoolValue `protobuf:"bytes,6,opt,name=autofailover,proto3" json:"autofailover,omitempty"`
	// Time to start the daily backup, in the UTC timezone.
	BackupWindowStart *timeofday.TimeOfDay `protobuf:"bytes,8,opt,name=backup_window_start,json=backupWindowStart,proto3" json:"backup_window_start,omitempty"`
	// Retention policy of automated backups.
	BackupRetainPeriodDays *wrapperspb.Int64Value `protobuf:"bytes,17,opt,name=backup_retain_period_days,json=backupRetainPeriodDays,proto3" json:"backup_retain_period_days,omitempty"`
	// Access policy to DB
	Access *Access `protobuf:"bytes,9,opt,name=access,proto3" json:"access,omitempty"`
	// Configuration of the performance diagnostics service.
	PerformanceDiagnostics *PerformanceDiagnostics `protobuf:"bytes,12,opt,name=performance_diagnostics,json=performanceDiagnostics,proto3" json:"performance_diagnostics,omitempty"`
	// Disk size autoscaling
	DiskSizeAutoscaling *DiskSizeAutoscaling `protobuf:"bytes,23,opt,name=disk_size_autoscaling,json=diskSizeAutoscaling,proto3" json:"disk_size_autoscaling,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ConfigSpec) Reset() {
	*x = ConfigSpec{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSpec) ProtoMessage() {}

func (x *ConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSpec.ProtoReflect.Descriptor instead.
func (*ConfigSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{43}
}

func (x *ConfigSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ConfigSpec) GetPostgresqlConfig() isConfigSpec_PostgresqlConfig {
	if x != nil {
		return x.PostgresqlConfig
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_9_6() *config.PostgresqlConfig9_6 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_9_6); ok {
			return x.PostgresqlConfig_9_6
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_10_1C() *config.PostgresqlConfig10_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_10_1C); ok {
			return x.PostgresqlConfig_10_1C
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_10() *config.PostgresqlConfig10 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_10); ok {
			return x.PostgresqlConfig_10
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_11() *config.PostgresqlConfig11 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_11); ok {
			return x.PostgresqlConfig_11
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_11_1C() *config.PostgresqlConfig11_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_11_1C); ok {
			return x.PostgresqlConfig_11_1C
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_12() *config.PostgresqlConfig12 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_12); ok {
			return x.PostgresqlConfig_12
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_12_1C() *config.PostgresqlConfig12_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_12_1C); ok {
			return x.PostgresqlConfig_12_1C
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_13() *config.PostgresqlConfig13 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_13); ok {
			return x.PostgresqlConfig_13
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_13_1C() *config.PostgresqlConfig13_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_13_1C); ok {
			return x.PostgresqlConfig_13_1C
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_14() *config.PostgresqlConfig14 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_14); ok {
			return x.PostgresqlConfig_14
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_14_1C() *config.PostgresqlConfig14_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_14_1C); ok {
			return x.PostgresqlConfig_14_1C
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_15() *config.PostgresqlConfig15 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_15); ok {
			return x.PostgresqlConfig_15
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_15_1C() *config.PostgresqlConfig15_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_15_1C); ok {
			return x.PostgresqlConfig_15_1C
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_16() *config.PostgresqlConfig16 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_16); ok {
			return x.PostgresqlConfig_16
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_16_1C() *config.PostgresqlConfig16_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_16_1C); ok {
			return x.PostgresqlConfig_16_1C
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_17() *config.PostgresqlConfig17 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_17); ok {
			return x.PostgresqlConfig_17
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_17_1C() *config.PostgresqlConfig17_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_17_1C); ok {
			return x.PostgresqlConfig_17_1C
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_18() *config.PostgresqlConfig18 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_18); ok {
			return x.PostgresqlConfig_18
		}
	}
	return nil
}

func (x *ConfigSpec) GetPostgresqlConfig_18_1C() *config.PostgresqlConfig18_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigSpec_PostgresqlConfig_18_1C); ok {
			return x.PostgresqlConfig_18_1C
		}
	}
	return nil
}

func (x *ConfigSpec) GetPoolerConfig() *ConnectionPoolerConfig {
	if x != nil {
		return x.PoolerConfig
	}
	return nil
}

func (x *ConfigSpec) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ConfigSpec) GetAutofailover() *wrapperspb.BoolValue {
	if x != nil {
		return x.Autofailover
	}
	return nil
}

func (x *ConfigSpec) GetBackupWindowStart() *timeofday.TimeOfDay {
	if x != nil {
		return x.BackupWindowStart
	}
	return nil
}

func (x *ConfigSpec) GetBackupRetainPeriodDays() *wrapperspb.Int64Value {
	if x != nil {
		return x.BackupRetainPeriodDays
	}
	return nil
}

func (x *ConfigSpec) GetAccess() *Access {
	if x != nil {
		return x.Access
	}
	return nil
}

func (x *ConfigSpec) GetPerformanceDiagnostics() *PerformanceDiagnostics {
	if x != nil {
		return x.PerformanceDiagnostics
	}
	return nil
}

func (x *ConfigSpec) GetDiskSizeAutoscaling() *DiskSizeAutoscaling {
	if x != nil {
		return x.DiskSizeAutoscaling
	}
	return nil
}

type isConfigSpec_PostgresqlConfig interface {
	isConfigSpec_PostgresqlConfig()
}

type ConfigSpec_PostgresqlConfig_9_6 struct {
	// Configuration for a PostgreSQL 9.6 cluster.
	PostgresqlConfig_9_6 *config.PostgresqlConfig9_6 `protobuf:"bytes,2,opt,name=postgresql_config_9_6,json=postgresqlConfig_9_6,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_10_1C struct {
	// Configuration for a PostgreSQL 10 1C cluster.
	PostgresqlConfig_10_1C *config.PostgresqlConfig10_1C `protobuf:"bytes,10,opt,name=postgresql_config_10_1c,json=postgresqlConfig_10_1c,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_10 struct {
	// Configuration for a PostgreSQL 10 cluster.
	PostgresqlConfig_10 *config.PostgresqlConfig10 `protobuf:"bytes,3,opt,name=postgresql_config_10,json=postgresqlConfig_10,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_11 struct {
	// Configuration for a PostgreSQL 11 cluster.
	PostgresqlConfig_11 *config.PostgresqlConfig11 `protobuf:"bytes,7,opt,name=postgresql_config_11,json=postgresqlConfig_11,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_11_1C struct {
	// Configuration for a PostgreSQL 11 1C cluster.
	PostgresqlConfig_11_1C *config.PostgresqlConfig11_1C `protobuf:"bytes,13,opt,name=postgresql_config_11_1c,json=postgresqlConfig_11_1c,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_12 struct {
	// Configuration for a PostgreSQL 12 cluster.
	PostgresqlConfig_12 *config.PostgresqlConfig12 `protobuf:"bytes,11,opt,name=postgresql_config_12,json=postgresqlConfig_12,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_12_1C struct {
	// Configuration for a PostgreSQL 12 1C cluster.
	PostgresqlConfig_12_1C *config.PostgresqlConfig12_1C `protobuf:"bytes,14,opt,name=postgresql_config_12_1c,json=postgresqlConfig_12_1c,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_13 struct {
	// Configuration for a PostgreSQL 13 cluster.
	PostgresqlConfig_13 *config.PostgresqlConfig13 `protobuf:"bytes,15,opt,name=postgresql_config_13,json=postgresqlConfig_13,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_13_1C struct {
	// Configuration for a PostgreSQL 13 1C cluster.
	PostgresqlConfig_13_1C *config.PostgresqlConfig13_1C `protobuf:"bytes,18,opt,name=postgresql_config_13_1c,json=postgresqlConfig_13_1c,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_14 struct {
	// Configuration for a PostgreSQL 14 cluster.
	PostgresqlConfig_14 *config.PostgresqlConfig14 `protobuf:"bytes,16,opt,name=postgresql_config_14,json=postgresqlConfig_14,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_14_1C struct {
	// Configuration for a PostgreSQL 14 1C cluster.
	PostgresqlConfig_14_1C *config.PostgresqlConfig14_1C `protobuf:"bytes,19,opt,name=postgresql_config_14_1c,json=postgresqlConfig_14_1c,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_15 struct {
	// Configuration for a PostgreSQL 15 cluster.
	PostgresqlConfig_15 *config.PostgresqlConfig15 `protobuf:"bytes,21,opt,name=postgresql_config_15,json=postgresqlConfig_15,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_15_1C struct {
	// Configuration for a PostgreSQL 15 1C cluster.
	PostgresqlConfig_15_1C *config.PostgresqlConfig15_1C `protobuf:"bytes,22,opt,name=postgresql_config_15_1c,json=postgresqlConfig_15_1c,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_16 struct {
	// Configuration for a PostgreSQL 16 cluster.
	PostgresqlConfig_16 *config.PostgresqlConfig16 `protobuf:"bytes,24,opt,name=postgresql_config_16,json=postgresqlConfig_16,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_16_1C struct {
	// Configuration for a PostgreSQL 16 1C cluster.
	PostgresqlConfig_16_1C *config.PostgresqlConfig16_1C `protobuf:"bytes,25,opt,name=postgresql_config_16_1c,json=postgresqlConfig_16_1c,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_17 struct {
	// Configuration for a PostgreSQL 17 cluster.
	PostgresqlConfig_17 *config.PostgresqlConfig17 `protobuf:"bytes,27,opt,name=postgresql_config_17,json=postgresqlConfig_17,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_17_1C struct {
	// Configuration for a PostgreSQL 17 1C cluster.
	PostgresqlConfig_17_1C *config.PostgresqlConfig17_1C `protobuf:"bytes,28,opt,name=postgresql_config_17_1c,json=postgresqlConfig_17_1c,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_18 struct {
	// Configuration for a PostgreSQL 18 cluster.
	PostgresqlConfig_18 *config.PostgresqlConfig18 `protobuf:"bytes,29,opt,name=postgresql_config_18,json=postgresqlConfig_18,proto3,oneof"`
}

type ConfigSpec_PostgresqlConfig_18_1C struct {
	// Configuration for a PostgreSQL 18 1C cluster.
	PostgresqlConfig_18_1C *config.PostgresqlConfig18_1C `protobuf:"bytes,30,opt,name=postgresql_config_18_1c,json=postgresqlConfig_18_1c,proto3,oneof"`
}

func (*ConfigSpec_PostgresqlConfig_9_6) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_10_1C) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_10) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_11) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_11_1C) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_12) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_12_1C) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_13) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_13_1C) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_14) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_14_1C) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_15) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_15_1C) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_16) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_16_1C) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_17) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_17_1C) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_18) isConfigSpec_PostgresqlConfig() {}

func (*ConfigSpec_PostgresqlConfig_18_1C) isConfigSpec_PostgresqlConfig() {}

type ConfigHostSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to PostgresqlConfig:
	//
	//	*ConfigHostSpec_PostgresqlConfig_9_6
	//	*ConfigHostSpec_PostgresqlConfig_10_1C
	//	*ConfigHostSpec_PostgresqlConfig_10
	//	*ConfigHostSpec_PostgresqlConfig_11
	//	*ConfigHostSpec_PostgresqlConfig_11_1C
	//	*ConfigHostSpec_PostgresqlConfig_12
	//	*ConfigHostSpec_PostgresqlConfig_12_1C
	//	*ConfigHostSpec_PostgresqlConfig_13
	//	*ConfigHostSpec_PostgresqlConfig_13_1C
	//	*ConfigHostSpec_PostgresqlConfig_14
	//	*ConfigHostSpec_PostgresqlConfig_14_1C
	//	*ConfigHostSpec_PostgresqlConfig_15
	//	*ConfigHostSpec_PostgresqlConfig_15_1C
	//	*ConfigHostSpec_PostgresqlConfig_16
	//	*ConfigHostSpec_PostgresqlConfig_16_1C
	//	*ConfigHostSpec_PostgresqlConfig_17
	//	*ConfigHostSpec_PostgresqlConfig_17_1C
	//	*ConfigHostSpec_PostgresqlConfig_18
	//	*ConfigHostSpec_PostgresqlConfig_18_1C
	PostgresqlConfig isConfigHostSpec_PostgresqlConfig `protobuf_oneof:"postgresql_config"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ConfigHostSpec) Reset() {
	*x = ConfigHostSpec{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigHostSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigHostSpec) ProtoMessage() {}

func (x *ConfigHostSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigHostSpec.ProtoReflect.Descriptor instead.
func (*ConfigHostSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP(), []int{44}
}

func (x *ConfigHostSpec) GetPostgresqlConfig() isConfigHostSpec_PostgresqlConfig {
	if x != nil {
		return x.PostgresqlConfig
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_9_6() *config.PostgresqlHostConfig9_6 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_9_6); ok {
			return x.PostgresqlConfig_9_6
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_10_1C() *config.PostgresqlHostConfig10_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_10_1C); ok {
			return x.PostgresqlConfig_10_1C
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_10() *config.PostgresqlHostConfig10 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_10); ok {
			return x.PostgresqlConfig_10
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_11() *config.PostgresqlHostConfig11 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_11); ok {
			return x.PostgresqlConfig_11
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_11_1C() *config.PostgresqlHostConfig11_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_11_1C); ok {
			return x.PostgresqlConfig_11_1C
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_12() *config.PostgresqlHostConfig12 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_12); ok {
			return x.PostgresqlConfig_12
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_12_1C() *config.PostgresqlHostConfig12_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_12_1C); ok {
			return x.PostgresqlConfig_12_1C
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_13() *config.PostgresqlHostConfig13 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_13); ok {
			return x.PostgresqlConfig_13
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_13_1C() *config.PostgresqlHostConfig13_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_13_1C); ok {
			return x.PostgresqlConfig_13_1C
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_14() *config.PostgresqlHostConfig14 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_14); ok {
			return x.PostgresqlConfig_14
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_14_1C() *config.PostgresqlHostConfig14_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_14_1C); ok {
			return x.PostgresqlConfig_14_1C
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_15() *config.PostgresqlHostConfig15 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_15); ok {
			return x.PostgresqlConfig_15
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_15_1C() *config.PostgresqlHostConfig15_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_15_1C); ok {
			return x.PostgresqlConfig_15_1C
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_16() *config.PostgresqlHostConfig16 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_16); ok {
			return x.PostgresqlConfig_16
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_16_1C() *config.PostgresqlHostConfig16_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_16_1C); ok {
			return x.PostgresqlConfig_16_1C
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_17() *config.PostgresqlHostConfig17 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_17); ok {
			return x.PostgresqlConfig_17
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_17_1C() *config.PostgresqlHostConfig17_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_17_1C); ok {
			return x.PostgresqlConfig_17_1C
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_18() *config.PostgresqlHostConfig18 {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_18); ok {
			return x.PostgresqlConfig_18
		}
	}
	return nil
}

func (x *ConfigHostSpec) GetPostgresqlConfig_18_1C() *config.PostgresqlHostConfig18_1C {
	if x != nil {
		if x, ok := x.PostgresqlConfig.(*ConfigHostSpec_PostgresqlConfig_18_1C); ok {
			return x.PostgresqlConfig_18_1C
		}
	}
	return nil
}

type isConfigHostSpec_PostgresqlConfig interface {
	isConfigHostSpec_PostgresqlConfig()
}

type ConfigHostSpec_PostgresqlConfig_9_6 struct {
	// Configuration for a host with PostgreSQL 9.6 server deployed.
	PostgresqlConfig_9_6 *config.PostgresqlHostConfig9_6 `protobuf:"bytes,1,opt,name=postgresql_config_9_6,json=postgresqlHostConfig_9_6,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_10_1C struct {
	// Configuration for a host with PostgreSQL 10 1C server deployed.
	PostgresqlConfig_10_1C *config.PostgresqlHostConfig10_1C `protobuf:"bytes,4,opt,name=postgresql_config_10_1c,json=postgresqlHostConfig_10_1c,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_10 struct {
	// Configuration for a host with PostgreSQL 10 server deployed.
	PostgresqlConfig_10 *config.PostgresqlHostConfig10 `protobuf:"bytes,2,opt,name=postgresql_config_10,json=postgresqlHostConfig_10,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_11 struct {
	// Configuration for a host with PostgreSQL 11 server deployed.
	PostgresqlConfig_11 *config.PostgresqlHostConfig11 `protobuf:"bytes,3,opt,name=postgresql_config_11,json=postgresqlHostConfig_11,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_11_1C struct {
	// Configuration for a host with PostgreSQL 11 1C server deployed.
	PostgresqlConfig_11_1C *config.PostgresqlHostConfig11_1C `protobuf:"bytes,6,opt,name=postgresql_config_11_1c,json=postgresqlHostConfig_11_1c,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_12 struct {
	// Configuration for a host with PostgreSQL 12 server deployed.
	PostgresqlConfig_12 *config.PostgresqlHostConfig12 `protobuf:"bytes,5,opt,name=postgresql_config_12,json=postgresqlHostConfig_12,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_12_1C struct {
	// Configuration for a host with PostgreSQL 12 1C server deployed.
	PostgresqlConfig_12_1C *config.PostgresqlHostConfig12_1C `protobuf:"bytes,7,opt,name=postgresql_config_12_1c,json=postgresqlHostConfig_12_1c,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_13 struct {
	// Configuration for a host with PostgreSQL 13 server deployed.
	PostgresqlConfig_13 *config.PostgresqlHostConfig13 `protobuf:"bytes,8,opt,name=postgresql_config_13,json=postgresqlHostConfig_13,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_13_1C struct {
	// Configuration for a host with PostgreSQL 13 1C server deployed.
	PostgresqlConfig_13_1C *config.PostgresqlHostConfig13_1C `protobuf:"bytes,10,opt,name=postgresql_config_13_1c,json=postgresqlHostConfig_13_1c,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_14 struct {
	// Configuration for a host with PostgreSQL 14 server deployed.
	PostgresqlConfig_14 *config.PostgresqlHostConfig14 `protobuf:"bytes,9,opt,name=postgresql_config_14,json=postgresqlHostConfig_14,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_14_1C struct {
	// Configuration for a host with PostgreSQL 14 1C server deployed.
	PostgresqlConfig_14_1C *config.PostgresqlHostConfig14_1C `protobuf:"bytes,11,opt,name=postgresql_config_14_1c,json=postgresqlHostConfig_14_1c,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_15 struct {
	// Configuration for a host with PostgreSQL 15 server deployed.
	PostgresqlConfig_15 *config.PostgresqlHostConfig15 `protobuf:"bytes,12,opt,name=postgresql_config_15,json=postgresqlHostConfig_15,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_15_1C struct {
	// Configuration for a host with PostgreSQL 15 1C server deployed.
	PostgresqlConfig_15_1C *config.PostgresqlHostConfig15_1C `protobuf:"bytes,13,opt,name=postgresql_config_15_1c,json=postgresqlHostConfig_15_1c,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_16 struct {
	// Configuration for a host with PostgreSQL 16 server deployed.
	PostgresqlConfig_16 *config.PostgresqlHostConfig16 `protobuf:"bytes,14,opt,name=postgresql_config_16,json=postgresqlHostConfig_16,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_16_1C struct {
	// Configuration for a host with PostgreSQL 16 1C server deployed.
	PostgresqlConfig_16_1C *config.PostgresqlHostConfig16_1C `protobuf:"bytes,15,opt,name=postgresql_config_16_1c,json=postgresqlHostConfig_16_1c,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_17 struct {
	// Configuration for a host with PostgreSQL 17 1C server deployed.
	PostgresqlConfig_17 *config.PostgresqlHostConfig17 `protobuf:"bytes,16,opt,name=postgresql_config_17,json=postgresqlHostConfig_17,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_17_1C struct {
	// Configuration for a host with PostgreSQL 17 1C server deployed.
	PostgresqlConfig_17_1C *config.PostgresqlHostConfig17_1C `protobuf:"bytes,17,opt,name=postgresql_config_17_1c,json=postgresqlHostConfig_17_1c,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_18 struct {
	// Configuration for a host with PostgreSQL 18 1C server deployed.
	PostgresqlConfig_18 *config.PostgresqlHostConfig18 `protobuf:"bytes,18,opt,name=postgresql_config_18,json=postgresqlHostConfig_18,proto3,oneof"`
}

type ConfigHostSpec_PostgresqlConfig_18_1C struct {
	// Configuration for a host with PostgreSQL 18 1C server deployed.
	PostgresqlConfig_18_1C *config.PostgresqlHostConfig18_1C `protobuf:"bytes,19,opt,name=postgresql_config_18_1c,json=postgresqlHostConfig_18_1c,proto3,oneof"`
}

func (*ConfigHostSpec_PostgresqlConfig_9_6) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_10_1C) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_10) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_11) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_11_1C) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_12) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_12_1C) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_13) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_13_1C) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_14) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_14_1C) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_15) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_15_1C) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_16) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_16_1C) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_17) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_17_1C) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_18) isConfigHostSpec_PostgresqlConfig() {}

func (*ConfigHostSpec_PostgresqlConfig_18_1C) isConfigHostSpec_PostgresqlConfig() {}

var File_yandex_cloud_mdb_postgresql_v1_cluster_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDesc = "" +
	"\n" +
	"4yandex/cloud/mdb/postgresql/v1/cluster_service.proto\x12\x1eyandex.cloud.mdb.postgresql.v1\x1a\x1cgoogle/api/annotations.proto\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1bgoogle/type/timeofday.proto\x1a yandex/cloud/access/access.proto\x1a yandex/cloud/api/operation.proto\x1a4yandex/cloud/mdb/operationlog/v1/operation_log.proto\x1a+yandex/cloud/mdb/postgresql/v1/backup.proto\x1a,yandex/cloud/mdb/postgresql/v1/cluster.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host10.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host10_1c.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host11.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host11_1c.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host12.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host12_1c.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host13.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host13_1c.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host14.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host14_1c.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host15.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host15_1c.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host16.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host16_1c.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host17.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host17_1c.proto\x1a2yandex/cloud/mdb/postgresql/v1/config/host18.proto\x1a5yandex/cloud/mdb/postgresql/v1/config/host18_1c.proto\x1a3yandex/cloud/mdb/postgresql/v1/config/host9_6.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql10.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql10_1c.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql11.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql11_1c.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql12.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql12_1c.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql13.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql13_1c.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql14.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql14_1c.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql15.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql15_1c.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql16.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql16_1c.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql17.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql17_1c.proto\x1a8yandex/cloud/mdb/postgresql/v1/config/postgresql18.proto\x1a;yandex/cloud/mdb/postgresql/v1/config/postgresql18_1c.proto\x1a9yandex/cloud/mdb/postgresql/v1/config/postgresql9_6.proto\x1a-yandex/cloud/mdb/postgresql/v1/database.proto\x1a<yandex/cloud/mdb/postgresql/v1/backup_retention_policy.proto\x1a0yandex/cloud/mdb/postgresql/v1/maintenance.proto\x1a)yandex/cloud/mdb/postgresql/v1/user.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\"@\n" +
	"\x11GetClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\"\xb7\x01\n" +
	"\x13ListClustersRequest\x12)\n" +
	"\tfolder_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\"\x83\x01\n" +
	"\x14ListClustersResponse\x12C\n" +
	"\bclusters\x18\x01 \x03(\v2'.yandex.cloud.mdb.postgresql.v1.ClusterR\bclusters\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xc9\x01\n" +
	"\x19BackupRetentionPolicySpec\x12%\n" +
	"\vpolicy_name\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\n" +
	"policyName\x12;\n" +
	"\x04cron\x18\x02 \x01(\v2'.yandex.cloud.mdb.postgresql.v1.CronTabR\x04cron\x12&\n" +
	"\x0fretain_for_days\x18\x03 \x01(\x03R\rretainForDays\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\"\xef\t\n" +
	"\x14CreateClusterRequest\x12)\n" +
	"\tfolder_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x122\n" +
	"\x04name\x18\x02 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\x04name\x12+\n" +
	"\vdescription\x18\x03 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x95\x01\n" +
	"\x06labels\x18\x04 \x03(\v2@.yandex.cloud.mdb.postgresql.v1.CreateClusterRequest.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x04<=63R\x06labels\x12[\n" +
	"\venvironment\x18\x05 \x01(\x0e23.yandex.cloud.mdb.postgresql.v1.Cluster.EnvironmentB\x04\xe8\xc71\x01R\venvironment\x12Q\n" +
	"\vconfig_spec\x18\x06 \x01(\v2*.yandex.cloud.mdb.postgresql.v1.ConfigSpecB\x04\xe8\xc71\x01R\n" +
	"configSpec\x12Y\n" +
	"\x0edatabase_specs\x18\a \x03(\v2,.yandex.cloud.mdb.postgresql.v1.DatabaseSpecB\x04\xe8\xc71\x01R\rdatabaseSpecs\x12M\n" +
	"\n" +
	"user_specs\x18\b \x03(\v2(.yandex.cloud.mdb.postgresql.v1.UserSpecB\x04\xe8\xc71\x01R\tuserSpecs\x12M\n" +
	"\n" +
	"host_specs\x18\t \x03(\v2(.yandex.cloud.mdb.postgresql.v1.HostSpecB\x04\xe8\xc71\x01R\thostSpecs\x12+\n" +
	"\n" +
	"network_id\x18\n" +
	" \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tnetworkId\x12,\n" +
	"\x12security_group_ids\x18\v \x03(\tR\x10securityGroupIds\x12/\n" +
	"\x13deletion_protection\x18\f \x01(\bR\x12deletionProtection\x12$\n" +
	"\x0ehost_group_ids\x18\r \x03(\tR\fhostGroupIds\x12`\n" +
	"\x12maintenance_window\x18\x0e \x01(\v21.yandex.cloud.mdb.postgresql.v1.MaintenanceWindowR\x11maintenanceWindow\x12h\n" +
	"\x12retention_policies\x18\x0f \x03(\v29.yandex.cloud.mdb.postgresql.v1.BackupRetentionPolicySpecR\x11retentionPolicies\x12Q\n" +
	"\x16disk_encryption_key_id\x18\x10 \x01(\v2\x1c.google.protobuf.StringValueR\x13diskEncryptionKeyId\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8b\x01\n" +
	"\x15CreateClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12S\n" +
	"\roperation_log\x18\x02 \x01(\v2..yandex.cloud.mdb.operationlog.v1.OperationLogR\foperationLog\"\xed\x05\n" +
	"\x14UpdateClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12+\n" +
	"\vdescription\x18\x03 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x95\x01\n" +
	"\x06labels\x18\x04 \x03(\v2@.yandex.cloud.mdb.postgresql.v1.UpdateClusterRequest.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x04<=63R\x06labels\x12K\n" +
	"\vconfig_spec\x18\x05 \x01(\v2*.yandex.cloud.mdb.postgresql.v1.ConfigSpecR\n" +
	"configSpec\x12.\n" +
	"\x04name\x18\x06 \x01(\tB\x1a\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\x04name\x12`\n" +
	"\x12maintenance_window\x18\a \x01(\v21.yandex.cloud.mdb.postgresql.v1.MaintenanceWindowR\x11maintenanceWindow\x12,\n" +
	"\x12security_group_ids\x18\b \x03(\tR\x10securityGroupIds\x12/\n" +
	"\x13deletion_protection\x18\t \x01(\bR\x12deletionProtection\x12'\n" +
	"\n" +
	"network_id\x18\v \x01(\tB\b\x8a\xc81\x04<=50R\tnetworkId\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01J\x04\b\n" +
	"\x10\v\"\x8b\x01\n" +
	"\x15UpdateClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12S\n" +
	"\roperation_log\x18\x02 \x01(\v2..yandex.cloud.mdb.operationlog.v1.OperationLogR\foperationLog\"C\n" +
	"\x14DeleteClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\"6\n" +
	"\x15DeleteClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"B\n" +
	"\x13StartClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\"5\n" +
	"\x14StartClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"A\n" +
	"\x12StopClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\"4\n" +
	"\x13StopClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\x83\x01\n" +
	"\x12MoveClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12@\n" +
	"\x15destination_folder_id\x18\x02 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x13destinationFolderId\"\x92\x01\n" +
	"\x13MoveClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12(\n" +
	"\x10source_folder_id\x18\x02 \x01(\tR\x0esourceFolderId\x122\n" +
	"\x15destination_folder_id\x18\x03 \x01(\tR\x13destinationFolderId\"C\n" +
	"\x14BackupClusterRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\"S\n" +
	"\x15BackupClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1b\n" +
	"\tbackup_id\x18\x02 \x01(\tR\bbackupId\"\xd5\b\n" +
	"\x15RestoreClusterRequest\x12!\n" +
	"\tbackup_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bbackupId\x12.\n" +
	"\x04time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x12%\n" +
	"\x0etime_inclusive\x18\x03 \x01(\bR\rtimeInclusive\x122\n" +
	"\x04name\x18\x04 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\x04name\x12+\n" +
	"\vdescription\x18\x05 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x96\x01\n" +
	"\x06labels\x18\x06 \x03(\v2A.yandex.cloud.mdb.postgresql.v1.RestoreClusterRequest.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x04<=63R\x06labels\x12[\n" +
	"\venvironment\x18\a \x01(\x0e23.yandex.cloud.mdb.postgresql.v1.Cluster.EnvironmentB\x04\xe8\xc71\x01R\venvironment\x12Q\n" +
	"\vconfig_spec\x18\b \x01(\v2*.yandex.cloud.mdb.postgresql.v1.ConfigSpecB\x04\xe8\xc71\x01R\n" +
	"configSpec\x12O\n" +
	"\n" +
	"host_specs\x18\t \x03(\v2(.yandex.cloud.mdb.postgresql.v1.HostSpecB\x06\x82\xc81\x02>0R\thostSpecs\x12+\n" +
	"\n" +
	"network_id\x18\n" +
	" \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tnetworkId\x12%\n" +
	"\tfolder_id\x18\v \x01(\tB\b\x8a\xc81\x04<=50R\bfolderId\x12,\n" +
	"\x12security_group_ids\x18\f \x03(\tR\x10securityGroupIds\x12/\n" +
	"\x13deletion_protection\x18\r \x01(\bR\x12deletionProtection\x12$\n" +
	"\x0ehost_group_ids\x18\x0e \x03(\tR\fhostGroupIds\x12`\n" +
	"\x12maintenance_window\x18\x0f \x01(\v21.yandex.cloud.mdb.postgresql.v1.MaintenanceWindowR\x11maintenanceWindow\x12Q\n" +
	"\x16disk_encryption_key_id\x18\x10 \x01(\v2\x1c.google.protobuf.StringValueR\x13diskEncryptionKeyId\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"T\n" +
	"\x16RestoreClusterMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1b\n" +
	"\tbackup_id\x18\x02 \x01(\tR\bbackupId\"r\n" +
	"\x1bStartClusterFailoverRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12&\n" +
	"\thost_name\x18\x02 \x01(\tB\t\x8a\xc81\x05<=253R\bhostName\"=\n" +
	"\x1cStartClusterFailoverMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\xf8\x02\n" +
	"\x1cRescheduleMaintenanceRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12z\n" +
	"\x0freschedule_type\x18\x02 \x01(\x0e2K.yandex.cloud.mdb.postgresql.v1.RescheduleMaintenanceRequest.RescheduleTypeB\x04\xe8\xc71\x01R\x0erescheduleType\x12?\n" +
	"\rdelayed_until\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\fdelayedUntil\"n\n" +
	"\x0eRescheduleType\x12\x1f\n" +
	"\x1bRESCHEDULE_TYPE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tIMMEDIATE\x10\x01\x12\x19\n" +
	"\x15NEXT_AVAILABLE_WINDOW\x10\x02\x12\x11\n" +
	"\rSPECIFIC_TIME\x10\x03\"\x85\x01\n" +
	"\x1dRescheduleMaintenanceMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12?\n" +
	"\rdelayed_until\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\fdelayedUntilJ\x04\b\x02\x10\x04\"\xd3\x01\n" +
	"\tLogRecord\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12P\n" +
	"\amessage\x18\x02 \x03(\v26.yandex.cloud.mdb.postgresql.v1.LogRecord.MessageEntryR\amessage\x1a:\n" +
	"\fMessageEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x90\x04\n" +
	"\x16ListClusterLogsRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12#\n" +
	"\rcolumn_filter\x18\x02 \x03(\tR\fcolumnFilter\x12e\n" +
	"\fservice_type\x18\x03 \x01(\x0e2B.yandex.cloud.mdb.postgresql.v1.ListClusterLogsRequest.ServiceTypeR\vserviceType\x127\n" +
	"\tfrom_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\bfromTime\x123\n" +
	"\ato_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x06toTime\x12'\n" +
	"\tpage_size\x18\x06 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\a \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x123\n" +
	"\x16always_next_page_token\x18\b \x01(\bR\x13alwaysNextPageToken\"G\n" +
	"\vServiceType\x12\x1c\n" +
	"\x18SERVICE_TYPE_UNSPECIFIED\x10\x00\x12\x0e\n" +
	"\n" +
	"POSTGRESQL\x10\x01\x12\n" +
	"\n" +
	"\x06POOLER\x10\x02\"\x80\x01\n" +
	"\x17ListClusterLogsResponse\x12=\n" +
	"\x04logs\x18\x01 \x03(\v2).yandex.cloud.mdb.postgresql.v1.LogRecordR\x04logs\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x80\x01\n" +
	"\x0fStreamLogRecord\x12A\n" +
	"\x06record\x18\x01 \x01(\v2).yandex.cloud.mdb.postgresql.v1.LogRecordR\x06record\x12*\n" +
	"\x11next_record_token\x18\x02 \x01(\tR\x0fnextRecordToken\"\xde\x03\n" +
	"\x18StreamClusterLogsRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12#\n" +
	"\rcolumn_filter\x18\x02 \x03(\tR\fcolumnFilter\x12g\n" +
	"\fservice_type\x18\x03 \x01(\x0e2D.yandex.cloud.mdb.postgresql.v1.StreamClusterLogsRequest.ServiceTypeR\vserviceType\x127\n" +
	"\tfrom_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\bfromTime\x123\n" +
	"\ato_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x06toTime\x12,\n" +
	"\frecord_token\x18\x06 \x01(\tB\t\x8a\xc81\x05<=100R\vrecordToken\x12\"\n" +
	"\x06filter\x18\a \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\"G\n" +
	"\vServiceType\x12\x1c\n" +
	"\x18SERVICE_TYPE_UNSPECIFIED\x10\x00\x12\x0e\n" +
	"\n" +
	"POSTGRESQL\x10\x01\x12\n" +
	"\n" +
	"\x06POOLER\x10\x02\"\x9e\x01\n" +
	"\x1cListClusterOperationsRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\"\x8a\x01\n" +
	"\x1dListClusterOperationsResponse\x12A\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2!.yandex.cloud.operation.OperationR\n" +
	"operations\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x9b\x01\n" +
	"\x19ListClusterBackupsRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\"\x86\x01\n" +
	"\x1aListClusterBackupsResponse\x12@\n" +
	"\abackups\x18\x01 \x03(\v2&.yandex.cloud.mdb.postgresql.v1.BackupR\abackups\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x99\x01\n" +
	"\x17ListClusterHostsRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\"~\n" +
	"\x18ListClusterHostsResponse\x12:\n" +
	"\x05hosts\x18\x01 \x03(\v2$.yandex.cloud.mdb.postgresql.v1.HostR\x05hosts\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x96\x01\n" +
	"\x16AddClusterHostsRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12O\n" +
	"\n" +
	"host_specs\x18\x02 \x03(\v2(.yandex.cloud.mdb.postgresql.v1.HostSpecB\x06\x82\xc81\x02>0R\thostSpecs\"W\n" +
	"\x17AddClusterHostsMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1d\n" +
	"\n" +
	"host_names\x18\x02 \x03(\tR\thostNames\"x\n" +
	"\x19DeleteClusterHostsRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12.\n" +
	"\n" +
	"host_names\x18\x02 \x03(\tB\x0f\x82\xc81\x02>0\x8a\xc81\x05<=253R\thostNames\"Z\n" +
	"\x1aDeleteClusterHostsMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1d\n" +
	"\n" +
	"host_names\x18\x02 \x03(\tR\thostNames\"\xac\x01\n" +
	"\x19UpdateClusterHostsRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12b\n" +
	"\x11update_host_specs\x18\x02 \x03(\v2..yandex.cloud.mdb.postgresql.v1.UpdateHostSpecB\x06\x82\xc81\x02>0R\x0fupdateHostSpecs\"Z\n" +
	"\x1aUpdateClusterHostsMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1d\n" +
	"\n" +
	"host_names\x18\x02 \x03(\tR\thostNames\"\xd3\x02\n" +
	"\x0eUpdateHostSpec\x12!\n" +
	"\thost_name\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bhostName\x12-\n" +
	"\x12replication_source\x18\x02 \x01(\tR\x11replicationSource\x127\n" +
	"\bpriority\x18\x03 \x01(\v2\x1b.google.protobuf.Int64ValueR\bpriority\x12O\n" +
	"\vconfig_spec\x18\x04 \x01(\v2..yandex.cloud.mdb.postgresql.v1.ConfigHostSpecR\n" +
	"configSpec\x12;\n" +
	"\vupdate_mask\x18\x05 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12(\n" +
	"\x10assign_public_ip\x18\x06 \x01(\bR\x0eassignPublicIp\"\xb7\x02\n" +
	"\bHostSpec\x12!\n" +
	"\azone_id\x18\x01 \x01(\tB\b\x8a\xc81\x04<=50R\x06zoneId\x12%\n" +
	"\tsubnet_id\x18\x02 \x01(\tB\b\x8a\xc81\x04<=50R\bsubnetId\x12(\n" +
	"\x10assign_public_ip\x18\x03 \x01(\bR\x0eassignPublicIp\x12-\n" +
	"\x12replication_source\x18\x04 \x01(\tR\x11replicationSource\x127\n" +
	"\bpriority\x18\x05 \x01(\v2\x1b.google.protobuf.Int64ValueR\bpriority\x12O\n" +
	"\vconfig_spec\x18\x06 \x01(\v2..yandex.cloud.mdb.postgresql.v1.ConfigHostSpecR\n" +
	"configSpec\"\x95\x17\n" +
	"\n" +
	"ConfigSpec\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12q\n" +
	"\x15postgresql_config_9_6\x18\x02 \x01(\v2:.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig9_6H\x00R\x14postgresqlConfig_9_6\x12w\n" +
	"\x17postgresql_config_10_1c\x18\n" +
	" \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1CH\x00R\x16postgresqlConfig_10_1c\x12n\n" +
	"\x14postgresql_config_10\x18\x03 \x01(\v29.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10H\x00R\x13postgresqlConfig_10\x12n\n" +
	"\x14postgresql_config_11\x18\a \x01(\v29.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11H\x00R\x13postgresqlConfig_11\x12w\n" +
	"\x17postgresql_config_11_1c\x18\r \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_1CH\x00R\x16postgresqlConfig_11_1c\x12n\n" +
	"\x14postgresql_config_12\x18\v \x01(\v29.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12H\x00R\x13postgresqlConfig_12\x12w\n" +
	"\x17postgresql_config_12_1c\x18\x0e \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_1CH\x00R\x16postgresqlConfig_12_1c\x12n\n" +
	"\x14postgresql_config_13\x18\x0f \x01(\v29.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig13H\x00R\x13postgresqlConfig_13\x12w\n" +
	"\x17postgresql_config_13_1c\x18\x12 \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig13_1CH\x00R\x16postgresqlConfig_13_1c\x12n\n" +
	"\x14postgresql_config_14\x18\x10 \x01(\v29.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig14H\x00R\x13postgresqlConfig_14\x12w\n" +
	"\x17postgresql_config_14_1c\x18\x13 \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig14_1CH\x00R\x16postgresqlConfig_14_1c\x12n\n" +
	"\x14postgresql_config_15\x18\x15 \x01(\v29.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig15H\x00R\x13postgresqlConfig_15\x12w\n" +
	"\x17postgresql_config_15_1c\x18\x16 \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig15_1CH\x00R\x16postgresqlConfig_15_1c\x12n\n" +
	"\x14postgresql_config_16\x18\x18 \x01(\v29.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig16H\x00R\x13postgresqlConfig_16\x12w\n" +
	"\x17postgresql_config_16_1c\x18\x19 \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig16_1CH\x00R\x16postgresqlConfig_16_1c\x12n\n" +
	"\x14postgresql_config_17\x18\x1b \x01(\v29.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig17H\x00R\x13postgresqlConfig_17\x12w\n" +
	"\x17postgresql_config_17_1c\x18\x1c \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig17_1CH\x00R\x16postgresqlConfig_17_1c\x12n\n" +
	"\x14postgresql_config_18\x18\x1d \x01(\v29.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig18H\x00R\x13postgresqlConfig_18\x12w\n" +
	"\x17postgresql_config_18_1c\x18\x1e \x01(\v2<.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig18_1CH\x00R\x16postgresqlConfig_18_1c\x12[\n" +
	"\rpooler_config\x18\x04 \x01(\v26.yandex.cloud.mdb.postgresql.v1.ConnectionPoolerConfigR\fpoolerConfig\x12G\n" +
	"\tresources\x18\x05 \x01(\v2).yandex.cloud.mdb.postgresql.v1.ResourcesR\tresources\x12>\n" +
	"\fautofailover\x18\x06 \x01(\v2\x1a.google.protobuf.BoolValueR\fautofailover\x12F\n" +
	"\x13backup_window_start\x18\b \x01(\v2\x16.google.type.TimeOfDayR\x11backupWindowStart\x12`\n" +
	"\x19backup_retain_period_days\x18\x11 \x01(\v2\x1b.google.protobuf.Int64ValueB\b\xfa\xc71\x047-60R\x16backupRetainPeriodDays\x12>\n" +
	"\x06access\x18\t \x01(\v2&.yandex.cloud.mdb.postgresql.v1.AccessR\x06access\x12o\n" +
	"\x17performance_diagnostics\x18\f \x01(\v26.yandex.cloud.mdb.postgresql.v1.PerformanceDiagnosticsR\x16performanceDiagnostics\x12g\n" +
	"\x15disk_size_autoscaling\x18\x17 \x01(\v23.yandex.cloud.mdb.postgresql.v1.DiskSizeAutoscalingR\x13diskSizeAutoscalingB\x13\n" +
	"\x11postgresql_configJ\x04\b\x14\x10\x15J\x04\b\x1a\x10\x1b\"\xe1\x12\n" +
	"\x0eConfigHostSpec\x12y\n" +
	"\x15postgresql_config_9_6\x18\x01 \x01(\v2>.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig9_6H\x00R\x18postgresqlHostConfig_9_6\x12\x7f\n" +
	"\x17postgresql_config_10_1c\x18\x04 \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig10_1CH\x00R\x1apostgresqlHostConfig_10_1c\x12v\n" +
	"\x14postgresql_config_10\x18\x02 \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig10H\x00R\x17postgresqlHostConfig_10\x12v\n" +
	"\x14postgresql_config_11\x18\x03 \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11H\x00R\x17postgresqlHostConfig_11\x12\x7f\n" +
	"\x17postgresql_config_11_1c\x18\x06 \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_1CH\x00R\x1apostgresqlHostConfig_11_1c\x12v\n" +
	"\x14postgresql_config_12\x18\x05 \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12H\x00R\x17postgresqlHostConfig_12\x12\x7f\n" +
	"\x17postgresql_config_12_1c\x18\a \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_1CH\x00R\x1apostgresqlHostConfig_12_1c\x12v\n" +
	"\x14postgresql_config_13\x18\b \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig13H\x00R\x17postgresqlHostConfig_13\x12\x7f\n" +
	"\x17postgresql_config_13_1c\x18\n" +
	" \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig13_1CH\x00R\x1apostgresqlHostConfig_13_1c\x12v\n" +
	"\x14postgresql_config_14\x18\t \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig14H\x00R\x17postgresqlHostConfig_14\x12\x7f\n" +
	"\x17postgresql_config_14_1c\x18\v \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig14_1CH\x00R\x1apostgresqlHostConfig_14_1c\x12v\n" +
	"\x14postgresql_config_15\x18\f \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig15H\x00R\x17postgresqlHostConfig_15\x12\x7f\n" +
	"\x17postgresql_config_15_1c\x18\r \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig15_1CH\x00R\x1apostgresqlHostConfig_15_1c\x12v\n" +
	"\x14postgresql_config_16\x18\x0e \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig16H\x00R\x17postgresqlHostConfig_16\x12\x7f\n" +
	"\x17postgresql_config_16_1c\x18\x0f \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig16_1CH\x00R\x1apostgresqlHostConfig_16_1c\x12v\n" +
	"\x14postgresql_config_17\x18\x10 \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig17H\x00R\x17postgresqlHostConfig_17\x12\x7f\n" +
	"\x17postgresql_config_17_1c\x18\x11 \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig17_1CH\x00R\x1apostgresqlHostConfig_17_1c\x12v\n" +
	"\x14postgresql_config_18\x18\x12 \x01(\v2=.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig18H\x00R\x17postgresqlHostConfig_18\x12\x7f\n" +
	"\x17postgresql_config_18_1c\x18\x13 \x01(\v2@.yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig18_1CH\x00R\x1apostgresqlHostConfig_18_1cB\x13\n" +
	"\x11postgresql_config2\x87%\n" +
	"\x0eClusterService\x12\x97\x01\n" +
	"\x03Get\x121.yandex.cloud.mdb.postgresql.v1.GetClusterRequest\x1a'.yandex.cloud.mdb.postgresql.v1.Cluster\"4\x82\xd3\xe4\x93\x02.\x12,/managed-postgresql/v1/clusters/{cluster_id}\x12\x9a\x01\n" +
	"\x04List\x123.yandex.cloud.mdb.postgresql.v1.ListClustersRequest\x1a4.yandex.cloud.mdb.postgresql.v1.ListClustersResponse\"'\x82\xd3\xe4\x93\x02!\x12\x1f/managed-postgresql/v1/clusters\x12\xb1\x01\n" +
	"\x06Create\x124.yandex.cloud.mdb.postgresql.v1.CreateClusterRequest\x1a!.yandex.cloud.operation.Operation\"N\xb2\xd2* \n" +
	"\x15CreateClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/managed-postgresql/v1/clusters\x12\xbe\x01\n" +
	"\x06Update\x124.yandex.cloud.mdb.postgresql.v1.UpdateClusterRequest\x1a!.yandex.cloud.operation.Operation\"[\xb2\xd2* \n" +
	"\x15UpdateClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x021:\x01*2,/managed-postgresql/v1/clusters/{cluster_id}\x12\xc9\x01\n" +
	"\x06Delete\x124.yandex.cloud.mdb.postgresql.v1.DeleteClusterRequest\x1a!.yandex.cloud.operation.Operation\"f\xb2\xd2*.\n" +
	"\x15DeleteClusterMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02.*,/managed-postgresql/v1/clusters/{cluster_id}\x12\xbe\x01\n" +
	"\x05Start\x123.yandex.cloud.mdb.postgresql.v1.StartClusterRequest\x1a!.yandex.cloud.operation.Operation\"]\xb2\xd2*\x1f\n" +
	"\x14StartClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x024\"2/managed-postgresql/v1/clusters/{cluster_id}:start\x12\xba\x01\n" +
	"\x04Stop\x122.yandex.cloud.mdb.postgresql.v1.StopClusterRequest\x1a!.yandex.cloud.operation.Operation\"[\xb2\xd2*\x1e\n" +
	"\x13StopClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x023\"1/managed-postgresql/v1/clusters/{cluster_id}:stop\x12\xbd\x01\n" +
	"\x04Move\x122.yandex.cloud.mdb.postgresql.v1.MoveClusterRequest\x1a!.yandex.cloud.operation.Operation\"^\xb2\xd2*\x1e\n" +
	"\x13MoveClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x026:\x01*\"1/managed-postgresql/v1/clusters/{cluster_id}:move\x12\xc2\x01\n" +
	"\x06Backup\x124.yandex.cloud.mdb.postgresql.v1.BackupClusterRequest\x1a!.yandex.cloud.operation.Operation\"_\xb2\xd2* \n" +
	"\x15BackupClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x025\"3/managed-postgresql/v1/clusters/{cluster_id}:backup\x12\xbc\x01\n" +
	"\aRestore\x125.yandex.cloud.mdb.postgresql.v1.RestoreClusterRequest\x1a!.yandex.cloud.operation.Operation\"W\xb2\xd2*!\n" +
	"\x16RestoreClusterMetadata\x12\aCluster\x82\xd3\xe4\x93\x02,:\x01*\"'/managed-postgresql/v1/clusters:restore\x12\xf3\x01\n" +
	"\x15RescheduleMaintenance\x12<.yandex.cloud.mdb.postgresql.v1.RescheduleMaintenanceRequest\x1a!.yandex.cloud.operation.Operation\"y\xb2\xd2*(\n" +
	"\x1dRescheduleMaintenanceMetadata\x12\aCluster\x82\xd3\xe4\x93\x02G:\x01*\"B/managed-postgresql/v1/clusters/{cluster_id}:rescheduleMaintenance\x12\xe1\x01\n" +
	"\rStartFailover\x12;.yandex.cloud.mdb.postgresql.v1.StartClusterFailoverRequest\x1a!.yandex.cloud.operation.Operation\"p\xb2\xd2*'\n" +
	"\x1cStartClusterFailoverMetadata\x12\aCluster\x82\xd3\xe4\x93\x02?:\x01*\":/managed-postgresql/v1/clusters/{cluster_id}:startFailover\x12\xb6\x01\n" +
	"\bListLogs\x126.yandex.cloud.mdb.postgresql.v1.ListClusterLogsRequest\x1a7.yandex.cloud.mdb.postgresql.v1.ListClusterLogsResponse\"9\x82\xd3\xe4\x93\x023\x121/managed-postgresql/v1/clusters/{cluster_id}:logs\x12\xbb\x01\n" +
	"\n" +
	"StreamLogs\x128.yandex.cloud.mdb.postgresql.v1.StreamClusterLogsRequest\x1a/.yandex.cloud.mdb.postgresql.v1.StreamLogRecord\"@\x82\xd3\xe4\x93\x02:\x128/managed-postgresql/v1/clusters/{cluster_id}:stream_logs0\x01\x12\xce\x01\n" +
	"\x0eListOperations\x12<.yandex.cloud.mdb.postgresql.v1.ListClusterOperationsRequest\x1a=.yandex.cloud.mdb.postgresql.v1.ListClusterOperationsResponse\"?\x82\xd3\xe4\x93\x029\x127/managed-postgresql/v1/clusters/{cluster_id}/operations\x12\xc2\x01\n" +
	"\vListBackups\x129.yandex.cloud.mdb.postgresql.v1.ListClusterBackupsRequest\x1a:.yandex.cloud.mdb.postgresql.v1.ListClusterBackupsResponse\"<\x82\xd3\xe4\x93\x026\x124/managed-postgresql/v1/clusters/{cluster_id}/backups\x12\xba\x01\n" +
	"\tListHosts\x127.yandex.cloud.mdb.postgresql.v1.ListClusterHostsRequest\x1a8.yandex.cloud.mdb.postgresql.v1.ListClusterHostsResponse\":\x82\xd3\xe4\x93\x024\x122/managed-postgresql/v1/clusters/{cluster_id}/hosts\x12\xe4\x01\n" +
	"\bAddHosts\x126.yandex.cloud.mdb.postgresql.v1.AddClusterHostsRequest\x1a!.yandex.cloud.operation.Operation\"}\xb2\xd2*0\n" +
	"\x17AddClusterHostsMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02C:\x01*\">/managed-postgresql/v1/clusters/{cluster_id}/hosts:batchCreate\x12\xee\x01\n" +
	"\vDeleteHosts\x129.yandex.cloud.mdb.postgresql.v1.DeleteClusterHostsRequest\x1a!.yandex.cloud.operation.Operation\"\x80\x01\xb2\xd2*3\n" +
	"\x1aDeleteClusterHostsMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02C:\x01*\">/managed-postgresql/v1/clusters/{cluster_id}/hosts:batchDelete\x12\xee\x01\n" +
	"\vUpdateHosts\x129.yandex.cloud.mdb.postgresql.v1.UpdateClusterHostsRequest\x1a!.yandex.cloud.operation.Operation\"\x80\x01\xb2\xd2*3\n" +
	"\x1aUpdateClusterHostsMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02C:\x01*\">/managed-postgresql/v1/clusters/{cluster_id}/hosts:batchUpdate\x12\xbf\x01\n" +
	"\x12ListAccessBindings\x12..yandex.cloud.access.ListAccessBindingsRequest\x1a/.yandex.cloud.access.ListAccessBindingsResponse\"H\x82\xd3\xe4\x93\x02B\x12@/managed-postgresql/v1/clusters/{resource_id}:listAccessBindings\x12\xfe\x01\n" +
	"\x11SetAccessBindings\x12-.yandex.cloud.access.SetAccessBindingsRequest\x1a!.yandex.cloud.operation.Operation\"\x96\x01\xb2\xd2*H\n" +
	" access.SetAccessBindingsMetadata\x12$access.AccessBindingsOperationResult\x82\xd3\xe4\x93\x02D:\x01*\"?/managed-postgresql/v1/clusters/{resource_id}:setAccessBindings\x12\x8a\x02\n" +
	"\x14UpdateAccessBindings\x120.yandex.cloud.access.UpdateAccessBindingsRequest\x1a!.yandex.cloud.operation.Operation\"\x9c\x01\xb2\xd2*K\n" +
	"#access.UpdateAccessBindingsMetadata\x12$access.AccessBindingsOperationResult\x82\xd3\xe4\x93\x02G:\x01*2B/managed-postgresql/v1/clusters/{resource_id}:updateAccessBindingsBs\n" +
	"\"yandex.cloud.api.mdb.postgresql.v1ZMgithub.com/yandex-cloud/go-genproto/yandex/cloud/mdb/postgresql/v1;postgresqlb\x06proto3"

var (
	file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescData []byte
)

func file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDesc), len(file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDesc)))
	})
	return file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDescData
}

var file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_goTypes = []any{
	(RescheduleMaintenanceRequest_RescheduleType)(0), // 0: yandex.cloud.mdb.postgresql.v1.RescheduleMaintenanceRequest.RescheduleType
	(ListClusterLogsRequest_ServiceType)(0),          // 1: yandex.cloud.mdb.postgresql.v1.ListClusterLogsRequest.ServiceType
	(StreamClusterLogsRequest_ServiceType)(0),        // 2: yandex.cloud.mdb.postgresql.v1.StreamClusterLogsRequest.ServiceType
	(*GetClusterRequest)(nil),                        // 3: yandex.cloud.mdb.postgresql.v1.GetClusterRequest
	(*ListClustersRequest)(nil),                      // 4: yandex.cloud.mdb.postgresql.v1.ListClustersRequest
	(*ListClustersResponse)(nil),                     // 5: yandex.cloud.mdb.postgresql.v1.ListClustersResponse
	(*BackupRetentionPolicySpec)(nil),                // 6: yandex.cloud.mdb.postgresql.v1.BackupRetentionPolicySpec
	(*CreateClusterRequest)(nil),                     // 7: yandex.cloud.mdb.postgresql.v1.CreateClusterRequest
	(*CreateClusterMetadata)(nil),                    // 8: yandex.cloud.mdb.postgresql.v1.CreateClusterMetadata
	(*UpdateClusterRequest)(nil),                     // 9: yandex.cloud.mdb.postgresql.v1.UpdateClusterRequest
	(*UpdateClusterMetadata)(nil),                    // 10: yandex.cloud.mdb.postgresql.v1.UpdateClusterMetadata
	(*DeleteClusterRequest)(nil),                     // 11: yandex.cloud.mdb.postgresql.v1.DeleteClusterRequest
	(*DeleteClusterMetadata)(nil),                    // 12: yandex.cloud.mdb.postgresql.v1.DeleteClusterMetadata
	(*StartClusterRequest)(nil),                      // 13: yandex.cloud.mdb.postgresql.v1.StartClusterRequest
	(*StartClusterMetadata)(nil),                     // 14: yandex.cloud.mdb.postgresql.v1.StartClusterMetadata
	(*StopClusterRequest)(nil),                       // 15: yandex.cloud.mdb.postgresql.v1.StopClusterRequest
	(*StopClusterMetadata)(nil),                      // 16: yandex.cloud.mdb.postgresql.v1.StopClusterMetadata
	(*MoveClusterRequest)(nil),                       // 17: yandex.cloud.mdb.postgresql.v1.MoveClusterRequest
	(*MoveClusterMetadata)(nil),                      // 18: yandex.cloud.mdb.postgresql.v1.MoveClusterMetadata
	(*BackupClusterRequest)(nil),                     // 19: yandex.cloud.mdb.postgresql.v1.BackupClusterRequest
	(*BackupClusterMetadata)(nil),                    // 20: yandex.cloud.mdb.postgresql.v1.BackupClusterMetadata
	(*RestoreClusterRequest)(nil),                    // 21: yandex.cloud.mdb.postgresql.v1.RestoreClusterRequest
	(*RestoreClusterMetadata)(nil),                   // 22: yandex.cloud.mdb.postgresql.v1.RestoreClusterMetadata
	(*StartClusterFailoverRequest)(nil),              // 23: yandex.cloud.mdb.postgresql.v1.StartClusterFailoverRequest
	(*StartClusterFailoverMetadata)(nil),             // 24: yandex.cloud.mdb.postgresql.v1.StartClusterFailoverMetadata
	(*RescheduleMaintenanceRequest)(nil),             // 25: yandex.cloud.mdb.postgresql.v1.RescheduleMaintenanceRequest
	(*RescheduleMaintenanceMetadata)(nil),            // 26: yandex.cloud.mdb.postgresql.v1.RescheduleMaintenanceMetadata
	(*LogRecord)(nil),                                // 27: yandex.cloud.mdb.postgresql.v1.LogRecord
	(*ListClusterLogsRequest)(nil),                   // 28: yandex.cloud.mdb.postgresql.v1.ListClusterLogsRequest
	(*ListClusterLogsResponse)(nil),                  // 29: yandex.cloud.mdb.postgresql.v1.ListClusterLogsResponse
	(*StreamLogRecord)(nil),                          // 30: yandex.cloud.mdb.postgresql.v1.StreamLogRecord
	(*StreamClusterLogsRequest)(nil),                 // 31: yandex.cloud.mdb.postgresql.v1.StreamClusterLogsRequest
	(*ListClusterOperationsRequest)(nil),             // 32: yandex.cloud.mdb.postgresql.v1.ListClusterOperationsRequest
	(*ListClusterOperationsResponse)(nil),            // 33: yandex.cloud.mdb.postgresql.v1.ListClusterOperationsResponse
	(*ListClusterBackupsRequest)(nil),                // 34: yandex.cloud.mdb.postgresql.v1.ListClusterBackupsRequest
	(*ListClusterBackupsResponse)(nil),               // 35: yandex.cloud.mdb.postgresql.v1.ListClusterBackupsResponse
	(*ListClusterHostsRequest)(nil),                  // 36: yandex.cloud.mdb.postgresql.v1.ListClusterHostsRequest
	(*ListClusterHostsResponse)(nil),                 // 37: yandex.cloud.mdb.postgresql.v1.ListClusterHostsResponse
	(*AddClusterHostsRequest)(nil),                   // 38: yandex.cloud.mdb.postgresql.v1.AddClusterHostsRequest
	(*AddClusterHostsMetadata)(nil),                  // 39: yandex.cloud.mdb.postgresql.v1.AddClusterHostsMetadata
	(*DeleteClusterHostsRequest)(nil),                // 40: yandex.cloud.mdb.postgresql.v1.DeleteClusterHostsRequest
	(*DeleteClusterHostsMetadata)(nil),               // 41: yandex.cloud.mdb.postgresql.v1.DeleteClusterHostsMetadata
	(*UpdateClusterHostsRequest)(nil),                // 42: yandex.cloud.mdb.postgresql.v1.UpdateClusterHostsRequest
	(*UpdateClusterHostsMetadata)(nil),               // 43: yandex.cloud.mdb.postgresql.v1.UpdateClusterHostsMetadata
	(*UpdateHostSpec)(nil),                           // 44: yandex.cloud.mdb.postgresql.v1.UpdateHostSpec
	(*HostSpec)(nil),                                 // 45: yandex.cloud.mdb.postgresql.v1.HostSpec
	(*ConfigSpec)(nil),                               // 46: yandex.cloud.mdb.postgresql.v1.ConfigSpec
	(*ConfigHostSpec)(nil),                           // 47: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec
	nil,                                              // 48: yandex.cloud.mdb.postgresql.v1.CreateClusterRequest.LabelsEntry
	nil,                                              // 49: yandex.cloud.mdb.postgresql.v1.UpdateClusterRequest.LabelsEntry
	nil,                                              // 50: yandex.cloud.mdb.postgresql.v1.RestoreClusterRequest.LabelsEntry
	nil,                                              // 51: yandex.cloud.mdb.postgresql.v1.LogRecord.MessageEntry
	(*Cluster)(nil),                                  // 52: yandex.cloud.mdb.postgresql.v1.Cluster
	(*CronTab)(nil),                                  // 53: yandex.cloud.mdb.postgresql.v1.CronTab
	(Cluster_Environment)(0),                         // 54: yandex.cloud.mdb.postgresql.v1.Cluster.Environment
	(*DatabaseSpec)(nil),                             // 55: yandex.cloud.mdb.postgresql.v1.DatabaseSpec
	(*UserSpec)(nil),                                 // 56: yandex.cloud.mdb.postgresql.v1.UserSpec
	(*MaintenanceWindow)(nil),                        // 57: yandex.cloud.mdb.postgresql.v1.MaintenanceWindow
	(*wrapperspb.StringValue)(nil),                   // 58: google.protobuf.StringValue
	(*v1.OperationLog)(nil),                          // 59: yandex.cloud.mdb.operationlog.v1.OperationLog
	(*fieldmaskpb.FieldMask)(nil),                    // 60: google.protobuf.FieldMask
	(*timestamppb.Timestamp)(nil),                    // 61: google.protobuf.Timestamp
	(*operation.Operation)(nil),                      // 62: yandex.cloud.operation.Operation
	(*Backup)(nil),                                   // 63: yandex.cloud.mdb.postgresql.v1.Backup
	(*Host)(nil),                                     // 64: yandex.cloud.mdb.postgresql.v1.Host
	(*wrapperspb.Int64Value)(nil),                    // 65: google.protobuf.Int64Value
	(*config.PostgresqlConfig9_6)(nil),               // 66: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig9_6
	(*config.PostgresqlConfig10_1C)(nil),             // 67: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C
	(*config.PostgresqlConfig10)(nil),                // 68: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10
	(*config.PostgresqlConfig11)(nil),                // 69: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11
	(*config.PostgresqlConfig11_1C)(nil),             // 70: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_1C
	(*config.PostgresqlConfig12)(nil),                // 71: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12
	(*config.PostgresqlConfig12_1C)(nil),             // 72: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_1C
	(*config.PostgresqlConfig13)(nil),                // 73: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig13
	(*config.PostgresqlConfig13_1C)(nil),             // 74: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig13_1C
	(*config.PostgresqlConfig14)(nil),                // 75: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig14
	(*config.PostgresqlConfig14_1C)(nil),             // 76: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig14_1C
	(*config.PostgresqlConfig15)(nil),                // 77: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig15
	(*config.PostgresqlConfig15_1C)(nil),             // 78: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig15_1C
	(*config.PostgresqlConfig16)(nil),                // 79: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig16
	(*config.PostgresqlConfig16_1C)(nil),             // 80: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig16_1C
	(*config.PostgresqlConfig17)(nil),                // 81: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig17
	(*config.PostgresqlConfig17_1C)(nil),             // 82: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig17_1C
	(*config.PostgresqlConfig18)(nil),                // 83: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig18
	(*config.PostgresqlConfig18_1C)(nil),             // 84: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig18_1C
	(*ConnectionPoolerConfig)(nil),                   // 85: yandex.cloud.mdb.postgresql.v1.ConnectionPoolerConfig
	(*Resources)(nil),                                // 86: yandex.cloud.mdb.postgresql.v1.Resources
	(*wrapperspb.BoolValue)(nil),                     // 87: google.protobuf.BoolValue
	(*timeofday.TimeOfDay)(nil),                      // 88: google.type.TimeOfDay
	(*Access)(nil),                                   // 89: yandex.cloud.mdb.postgresql.v1.Access
	(*PerformanceDiagnostics)(nil),                   // 90: yandex.cloud.mdb.postgresql.v1.PerformanceDiagnostics
	(*DiskSizeAutoscaling)(nil),                      // 91: yandex.cloud.mdb.postgresql.v1.DiskSizeAutoscaling
	(*config.PostgresqlHostConfig9_6)(nil),           // 92: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig9_6
	(*config.PostgresqlHostConfig10_1C)(nil),         // 93: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig10_1C
	(*config.PostgresqlHostConfig10)(nil),            // 94: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig10
	(*config.PostgresqlHostConfig11)(nil),            // 95: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11
	(*config.PostgresqlHostConfig11_1C)(nil),         // 96: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_1C
	(*config.PostgresqlHostConfig12)(nil),            // 97: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12
	(*config.PostgresqlHostConfig12_1C)(nil),         // 98: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_1C
	(*config.PostgresqlHostConfig13)(nil),            // 99: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig13
	(*config.PostgresqlHostConfig13_1C)(nil),         // 100: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig13_1C
	(*config.PostgresqlHostConfig14)(nil),            // 101: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig14
	(*config.PostgresqlHostConfig14_1C)(nil),         // 102: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig14_1C
	(*config.PostgresqlHostConfig15)(nil),            // 103: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig15
	(*config.PostgresqlHostConfig15_1C)(nil),         // 104: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig15_1C
	(*config.PostgresqlHostConfig16)(nil),            // 105: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig16
	(*config.PostgresqlHostConfig16_1C)(nil),         // 106: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig16_1C
	(*config.PostgresqlHostConfig17)(nil),            // 107: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig17
	(*config.PostgresqlHostConfig17_1C)(nil),         // 108: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig17_1C
	(*config.PostgresqlHostConfig18)(nil),            // 109: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig18
	(*config.PostgresqlHostConfig18_1C)(nil),         // 110: yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig18_1C
	(*access.ListAccessBindingsRequest)(nil),         // 111: yandex.cloud.access.ListAccessBindingsRequest
	(*access.SetAccessBindingsRequest)(nil),          // 112: yandex.cloud.access.SetAccessBindingsRequest
	(*access.UpdateAccessBindingsRequest)(nil),       // 113: yandex.cloud.access.UpdateAccessBindingsRequest
	(*access.ListAccessBindingsResponse)(nil),        // 114: yandex.cloud.access.ListAccessBindingsResponse
}
var file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_depIdxs = []int32{
	52,  // 0: yandex.cloud.mdb.postgresql.v1.ListClustersResponse.clusters:type_name -> yandex.cloud.mdb.postgresql.v1.Cluster
	53,  // 1: yandex.cloud.mdb.postgresql.v1.BackupRetentionPolicySpec.cron:type_name -> yandex.cloud.mdb.postgresql.v1.CronTab
	48,  // 2: yandex.cloud.mdb.postgresql.v1.CreateClusterRequest.labels:type_name -> yandex.cloud.mdb.postgresql.v1.CreateClusterRequest.LabelsEntry
	54,  // 3: yandex.cloud.mdb.postgresql.v1.CreateClusterRequest.environment:type_name -> yandex.cloud.mdb.postgresql.v1.Cluster.Environment
	46,  // 4: yandex.cloud.mdb.postgresql.v1.CreateClusterRequest.config_spec:type_name -> yandex.cloud.mdb.postgresql.v1.ConfigSpec
	55,  // 5: yandex.cloud.mdb.postgresql.v1.CreateClusterRequest.database_specs:type_name -> yandex.cloud.mdb.postgresql.v1.DatabaseSpec
	56,  // 6: yandex.cloud.mdb.postgresql.v1.CreateClusterRequest.user_specs:type_name -> yandex.cloud.mdb.postgresql.v1.UserSpec
	45,  // 7: yandex.cloud.mdb.postgresql.v1.CreateClusterRequest.host_specs:type_name -> yandex.cloud.mdb.postgresql.v1.HostSpec
	57,  // 8: yandex.cloud.mdb.postgresql.v1.CreateClusterRequest.maintenance_window:type_name -> yandex.cloud.mdb.postgresql.v1.MaintenanceWindow
	6,   // 9: yandex.cloud.mdb.postgresql.v1.CreateClusterRequest.retention_policies:type_name -> yandex.cloud.mdb.postgresql.v1.BackupRetentionPolicySpec
	58,  // 10: yandex.cloud.mdb.postgresql.v1.CreateClusterRequest.disk_encryption_key_id:type_name -> google.protobuf.StringValue
	59,  // 11: yandex.cloud.mdb.postgresql.v1.CreateClusterMetadata.operation_log:type_name -> yandex.cloud.mdb.operationlog.v1.OperationLog
	60,  // 12: yandex.cloud.mdb.postgresql.v1.UpdateClusterRequest.update_mask:type_name -> google.protobuf.FieldMask
	49,  // 13: yandex.cloud.mdb.postgresql.v1.UpdateClusterRequest.labels:type_name -> yandex.cloud.mdb.postgresql.v1.UpdateClusterRequest.LabelsEntry
	46,  // 14: yandex.cloud.mdb.postgresql.v1.UpdateClusterRequest.config_spec:type_name -> yandex.cloud.mdb.postgresql.v1.ConfigSpec
	57,  // 15: yandex.cloud.mdb.postgresql.v1.UpdateClusterRequest.maintenance_window:type_name -> yandex.cloud.mdb.postgresql.v1.MaintenanceWindow
	59,  // 16: yandex.cloud.mdb.postgresql.v1.UpdateClusterMetadata.operation_log:type_name -> yandex.cloud.mdb.operationlog.v1.OperationLog
	61,  // 17: yandex.cloud.mdb.postgresql.v1.RestoreClusterRequest.time:type_name -> google.protobuf.Timestamp
	50,  // 18: yandex.cloud.mdb.postgresql.v1.RestoreClusterRequest.labels:type_name -> yandex.cloud.mdb.postgresql.v1.RestoreClusterRequest.LabelsEntry
	54,  // 19: yandex.cloud.mdb.postgresql.v1.RestoreClusterRequest.environment:type_name -> yandex.cloud.mdb.postgresql.v1.Cluster.Environment
	46,  // 20: yandex.cloud.mdb.postgresql.v1.RestoreClusterRequest.config_spec:type_name -> yandex.cloud.mdb.postgresql.v1.ConfigSpec
	45,  // 21: yandex.cloud.mdb.postgresql.v1.RestoreClusterRequest.host_specs:type_name -> yandex.cloud.mdb.postgresql.v1.HostSpec
	57,  // 22: yandex.cloud.mdb.postgresql.v1.RestoreClusterRequest.maintenance_window:type_name -> yandex.cloud.mdb.postgresql.v1.MaintenanceWindow
	58,  // 23: yandex.cloud.mdb.postgresql.v1.RestoreClusterRequest.disk_encryption_key_id:type_name -> google.protobuf.StringValue
	0,   // 24: yandex.cloud.mdb.postgresql.v1.RescheduleMaintenanceRequest.reschedule_type:type_name -> yandex.cloud.mdb.postgresql.v1.RescheduleMaintenanceRequest.RescheduleType
	61,  // 25: yandex.cloud.mdb.postgresql.v1.RescheduleMaintenanceRequest.delayed_until:type_name -> google.protobuf.Timestamp
	61,  // 26: yandex.cloud.mdb.postgresql.v1.RescheduleMaintenanceMetadata.delayed_until:type_name -> google.protobuf.Timestamp
	61,  // 27: yandex.cloud.mdb.postgresql.v1.LogRecord.timestamp:type_name -> google.protobuf.Timestamp
	51,  // 28: yandex.cloud.mdb.postgresql.v1.LogRecord.message:type_name -> yandex.cloud.mdb.postgresql.v1.LogRecord.MessageEntry
	1,   // 29: yandex.cloud.mdb.postgresql.v1.ListClusterLogsRequest.service_type:type_name -> yandex.cloud.mdb.postgresql.v1.ListClusterLogsRequest.ServiceType
	61,  // 30: yandex.cloud.mdb.postgresql.v1.ListClusterLogsRequest.from_time:type_name -> google.protobuf.Timestamp
	61,  // 31: yandex.cloud.mdb.postgresql.v1.ListClusterLogsRequest.to_time:type_name -> google.protobuf.Timestamp
	27,  // 32: yandex.cloud.mdb.postgresql.v1.ListClusterLogsResponse.logs:type_name -> yandex.cloud.mdb.postgresql.v1.LogRecord
	27,  // 33: yandex.cloud.mdb.postgresql.v1.StreamLogRecord.record:type_name -> yandex.cloud.mdb.postgresql.v1.LogRecord
	2,   // 34: yandex.cloud.mdb.postgresql.v1.StreamClusterLogsRequest.service_type:type_name -> yandex.cloud.mdb.postgresql.v1.StreamClusterLogsRequest.ServiceType
	61,  // 35: yandex.cloud.mdb.postgresql.v1.StreamClusterLogsRequest.from_time:type_name -> google.protobuf.Timestamp
	61,  // 36: yandex.cloud.mdb.postgresql.v1.StreamClusterLogsRequest.to_time:type_name -> google.protobuf.Timestamp
	62,  // 37: yandex.cloud.mdb.postgresql.v1.ListClusterOperationsResponse.operations:type_name -> yandex.cloud.operation.Operation
	63,  // 38: yandex.cloud.mdb.postgresql.v1.ListClusterBackupsResponse.backups:type_name -> yandex.cloud.mdb.postgresql.v1.Backup
	64,  // 39: yandex.cloud.mdb.postgresql.v1.ListClusterHostsResponse.hosts:type_name -> yandex.cloud.mdb.postgresql.v1.Host
	45,  // 40: yandex.cloud.mdb.postgresql.v1.AddClusterHostsRequest.host_specs:type_name -> yandex.cloud.mdb.postgresql.v1.HostSpec
	44,  // 41: yandex.cloud.mdb.postgresql.v1.UpdateClusterHostsRequest.update_host_specs:type_name -> yandex.cloud.mdb.postgresql.v1.UpdateHostSpec
	65,  // 42: yandex.cloud.mdb.postgresql.v1.UpdateHostSpec.priority:type_name -> google.protobuf.Int64Value
	47,  // 43: yandex.cloud.mdb.postgresql.v1.UpdateHostSpec.config_spec:type_name -> yandex.cloud.mdb.postgresql.v1.ConfigHostSpec
	60,  // 44: yandex.cloud.mdb.postgresql.v1.UpdateHostSpec.update_mask:type_name -> google.protobuf.FieldMask
	65,  // 45: yandex.cloud.mdb.postgresql.v1.HostSpec.priority:type_name -> google.protobuf.Int64Value
	47,  // 46: yandex.cloud.mdb.postgresql.v1.HostSpec.config_spec:type_name -> yandex.cloud.mdb.postgresql.v1.ConfigHostSpec
	66,  // 47: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_9_6:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig9_6
	67,  // 48: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_10_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C
	68,  // 49: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_10:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10
	69,  // 50: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_11:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11
	70,  // 51: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_11_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig11_1C
	71,  // 52: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_12:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12
	72,  // 53: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_12_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_1C
	73,  // 54: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_13:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig13
	74,  // 55: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_13_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig13_1C
	75,  // 56: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_14:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig14
	76,  // 57: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_14_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig14_1C
	77,  // 58: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_15:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig15
	78,  // 59: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_15_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig15_1C
	79,  // 60: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_16:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig16
	80,  // 61: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_16_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig16_1C
	81,  // 62: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_17:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig17
	82,  // 63: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_17_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig17_1C
	83,  // 64: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_18:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig18
	84,  // 65: yandex.cloud.mdb.postgresql.v1.ConfigSpec.postgresql_config_18_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig18_1C
	85,  // 66: yandex.cloud.mdb.postgresql.v1.ConfigSpec.pooler_config:type_name -> yandex.cloud.mdb.postgresql.v1.ConnectionPoolerConfig
	86,  // 67: yandex.cloud.mdb.postgresql.v1.ConfigSpec.resources:type_name -> yandex.cloud.mdb.postgresql.v1.Resources
	87,  // 68: yandex.cloud.mdb.postgresql.v1.ConfigSpec.autofailover:type_name -> google.protobuf.BoolValue
	88,  // 69: yandex.cloud.mdb.postgresql.v1.ConfigSpec.backup_window_start:type_name -> google.type.TimeOfDay
	65,  // 70: yandex.cloud.mdb.postgresql.v1.ConfigSpec.backup_retain_period_days:type_name -> google.protobuf.Int64Value
	89,  // 71: yandex.cloud.mdb.postgresql.v1.ConfigSpec.access:type_name -> yandex.cloud.mdb.postgresql.v1.Access
	90,  // 72: yandex.cloud.mdb.postgresql.v1.ConfigSpec.performance_diagnostics:type_name -> yandex.cloud.mdb.postgresql.v1.PerformanceDiagnostics
	91,  // 73: yandex.cloud.mdb.postgresql.v1.ConfigSpec.disk_size_autoscaling:type_name -> yandex.cloud.mdb.postgresql.v1.DiskSizeAutoscaling
	92,  // 74: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_9_6:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig9_6
	93,  // 75: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_10_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig10_1C
	94,  // 76: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_10:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig10
	95,  // 77: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_11:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11
	96,  // 78: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_11_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_1C
	97,  // 79: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_12:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12
	98,  // 80: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_12_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_1C
	99,  // 81: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_13:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig13
	100, // 82: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_13_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig13_1C
	101, // 83: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_14:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig14
	102, // 84: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_14_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig14_1C
	103, // 85: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_15:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig15
	104, // 86: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_15_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig15_1C
	105, // 87: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_16:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig16
	106, // 88: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_16_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig16_1C
	107, // 89: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_17:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig17
	108, // 90: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_17_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig17_1C
	109, // 91: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_18:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig18
	110, // 92: yandex.cloud.mdb.postgresql.v1.ConfigHostSpec.postgresql_config_18_1c:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig18_1C
	3,   // 93: yandex.cloud.mdb.postgresql.v1.ClusterService.Get:input_type -> yandex.cloud.mdb.postgresql.v1.GetClusterRequest
	4,   // 94: yandex.cloud.mdb.postgresql.v1.ClusterService.List:input_type -> yandex.cloud.mdb.postgresql.v1.ListClustersRequest
	7,   // 95: yandex.cloud.mdb.postgresql.v1.ClusterService.Create:input_type -> yandex.cloud.mdb.postgresql.v1.CreateClusterRequest
	9,   // 96: yandex.cloud.mdb.postgresql.v1.ClusterService.Update:input_type -> yandex.cloud.mdb.postgresql.v1.UpdateClusterRequest
	11,  // 97: yandex.cloud.mdb.postgresql.v1.ClusterService.Delete:input_type -> yandex.cloud.mdb.postgresql.v1.DeleteClusterRequest
	13,  // 98: yandex.cloud.mdb.postgresql.v1.ClusterService.Start:input_type -> yandex.cloud.mdb.postgresql.v1.StartClusterRequest
	15,  // 99: yandex.cloud.mdb.postgresql.v1.ClusterService.Stop:input_type -> yandex.cloud.mdb.postgresql.v1.StopClusterRequest
	17,  // 100: yandex.cloud.mdb.postgresql.v1.ClusterService.Move:input_type -> yandex.cloud.mdb.postgresql.v1.MoveClusterRequest
	19,  // 101: yandex.cloud.mdb.postgresql.v1.ClusterService.Backup:input_type -> yandex.cloud.mdb.postgresql.v1.BackupClusterRequest
	21,  // 102: yandex.cloud.mdb.postgresql.v1.ClusterService.Restore:input_type -> yandex.cloud.mdb.postgresql.v1.RestoreClusterRequest
	25,  // 103: yandex.cloud.mdb.postgresql.v1.ClusterService.RescheduleMaintenance:input_type -> yandex.cloud.mdb.postgresql.v1.RescheduleMaintenanceRequest
	23,  // 104: yandex.cloud.mdb.postgresql.v1.ClusterService.StartFailover:input_type -> yandex.cloud.mdb.postgresql.v1.StartClusterFailoverRequest
	28,  // 105: yandex.cloud.mdb.postgresql.v1.ClusterService.ListLogs:input_type -> yandex.cloud.mdb.postgresql.v1.ListClusterLogsRequest
	31,  // 106: yandex.cloud.mdb.postgresql.v1.ClusterService.StreamLogs:input_type -> yandex.cloud.mdb.postgresql.v1.StreamClusterLogsRequest
	32,  // 107: yandex.cloud.mdb.postgresql.v1.ClusterService.ListOperations:input_type -> yandex.cloud.mdb.postgresql.v1.ListClusterOperationsRequest
	34,  // 108: yandex.cloud.mdb.postgresql.v1.ClusterService.ListBackups:input_type -> yandex.cloud.mdb.postgresql.v1.ListClusterBackupsRequest
	36,  // 109: yandex.cloud.mdb.postgresql.v1.ClusterService.ListHosts:input_type -> yandex.cloud.mdb.postgresql.v1.ListClusterHostsRequest
	38,  // 110: yandex.cloud.mdb.postgresql.v1.ClusterService.AddHosts:input_type -> yandex.cloud.mdb.postgresql.v1.AddClusterHostsRequest
	40,  // 111: yandex.cloud.mdb.postgresql.v1.ClusterService.DeleteHosts:input_type -> yandex.cloud.mdb.postgresql.v1.DeleteClusterHostsRequest
	42,  // 112: yandex.cloud.mdb.postgresql.v1.ClusterService.UpdateHosts:input_type -> yandex.cloud.mdb.postgresql.v1.UpdateClusterHostsRequest
	111, // 113: yandex.cloud.mdb.postgresql.v1.ClusterService.ListAccessBindings:input_type -> yandex.cloud.access.ListAccessBindingsRequest
	112, // 114: yandex.cloud.mdb.postgresql.v1.ClusterService.SetAccessBindings:input_type -> yandex.cloud.access.SetAccessBindingsRequest
	113, // 115: yandex.cloud.mdb.postgresql.v1.ClusterService.UpdateAccessBindings:input_type -> yandex.cloud.access.UpdateAccessBindingsRequest
	52,  // 116: yandex.cloud.mdb.postgresql.v1.ClusterService.Get:output_type -> yandex.cloud.mdb.postgresql.v1.Cluster
	5,   // 117: yandex.cloud.mdb.postgresql.v1.ClusterService.List:output_type -> yandex.cloud.mdb.postgresql.v1.ListClustersResponse
	62,  // 118: yandex.cloud.mdb.postgresql.v1.ClusterService.Create:output_type -> yandex.cloud.operation.Operation
	62,  // 119: yandex.cloud.mdb.postgresql.v1.ClusterService.Update:output_type -> yandex.cloud.operation.Operation
	62,  // 120: yandex.cloud.mdb.postgresql.v1.ClusterService.Delete:output_type -> yandex.cloud.operation.Operation
	62,  // 121: yandex.cloud.mdb.postgresql.v1.ClusterService.Start:output_type -> yandex.cloud.operation.Operation
	62,  // 122: yandex.cloud.mdb.postgresql.v1.ClusterService.Stop:output_type -> yandex.cloud.operation.Operation
	62,  // 123: yandex.cloud.mdb.postgresql.v1.ClusterService.Move:output_type -> yandex.cloud.operation.Operation
	62,  // 124: yandex.cloud.mdb.postgresql.v1.ClusterService.Backup:output_type -> yandex.cloud.operation.Operation
	62,  // 125: yandex.cloud.mdb.postgresql.v1.ClusterService.Restore:output_type -> yandex.cloud.operation.Operation
	62,  // 126: yandex.cloud.mdb.postgresql.v1.ClusterService.RescheduleMaintenance:output_type -> yandex.cloud.operation.Operation
	62,  // 127: yandex.cloud.mdb.postgresql.v1.ClusterService.StartFailover:output_type -> yandex.cloud.operation.Operation
	29,  // 128: yandex.cloud.mdb.postgresql.v1.ClusterService.ListLogs:output_type -> yandex.cloud.mdb.postgresql.v1.ListClusterLogsResponse
	30,  // 129: yandex.cloud.mdb.postgresql.v1.ClusterService.StreamLogs:output_type -> yandex.cloud.mdb.postgresql.v1.StreamLogRecord
	33,  // 130: yandex.cloud.mdb.postgresql.v1.ClusterService.ListOperations:output_type -> yandex.cloud.mdb.postgresql.v1.ListClusterOperationsResponse
	35,  // 131: yandex.cloud.mdb.postgresql.v1.ClusterService.ListBackups:output_type -> yandex.cloud.mdb.postgresql.v1.ListClusterBackupsResponse
	37,  // 132: yandex.cloud.mdb.postgresql.v1.ClusterService.ListHosts:output_type -> yandex.cloud.mdb.postgresql.v1.ListClusterHostsResponse
	62,  // 133: yandex.cloud.mdb.postgresql.v1.ClusterService.AddHosts:output_type -> yandex.cloud.operation.Operation
	62,  // 134: yandex.cloud.mdb.postgresql.v1.ClusterService.DeleteHosts:output_type -> yandex.cloud.operation.Operation
	62,  // 135: yandex.cloud.mdb.postgresql.v1.ClusterService.UpdateHosts:output_type -> yandex.cloud.operation.Operation
	114, // 136: yandex.cloud.mdb.postgresql.v1.ClusterService.ListAccessBindings:output_type -> yandex.cloud.access.ListAccessBindingsResponse
	62,  // 137: yandex.cloud.mdb.postgresql.v1.ClusterService.SetAccessBindings:output_type -> yandex.cloud.operation.Operation
	62,  // 138: yandex.cloud.mdb.postgresql.v1.ClusterService.UpdateAccessBindings:output_type -> yandex.cloud.operation.Operation
	116, // [116:139] is the sub-list for method output_type
	93,  // [93:116] is the sub-list for method input_type
	93,  // [93:93] is the sub-list for extension type_name
	93,  // [93:93] is the sub-list for extension extendee
	0,   // [0:93] is the sub-list for field type_name
}

func init() { file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_init() }
func file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_init() {
	if File_yandex_cloud_mdb_postgresql_v1_cluster_service_proto != nil {
		return
	}
	file_yandex_cloud_mdb_postgresql_v1_backup_proto_init()
	file_yandex_cloud_mdb_postgresql_v1_cluster_proto_init()
	file_yandex_cloud_mdb_postgresql_v1_database_proto_init()
	file_yandex_cloud_mdb_postgresql_v1_backup_retention_policy_proto_init()
	file_yandex_cloud_mdb_postgresql_v1_maintenance_proto_init()
	file_yandex_cloud_mdb_postgresql_v1_user_proto_init()
	file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[43].OneofWrappers = []any{
		(*ConfigSpec_PostgresqlConfig_9_6)(nil),
		(*ConfigSpec_PostgresqlConfig_10_1C)(nil),
		(*ConfigSpec_PostgresqlConfig_10)(nil),
		(*ConfigSpec_PostgresqlConfig_11)(nil),
		(*ConfigSpec_PostgresqlConfig_11_1C)(nil),
		(*ConfigSpec_PostgresqlConfig_12)(nil),
		(*ConfigSpec_PostgresqlConfig_12_1C)(nil),
		(*ConfigSpec_PostgresqlConfig_13)(nil),
		(*ConfigSpec_PostgresqlConfig_13_1C)(nil),
		(*ConfigSpec_PostgresqlConfig_14)(nil),
		(*ConfigSpec_PostgresqlConfig_14_1C)(nil),
		(*ConfigSpec_PostgresqlConfig_15)(nil),
		(*ConfigSpec_PostgresqlConfig_15_1C)(nil),
		(*ConfigSpec_PostgresqlConfig_16)(nil),
		(*ConfigSpec_PostgresqlConfig_16_1C)(nil),
		(*ConfigSpec_PostgresqlConfig_17)(nil),
		(*ConfigSpec_PostgresqlConfig_17_1C)(nil),
		(*ConfigSpec_PostgresqlConfig_18)(nil),
		(*ConfigSpec_PostgresqlConfig_18_1C)(nil),
	}
	file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes[44].OneofWrappers = []any{
		(*ConfigHostSpec_PostgresqlConfig_9_6)(nil),
		(*ConfigHostSpec_PostgresqlConfig_10_1C)(nil),
		(*ConfigHostSpec_PostgresqlConfig_10)(nil),
		(*ConfigHostSpec_PostgresqlConfig_11)(nil),
		(*ConfigHostSpec_PostgresqlConfig_11_1C)(nil),
		(*ConfigHostSpec_PostgresqlConfig_12)(nil),
		(*ConfigHostSpec_PostgresqlConfig_12_1C)(nil),
		(*ConfigHostSpec_PostgresqlConfig_13)(nil),
		(*ConfigHostSpec_PostgresqlConfig_13_1C)(nil),
		(*ConfigHostSpec_PostgresqlConfig_14)(nil),
		(*ConfigHostSpec_PostgresqlConfig_14_1C)(nil),
		(*ConfigHostSpec_PostgresqlConfig_15)(nil),
		(*ConfigHostSpec_PostgresqlConfig_15_1C)(nil),
		(*ConfigHostSpec_PostgresqlConfig_16)(nil),
		(*ConfigHostSpec_PostgresqlConfig_16_1C)(nil),
		(*ConfigHostSpec_PostgresqlConfig_17)(nil),
		(*ConfigHostSpec_PostgresqlConfig_17_1C)(nil),
		(*ConfigHostSpec_PostgresqlConfig_18)(nil),
		(*ConfigHostSpec_PostgresqlConfig_18_1C)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDesc), len(file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_mdb_postgresql_v1_cluster_service_proto = out.File
	file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_goTypes = nil
	file_yandex_cloud_mdb_postgresql_v1_cluster_service_proto_depIdxs = nil
}

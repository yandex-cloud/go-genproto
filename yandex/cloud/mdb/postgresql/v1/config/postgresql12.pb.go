// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/mdb/postgresql/v1/config/postgresql12.proto

package postgresql

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PostgresqlConfig12_BackslashQuote int32

const (
	PostgresqlConfig12_BACKSLASH_QUOTE_UNSPECIFIED   PostgresqlConfig12_BackslashQuote = 0
	PostgresqlConfig12_BACKSLASH_QUOTE               PostgresqlConfig12_BackslashQuote = 1
	PostgresqlConfig12_BACKSLASH_QUOTE_ON            PostgresqlConfig12_BackslashQuote = 2
	PostgresqlConfig12_BACKSLASH_QUOTE_OFF           PostgresqlConfig12_BackslashQuote = 3
	PostgresqlConfig12_BACKSLASH_QUOTE_SAFE_ENCODING PostgresqlConfig12_BackslashQuote = 4
)

// Enum value maps for PostgresqlConfig12_BackslashQuote.
var (
	PostgresqlConfig12_BackslashQuote_name = map[int32]string{
		0: "BACKSLASH_QUOTE_UNSPECIFIED",
		1: "BACKSLASH_QUOTE",
		2: "BACKSLASH_QUOTE_ON",
		3: "BACKSLASH_QUOTE_OFF",
		4: "BACKSLASH_QUOTE_SAFE_ENCODING",
	}
	PostgresqlConfig12_BackslashQuote_value = map[string]int32{
		"BACKSLASH_QUOTE_UNSPECIFIED":   0,
		"BACKSLASH_QUOTE":               1,
		"BACKSLASH_QUOTE_ON":            2,
		"BACKSLASH_QUOTE_OFF":           3,
		"BACKSLASH_QUOTE_SAFE_ENCODING": 4,
	}
)

func (x PostgresqlConfig12_BackslashQuote) Enum() *PostgresqlConfig12_BackslashQuote {
	p := new(PostgresqlConfig12_BackslashQuote)
	*p = x
	return p
}

func (x PostgresqlConfig12_BackslashQuote) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresqlConfig12_BackslashQuote) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[0].Descriptor()
}

func (PostgresqlConfig12_BackslashQuote) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[0]
}

func (x PostgresqlConfig12_BackslashQuote) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresqlConfig12_BackslashQuote.Descriptor instead.
func (PostgresqlConfig12_BackslashQuote) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0, 0}
}

type PostgresqlConfig12_ByteaOutput int32

const (
	PostgresqlConfig12_BYTEA_OUTPUT_UNSPECIFIED PostgresqlConfig12_ByteaOutput = 0
	PostgresqlConfig12_BYTEA_OUTPUT_HEX         PostgresqlConfig12_ByteaOutput = 1
	PostgresqlConfig12_BYTEA_OUTPUT_ESCAPED     PostgresqlConfig12_ByteaOutput = 2
)

// Enum value maps for PostgresqlConfig12_ByteaOutput.
var (
	PostgresqlConfig12_ByteaOutput_name = map[int32]string{
		0: "BYTEA_OUTPUT_UNSPECIFIED",
		1: "BYTEA_OUTPUT_HEX",
		2: "BYTEA_OUTPUT_ESCAPED",
	}
	PostgresqlConfig12_ByteaOutput_value = map[string]int32{
		"BYTEA_OUTPUT_UNSPECIFIED": 0,
		"BYTEA_OUTPUT_HEX":         1,
		"BYTEA_OUTPUT_ESCAPED":     2,
	}
)

func (x PostgresqlConfig12_ByteaOutput) Enum() *PostgresqlConfig12_ByteaOutput {
	p := new(PostgresqlConfig12_ByteaOutput)
	*p = x
	return p
}

func (x PostgresqlConfig12_ByteaOutput) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresqlConfig12_ByteaOutput) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[1].Descriptor()
}

func (PostgresqlConfig12_ByteaOutput) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[1]
}

func (x PostgresqlConfig12_ByteaOutput) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresqlConfig12_ByteaOutput.Descriptor instead.
func (PostgresqlConfig12_ByteaOutput) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0, 1}
}

type PostgresqlConfig12_ConstraintExclusion int32

const (
	PostgresqlConfig12_CONSTRAINT_EXCLUSION_UNSPECIFIED PostgresqlConfig12_ConstraintExclusion = 0
	PostgresqlConfig12_CONSTRAINT_EXCLUSION_ON          PostgresqlConfig12_ConstraintExclusion = 1
	PostgresqlConfig12_CONSTRAINT_EXCLUSION_OFF         PostgresqlConfig12_ConstraintExclusion = 2
	PostgresqlConfig12_CONSTRAINT_EXCLUSION_PARTITION   PostgresqlConfig12_ConstraintExclusion = 3
)

// Enum value maps for PostgresqlConfig12_ConstraintExclusion.
var (
	PostgresqlConfig12_ConstraintExclusion_name = map[int32]string{
		0: "CONSTRAINT_EXCLUSION_UNSPECIFIED",
		1: "CONSTRAINT_EXCLUSION_ON",
		2: "CONSTRAINT_EXCLUSION_OFF",
		3: "CONSTRAINT_EXCLUSION_PARTITION",
	}
	PostgresqlConfig12_ConstraintExclusion_value = map[string]int32{
		"CONSTRAINT_EXCLUSION_UNSPECIFIED": 0,
		"CONSTRAINT_EXCLUSION_ON":          1,
		"CONSTRAINT_EXCLUSION_OFF":         2,
		"CONSTRAINT_EXCLUSION_PARTITION":   3,
	}
)

func (x PostgresqlConfig12_ConstraintExclusion) Enum() *PostgresqlConfig12_ConstraintExclusion {
	p := new(PostgresqlConfig12_ConstraintExclusion)
	*p = x
	return p
}

func (x PostgresqlConfig12_ConstraintExclusion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresqlConfig12_ConstraintExclusion) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[2].Descriptor()
}

func (PostgresqlConfig12_ConstraintExclusion) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[2]
}

func (x PostgresqlConfig12_ConstraintExclusion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresqlConfig12_ConstraintExclusion.Descriptor instead.
func (PostgresqlConfig12_ConstraintExclusion) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0, 2}
}

type PostgresqlConfig12_ForceParallelMode int32

const (
	PostgresqlConfig12_FORCE_PARALLEL_MODE_UNSPECIFIED PostgresqlConfig12_ForceParallelMode = 0
	PostgresqlConfig12_FORCE_PARALLEL_MODE_ON          PostgresqlConfig12_ForceParallelMode = 1
	PostgresqlConfig12_FORCE_PARALLEL_MODE_OFF         PostgresqlConfig12_ForceParallelMode = 2
	PostgresqlConfig12_FORCE_PARALLEL_MODE_REGRESS     PostgresqlConfig12_ForceParallelMode = 3
)

// Enum value maps for PostgresqlConfig12_ForceParallelMode.
var (
	PostgresqlConfig12_ForceParallelMode_name = map[int32]string{
		0: "FORCE_PARALLEL_MODE_UNSPECIFIED",
		1: "FORCE_PARALLEL_MODE_ON",
		2: "FORCE_PARALLEL_MODE_OFF",
		3: "FORCE_PARALLEL_MODE_REGRESS",
	}
	PostgresqlConfig12_ForceParallelMode_value = map[string]int32{
		"FORCE_PARALLEL_MODE_UNSPECIFIED": 0,
		"FORCE_PARALLEL_MODE_ON":          1,
		"FORCE_PARALLEL_MODE_OFF":         2,
		"FORCE_PARALLEL_MODE_REGRESS":     3,
	}
)

func (x PostgresqlConfig12_ForceParallelMode) Enum() *PostgresqlConfig12_ForceParallelMode {
	p := new(PostgresqlConfig12_ForceParallelMode)
	*p = x
	return p
}

func (x PostgresqlConfig12_ForceParallelMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresqlConfig12_ForceParallelMode) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[3].Descriptor()
}

func (PostgresqlConfig12_ForceParallelMode) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[3]
}

func (x PostgresqlConfig12_ForceParallelMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresqlConfig12_ForceParallelMode.Descriptor instead.
func (PostgresqlConfig12_ForceParallelMode) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0, 3}
}

type PostgresqlConfig12_LogErrorVerbosity int32

const (
	PostgresqlConfig12_LOG_ERROR_VERBOSITY_UNSPECIFIED PostgresqlConfig12_LogErrorVerbosity = 0
	PostgresqlConfig12_LOG_ERROR_VERBOSITY_TERSE       PostgresqlConfig12_LogErrorVerbosity = 1
	PostgresqlConfig12_LOG_ERROR_VERBOSITY_DEFAULT     PostgresqlConfig12_LogErrorVerbosity = 2
	PostgresqlConfig12_LOG_ERROR_VERBOSITY_VERBOSE     PostgresqlConfig12_LogErrorVerbosity = 3
)

// Enum value maps for PostgresqlConfig12_LogErrorVerbosity.
var (
	PostgresqlConfig12_LogErrorVerbosity_name = map[int32]string{
		0: "LOG_ERROR_VERBOSITY_UNSPECIFIED",
		1: "LOG_ERROR_VERBOSITY_TERSE",
		2: "LOG_ERROR_VERBOSITY_DEFAULT",
		3: "LOG_ERROR_VERBOSITY_VERBOSE",
	}
	PostgresqlConfig12_LogErrorVerbosity_value = map[string]int32{
		"LOG_ERROR_VERBOSITY_UNSPECIFIED": 0,
		"LOG_ERROR_VERBOSITY_TERSE":       1,
		"LOG_ERROR_VERBOSITY_DEFAULT":     2,
		"LOG_ERROR_VERBOSITY_VERBOSE":     3,
	}
)

func (x PostgresqlConfig12_LogErrorVerbosity) Enum() *PostgresqlConfig12_LogErrorVerbosity {
	p := new(PostgresqlConfig12_LogErrorVerbosity)
	*p = x
	return p
}

func (x PostgresqlConfig12_LogErrorVerbosity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresqlConfig12_LogErrorVerbosity) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[4].Descriptor()
}

func (PostgresqlConfig12_LogErrorVerbosity) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[4]
}

func (x PostgresqlConfig12_LogErrorVerbosity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresqlConfig12_LogErrorVerbosity.Descriptor instead.
func (PostgresqlConfig12_LogErrorVerbosity) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0, 4}
}

type PostgresqlConfig12_LogLevel int32

const (
	PostgresqlConfig12_LOG_LEVEL_UNSPECIFIED PostgresqlConfig12_LogLevel = 0
	PostgresqlConfig12_LOG_LEVEL_DEBUG5      PostgresqlConfig12_LogLevel = 1
	PostgresqlConfig12_LOG_LEVEL_DEBUG4      PostgresqlConfig12_LogLevel = 2
	PostgresqlConfig12_LOG_LEVEL_DEBUG3      PostgresqlConfig12_LogLevel = 3
	PostgresqlConfig12_LOG_LEVEL_DEBUG2      PostgresqlConfig12_LogLevel = 4
	PostgresqlConfig12_LOG_LEVEL_DEBUG1      PostgresqlConfig12_LogLevel = 5
	PostgresqlConfig12_LOG_LEVEL_LOG         PostgresqlConfig12_LogLevel = 6
	PostgresqlConfig12_LOG_LEVEL_NOTICE      PostgresqlConfig12_LogLevel = 7
	PostgresqlConfig12_LOG_LEVEL_WARNING     PostgresqlConfig12_LogLevel = 8
	PostgresqlConfig12_LOG_LEVEL_ERROR       PostgresqlConfig12_LogLevel = 9
	PostgresqlConfig12_LOG_LEVEL_FATAL       PostgresqlConfig12_LogLevel = 10
	PostgresqlConfig12_LOG_LEVEL_PANIC       PostgresqlConfig12_LogLevel = 11
)

// Enum value maps for PostgresqlConfig12_LogLevel.
var (
	PostgresqlConfig12_LogLevel_name = map[int32]string{
		0:  "LOG_LEVEL_UNSPECIFIED",
		1:  "LOG_LEVEL_DEBUG5",
		2:  "LOG_LEVEL_DEBUG4",
		3:  "LOG_LEVEL_DEBUG3",
		4:  "LOG_LEVEL_DEBUG2",
		5:  "LOG_LEVEL_DEBUG1",
		6:  "LOG_LEVEL_LOG",
		7:  "LOG_LEVEL_NOTICE",
		8:  "LOG_LEVEL_WARNING",
		9:  "LOG_LEVEL_ERROR",
		10: "LOG_LEVEL_FATAL",
		11: "LOG_LEVEL_PANIC",
	}
	PostgresqlConfig12_LogLevel_value = map[string]int32{
		"LOG_LEVEL_UNSPECIFIED": 0,
		"LOG_LEVEL_DEBUG5":      1,
		"LOG_LEVEL_DEBUG4":      2,
		"LOG_LEVEL_DEBUG3":      3,
		"LOG_LEVEL_DEBUG2":      4,
		"LOG_LEVEL_DEBUG1":      5,
		"LOG_LEVEL_LOG":         6,
		"LOG_LEVEL_NOTICE":      7,
		"LOG_LEVEL_WARNING":     8,
		"LOG_LEVEL_ERROR":       9,
		"LOG_LEVEL_FATAL":       10,
		"LOG_LEVEL_PANIC":       11,
	}
)

func (x PostgresqlConfig12_LogLevel) Enum() *PostgresqlConfig12_LogLevel {
	p := new(PostgresqlConfig12_LogLevel)
	*p = x
	return p
}

func (x PostgresqlConfig12_LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresqlConfig12_LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[5].Descriptor()
}

func (PostgresqlConfig12_LogLevel) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[5]
}

func (x PostgresqlConfig12_LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresqlConfig12_LogLevel.Descriptor instead.
func (PostgresqlConfig12_LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0, 5}
}

type PostgresqlConfig12_LogStatement int32

const (
	PostgresqlConfig12_LOG_STATEMENT_UNSPECIFIED PostgresqlConfig12_LogStatement = 0
	PostgresqlConfig12_LOG_STATEMENT_NONE        PostgresqlConfig12_LogStatement = 1
	PostgresqlConfig12_LOG_STATEMENT_DDL         PostgresqlConfig12_LogStatement = 2
	PostgresqlConfig12_LOG_STATEMENT_MOD         PostgresqlConfig12_LogStatement = 3
	PostgresqlConfig12_LOG_STATEMENT_ALL         PostgresqlConfig12_LogStatement = 4
)

// Enum value maps for PostgresqlConfig12_LogStatement.
var (
	PostgresqlConfig12_LogStatement_name = map[int32]string{
		0: "LOG_STATEMENT_UNSPECIFIED",
		1: "LOG_STATEMENT_NONE",
		2: "LOG_STATEMENT_DDL",
		3: "LOG_STATEMENT_MOD",
		4: "LOG_STATEMENT_ALL",
	}
	PostgresqlConfig12_LogStatement_value = map[string]int32{
		"LOG_STATEMENT_UNSPECIFIED": 0,
		"LOG_STATEMENT_NONE":        1,
		"LOG_STATEMENT_DDL":         2,
		"LOG_STATEMENT_MOD":         3,
		"LOG_STATEMENT_ALL":         4,
	}
)

func (x PostgresqlConfig12_LogStatement) Enum() *PostgresqlConfig12_LogStatement {
	p := new(PostgresqlConfig12_LogStatement)
	*p = x
	return p
}

func (x PostgresqlConfig12_LogStatement) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresqlConfig12_LogStatement) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[6].Descriptor()
}

func (PostgresqlConfig12_LogStatement) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[6]
}

func (x PostgresqlConfig12_LogStatement) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresqlConfig12_LogStatement.Descriptor instead.
func (PostgresqlConfig12_LogStatement) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0, 6}
}

type PostgresqlConfig12_PasswordEncryption int32

const (
	PostgresqlConfig12_PASSWORD_ENCRYPTION_UNSPECIFIED   PostgresqlConfig12_PasswordEncryption = 0
	PostgresqlConfig12_PASSWORD_ENCRYPTION_MD5           PostgresqlConfig12_PasswordEncryption = 1
	PostgresqlConfig12_PASSWORD_ENCRYPTION_SCRAM_SHA_256 PostgresqlConfig12_PasswordEncryption = 2
)

// Enum value maps for PostgresqlConfig12_PasswordEncryption.
var (
	PostgresqlConfig12_PasswordEncryption_name = map[int32]string{
		0: "PASSWORD_ENCRYPTION_UNSPECIFIED",
		1: "PASSWORD_ENCRYPTION_MD5",
		2: "PASSWORD_ENCRYPTION_SCRAM_SHA_256",
	}
	PostgresqlConfig12_PasswordEncryption_value = map[string]int32{
		"PASSWORD_ENCRYPTION_UNSPECIFIED":   0,
		"PASSWORD_ENCRYPTION_MD5":           1,
		"PASSWORD_ENCRYPTION_SCRAM_SHA_256": 2,
	}
)

func (x PostgresqlConfig12_PasswordEncryption) Enum() *PostgresqlConfig12_PasswordEncryption {
	p := new(PostgresqlConfig12_PasswordEncryption)
	*p = x
	return p
}

func (x PostgresqlConfig12_PasswordEncryption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresqlConfig12_PasswordEncryption) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[7].Descriptor()
}

func (PostgresqlConfig12_PasswordEncryption) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[7]
}

func (x PostgresqlConfig12_PasswordEncryption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresqlConfig12_PasswordEncryption.Descriptor instead.
func (PostgresqlConfig12_PasswordEncryption) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0, 7}
}

type PostgresqlConfig12_PgHintPlanDebugPrint int32

const (
	PostgresqlConfig12_PG_HINT_PLAN_DEBUG_PRINT_UNSPECIFIED PostgresqlConfig12_PgHintPlanDebugPrint = 0
	PostgresqlConfig12_PG_HINT_PLAN_DEBUG_PRINT_OFF         PostgresqlConfig12_PgHintPlanDebugPrint = 1
	PostgresqlConfig12_PG_HINT_PLAN_DEBUG_PRINT_ON          PostgresqlConfig12_PgHintPlanDebugPrint = 2
	PostgresqlConfig12_PG_HINT_PLAN_DEBUG_PRINT_DETAILED    PostgresqlConfig12_PgHintPlanDebugPrint = 3
	PostgresqlConfig12_PG_HINT_PLAN_DEBUG_PRINT_VERBOSE     PostgresqlConfig12_PgHintPlanDebugPrint = 4
)

// Enum value maps for PostgresqlConfig12_PgHintPlanDebugPrint.
var (
	PostgresqlConfig12_PgHintPlanDebugPrint_name = map[int32]string{
		0: "PG_HINT_PLAN_DEBUG_PRINT_UNSPECIFIED",
		1: "PG_HINT_PLAN_DEBUG_PRINT_OFF",
		2: "PG_HINT_PLAN_DEBUG_PRINT_ON",
		3: "PG_HINT_PLAN_DEBUG_PRINT_DETAILED",
		4: "PG_HINT_PLAN_DEBUG_PRINT_VERBOSE",
	}
	PostgresqlConfig12_PgHintPlanDebugPrint_value = map[string]int32{
		"PG_HINT_PLAN_DEBUG_PRINT_UNSPECIFIED": 0,
		"PG_HINT_PLAN_DEBUG_PRINT_OFF":         1,
		"PG_HINT_PLAN_DEBUG_PRINT_ON":          2,
		"PG_HINT_PLAN_DEBUG_PRINT_DETAILED":    3,
		"PG_HINT_PLAN_DEBUG_PRINT_VERBOSE":     4,
	}
)

func (x PostgresqlConfig12_PgHintPlanDebugPrint) Enum() *PostgresqlConfig12_PgHintPlanDebugPrint {
	p := new(PostgresqlConfig12_PgHintPlanDebugPrint)
	*p = x
	return p
}

func (x PostgresqlConfig12_PgHintPlanDebugPrint) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresqlConfig12_PgHintPlanDebugPrint) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[8].Descriptor()
}

func (PostgresqlConfig12_PgHintPlanDebugPrint) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[8]
}

func (x PostgresqlConfig12_PgHintPlanDebugPrint) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresqlConfig12_PgHintPlanDebugPrint.Descriptor instead.
func (PostgresqlConfig12_PgHintPlanDebugPrint) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0, 8}
}

type PostgresqlConfig12_PlanCacheMode int32

const (
	PostgresqlConfig12_PLAN_CACHE_MODE_UNSPECIFIED        PostgresqlConfig12_PlanCacheMode = 0
	PostgresqlConfig12_PLAN_CACHE_MODE_AUTO               PostgresqlConfig12_PlanCacheMode = 1
	PostgresqlConfig12_PLAN_CACHE_MODE_FORCE_CUSTOM_PLAN  PostgresqlConfig12_PlanCacheMode = 2
	PostgresqlConfig12_PLAN_CACHE_MODE_FORCE_GENERIC_PLAN PostgresqlConfig12_PlanCacheMode = 3
)

// Enum value maps for PostgresqlConfig12_PlanCacheMode.
var (
	PostgresqlConfig12_PlanCacheMode_name = map[int32]string{
		0: "PLAN_CACHE_MODE_UNSPECIFIED",
		1: "PLAN_CACHE_MODE_AUTO",
		2: "PLAN_CACHE_MODE_FORCE_CUSTOM_PLAN",
		3: "PLAN_CACHE_MODE_FORCE_GENERIC_PLAN",
	}
	PostgresqlConfig12_PlanCacheMode_value = map[string]int32{
		"PLAN_CACHE_MODE_UNSPECIFIED":        0,
		"PLAN_CACHE_MODE_AUTO":               1,
		"PLAN_CACHE_MODE_FORCE_CUSTOM_PLAN":  2,
		"PLAN_CACHE_MODE_FORCE_GENERIC_PLAN": 3,
	}
)

func (x PostgresqlConfig12_PlanCacheMode) Enum() *PostgresqlConfig12_PlanCacheMode {
	p := new(PostgresqlConfig12_PlanCacheMode)
	*p = x
	return p
}

func (x PostgresqlConfig12_PlanCacheMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresqlConfig12_PlanCacheMode) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[9].Descriptor()
}

func (PostgresqlConfig12_PlanCacheMode) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[9]
}

func (x PostgresqlConfig12_PlanCacheMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresqlConfig12_PlanCacheMode.Descriptor instead.
func (PostgresqlConfig12_PlanCacheMode) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0, 9}
}

type PostgresqlConfig12_SharedPreloadLibraries int32

const (
	PostgresqlConfig12_SHARED_PRELOAD_LIBRARIES_UNSPECIFIED  PostgresqlConfig12_SharedPreloadLibraries = 0
	PostgresqlConfig12_SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN PostgresqlConfig12_SharedPreloadLibraries = 1
	PostgresqlConfig12_SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN PostgresqlConfig12_SharedPreloadLibraries = 2
	PostgresqlConfig12_SHARED_PRELOAD_LIBRARIES_TIMESCALEDB  PostgresqlConfig12_SharedPreloadLibraries = 3
	PostgresqlConfig12_SHARED_PRELOAD_LIBRARIES_PG_QUALSTATS PostgresqlConfig12_SharedPreloadLibraries = 4
	PostgresqlConfig12_SHARED_PRELOAD_LIBRARIES_PG_CRON      PostgresqlConfig12_SharedPreloadLibraries = 5
	PostgresqlConfig12_SHARED_PRELOAD_LIBRARIES_PGLOGICAL    PostgresqlConfig12_SharedPreloadLibraries = 6
	PostgresqlConfig12_SHARED_PRELOAD_LIBRARIES_PG_PREWARM   PostgresqlConfig12_SharedPreloadLibraries = 7
	PostgresqlConfig12_SHARED_PRELOAD_LIBRARIES_PGAUDIT      PostgresqlConfig12_SharedPreloadLibraries = 8
)

// Enum value maps for PostgresqlConfig12_SharedPreloadLibraries.
var (
	PostgresqlConfig12_SharedPreloadLibraries_name = map[int32]string{
		0: "SHARED_PRELOAD_LIBRARIES_UNSPECIFIED",
		1: "SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN",
		2: "SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN",
		3: "SHARED_PRELOAD_LIBRARIES_TIMESCALEDB",
		4: "SHARED_PRELOAD_LIBRARIES_PG_QUALSTATS",
		5: "SHARED_PRELOAD_LIBRARIES_PG_CRON",
		6: "SHARED_PRELOAD_LIBRARIES_PGLOGICAL",
		7: "SHARED_PRELOAD_LIBRARIES_PG_PREWARM",
		8: "SHARED_PRELOAD_LIBRARIES_PGAUDIT",
	}
	PostgresqlConfig12_SharedPreloadLibraries_value = map[string]int32{
		"SHARED_PRELOAD_LIBRARIES_UNSPECIFIED":  0,
		"SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN": 1,
		"SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN": 2,
		"SHARED_PRELOAD_LIBRARIES_TIMESCALEDB":  3,
		"SHARED_PRELOAD_LIBRARIES_PG_QUALSTATS": 4,
		"SHARED_PRELOAD_LIBRARIES_PG_CRON":      5,
		"SHARED_PRELOAD_LIBRARIES_PGLOGICAL":    6,
		"SHARED_PRELOAD_LIBRARIES_PG_PREWARM":   7,
		"SHARED_PRELOAD_LIBRARIES_PGAUDIT":      8,
	}
)

func (x PostgresqlConfig12_SharedPreloadLibraries) Enum() *PostgresqlConfig12_SharedPreloadLibraries {
	p := new(PostgresqlConfig12_SharedPreloadLibraries)
	*p = x
	return p
}

func (x PostgresqlConfig12_SharedPreloadLibraries) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresqlConfig12_SharedPreloadLibraries) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[10].Descriptor()
}

func (PostgresqlConfig12_SharedPreloadLibraries) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[10]
}

func (x PostgresqlConfig12_SharedPreloadLibraries) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresqlConfig12_SharedPreloadLibraries.Descriptor instead.
func (PostgresqlConfig12_SharedPreloadLibraries) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0, 10}
}

type PostgresqlConfig12_SynchronousCommit int32

const (
	PostgresqlConfig12_SYNCHRONOUS_COMMIT_UNSPECIFIED  PostgresqlConfig12_SynchronousCommit = 0
	PostgresqlConfig12_SYNCHRONOUS_COMMIT_ON           PostgresqlConfig12_SynchronousCommit = 1
	PostgresqlConfig12_SYNCHRONOUS_COMMIT_OFF          PostgresqlConfig12_SynchronousCommit = 2
	PostgresqlConfig12_SYNCHRONOUS_COMMIT_LOCAL        PostgresqlConfig12_SynchronousCommit = 3
	PostgresqlConfig12_SYNCHRONOUS_COMMIT_REMOTE_WRITE PostgresqlConfig12_SynchronousCommit = 4
	PostgresqlConfig12_SYNCHRONOUS_COMMIT_REMOTE_APPLY PostgresqlConfig12_SynchronousCommit = 5
)

// Enum value maps for PostgresqlConfig12_SynchronousCommit.
var (
	PostgresqlConfig12_SynchronousCommit_name = map[int32]string{
		0: "SYNCHRONOUS_COMMIT_UNSPECIFIED",
		1: "SYNCHRONOUS_COMMIT_ON",
		2: "SYNCHRONOUS_COMMIT_OFF",
		3: "SYNCHRONOUS_COMMIT_LOCAL",
		4: "SYNCHRONOUS_COMMIT_REMOTE_WRITE",
		5: "SYNCHRONOUS_COMMIT_REMOTE_APPLY",
	}
	PostgresqlConfig12_SynchronousCommit_value = map[string]int32{
		"SYNCHRONOUS_COMMIT_UNSPECIFIED":  0,
		"SYNCHRONOUS_COMMIT_ON":           1,
		"SYNCHRONOUS_COMMIT_OFF":          2,
		"SYNCHRONOUS_COMMIT_LOCAL":        3,
		"SYNCHRONOUS_COMMIT_REMOTE_WRITE": 4,
		"SYNCHRONOUS_COMMIT_REMOTE_APPLY": 5,
	}
)

func (x PostgresqlConfig12_SynchronousCommit) Enum() *PostgresqlConfig12_SynchronousCommit {
	p := new(PostgresqlConfig12_SynchronousCommit)
	*p = x
	return p
}

func (x PostgresqlConfig12_SynchronousCommit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresqlConfig12_SynchronousCommit) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[11].Descriptor()
}

func (PostgresqlConfig12_SynchronousCommit) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[11]
}

func (x PostgresqlConfig12_SynchronousCommit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresqlConfig12_SynchronousCommit.Descriptor instead.
func (PostgresqlConfig12_SynchronousCommit) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0, 11}
}

type PostgresqlConfig12_TransactionIsolation int32

const (
	PostgresqlConfig12_TRANSACTION_ISOLATION_UNSPECIFIED      PostgresqlConfig12_TransactionIsolation = 0
	PostgresqlConfig12_TRANSACTION_ISOLATION_READ_UNCOMMITTED PostgresqlConfig12_TransactionIsolation = 1
	PostgresqlConfig12_TRANSACTION_ISOLATION_READ_COMMITTED   PostgresqlConfig12_TransactionIsolation = 2
	PostgresqlConfig12_TRANSACTION_ISOLATION_REPEATABLE_READ  PostgresqlConfig12_TransactionIsolation = 3
	PostgresqlConfig12_TRANSACTION_ISOLATION_SERIALIZABLE     PostgresqlConfig12_TransactionIsolation = 4
)

// Enum value maps for PostgresqlConfig12_TransactionIsolation.
var (
	PostgresqlConfig12_TransactionIsolation_name = map[int32]string{
		0: "TRANSACTION_ISOLATION_UNSPECIFIED",
		1: "TRANSACTION_ISOLATION_READ_UNCOMMITTED",
		2: "TRANSACTION_ISOLATION_READ_COMMITTED",
		3: "TRANSACTION_ISOLATION_REPEATABLE_READ",
		4: "TRANSACTION_ISOLATION_SERIALIZABLE",
	}
	PostgresqlConfig12_TransactionIsolation_value = map[string]int32{
		"TRANSACTION_ISOLATION_UNSPECIFIED":      0,
		"TRANSACTION_ISOLATION_READ_UNCOMMITTED": 1,
		"TRANSACTION_ISOLATION_READ_COMMITTED":   2,
		"TRANSACTION_ISOLATION_REPEATABLE_READ":  3,
		"TRANSACTION_ISOLATION_SERIALIZABLE":     4,
	}
)

func (x PostgresqlConfig12_TransactionIsolation) Enum() *PostgresqlConfig12_TransactionIsolation {
	p := new(PostgresqlConfig12_TransactionIsolation)
	*p = x
	return p
}

func (x PostgresqlConfig12_TransactionIsolation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresqlConfig12_TransactionIsolation) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[12].Descriptor()
}

func (PostgresqlConfig12_TransactionIsolation) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[12]
}

func (x PostgresqlConfig12_TransactionIsolation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresqlConfig12_TransactionIsolation.Descriptor instead.
func (PostgresqlConfig12_TransactionIsolation) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0, 12}
}

type PostgresqlConfig12_WalLevel int32

const (
	PostgresqlConfig12_WAL_LEVEL_UNSPECIFIED PostgresqlConfig12_WalLevel = 0
	PostgresqlConfig12_WAL_LEVEL_REPLICA     PostgresqlConfig12_WalLevel = 1
	PostgresqlConfig12_WAL_LEVEL_LOGICAL     PostgresqlConfig12_WalLevel = 2
)

// Enum value maps for PostgresqlConfig12_WalLevel.
var (
	PostgresqlConfig12_WalLevel_name = map[int32]string{
		0: "WAL_LEVEL_UNSPECIFIED",
		1: "WAL_LEVEL_REPLICA",
		2: "WAL_LEVEL_LOGICAL",
	}
	PostgresqlConfig12_WalLevel_value = map[string]int32{
		"WAL_LEVEL_UNSPECIFIED": 0,
		"WAL_LEVEL_REPLICA":     1,
		"WAL_LEVEL_LOGICAL":     2,
	}
)

func (x PostgresqlConfig12_WalLevel) Enum() *PostgresqlConfig12_WalLevel {
	p := new(PostgresqlConfig12_WalLevel)
	*p = x
	return p
}

func (x PostgresqlConfig12_WalLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresqlConfig12_WalLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[13].Descriptor()
}

func (PostgresqlConfig12_WalLevel) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[13]
}

func (x PostgresqlConfig12_WalLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresqlConfig12_WalLevel.Descriptor instead.
func (PostgresqlConfig12_WalLevel) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0, 13}
}

type PostgresqlConfig12_XmlBinary int32

const (
	PostgresqlConfig12_XML_BINARY_UNSPECIFIED PostgresqlConfig12_XmlBinary = 0
	PostgresqlConfig12_XML_BINARY_BASE64      PostgresqlConfig12_XmlBinary = 1
	PostgresqlConfig12_XML_BINARY_HEX         PostgresqlConfig12_XmlBinary = 2
)

// Enum value maps for PostgresqlConfig12_XmlBinary.
var (
	PostgresqlConfig12_XmlBinary_name = map[int32]string{
		0: "XML_BINARY_UNSPECIFIED",
		1: "XML_BINARY_BASE64",
		2: "XML_BINARY_HEX",
	}
	PostgresqlConfig12_XmlBinary_value = map[string]int32{
		"XML_BINARY_UNSPECIFIED": 0,
		"XML_BINARY_BASE64":      1,
		"XML_BINARY_HEX":         2,
	}
)

func (x PostgresqlConfig12_XmlBinary) Enum() *PostgresqlConfig12_XmlBinary {
	p := new(PostgresqlConfig12_XmlBinary)
	*p = x
	return p
}

func (x PostgresqlConfig12_XmlBinary) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresqlConfig12_XmlBinary) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[14].Descriptor()
}

func (PostgresqlConfig12_XmlBinary) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[14]
}

func (x PostgresqlConfig12_XmlBinary) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresqlConfig12_XmlBinary.Descriptor instead.
func (PostgresqlConfig12_XmlBinary) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0, 14}
}

type PostgresqlConfig12_XmlOption int32

const (
	PostgresqlConfig12_XML_OPTION_UNSPECIFIED PostgresqlConfig12_XmlOption = 0
	PostgresqlConfig12_XML_OPTION_DOCUMENT    PostgresqlConfig12_XmlOption = 1
	PostgresqlConfig12_XML_OPTION_CONTENT     PostgresqlConfig12_XmlOption = 2
)

// Enum value maps for PostgresqlConfig12_XmlOption.
var (
	PostgresqlConfig12_XmlOption_name = map[int32]string{
		0: "XML_OPTION_UNSPECIFIED",
		1: "XML_OPTION_DOCUMENT",
		2: "XML_OPTION_CONTENT",
	}
	PostgresqlConfig12_XmlOption_value = map[string]int32{
		"XML_OPTION_UNSPECIFIED": 0,
		"XML_OPTION_DOCUMENT":    1,
		"XML_OPTION_CONTENT":     2,
	}
)

func (x PostgresqlConfig12_XmlOption) Enum() *PostgresqlConfig12_XmlOption {
	p := new(PostgresqlConfig12_XmlOption)
	*p = x
	return p
}

func (x PostgresqlConfig12_XmlOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostgresqlConfig12_XmlOption) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[15].Descriptor()
}

func (PostgresqlConfig12_XmlOption) Type() protoreflect.EnumType {
	return &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes[15]
}

func (x PostgresqlConfig12_XmlOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostgresqlConfig12_XmlOption.Descriptor instead.
func (PostgresqlConfig12_XmlOption) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0, 15}
}

// Options and structure of `PostgresqlConfig` reflects PostgreSQL configuration file
// parameters which detailed description is available in
// [PostgreSQL documentation](https://www.postgresql.org/docs/11/runtime-config.html).
type PostgresqlConfig12 struct {
	state                               protoimpl.MessageState                      `protogen:"open.v1"`
	MaxConnections                      *wrapperspb.Int64Value                      `protobuf:"bytes,1,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"`
	SharedBuffers                       *wrapperspb.Int64Value                      `protobuf:"bytes,2,opt,name=shared_buffers,json=sharedBuffers,proto3" json:"shared_buffers,omitempty"` // in bytes.
	TempBuffers                         *wrapperspb.Int64Value                      `protobuf:"bytes,3,opt,name=temp_buffers,json=tempBuffers,proto3" json:"temp_buffers,omitempty"`       // in bytes.
	MaxPreparedTransactions             *wrapperspb.Int64Value                      `protobuf:"bytes,4,opt,name=max_prepared_transactions,json=maxPreparedTransactions,proto3" json:"max_prepared_transactions,omitempty"`
	WorkMem                             *wrapperspb.Int64Value                      `protobuf:"bytes,5,opt,name=work_mem,json=workMem,proto3" json:"work_mem,omitempty"`                                    // in bytes.
	MaintenanceWorkMem                  *wrapperspb.Int64Value                      `protobuf:"bytes,6,opt,name=maintenance_work_mem,json=maintenanceWorkMem,proto3" json:"maintenance_work_mem,omitempty"` // in bytes.
	AutovacuumWorkMem                   *wrapperspb.Int64Value                      `protobuf:"bytes,7,opt,name=autovacuum_work_mem,json=autovacuumWorkMem,proto3" json:"autovacuum_work_mem,omitempty"`    // in bytes.
	TempFileLimit                       *wrapperspb.Int64Value                      `protobuf:"bytes,8,opt,name=temp_file_limit,json=tempFileLimit,proto3" json:"temp_file_limit,omitempty"`                // in bytes.
	VacuumCostDelay                     *wrapperspb.Int64Value                      `protobuf:"bytes,9,opt,name=vacuum_cost_delay,json=vacuumCostDelay,proto3" json:"vacuum_cost_delay,omitempty"`          // in milliseconds.
	VacuumCostPageHit                   *wrapperspb.Int64Value                      `protobuf:"bytes,10,opt,name=vacuum_cost_page_hit,json=vacuumCostPageHit,proto3" json:"vacuum_cost_page_hit,omitempty"`
	VacuumCostPageMiss                  *wrapperspb.Int64Value                      `protobuf:"bytes,11,opt,name=vacuum_cost_page_miss,json=vacuumCostPageMiss,proto3" json:"vacuum_cost_page_miss,omitempty"`
	VacuumCostPageDirty                 *wrapperspb.Int64Value                      `protobuf:"bytes,12,opt,name=vacuum_cost_page_dirty,json=vacuumCostPageDirty,proto3" json:"vacuum_cost_page_dirty,omitempty"`
	VacuumCostLimit                     *wrapperspb.Int64Value                      `protobuf:"bytes,13,opt,name=vacuum_cost_limit,json=vacuumCostLimit,proto3" json:"vacuum_cost_limit,omitempty"`
	BgwriterDelay                       *wrapperspb.Int64Value                      `protobuf:"bytes,14,opt,name=bgwriter_delay,json=bgwriterDelay,proto3" json:"bgwriter_delay,omitempty"` // in milliseconds.
	BgwriterLruMaxpages                 *wrapperspb.Int64Value                      `protobuf:"bytes,15,opt,name=bgwriter_lru_maxpages,json=bgwriterLruMaxpages,proto3" json:"bgwriter_lru_maxpages,omitempty"`
	BgwriterLruMultiplier               *wrapperspb.DoubleValue                     `protobuf:"bytes,16,opt,name=bgwriter_lru_multiplier,json=bgwriterLruMultiplier,proto3" json:"bgwriter_lru_multiplier,omitempty"`
	BgwriterFlushAfter                  *wrapperspb.Int64Value                      `protobuf:"bytes,17,opt,name=bgwriter_flush_after,json=bgwriterFlushAfter,proto3" json:"bgwriter_flush_after,omitempty"` // in bytes
	BackendFlushAfter                   *wrapperspb.Int64Value                      `protobuf:"bytes,18,opt,name=backend_flush_after,json=backendFlushAfter,proto3" json:"backend_flush_after,omitempty"`    // in bytes
	OldSnapshotThreshold                *wrapperspb.Int64Value                      `protobuf:"bytes,19,opt,name=old_snapshot_threshold,json=oldSnapshotThreshold,proto3" json:"old_snapshot_threshold,omitempty"`
	WalLevel                            PostgresqlConfig12_WalLevel                 `protobuf:"varint,20,opt,name=wal_level,json=walLevel,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_WalLevel" json:"wal_level,omitempty"`
	SynchronousCommit                   PostgresqlConfig12_SynchronousCommit        `protobuf:"varint,21,opt,name=synchronous_commit,json=synchronousCommit,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_SynchronousCommit" json:"synchronous_commit,omitempty"`
	CheckpointTimeout                   *wrapperspb.Int64Value                      `protobuf:"bytes,22,opt,name=checkpoint_timeout,json=checkpointTimeout,proto3" json:"checkpoint_timeout,omitempty"` // in milliseconds.
	CheckpointCompletionTarget          *wrapperspb.DoubleValue                     `protobuf:"bytes,23,opt,name=checkpoint_completion_target,json=checkpointCompletionTarget,proto3" json:"checkpoint_completion_target,omitempty"`
	CheckpointFlushAfter                *wrapperspb.Int64Value                      `protobuf:"bytes,24,opt,name=checkpoint_flush_after,json=checkpointFlushAfter,proto3" json:"checkpoint_flush_after,omitempty"`               // in bytes
	MaxWalSize                          *wrapperspb.Int64Value                      `protobuf:"bytes,25,opt,name=max_wal_size,json=maxWalSize,proto3" json:"max_wal_size,omitempty"`                                             // in bytes.
	MinWalSize                          *wrapperspb.Int64Value                      `protobuf:"bytes,26,opt,name=min_wal_size,json=minWalSize,proto3" json:"min_wal_size,omitempty"`                                             // in bytes.
	MaxStandbyStreamingDelay            *wrapperspb.Int64Value                      `protobuf:"bytes,27,opt,name=max_standby_streaming_delay,json=maxStandbyStreamingDelay,proto3" json:"max_standby_streaming_delay,omitempty"` // in milliseconds.
	DefaultStatisticsTarget             *wrapperspb.Int64Value                      `protobuf:"bytes,28,opt,name=default_statistics_target,json=defaultStatisticsTarget,proto3" json:"default_statistics_target,omitempty"`
	ConstraintExclusion                 PostgresqlConfig12_ConstraintExclusion      `protobuf:"varint,29,opt,name=constraint_exclusion,json=constraintExclusion,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_ConstraintExclusion" json:"constraint_exclusion,omitempty"`
	CursorTupleFraction                 *wrapperspb.DoubleValue                     `protobuf:"bytes,30,opt,name=cursor_tuple_fraction,json=cursorTupleFraction,proto3" json:"cursor_tuple_fraction,omitempty"`
	FromCollapseLimit                   *wrapperspb.Int64Value                      `protobuf:"bytes,31,opt,name=from_collapse_limit,json=fromCollapseLimit,proto3" json:"from_collapse_limit,omitempty"`
	JoinCollapseLimit                   *wrapperspb.Int64Value                      `protobuf:"bytes,32,opt,name=join_collapse_limit,json=joinCollapseLimit,proto3" json:"join_collapse_limit,omitempty"`
	ForceParallelMode                   PostgresqlConfig12_ForceParallelMode        `protobuf:"varint,33,opt,name=force_parallel_mode,json=forceParallelMode,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_ForceParallelMode" json:"force_parallel_mode,omitempty"`
	ClientMinMessages                   PostgresqlConfig12_LogLevel                 `protobuf:"varint,34,opt,name=client_min_messages,json=clientMinMessages,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_LogLevel" json:"client_min_messages,omitempty"`
	LogMinMessages                      PostgresqlConfig12_LogLevel                 `protobuf:"varint,35,opt,name=log_min_messages,json=logMinMessages,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_LogLevel" json:"log_min_messages,omitempty"`
	LogMinErrorStatement                PostgresqlConfig12_LogLevel                 `protobuf:"varint,36,opt,name=log_min_error_statement,json=logMinErrorStatement,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_LogLevel" json:"log_min_error_statement,omitempty"`
	LogMinDurationStatement             *wrapperspb.Int64Value                      `protobuf:"bytes,37,opt,name=log_min_duration_statement,json=logMinDurationStatement,proto3" json:"log_min_duration_statement,omitempty"` // in milliseconds.
	LogCheckpoints                      *wrapperspb.BoolValue                       `protobuf:"bytes,38,opt,name=log_checkpoints,json=logCheckpoints,proto3" json:"log_checkpoints,omitempty"`
	LogConnections                      *wrapperspb.BoolValue                       `protobuf:"bytes,39,opt,name=log_connections,json=logConnections,proto3" json:"log_connections,omitempty"`
	LogDisconnections                   *wrapperspb.BoolValue                       `protobuf:"bytes,40,opt,name=log_disconnections,json=logDisconnections,proto3" json:"log_disconnections,omitempty"`
	LogDuration                         *wrapperspb.BoolValue                       `protobuf:"bytes,41,opt,name=log_duration,json=logDuration,proto3" json:"log_duration,omitempty"`
	LogErrorVerbosity                   PostgresqlConfig12_LogErrorVerbosity        `protobuf:"varint,42,opt,name=log_error_verbosity,json=logErrorVerbosity,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_LogErrorVerbosity" json:"log_error_verbosity,omitempty"`
	LogLockWaits                        *wrapperspb.BoolValue                       `protobuf:"bytes,43,opt,name=log_lock_waits,json=logLockWaits,proto3" json:"log_lock_waits,omitempty"`
	LogStatement                        PostgresqlConfig12_LogStatement             `protobuf:"varint,44,opt,name=log_statement,json=logStatement,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_LogStatement" json:"log_statement,omitempty"`
	LogTempFiles                        *wrapperspb.Int64Value                      `protobuf:"bytes,45,opt,name=log_temp_files,json=logTempFiles,proto3" json:"log_temp_files,omitempty"`
	SearchPath                          string                                      `protobuf:"bytes,46,opt,name=search_path,json=searchPath,proto3" json:"search_path,omitempty"`
	RowSecurity                         *wrapperspb.BoolValue                       `protobuf:"bytes,47,opt,name=row_security,json=rowSecurity,proto3" json:"row_security,omitempty"`
	DefaultTransactionIsolation         PostgresqlConfig12_TransactionIsolation     `protobuf:"varint,48,opt,name=default_transaction_isolation,json=defaultTransactionIsolation,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_TransactionIsolation" json:"default_transaction_isolation,omitempty"`
	StatementTimeout                    *wrapperspb.Int64Value                      `protobuf:"bytes,49,opt,name=statement_timeout,json=statementTimeout,proto3" json:"statement_timeout,omitempty"`                                                    // in milliseconds.
	LockTimeout                         *wrapperspb.Int64Value                      `protobuf:"bytes,50,opt,name=lock_timeout,json=lockTimeout,proto3" json:"lock_timeout,omitempty"`                                                                   // in milliseconds.
	IdleInTransactionSessionTimeout     *wrapperspb.Int64Value                      `protobuf:"bytes,51,opt,name=idle_in_transaction_session_timeout,json=idleInTransactionSessionTimeout,proto3" json:"idle_in_transaction_session_timeout,omitempty"` // in milliseconds.
	ByteaOutput                         PostgresqlConfig12_ByteaOutput              `protobuf:"varint,52,opt,name=bytea_output,json=byteaOutput,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_ByteaOutput" json:"bytea_output,omitempty"`
	Xmlbinary                           PostgresqlConfig12_XmlBinary                `protobuf:"varint,53,opt,name=xmlbinary,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_XmlBinary" json:"xmlbinary,omitempty"`
	Xmloption                           PostgresqlConfig12_XmlOption                `protobuf:"varint,54,opt,name=xmloption,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_XmlOption" json:"xmloption,omitempty"`
	GinPendingListLimit                 *wrapperspb.Int64Value                      `protobuf:"bytes,55,opt,name=gin_pending_list_limit,json=ginPendingListLimit,proto3" json:"gin_pending_list_limit,omitempty"` // in bytes.
	DeadlockTimeout                     *wrapperspb.Int64Value                      `protobuf:"bytes,56,opt,name=deadlock_timeout,json=deadlockTimeout,proto3" json:"deadlock_timeout,omitempty"`                 // in milliseconds.
	MaxLocksPerTransaction              *wrapperspb.Int64Value                      `protobuf:"bytes,57,opt,name=max_locks_per_transaction,json=maxLocksPerTransaction,proto3" json:"max_locks_per_transaction,omitempty"`
	MaxPredLocksPerTransaction          *wrapperspb.Int64Value                      `protobuf:"bytes,58,opt,name=max_pred_locks_per_transaction,json=maxPredLocksPerTransaction,proto3" json:"max_pred_locks_per_transaction,omitempty"`
	ArrayNulls                          *wrapperspb.BoolValue                       `protobuf:"bytes,59,opt,name=array_nulls,json=arrayNulls,proto3" json:"array_nulls,omitempty"`
	BackslashQuote                      PostgresqlConfig12_BackslashQuote           `protobuf:"varint,60,opt,name=backslash_quote,json=backslashQuote,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_BackslashQuote" json:"backslash_quote,omitempty"`
	DefaultWithOids                     *wrapperspb.BoolValue                       `protobuf:"bytes,61,opt,name=default_with_oids,json=defaultWithOids,proto3" json:"default_with_oids,omitempty"`
	EscapeStringWarning                 *wrapperspb.BoolValue                       `protobuf:"bytes,62,opt,name=escape_string_warning,json=escapeStringWarning,proto3" json:"escape_string_warning,omitempty"`
	LoCompatPrivileges                  *wrapperspb.BoolValue                       `protobuf:"bytes,63,opt,name=lo_compat_privileges,json=loCompatPrivileges,proto3" json:"lo_compat_privileges,omitempty"`
	OperatorPrecedenceWarning           *wrapperspb.BoolValue                       `protobuf:"bytes,64,opt,name=operator_precedence_warning,json=operatorPrecedenceWarning,proto3" json:"operator_precedence_warning,omitempty"`
	QuoteAllIdentifiers                 *wrapperspb.BoolValue                       `protobuf:"bytes,65,opt,name=quote_all_identifiers,json=quoteAllIdentifiers,proto3" json:"quote_all_identifiers,omitempty"`
	StandardConformingStrings           *wrapperspb.BoolValue                       `protobuf:"bytes,66,opt,name=standard_conforming_strings,json=standardConformingStrings,proto3" json:"standard_conforming_strings,omitempty"`
	SynchronizeSeqscans                 *wrapperspb.BoolValue                       `protobuf:"bytes,67,opt,name=synchronize_seqscans,json=synchronizeSeqscans,proto3" json:"synchronize_seqscans,omitempty"`
	TransformNullEquals                 *wrapperspb.BoolValue                       `protobuf:"bytes,68,opt,name=transform_null_equals,json=transformNullEquals,proto3" json:"transform_null_equals,omitempty"`
	ExitOnError                         *wrapperspb.BoolValue                       `protobuf:"bytes,69,opt,name=exit_on_error,json=exitOnError,proto3" json:"exit_on_error,omitempty"`
	SeqPageCost                         *wrapperspb.DoubleValue                     `protobuf:"bytes,70,opt,name=seq_page_cost,json=seqPageCost,proto3" json:"seq_page_cost,omitempty"`
	RandomPageCost                      *wrapperspb.DoubleValue                     `protobuf:"bytes,71,opt,name=random_page_cost,json=randomPageCost,proto3" json:"random_page_cost,omitempty"`
	AutovacuumMaxWorkers                *wrapperspb.Int64Value                      `protobuf:"bytes,72,opt,name=autovacuum_max_workers,json=autovacuumMaxWorkers,proto3" json:"autovacuum_max_workers,omitempty"`
	AutovacuumVacuumCostDelay           *wrapperspb.Int64Value                      `protobuf:"bytes,73,opt,name=autovacuum_vacuum_cost_delay,json=autovacuumVacuumCostDelay,proto3" json:"autovacuum_vacuum_cost_delay,omitempty"`
	AutovacuumVacuumCostLimit           *wrapperspb.Int64Value                      `protobuf:"bytes,74,opt,name=autovacuum_vacuum_cost_limit,json=autovacuumVacuumCostLimit,proto3" json:"autovacuum_vacuum_cost_limit,omitempty"`
	AutovacuumNaptime                   *wrapperspb.Int64Value                      `protobuf:"bytes,75,opt,name=autovacuum_naptime,json=autovacuumNaptime,proto3" json:"autovacuum_naptime,omitempty"` // in milliseconds.
	ArchiveTimeout                      *wrapperspb.Int64Value                      `protobuf:"bytes,76,opt,name=archive_timeout,json=archiveTimeout,proto3" json:"archive_timeout,omitempty"`          // in milliseconds.
	TrackActivityQuerySize              *wrapperspb.Int64Value                      `protobuf:"bytes,77,opt,name=track_activity_query_size,json=trackActivityQuerySize,proto3" json:"track_activity_query_size,omitempty"`
	EnableBitmapscan                    *wrapperspb.BoolValue                       `protobuf:"bytes,80,opt,name=enable_bitmapscan,json=enableBitmapscan,proto3" json:"enable_bitmapscan,omitempty"`
	EnableHashagg                       *wrapperspb.BoolValue                       `protobuf:"bytes,81,opt,name=enable_hashagg,json=enableHashagg,proto3" json:"enable_hashagg,omitempty"`
	EnableHashjoin                      *wrapperspb.BoolValue                       `protobuf:"bytes,82,opt,name=enable_hashjoin,json=enableHashjoin,proto3" json:"enable_hashjoin,omitempty"`
	EnableIndexscan                     *wrapperspb.BoolValue                       `protobuf:"bytes,83,opt,name=enable_indexscan,json=enableIndexscan,proto3" json:"enable_indexscan,omitempty"`
	EnableIndexonlyscan                 *wrapperspb.BoolValue                       `protobuf:"bytes,84,opt,name=enable_indexonlyscan,json=enableIndexonlyscan,proto3" json:"enable_indexonlyscan,omitempty"`
	EnableMaterial                      *wrapperspb.BoolValue                       `protobuf:"bytes,85,opt,name=enable_material,json=enableMaterial,proto3" json:"enable_material,omitempty"`
	EnableMergejoin                     *wrapperspb.BoolValue                       `protobuf:"bytes,86,opt,name=enable_mergejoin,json=enableMergejoin,proto3" json:"enable_mergejoin,omitempty"`
	EnableNestloop                      *wrapperspb.BoolValue                       `protobuf:"bytes,87,opt,name=enable_nestloop,json=enableNestloop,proto3" json:"enable_nestloop,omitempty"`
	EnableSeqscan                       *wrapperspb.BoolValue                       `protobuf:"bytes,88,opt,name=enable_seqscan,json=enableSeqscan,proto3" json:"enable_seqscan,omitempty"`
	EnableSort                          *wrapperspb.BoolValue                       `protobuf:"bytes,89,opt,name=enable_sort,json=enableSort,proto3" json:"enable_sort,omitempty"`
	EnableTidscan                       *wrapperspb.BoolValue                       `protobuf:"bytes,90,opt,name=enable_tidscan,json=enableTidscan,proto3" json:"enable_tidscan,omitempty"`
	MaxWorkerProcesses                  *wrapperspb.Int64Value                      `protobuf:"bytes,91,opt,name=max_worker_processes,json=maxWorkerProcesses,proto3" json:"max_worker_processes,omitempty"`
	MaxParallelWorkers                  *wrapperspb.Int64Value                      `protobuf:"bytes,92,opt,name=max_parallel_workers,json=maxParallelWorkers,proto3" json:"max_parallel_workers,omitempty"`
	MaxParallelWorkersPerGather         *wrapperspb.Int64Value                      `protobuf:"bytes,93,opt,name=max_parallel_workers_per_gather,json=maxParallelWorkersPerGather,proto3" json:"max_parallel_workers_per_gather,omitempty"`
	AutovacuumVacuumScaleFactor         *wrapperspb.DoubleValue                     `protobuf:"bytes,94,opt,name=autovacuum_vacuum_scale_factor,json=autovacuumVacuumScaleFactor,proto3" json:"autovacuum_vacuum_scale_factor,omitempty"`
	AutovacuumAnalyzeScaleFactor        *wrapperspb.DoubleValue                     `protobuf:"bytes,95,opt,name=autovacuum_analyze_scale_factor,json=autovacuumAnalyzeScaleFactor,proto3" json:"autovacuum_analyze_scale_factor,omitempty"`
	DefaultTransactionReadOnly          *wrapperspb.BoolValue                       `protobuf:"bytes,96,opt,name=default_transaction_read_only,json=defaultTransactionReadOnly,proto3" json:"default_transaction_read_only,omitempty"`
	Timezone                            string                                      `protobuf:"bytes,97,opt,name=timezone,proto3" json:"timezone,omitempty"`
	EnableParallelAppend                *wrapperspb.BoolValue                       `protobuf:"bytes,98,opt,name=enable_parallel_append,json=enableParallelAppend,proto3" json:"enable_parallel_append,omitempty"`
	EnableParallelHash                  *wrapperspb.BoolValue                       `protobuf:"bytes,99,opt,name=enable_parallel_hash,json=enableParallelHash,proto3" json:"enable_parallel_hash,omitempty"`
	EnablePartitionPruning              *wrapperspb.BoolValue                       `protobuf:"bytes,100,opt,name=enable_partition_pruning,json=enablePartitionPruning,proto3" json:"enable_partition_pruning,omitempty"`
	EnablePartitionwiseAggregate        *wrapperspb.BoolValue                       `protobuf:"bytes,101,opt,name=enable_partitionwise_aggregate,json=enablePartitionwiseAggregate,proto3" json:"enable_partitionwise_aggregate,omitempty"`
	EnablePartitionwiseJoin             *wrapperspb.BoolValue                       `protobuf:"bytes,102,opt,name=enable_partitionwise_join,json=enablePartitionwiseJoin,proto3" json:"enable_partitionwise_join,omitempty"`
	Jit                                 *wrapperspb.BoolValue                       `protobuf:"bytes,103,opt,name=jit,proto3" json:"jit,omitempty"`
	MaxParallelMaintenanceWorkers       *wrapperspb.Int64Value                      `protobuf:"bytes,104,opt,name=max_parallel_maintenance_workers,json=maxParallelMaintenanceWorkers,proto3" json:"max_parallel_maintenance_workers,omitempty"`
	ParallelLeaderParticipation         *wrapperspb.BoolValue                       `protobuf:"bytes,105,opt,name=parallel_leader_participation,json=parallelLeaderParticipation,proto3" json:"parallel_leader_participation,omitempty"`
	VacuumCleanupIndexScaleFactor       *wrapperspb.DoubleValue                     `protobuf:"bytes,106,opt,name=vacuum_cleanup_index_scale_factor,json=vacuumCleanupIndexScaleFactor,proto3" json:"vacuum_cleanup_index_scale_factor,omitempty"`
	LogTransactionSampleRate            *wrapperspb.DoubleValue                     `protobuf:"bytes,107,opt,name=log_transaction_sample_rate,json=logTransactionSampleRate,proto3" json:"log_transaction_sample_rate,omitempty"`
	PlanCacheMode                       PostgresqlConfig12_PlanCacheMode            `protobuf:"varint,108,opt,name=plan_cache_mode,json=planCacheMode,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_PlanCacheMode" json:"plan_cache_mode,omitempty"`
	EffectiveIoConcurrency              *wrapperspb.Int64Value                      `protobuf:"bytes,109,opt,name=effective_io_concurrency,json=effectiveIoConcurrency,proto3" json:"effective_io_concurrency,omitempty"`
	EffectiveCacheSize                  *wrapperspb.Int64Value                      `protobuf:"bytes,110,opt,name=effective_cache_size,json=effectiveCacheSize,proto3" json:"effective_cache_size,omitempty"`
	SharedPreloadLibraries              []PostgresqlConfig12_SharedPreloadLibraries `protobuf:"varint,111,rep,packed,name=shared_preload_libraries,json=sharedPreloadLibraries,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_SharedPreloadLibraries" json:"shared_preload_libraries,omitempty"`
	AutoExplainLogMinDuration           *wrapperspb.Int64Value                      `protobuf:"bytes,112,opt,name=auto_explain_log_min_duration,json=autoExplainLogMinDuration,proto3" json:"auto_explain_log_min_duration,omitempty"` // in milliseconds.
	AutoExplainLogAnalyze               *wrapperspb.BoolValue                       `protobuf:"bytes,113,opt,name=auto_explain_log_analyze,json=autoExplainLogAnalyze,proto3" json:"auto_explain_log_analyze,omitempty"`
	AutoExplainLogBuffers               *wrapperspb.BoolValue                       `protobuf:"bytes,114,opt,name=auto_explain_log_buffers,json=autoExplainLogBuffers,proto3" json:"auto_explain_log_buffers,omitempty"`
	AutoExplainLogTiming                *wrapperspb.BoolValue                       `protobuf:"bytes,115,opt,name=auto_explain_log_timing,json=autoExplainLogTiming,proto3" json:"auto_explain_log_timing,omitempty"`
	AutoExplainLogTriggers              *wrapperspb.BoolValue                       `protobuf:"bytes,116,opt,name=auto_explain_log_triggers,json=autoExplainLogTriggers,proto3" json:"auto_explain_log_triggers,omitempty"`
	AutoExplainLogVerbose               *wrapperspb.BoolValue                       `protobuf:"bytes,117,opt,name=auto_explain_log_verbose,json=autoExplainLogVerbose,proto3" json:"auto_explain_log_verbose,omitempty"`
	AutoExplainLogNestedStatements      *wrapperspb.BoolValue                       `protobuf:"bytes,118,opt,name=auto_explain_log_nested_statements,json=autoExplainLogNestedStatements,proto3" json:"auto_explain_log_nested_statements,omitempty"`
	AutoExplainSampleRate               *wrapperspb.DoubleValue                     `protobuf:"bytes,119,opt,name=auto_explain_sample_rate,json=autoExplainSampleRate,proto3" json:"auto_explain_sample_rate,omitempty"`
	PgHintPlanEnableHint                *wrapperspb.BoolValue                       `protobuf:"bytes,120,opt,name=pg_hint_plan_enable_hint,json=pgHintPlanEnableHint,proto3" json:"pg_hint_plan_enable_hint,omitempty"`
	PgHintPlanEnableHintTable           *wrapperspb.BoolValue                       `protobuf:"bytes,121,opt,name=pg_hint_plan_enable_hint_table,json=pgHintPlanEnableHintTable,proto3" json:"pg_hint_plan_enable_hint_table,omitempty"`
	PgHintPlanDebugPrint                PostgresqlConfig12_PgHintPlanDebugPrint     `protobuf:"varint,122,opt,name=pg_hint_plan_debug_print,json=pgHintPlanDebugPrint,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_PgHintPlanDebugPrint" json:"pg_hint_plan_debug_print,omitempty"`
	PgHintPlanMessageLevel              PostgresqlConfig12_LogLevel                 `protobuf:"varint,123,opt,name=pg_hint_plan_message_level,json=pgHintPlanMessageLevel,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_LogLevel" json:"pg_hint_plan_message_level,omitempty"`
	PgQualstatsEnabled                  *wrapperspb.BoolValue                       `protobuf:"bytes,124,opt,name=pg_qualstats_enabled,json=pgQualstatsEnabled,proto3" json:"pg_qualstats_enabled,omitempty"`
	PgQualstatsTrackConstants           *wrapperspb.BoolValue                       `protobuf:"bytes,125,opt,name=pg_qualstats_track_constants,json=pgQualstatsTrackConstants,proto3" json:"pg_qualstats_track_constants,omitempty"`
	PgQualstatsMax                      *wrapperspb.Int64Value                      `protobuf:"bytes,126,opt,name=pg_qualstats_max,json=pgQualstatsMax,proto3" json:"pg_qualstats_max,omitempty"`
	PgQualstatsResolveOids              *wrapperspb.BoolValue                       `protobuf:"bytes,127,opt,name=pg_qualstats_resolve_oids,json=pgQualstatsResolveOids,proto3" json:"pg_qualstats_resolve_oids,omitempty"`
	PgQualstatsSampleRate               *wrapperspb.DoubleValue                     `protobuf:"bytes,128,opt,name=pg_qualstats_sample_rate,json=pgQualstatsSampleRate,proto3" json:"pg_qualstats_sample_rate,omitempty"`
	MaxStackDepth                       *wrapperspb.Int64Value                      `protobuf:"bytes,150,opt,name=max_stack_depth,json=maxStackDepth,proto3" json:"max_stack_depth,omitempty"`             // in bytes.
	Geqo                                *wrapperspb.BoolValue                       `protobuf:"bytes,152,opt,name=geqo,proto3" json:"geqo,omitempty"`                                                      // enable Genetic Query Optimizer, by default is on
	GeqoThreshold                       *wrapperspb.Int64Value                      `protobuf:"bytes,153,opt,name=geqo_threshold,json=geqoThreshold,proto3" json:"geqo_threshold,omitempty"`               // The number of tables to use geqo, default is 12
	GeqoEffort                          *wrapperspb.Int64Value                      `protobuf:"bytes,154,opt,name=geqo_effort,json=geqoEffort,proto3" json:"geqo_effort,omitempty"`                        // tradeoff between planning time and query plan quality, default is 5
	GeqoPoolSize                        *wrapperspb.Int64Value                      `protobuf:"bytes,155,opt,name=geqo_pool_size,json=geqoPoolSize,proto3" json:"geqo_pool_size,omitempty"`                // number of individuals in the genetic population, useful values are typically 100 to 1000; default - 0 - choose based on based on geqo_effort
	GeqoGenerations                     *wrapperspb.Int64Value                      `protobuf:"bytes,156,opt,name=geqo_generations,json=geqoGenerations,proto3" json:"geqo_generations,omitempty"`         // the number of generations used by GEQO, useful values are in the same range as the pool size
	GeqoSelectionBias                   *wrapperspb.DoubleValue                     `protobuf:"bytes,157,opt,name=geqo_selection_bias,json=geqoSelectionBias,proto3" json:"geqo_selection_bias,omitempty"` // selective pressure within the population
	GeqoSeed                            *wrapperspb.DoubleValue                     `protobuf:"bytes,158,opt,name=geqo_seed,json=geqoSeed,proto3" json:"geqo_seed,omitempty"`                              // initial value of the random number generator used by GEQO
	PgTrgmSimilarityThreshold           *wrapperspb.DoubleValue                     `protobuf:"bytes,159,opt,name=pg_trgm_similarity_threshold,json=pgTrgmSimilarityThreshold,proto3" json:"pg_trgm_similarity_threshold,omitempty"`
	PgTrgmWordSimilarityThreshold       *wrapperspb.DoubleValue                     `protobuf:"bytes,160,opt,name=pg_trgm_word_similarity_threshold,json=pgTrgmWordSimilarityThreshold,proto3" json:"pg_trgm_word_similarity_threshold,omitempty"`
	PgTrgmStrictWordSimilarityThreshold *wrapperspb.DoubleValue                     `protobuf:"bytes,161,opt,name=pg_trgm_strict_word_similarity_threshold,json=pgTrgmStrictWordSimilarityThreshold,proto3" json:"pg_trgm_strict_word_similarity_threshold,omitempty"`
	MaxStandbyArchiveDelay              *wrapperspb.Int64Value                      `protobuf:"bytes,162,opt,name=max_standby_archive_delay,json=maxStandbyArchiveDelay,proto3" json:"max_standby_archive_delay,omitempty"` // in milliseconds.
	SessionDurationTimeout              *wrapperspb.Int64Value                      `protobuf:"bytes,163,opt,name=session_duration_timeout,json=sessionDurationTimeout,proto3" json:"session_duration_timeout,omitempty"`   // Terminate any session that exceeds the designated timeout, specified in milliseconds. If a timeout is not specified, the default session timeout is set to 12 hours. To disable it, specify a value of 0.
	LogReplicationCommands              *wrapperspb.BoolValue                       `protobuf:"bytes,164,opt,name=log_replication_commands,json=logReplicationCommands,proto3" json:"log_replication_commands,omitempty"`
	LogAutovacuumMinDuration            *wrapperspb.Int64Value                      `protobuf:"bytes,165,opt,name=log_autovacuum_min_duration,json=logAutovacuumMinDuration,proto3" json:"log_autovacuum_min_duration,omitempty"`                                                             // in milliseconds. The default is 1000 (1 sec).
	PasswordEncryption                  PostgresqlConfig12_PasswordEncryption       `protobuf:"varint,167,opt,name=password_encryption,json=passwordEncryption,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12_PasswordEncryption" json:"password_encryption,omitempty"` // A default value for `` user_password_encryption `` user-level setting, if it not specified for new users. Possible values are `` PASSWORD_ENCRYPTION_MD5 `` or `` PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``. The default is `` PASSWORD_ENCRYPTION_MD5 ``.
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *PostgresqlConfig12) Reset() {
	*x = PostgresqlConfig12{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostgresqlConfig12) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgresqlConfig12) ProtoMessage() {}

func (x *PostgresqlConfig12) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostgresqlConfig12.ProtoReflect.Descriptor instead.
func (*PostgresqlConfig12) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{0}
}

func (x *PostgresqlConfig12) GetMaxConnections() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxConnections
	}
	return nil
}

func (x *PostgresqlConfig12) GetSharedBuffers() *wrapperspb.Int64Value {
	if x != nil {
		return x.SharedBuffers
	}
	return nil
}

func (x *PostgresqlConfig12) GetTempBuffers() *wrapperspb.Int64Value {
	if x != nil {
		return x.TempBuffers
	}
	return nil
}

func (x *PostgresqlConfig12) GetMaxPreparedTransactions() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxPreparedTransactions
	}
	return nil
}

func (x *PostgresqlConfig12) GetWorkMem() *wrapperspb.Int64Value {
	if x != nil {
		return x.WorkMem
	}
	return nil
}

func (x *PostgresqlConfig12) GetMaintenanceWorkMem() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaintenanceWorkMem
	}
	return nil
}

func (x *PostgresqlConfig12) GetAutovacuumWorkMem() *wrapperspb.Int64Value {
	if x != nil {
		return x.AutovacuumWorkMem
	}
	return nil
}

func (x *PostgresqlConfig12) GetTempFileLimit() *wrapperspb.Int64Value {
	if x != nil {
		return x.TempFileLimit
	}
	return nil
}

func (x *PostgresqlConfig12) GetVacuumCostDelay() *wrapperspb.Int64Value {
	if x != nil {
		return x.VacuumCostDelay
	}
	return nil
}

func (x *PostgresqlConfig12) GetVacuumCostPageHit() *wrapperspb.Int64Value {
	if x != nil {
		return x.VacuumCostPageHit
	}
	return nil
}

func (x *PostgresqlConfig12) GetVacuumCostPageMiss() *wrapperspb.Int64Value {
	if x != nil {
		return x.VacuumCostPageMiss
	}
	return nil
}

func (x *PostgresqlConfig12) GetVacuumCostPageDirty() *wrapperspb.Int64Value {
	if x != nil {
		return x.VacuumCostPageDirty
	}
	return nil
}

func (x *PostgresqlConfig12) GetVacuumCostLimit() *wrapperspb.Int64Value {
	if x != nil {
		return x.VacuumCostLimit
	}
	return nil
}

func (x *PostgresqlConfig12) GetBgwriterDelay() *wrapperspb.Int64Value {
	if x != nil {
		return x.BgwriterDelay
	}
	return nil
}

func (x *PostgresqlConfig12) GetBgwriterLruMaxpages() *wrapperspb.Int64Value {
	if x != nil {
		return x.BgwriterLruMaxpages
	}
	return nil
}

func (x *PostgresqlConfig12) GetBgwriterLruMultiplier() *wrapperspb.DoubleValue {
	if x != nil {
		return x.BgwriterLruMultiplier
	}
	return nil
}

func (x *PostgresqlConfig12) GetBgwriterFlushAfter() *wrapperspb.Int64Value {
	if x != nil {
		return x.BgwriterFlushAfter
	}
	return nil
}

func (x *PostgresqlConfig12) GetBackendFlushAfter() *wrapperspb.Int64Value {
	if x != nil {
		return x.BackendFlushAfter
	}
	return nil
}

func (x *PostgresqlConfig12) GetOldSnapshotThreshold() *wrapperspb.Int64Value {
	if x != nil {
		return x.OldSnapshotThreshold
	}
	return nil
}

func (x *PostgresqlConfig12) GetWalLevel() PostgresqlConfig12_WalLevel {
	if x != nil {
		return x.WalLevel
	}
	return PostgresqlConfig12_WAL_LEVEL_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetSynchronousCommit() PostgresqlConfig12_SynchronousCommit {
	if x != nil {
		return x.SynchronousCommit
	}
	return PostgresqlConfig12_SYNCHRONOUS_COMMIT_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetCheckpointTimeout() *wrapperspb.Int64Value {
	if x != nil {
		return x.CheckpointTimeout
	}
	return nil
}

func (x *PostgresqlConfig12) GetCheckpointCompletionTarget() *wrapperspb.DoubleValue {
	if x != nil {
		return x.CheckpointCompletionTarget
	}
	return nil
}

func (x *PostgresqlConfig12) GetCheckpointFlushAfter() *wrapperspb.Int64Value {
	if x != nil {
		return x.CheckpointFlushAfter
	}
	return nil
}

func (x *PostgresqlConfig12) GetMaxWalSize() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxWalSize
	}
	return nil
}

func (x *PostgresqlConfig12) GetMinWalSize() *wrapperspb.Int64Value {
	if x != nil {
		return x.MinWalSize
	}
	return nil
}

func (x *PostgresqlConfig12) GetMaxStandbyStreamingDelay() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxStandbyStreamingDelay
	}
	return nil
}

func (x *PostgresqlConfig12) GetDefaultStatisticsTarget() *wrapperspb.Int64Value {
	if x != nil {
		return x.DefaultStatisticsTarget
	}
	return nil
}

func (x *PostgresqlConfig12) GetConstraintExclusion() PostgresqlConfig12_ConstraintExclusion {
	if x != nil {
		return x.ConstraintExclusion
	}
	return PostgresqlConfig12_CONSTRAINT_EXCLUSION_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetCursorTupleFraction() *wrapperspb.DoubleValue {
	if x != nil {
		return x.CursorTupleFraction
	}
	return nil
}

func (x *PostgresqlConfig12) GetFromCollapseLimit() *wrapperspb.Int64Value {
	if x != nil {
		return x.FromCollapseLimit
	}
	return nil
}

func (x *PostgresqlConfig12) GetJoinCollapseLimit() *wrapperspb.Int64Value {
	if x != nil {
		return x.JoinCollapseLimit
	}
	return nil
}

func (x *PostgresqlConfig12) GetForceParallelMode() PostgresqlConfig12_ForceParallelMode {
	if x != nil {
		return x.ForceParallelMode
	}
	return PostgresqlConfig12_FORCE_PARALLEL_MODE_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetClientMinMessages() PostgresqlConfig12_LogLevel {
	if x != nil {
		return x.ClientMinMessages
	}
	return PostgresqlConfig12_LOG_LEVEL_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetLogMinMessages() PostgresqlConfig12_LogLevel {
	if x != nil {
		return x.LogMinMessages
	}
	return PostgresqlConfig12_LOG_LEVEL_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetLogMinErrorStatement() PostgresqlConfig12_LogLevel {
	if x != nil {
		return x.LogMinErrorStatement
	}
	return PostgresqlConfig12_LOG_LEVEL_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetLogMinDurationStatement() *wrapperspb.Int64Value {
	if x != nil {
		return x.LogMinDurationStatement
	}
	return nil
}

func (x *PostgresqlConfig12) GetLogCheckpoints() *wrapperspb.BoolValue {
	if x != nil {
		return x.LogCheckpoints
	}
	return nil
}

func (x *PostgresqlConfig12) GetLogConnections() *wrapperspb.BoolValue {
	if x != nil {
		return x.LogConnections
	}
	return nil
}

func (x *PostgresqlConfig12) GetLogDisconnections() *wrapperspb.BoolValue {
	if x != nil {
		return x.LogDisconnections
	}
	return nil
}

func (x *PostgresqlConfig12) GetLogDuration() *wrapperspb.BoolValue {
	if x != nil {
		return x.LogDuration
	}
	return nil
}

func (x *PostgresqlConfig12) GetLogErrorVerbosity() PostgresqlConfig12_LogErrorVerbosity {
	if x != nil {
		return x.LogErrorVerbosity
	}
	return PostgresqlConfig12_LOG_ERROR_VERBOSITY_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetLogLockWaits() *wrapperspb.BoolValue {
	if x != nil {
		return x.LogLockWaits
	}
	return nil
}

func (x *PostgresqlConfig12) GetLogStatement() PostgresqlConfig12_LogStatement {
	if x != nil {
		return x.LogStatement
	}
	return PostgresqlConfig12_LOG_STATEMENT_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetLogTempFiles() *wrapperspb.Int64Value {
	if x != nil {
		return x.LogTempFiles
	}
	return nil
}

func (x *PostgresqlConfig12) GetSearchPath() string {
	if x != nil {
		return x.SearchPath
	}
	return ""
}

func (x *PostgresqlConfig12) GetRowSecurity() *wrapperspb.BoolValue {
	if x != nil {
		return x.RowSecurity
	}
	return nil
}

func (x *PostgresqlConfig12) GetDefaultTransactionIsolation() PostgresqlConfig12_TransactionIsolation {
	if x != nil {
		return x.DefaultTransactionIsolation
	}
	return PostgresqlConfig12_TRANSACTION_ISOLATION_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetStatementTimeout() *wrapperspb.Int64Value {
	if x != nil {
		return x.StatementTimeout
	}
	return nil
}

func (x *PostgresqlConfig12) GetLockTimeout() *wrapperspb.Int64Value {
	if x != nil {
		return x.LockTimeout
	}
	return nil
}

func (x *PostgresqlConfig12) GetIdleInTransactionSessionTimeout() *wrapperspb.Int64Value {
	if x != nil {
		return x.IdleInTransactionSessionTimeout
	}
	return nil
}

func (x *PostgresqlConfig12) GetByteaOutput() PostgresqlConfig12_ByteaOutput {
	if x != nil {
		return x.ByteaOutput
	}
	return PostgresqlConfig12_BYTEA_OUTPUT_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetXmlbinary() PostgresqlConfig12_XmlBinary {
	if x != nil {
		return x.Xmlbinary
	}
	return PostgresqlConfig12_XML_BINARY_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetXmloption() PostgresqlConfig12_XmlOption {
	if x != nil {
		return x.Xmloption
	}
	return PostgresqlConfig12_XML_OPTION_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetGinPendingListLimit() *wrapperspb.Int64Value {
	if x != nil {
		return x.GinPendingListLimit
	}
	return nil
}

func (x *PostgresqlConfig12) GetDeadlockTimeout() *wrapperspb.Int64Value {
	if x != nil {
		return x.DeadlockTimeout
	}
	return nil
}

func (x *PostgresqlConfig12) GetMaxLocksPerTransaction() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxLocksPerTransaction
	}
	return nil
}

func (x *PostgresqlConfig12) GetMaxPredLocksPerTransaction() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxPredLocksPerTransaction
	}
	return nil
}

func (x *PostgresqlConfig12) GetArrayNulls() *wrapperspb.BoolValue {
	if x != nil {
		return x.ArrayNulls
	}
	return nil
}

func (x *PostgresqlConfig12) GetBackslashQuote() PostgresqlConfig12_BackslashQuote {
	if x != nil {
		return x.BackslashQuote
	}
	return PostgresqlConfig12_BACKSLASH_QUOTE_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetDefaultWithOids() *wrapperspb.BoolValue {
	if x != nil {
		return x.DefaultWithOids
	}
	return nil
}

func (x *PostgresqlConfig12) GetEscapeStringWarning() *wrapperspb.BoolValue {
	if x != nil {
		return x.EscapeStringWarning
	}
	return nil
}

func (x *PostgresqlConfig12) GetLoCompatPrivileges() *wrapperspb.BoolValue {
	if x != nil {
		return x.LoCompatPrivileges
	}
	return nil
}

func (x *PostgresqlConfig12) GetOperatorPrecedenceWarning() *wrapperspb.BoolValue {
	if x != nil {
		return x.OperatorPrecedenceWarning
	}
	return nil
}

func (x *PostgresqlConfig12) GetQuoteAllIdentifiers() *wrapperspb.BoolValue {
	if x != nil {
		return x.QuoteAllIdentifiers
	}
	return nil
}

func (x *PostgresqlConfig12) GetStandardConformingStrings() *wrapperspb.BoolValue {
	if x != nil {
		return x.StandardConformingStrings
	}
	return nil
}

func (x *PostgresqlConfig12) GetSynchronizeSeqscans() *wrapperspb.BoolValue {
	if x != nil {
		return x.SynchronizeSeqscans
	}
	return nil
}

func (x *PostgresqlConfig12) GetTransformNullEquals() *wrapperspb.BoolValue {
	if x != nil {
		return x.TransformNullEquals
	}
	return nil
}

func (x *PostgresqlConfig12) GetExitOnError() *wrapperspb.BoolValue {
	if x != nil {
		return x.ExitOnError
	}
	return nil
}

func (x *PostgresqlConfig12) GetSeqPageCost() *wrapperspb.DoubleValue {
	if x != nil {
		return x.SeqPageCost
	}
	return nil
}

func (x *PostgresqlConfig12) GetRandomPageCost() *wrapperspb.DoubleValue {
	if x != nil {
		return x.RandomPageCost
	}
	return nil
}

func (x *PostgresqlConfig12) GetAutovacuumMaxWorkers() *wrapperspb.Int64Value {
	if x != nil {
		return x.AutovacuumMaxWorkers
	}
	return nil
}

func (x *PostgresqlConfig12) GetAutovacuumVacuumCostDelay() *wrapperspb.Int64Value {
	if x != nil {
		return x.AutovacuumVacuumCostDelay
	}
	return nil
}

func (x *PostgresqlConfig12) GetAutovacuumVacuumCostLimit() *wrapperspb.Int64Value {
	if x != nil {
		return x.AutovacuumVacuumCostLimit
	}
	return nil
}

func (x *PostgresqlConfig12) GetAutovacuumNaptime() *wrapperspb.Int64Value {
	if x != nil {
		return x.AutovacuumNaptime
	}
	return nil
}

func (x *PostgresqlConfig12) GetArchiveTimeout() *wrapperspb.Int64Value {
	if x != nil {
		return x.ArchiveTimeout
	}
	return nil
}

func (x *PostgresqlConfig12) GetTrackActivityQuerySize() *wrapperspb.Int64Value {
	if x != nil {
		return x.TrackActivityQuerySize
	}
	return nil
}

func (x *PostgresqlConfig12) GetEnableBitmapscan() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnableBitmapscan
	}
	return nil
}

func (x *PostgresqlConfig12) GetEnableHashagg() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnableHashagg
	}
	return nil
}

func (x *PostgresqlConfig12) GetEnableHashjoin() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnableHashjoin
	}
	return nil
}

func (x *PostgresqlConfig12) GetEnableIndexscan() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnableIndexscan
	}
	return nil
}

func (x *PostgresqlConfig12) GetEnableIndexonlyscan() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnableIndexonlyscan
	}
	return nil
}

func (x *PostgresqlConfig12) GetEnableMaterial() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnableMaterial
	}
	return nil
}

func (x *PostgresqlConfig12) GetEnableMergejoin() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnableMergejoin
	}
	return nil
}

func (x *PostgresqlConfig12) GetEnableNestloop() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnableNestloop
	}
	return nil
}

func (x *PostgresqlConfig12) GetEnableSeqscan() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnableSeqscan
	}
	return nil
}

func (x *PostgresqlConfig12) GetEnableSort() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnableSort
	}
	return nil
}

func (x *PostgresqlConfig12) GetEnableTidscan() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnableTidscan
	}
	return nil
}

func (x *PostgresqlConfig12) GetMaxWorkerProcesses() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxWorkerProcesses
	}
	return nil
}

func (x *PostgresqlConfig12) GetMaxParallelWorkers() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxParallelWorkers
	}
	return nil
}

func (x *PostgresqlConfig12) GetMaxParallelWorkersPerGather() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxParallelWorkersPerGather
	}
	return nil
}

func (x *PostgresqlConfig12) GetAutovacuumVacuumScaleFactor() *wrapperspb.DoubleValue {
	if x != nil {
		return x.AutovacuumVacuumScaleFactor
	}
	return nil
}

func (x *PostgresqlConfig12) GetAutovacuumAnalyzeScaleFactor() *wrapperspb.DoubleValue {
	if x != nil {
		return x.AutovacuumAnalyzeScaleFactor
	}
	return nil
}

func (x *PostgresqlConfig12) GetDefaultTransactionReadOnly() *wrapperspb.BoolValue {
	if x != nil {
		return x.DefaultTransactionReadOnly
	}
	return nil
}

func (x *PostgresqlConfig12) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *PostgresqlConfig12) GetEnableParallelAppend() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnableParallelAppend
	}
	return nil
}

func (x *PostgresqlConfig12) GetEnableParallelHash() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnableParallelHash
	}
	return nil
}

func (x *PostgresqlConfig12) GetEnablePartitionPruning() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnablePartitionPruning
	}
	return nil
}

func (x *PostgresqlConfig12) GetEnablePartitionwiseAggregate() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnablePartitionwiseAggregate
	}
	return nil
}

func (x *PostgresqlConfig12) GetEnablePartitionwiseJoin() *wrapperspb.BoolValue {
	if x != nil {
		return x.EnablePartitionwiseJoin
	}
	return nil
}

func (x *PostgresqlConfig12) GetJit() *wrapperspb.BoolValue {
	if x != nil {
		return x.Jit
	}
	return nil
}

func (x *PostgresqlConfig12) GetMaxParallelMaintenanceWorkers() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxParallelMaintenanceWorkers
	}
	return nil
}

func (x *PostgresqlConfig12) GetParallelLeaderParticipation() *wrapperspb.BoolValue {
	if x != nil {
		return x.ParallelLeaderParticipation
	}
	return nil
}

func (x *PostgresqlConfig12) GetVacuumCleanupIndexScaleFactor() *wrapperspb.DoubleValue {
	if x != nil {
		return x.VacuumCleanupIndexScaleFactor
	}
	return nil
}

func (x *PostgresqlConfig12) GetLogTransactionSampleRate() *wrapperspb.DoubleValue {
	if x != nil {
		return x.LogTransactionSampleRate
	}
	return nil
}

func (x *PostgresqlConfig12) GetPlanCacheMode() PostgresqlConfig12_PlanCacheMode {
	if x != nil {
		return x.PlanCacheMode
	}
	return PostgresqlConfig12_PLAN_CACHE_MODE_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetEffectiveIoConcurrency() *wrapperspb.Int64Value {
	if x != nil {
		return x.EffectiveIoConcurrency
	}
	return nil
}

func (x *PostgresqlConfig12) GetEffectiveCacheSize() *wrapperspb.Int64Value {
	if x != nil {
		return x.EffectiveCacheSize
	}
	return nil
}

func (x *PostgresqlConfig12) GetSharedPreloadLibraries() []PostgresqlConfig12_SharedPreloadLibraries {
	if x != nil {
		return x.SharedPreloadLibraries
	}
	return nil
}

func (x *PostgresqlConfig12) GetAutoExplainLogMinDuration() *wrapperspb.Int64Value {
	if x != nil {
		return x.AutoExplainLogMinDuration
	}
	return nil
}

func (x *PostgresqlConfig12) GetAutoExplainLogAnalyze() *wrapperspb.BoolValue {
	if x != nil {
		return x.AutoExplainLogAnalyze
	}
	return nil
}

func (x *PostgresqlConfig12) GetAutoExplainLogBuffers() *wrapperspb.BoolValue {
	if x != nil {
		return x.AutoExplainLogBuffers
	}
	return nil
}

func (x *PostgresqlConfig12) GetAutoExplainLogTiming() *wrapperspb.BoolValue {
	if x != nil {
		return x.AutoExplainLogTiming
	}
	return nil
}

func (x *PostgresqlConfig12) GetAutoExplainLogTriggers() *wrapperspb.BoolValue {
	if x != nil {
		return x.AutoExplainLogTriggers
	}
	return nil
}

func (x *PostgresqlConfig12) GetAutoExplainLogVerbose() *wrapperspb.BoolValue {
	if x != nil {
		return x.AutoExplainLogVerbose
	}
	return nil
}

func (x *PostgresqlConfig12) GetAutoExplainLogNestedStatements() *wrapperspb.BoolValue {
	if x != nil {
		return x.AutoExplainLogNestedStatements
	}
	return nil
}

func (x *PostgresqlConfig12) GetAutoExplainSampleRate() *wrapperspb.DoubleValue {
	if x != nil {
		return x.AutoExplainSampleRate
	}
	return nil
}

func (x *PostgresqlConfig12) GetPgHintPlanEnableHint() *wrapperspb.BoolValue {
	if x != nil {
		return x.PgHintPlanEnableHint
	}
	return nil
}

func (x *PostgresqlConfig12) GetPgHintPlanEnableHintTable() *wrapperspb.BoolValue {
	if x != nil {
		return x.PgHintPlanEnableHintTable
	}
	return nil
}

func (x *PostgresqlConfig12) GetPgHintPlanDebugPrint() PostgresqlConfig12_PgHintPlanDebugPrint {
	if x != nil {
		return x.PgHintPlanDebugPrint
	}
	return PostgresqlConfig12_PG_HINT_PLAN_DEBUG_PRINT_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetPgHintPlanMessageLevel() PostgresqlConfig12_LogLevel {
	if x != nil {
		return x.PgHintPlanMessageLevel
	}
	return PostgresqlConfig12_LOG_LEVEL_UNSPECIFIED
}

func (x *PostgresqlConfig12) GetPgQualstatsEnabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.PgQualstatsEnabled
	}
	return nil
}

func (x *PostgresqlConfig12) GetPgQualstatsTrackConstants() *wrapperspb.BoolValue {
	if x != nil {
		return x.PgQualstatsTrackConstants
	}
	return nil
}

func (x *PostgresqlConfig12) GetPgQualstatsMax() *wrapperspb.Int64Value {
	if x != nil {
		return x.PgQualstatsMax
	}
	return nil
}

func (x *PostgresqlConfig12) GetPgQualstatsResolveOids() *wrapperspb.BoolValue {
	if x != nil {
		return x.PgQualstatsResolveOids
	}
	return nil
}

func (x *PostgresqlConfig12) GetPgQualstatsSampleRate() *wrapperspb.DoubleValue {
	if x != nil {
		return x.PgQualstatsSampleRate
	}
	return nil
}

func (x *PostgresqlConfig12) GetMaxStackDepth() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxStackDepth
	}
	return nil
}

func (x *PostgresqlConfig12) GetGeqo() *wrapperspb.BoolValue {
	if x != nil {
		return x.Geqo
	}
	return nil
}

func (x *PostgresqlConfig12) GetGeqoThreshold() *wrapperspb.Int64Value {
	if x != nil {
		return x.GeqoThreshold
	}
	return nil
}

func (x *PostgresqlConfig12) GetGeqoEffort() *wrapperspb.Int64Value {
	if x != nil {
		return x.GeqoEffort
	}
	return nil
}

func (x *PostgresqlConfig12) GetGeqoPoolSize() *wrapperspb.Int64Value {
	if x != nil {
		return x.GeqoPoolSize
	}
	return nil
}

func (x *PostgresqlConfig12) GetGeqoGenerations() *wrapperspb.Int64Value {
	if x != nil {
		return x.GeqoGenerations
	}
	return nil
}

func (x *PostgresqlConfig12) GetGeqoSelectionBias() *wrapperspb.DoubleValue {
	if x != nil {
		return x.GeqoSelectionBias
	}
	return nil
}

func (x *PostgresqlConfig12) GetGeqoSeed() *wrapperspb.DoubleValue {
	if x != nil {
		return x.GeqoSeed
	}
	return nil
}

func (x *PostgresqlConfig12) GetPgTrgmSimilarityThreshold() *wrapperspb.DoubleValue {
	if x != nil {
		return x.PgTrgmSimilarityThreshold
	}
	return nil
}

func (x *PostgresqlConfig12) GetPgTrgmWordSimilarityThreshold() *wrapperspb.DoubleValue {
	if x != nil {
		return x.PgTrgmWordSimilarityThreshold
	}
	return nil
}

func (x *PostgresqlConfig12) GetPgTrgmStrictWordSimilarityThreshold() *wrapperspb.DoubleValue {
	if x != nil {
		return x.PgTrgmStrictWordSimilarityThreshold
	}
	return nil
}

func (x *PostgresqlConfig12) GetMaxStandbyArchiveDelay() *wrapperspb.Int64Value {
	if x != nil {
		return x.MaxStandbyArchiveDelay
	}
	return nil
}

func (x *PostgresqlConfig12) GetSessionDurationTimeout() *wrapperspb.Int64Value {
	if x != nil {
		return x.SessionDurationTimeout
	}
	return nil
}

func (x *PostgresqlConfig12) GetLogReplicationCommands() *wrapperspb.BoolValue {
	if x != nil {
		return x.LogReplicationCommands
	}
	return nil
}

func (x *PostgresqlConfig12) GetLogAutovacuumMinDuration() *wrapperspb.Int64Value {
	if x != nil {
		return x.LogAutovacuumMinDuration
	}
	return nil
}

func (x *PostgresqlConfig12) GetPasswordEncryption() PostgresqlConfig12_PasswordEncryption {
	if x != nil {
		return x.PasswordEncryption
	}
	return PostgresqlConfig12_PASSWORD_ENCRYPTION_UNSPECIFIED
}

type PostgresqlConfigSet12 struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Effective settings for a PostgreSQL 12 cluster (a combination of settings defined
	// in [user_config] and [default_config]).
	EffectiveConfig *PostgresqlConfig12 `protobuf:"bytes,1,opt,name=effective_config,json=effectiveConfig,proto3" json:"effective_config,omitempty"`
	// User-defined settings for a PostgreSQL 12 cluster.
	UserConfig *PostgresqlConfig12 `protobuf:"bytes,2,opt,name=user_config,json=userConfig,proto3" json:"user_config,omitempty"`
	// Default configuration for a PostgreSQL 12 cluster.
	DefaultConfig *PostgresqlConfig12 `protobuf:"bytes,3,opt,name=default_config,json=defaultConfig,proto3" json:"default_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostgresqlConfigSet12) Reset() {
	*x = PostgresqlConfigSet12{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostgresqlConfigSet12) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgresqlConfigSet12) ProtoMessage() {}

func (x *PostgresqlConfigSet12) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostgresqlConfigSet12.ProtoReflect.Descriptor instead.
func (*PostgresqlConfigSet12) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP(), []int{1}
}

func (x *PostgresqlConfigSet12) GetEffectiveConfig() *PostgresqlConfig12 {
	if x != nil {
		return x.EffectiveConfig
	}
	return nil
}

func (x *PostgresqlConfigSet12) GetUserConfig() *PostgresqlConfig12 {
	if x != nil {
		return x.UserConfig
	}
	return nil
}

func (x *PostgresqlConfigSet12) GetDefaultConfig() *PostgresqlConfig12 {
	if x != nil {
		return x.DefaultConfig
	}
	return nil
}

var File_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto protoreflect.FileDescriptor

const file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDesc = "" +
	"\n" +
	"8yandex/cloud/mdb/postgresql/v1/config/postgresql12.proto\x12%yandex.cloud.mdb.postgresql.v1.config\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1dyandex/cloud/validation.proto\"\xf7w\n" +
	"\x12PostgresqlConfig12\x12D\n" +
	"\x0fmax_connections\x18\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\x0emaxConnections\x12B\n" +
	"\x0eshared_buffers\x18\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\rsharedBuffers\x12>\n" +
	"\ftemp_buffers\x18\x03 \x01(\v2\x1b.google.protobuf.Int64ValueR\vtempBuffers\x12W\n" +
	"\x19max_prepared_transactions\x18\x04 \x01(\v2\x1b.google.protobuf.Int64ValueR\x17maxPreparedTransactions\x126\n" +
	"\bwork_mem\x18\x05 \x01(\v2\x1b.google.protobuf.Int64ValueR\aworkMem\x12M\n" +
	"\x14maintenance_work_mem\x18\x06 \x01(\v2\x1b.google.protobuf.Int64ValueR\x12maintenanceWorkMem\x12K\n" +
	"\x13autovacuum_work_mem\x18\a \x01(\v2\x1b.google.protobuf.Int64ValueR\x11autovacuumWorkMem\x12C\n" +
	"\x0ftemp_file_limit\x18\b \x01(\v2\x1b.google.protobuf.Int64ValueR\rtempFileLimit\x12G\n" +
	"\x11vacuum_cost_delay\x18\t \x01(\v2\x1b.google.protobuf.Int64ValueR\x0fvacuumCostDelay\x12L\n" +
	"\x14vacuum_cost_page_hit\x18\n" +
	" \x01(\v2\x1b.google.protobuf.Int64ValueR\x11vacuumCostPageHit\x12N\n" +
	"\x15vacuum_cost_page_miss\x18\v \x01(\v2\x1b.google.protobuf.Int64ValueR\x12vacuumCostPageMiss\x12P\n" +
	"\x16vacuum_cost_page_dirty\x18\f \x01(\v2\x1b.google.protobuf.Int64ValueR\x13vacuumCostPageDirty\x12G\n" +
	"\x11vacuum_cost_limit\x18\r \x01(\v2\x1b.google.protobuf.Int64ValueR\x0fvacuumCostLimit\x12P\n" +
	"\x0ebgwriter_delay\x18\x0e \x01(\v2\x1b.google.protobuf.Int64ValueB\f\xfa\xc71\b10-10000R\rbgwriterDelay\x12O\n" +
	"\x15bgwriter_lru_maxpages\x18\x0f \x01(\v2\x1b.google.protobuf.Int64ValueR\x13bgwriterLruMaxpages\x12T\n" +
	"\x17bgwriter_lru_multiplier\x18\x10 \x01(\v2\x1c.google.protobuf.DoubleValueR\x15bgwriterLruMultiplier\x12\\\n" +
	"\x14bgwriter_flush_after\x18\x11 \x01(\v2\x1b.google.protobuf.Int64ValueB\r\xfa\xc71\t0-2097152R\x12bgwriterFlushAfter\x12Z\n" +
	"\x13backend_flush_after\x18\x12 \x01(\v2\x1b.google.protobuf.Int64ValueB\r\xfa\xc71\t0-2097152R\x11backendFlushAfter\x12b\n" +
	"\x16old_snapshot_threshold\x18\x13 \x01(\v2\x1b.google.protobuf.Int64ValueB\x0f\xfa\xc71\v-1-86400000R\x14oldSnapshotThreshold\x12_\n" +
	"\twal_level\x18\x14 \x01(\x0e2B.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.WalLevelR\bwalLevel\x12z\n" +
	"\x12synchronous_commit\x18\x15 \x01(\x0e2K.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.SynchronousCommitR\x11synchronousCommit\x12^\n" +
	"\x12checkpoint_timeout\x18\x16 \x01(\v2\x1b.google.protobuf.Int64ValueB\x12\xfa\xc71\x0e30000-86400000R\x11checkpointTimeout\x12^\n" +
	"\x1ccheckpoint_completion_target\x18\x17 \x01(\v2\x1c.google.protobuf.DoubleValueR\x1acheckpointCompletionTarget\x12`\n" +
	"\x16checkpoint_flush_after\x18\x18 \x01(\v2\x1b.google.protobuf.Int64ValueB\r\xfa\xc71\t0-2097152R\x14checkpointFlushAfter\x12=\n" +
	"\fmax_wal_size\x18\x19 \x01(\v2\x1b.google.protobuf.Int64ValueR\n" +
	"maxWalSize\x12=\n" +
	"\fmin_wal_size\x18\x1a \x01(\v2\x1b.google.protobuf.Int64ValueR\n" +
	"minWalSize\x12Z\n" +
	"\x1bmax_standby_streaming_delay\x18\x1b \x01(\v2\x1b.google.protobuf.Int64ValueR\x18maxStandbyStreamingDelay\x12W\n" +
	"\x19default_statistics_target\x18\x1c \x01(\v2\x1b.google.protobuf.Int64ValueR\x17defaultStatisticsTarget\x12\x80\x01\n" +
	"\x14constraint_exclusion\x18\x1d \x01(\x0e2M.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.ConstraintExclusionR\x13constraintExclusion\x12P\n" +
	"\x15cursor_tuple_fraction\x18\x1e \x01(\v2\x1c.google.protobuf.DoubleValueR\x13cursorTupleFraction\x12]\n" +
	"\x13from_collapse_limit\x18\x1f \x01(\v2\x1b.google.protobuf.Int64ValueB\x10\xfa\xc71\f1-2147483647R\x11fromCollapseLimit\x12]\n" +
	"\x13join_collapse_limit\x18  \x01(\v2\x1b.google.protobuf.Int64ValueB\x10\xfa\xc71\f1-2147483647R\x11joinCollapseLimit\x12{\n" +
	"\x13force_parallel_mode\x18! \x01(\x0e2K.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.ForceParallelModeR\x11forceParallelMode\x12r\n" +
	"\x13client_min_messages\x18\" \x01(\x0e2B.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.LogLevelR\x11clientMinMessages\x12l\n" +
	"\x10log_min_messages\x18# \x01(\x0e2B.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.LogLevelR\x0elogMinMessages\x12y\n" +
	"\x17log_min_error_statement\x18$ \x01(\x0e2B.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.LogLevelR\x14logMinErrorStatement\x12X\n" +
	"\x1alog_min_duration_statement\x18% \x01(\v2\x1b.google.protobuf.Int64ValueR\x17logMinDurationStatement\x12C\n" +
	"\x0flog_checkpoints\x18& \x01(\v2\x1a.google.protobuf.BoolValueR\x0elogCheckpoints\x12C\n" +
	"\x0flog_connections\x18' \x01(\v2\x1a.google.protobuf.BoolValueR\x0elogConnections\x12I\n" +
	"\x12log_disconnections\x18( \x01(\v2\x1a.google.protobuf.BoolValueR\x11logDisconnections\x12=\n" +
	"\flog_duration\x18) \x01(\v2\x1a.google.protobuf.BoolValueR\vlogDuration\x12{\n" +
	"\x13log_error_verbosity\x18* \x01(\x0e2K.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.LogErrorVerbosityR\x11logErrorVerbosity\x12@\n" +
	"\x0elog_lock_waits\x18+ \x01(\v2\x1a.google.protobuf.BoolValueR\flogLockWaits\x12k\n" +
	"\rlog_statement\x18, \x01(\x0e2F.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.LogStatementR\flogStatement\x12A\n" +
	"\x0elog_temp_files\x18- \x01(\v2\x1b.google.protobuf.Int64ValueR\flogTempFiles\x12\x1f\n" +
	"\vsearch_path\x18. \x01(\tR\n" +
	"searchPath\x12=\n" +
	"\frow_security\x18/ \x01(\v2\x1a.google.protobuf.BoolValueR\vrowSecurity\x12\x92\x01\n" +
	"\x1ddefault_transaction_isolation\x180 \x01(\x0e2N.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.TransactionIsolationR\x1bdefaultTransactionIsolation\x12H\n" +
	"\x11statement_timeout\x181 \x01(\v2\x1b.google.protobuf.Int64ValueR\x10statementTimeout\x12>\n" +
	"\flock_timeout\x182 \x01(\v2\x1b.google.protobuf.Int64ValueR\vlockTimeout\x12{\n" +
	"#idle_in_transaction_session_timeout\x183 \x01(\v2\x1b.google.protobuf.Int64ValueB\x10\xfa\xc71\f0-2147483647R\x1fidleInTransactionSessionTimeout\x12h\n" +
	"\fbytea_output\x184 \x01(\x0e2E.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.ByteaOutputR\vbyteaOutput\x12a\n" +
	"\txmlbinary\x185 \x01(\x0e2C.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.XmlBinaryR\txmlbinary\x12a\n" +
	"\txmloption\x186 \x01(\x0e2C.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.XmlOptionR\txmloption\x12P\n" +
	"\x16gin_pending_list_limit\x187 \x01(\v2\x1b.google.protobuf.Int64ValueR\x13ginPendingListLimit\x12F\n" +
	"\x10deadlock_timeout\x188 \x01(\v2\x1b.google.protobuf.Int64ValueR\x0fdeadlockTimeout\x12V\n" +
	"\x19max_locks_per_transaction\x189 \x01(\v2\x1b.google.protobuf.Int64ValueR\x16maxLocksPerTransaction\x12_\n" +
	"\x1emax_pred_locks_per_transaction\x18: \x01(\v2\x1b.google.protobuf.Int64ValueR\x1amaxPredLocksPerTransaction\x12;\n" +
	"\varray_nulls\x18; \x01(\v2\x1a.google.protobuf.BoolValueR\n" +
	"arrayNulls\x12q\n" +
	"\x0fbackslash_quote\x18< \x01(\x0e2H.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.BackslashQuoteR\x0ebackslashQuote\x12F\n" +
	"\x11default_with_oids\x18= \x01(\v2\x1a.google.protobuf.BoolValueR\x0fdefaultWithOids\x12N\n" +
	"\x15escape_string_warning\x18> \x01(\v2\x1a.google.protobuf.BoolValueR\x13escapeStringWarning\x12L\n" +
	"\x14lo_compat_privileges\x18? \x01(\v2\x1a.google.protobuf.BoolValueR\x12loCompatPrivileges\x12Z\n" +
	"\x1boperator_precedence_warning\x18@ \x01(\v2\x1a.google.protobuf.BoolValueR\x19operatorPrecedenceWarning\x12N\n" +
	"\x15quote_all_identifiers\x18A \x01(\v2\x1a.google.protobuf.BoolValueR\x13quoteAllIdentifiers\x12Z\n" +
	"\x1bstandard_conforming_strings\x18B \x01(\v2\x1a.google.protobuf.BoolValueR\x19standardConformingStrings\x12M\n" +
	"\x14synchronize_seqscans\x18C \x01(\v2\x1a.google.protobuf.BoolValueR\x13synchronizeSeqscans\x12N\n" +
	"\x15transform_null_equals\x18D \x01(\v2\x1a.google.protobuf.BoolValueR\x13transformNullEquals\x12>\n" +
	"\rexit_on_error\x18E \x01(\v2\x1a.google.protobuf.BoolValueR\vexitOnError\x12@\n" +
	"\rseq_page_cost\x18F \x01(\v2\x1c.google.protobuf.DoubleValueR\vseqPageCost\x12F\n" +
	"\x10random_page_cost\x18G \x01(\v2\x1c.google.protobuf.DoubleValueR\x0erandomPageCost\x12[\n" +
	"\x16autovacuum_max_workers\x18H \x01(\v2\x1b.google.protobuf.Int64ValueB\b\xfa\xc71\x041-32R\x14autovacuumMaxWorkers\x12h\n" +
	"\x1cautovacuum_vacuum_cost_delay\x18I \x01(\v2\x1b.google.protobuf.Int64ValueB\n" +
	"\xfa\xc71\x06-1-100R\x19autovacuumVacuumCostDelay\x12j\n" +
	"\x1cautovacuum_vacuum_cost_limit\x18J \x01(\v2\x1b.google.protobuf.Int64ValueB\f\xfa\xc71\b-1-10000R\x19autovacuumVacuumCostLimit\x12]\n" +
	"\x12autovacuum_naptime\x18K \x01(\v2\x1b.google.protobuf.Int64ValueB\x11\xfa\xc71\r1000-86400000R\x11autovacuumNaptime\x12X\n" +
	"\x0farchive_timeout\x18L \x01(\v2\x1b.google.protobuf.Int64ValueB\x12\xfa\xc71\x0e10000-86400000R\x0earchiveTimeout\x12f\n" +
	"\x19track_activity_query_size\x18M \x01(\v2\x1b.google.protobuf.Int64ValueB\x0e\xfa\xc71\n" +
	"100-102400R\x16trackActivityQuerySize\x12G\n" +
	"\x11enable_bitmapscan\x18P \x01(\v2\x1a.google.protobuf.BoolValueR\x10enableBitmapscan\x12A\n" +
	"\x0eenable_hashagg\x18Q \x01(\v2\x1a.google.protobuf.BoolValueR\renableHashagg\x12C\n" +
	"\x0fenable_hashjoin\x18R \x01(\v2\x1a.google.protobuf.BoolValueR\x0eenableHashjoin\x12E\n" +
	"\x10enable_indexscan\x18S \x01(\v2\x1a.google.protobuf.BoolValueR\x0fenableIndexscan\x12M\n" +
	"\x14enable_indexonlyscan\x18T \x01(\v2\x1a.google.protobuf.BoolValueR\x13enableIndexonlyscan\x12C\n" +
	"\x0fenable_material\x18U \x01(\v2\x1a.google.protobuf.BoolValueR\x0eenableMaterial\x12E\n" +
	"\x10enable_mergejoin\x18V \x01(\v2\x1a.google.protobuf.BoolValueR\x0fenableMergejoin\x12C\n" +
	"\x0fenable_nestloop\x18W \x01(\v2\x1a.google.protobuf.BoolValueR\x0eenableNestloop\x12A\n" +
	"\x0eenable_seqscan\x18X \x01(\v2\x1a.google.protobuf.BoolValueR\renableSeqscan\x12;\n" +
	"\venable_sort\x18Y \x01(\v2\x1a.google.protobuf.BoolValueR\n" +
	"enableSort\x12A\n" +
	"\x0eenable_tidscan\x18Z \x01(\v2\x1a.google.protobuf.BoolValueR\renableTidscan\x12Y\n" +
	"\x14max_worker_processes\x18[ \x01(\v2\x1b.google.protobuf.Int64ValueB\n" +
	"\xfa\xc71\x060-1024R\x12maxWorkerProcesses\x12Y\n" +
	"\x14max_parallel_workers\x18\\ \x01(\v2\x1b.google.protobuf.Int64ValueB\n" +
	"\xfa\xc71\x060-1024R\x12maxParallelWorkers\x12m\n" +
	"\x1fmax_parallel_workers_per_gather\x18] \x01(\v2\x1b.google.protobuf.Int64ValueB\n" +
	"\xfa\xc71\x060-1024R\x1bmaxParallelWorkersPerGather\x12n\n" +
	"\x1eautovacuum_vacuum_scale_factor\x18^ \x01(\v2\x1c.google.protobuf.DoubleValueB\v\xfa\xc71\a0.0-1.0R\x1bautovacuumVacuumScaleFactor\x12p\n" +
	"\x1fautovacuum_analyze_scale_factor\x18_ \x01(\v2\x1c.google.protobuf.DoubleValueB\v\xfa\xc71\a0.0-1.0R\x1cautovacuumAnalyzeScaleFactor\x12]\n" +
	"\x1ddefault_transaction_read_only\x18` \x01(\v2\x1a.google.protobuf.BoolValueR\x1adefaultTransactionReadOnly\x12\x1a\n" +
	"\btimezone\x18a \x01(\tR\btimezone\x12P\n" +
	"\x16enable_parallel_append\x18b \x01(\v2\x1a.google.protobuf.BoolValueR\x14enableParallelAppend\x12L\n" +
	"\x14enable_parallel_hash\x18c \x01(\v2\x1a.google.protobuf.BoolValueR\x12enableParallelHash\x12T\n" +
	"\x18enable_partition_pruning\x18d \x01(\v2\x1a.google.protobuf.BoolValueR\x16enablePartitionPruning\x12`\n" +
	"\x1eenable_partitionwise_aggregate\x18e \x01(\v2\x1a.google.protobuf.BoolValueR\x1cenablePartitionwiseAggregate\x12V\n" +
	"\x19enable_partitionwise_join\x18f \x01(\v2\x1a.google.protobuf.BoolValueR\x17enablePartitionwiseJoin\x12,\n" +
	"\x03jit\x18g \x01(\v2\x1a.google.protobuf.BoolValueR\x03jit\x12m\n" +
	" max_parallel_maintenance_workers\x18h \x01(\v2\x1b.google.protobuf.Int64ValueB\a\xfa\xc71\x03>=0R\x1dmaxParallelMaintenanceWorkers\x12^\n" +
	"\x1dparallel_leader_participation\x18i \x01(\v2\x1a.google.protobuf.BoolValueR\x1bparallelLeaderParticipation\x12}\n" +
	"!vacuum_cleanup_index_scale_factor\x18j \x01(\v2\x1c.google.protobuf.DoubleValueB\x15\xfa\xc71\x110.0-10000000000.0R\x1dvacuumCleanupIndexScaleFactor\x12h\n" +
	"\x1blog_transaction_sample_rate\x18k \x01(\v2\x1c.google.protobuf.DoubleValueB\v\xfa\xc71\a0.0-1.0R\x18logTransactionSampleRate\x12o\n" +
	"\x0fplan_cache_mode\x18l \x01(\x0e2G.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.PlanCacheModeR\rplanCacheMode\x12a\n" +
	"\x18effective_io_concurrency\x18m \x01(\v2\x1b.google.protobuf.Int64ValueB\n" +
	"\xfa\xc71\x060-1000R\x16effectiveIoConcurrency\x12g\n" +
	"\x14effective_cache_size\x18n \x01(\v2\x1b.google.protobuf.Int64ValueB\x18\xfa\xc71\x141048576-549755813888R\x12effectiveCacheSize\x12\x8a\x01\n" +
	"\x18shared_preload_libraries\x18o \x03(\x0e2P.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.SharedPreloadLibrariesR\x16sharedPreloadLibraries\x12p\n" +
	"\x1dauto_explain_log_min_duration\x18p \x01(\v2\x1b.google.protobuf.Int64ValueB\x11\xfa\xc71\r-1-2147483647R\x19autoExplainLogMinDuration\x12S\n" +
	"\x18auto_explain_log_analyze\x18q \x01(\v2\x1a.google.protobuf.BoolValueR\x15autoExplainLogAnalyze\x12S\n" +
	"\x18auto_explain_log_buffers\x18r \x01(\v2\x1a.google.protobuf.BoolValueR\x15autoExplainLogBuffers\x12Q\n" +
	"\x17auto_explain_log_timing\x18s \x01(\v2\x1a.google.protobuf.BoolValueR\x14autoExplainLogTiming\x12U\n" +
	"\x19auto_explain_log_triggers\x18t \x01(\v2\x1a.google.protobuf.BoolValueR\x16autoExplainLogTriggers\x12S\n" +
	"\x18auto_explain_log_verbose\x18u \x01(\v2\x1a.google.protobuf.BoolValueR\x15autoExplainLogVerbose\x12f\n" +
	"\"auto_explain_log_nested_statements\x18v \x01(\v2\x1a.google.protobuf.BoolValueR\x1eautoExplainLogNestedStatements\x12b\n" +
	"\x18auto_explain_sample_rate\x18w \x01(\v2\x1c.google.protobuf.DoubleValueB\v\xfa\xc71\a0.0-1.0R\x15autoExplainSampleRate\x12R\n" +
	"\x18pg_hint_plan_enable_hint\x18x \x01(\v2\x1a.google.protobuf.BoolValueR\x14pgHintPlanEnableHint\x12]\n" +
	"\x1epg_hint_plan_enable_hint_table\x18y \x01(\v2\x1a.google.protobuf.BoolValueR\x19pgHintPlanEnableHintTable\x12\x86\x01\n" +
	"\x18pg_hint_plan_debug_print\x18z \x01(\x0e2N.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.PgHintPlanDebugPrintR\x14pgHintPlanDebugPrint\x12~\n" +
	"\x1apg_hint_plan_message_level\x18{ \x01(\x0e2B.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.LogLevelR\x16pgHintPlanMessageLevel\x12L\n" +
	"\x14pg_qualstats_enabled\x18| \x01(\v2\x1a.google.protobuf.BoolValueR\x12pgQualstatsEnabled\x12[\n" +
	"\x1cpg_qualstats_track_constants\x18} \x01(\v2\x1a.google.protobuf.BoolValueR\x19pgQualstatsTrackConstants\x12E\n" +
	"\x10pg_qualstats_max\x18~ \x01(\v2\x1b.google.protobuf.Int64ValueR\x0epgQualstatsMax\x12U\n" +
	"\x19pg_qualstats_resolve_oids\x18\x7f \x01(\v2\x1a.google.protobuf.BoolValueR\x16pgQualstatsResolveOids\x12V\n" +
	"\x18pg_qualstats_sample_rate\x18\x80\x01 \x01(\v2\x1c.google.protobuf.DoubleValueR\x15pgQualstatsSampleRate\x12Y\n" +
	"\x0fmax_stack_depth\x18\x96\x01 \x01(\v2\x1b.google.protobuf.Int64ValueB\x13\xfa\xc71\x0f65536-134217728R\rmaxStackDepth\x12/\n" +
	"\x04geqo\x18\x98\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\x04geqo\x12U\n" +
	"\x0egeqo_threshold\x18\x99\x01 \x01(\v2\x1b.google.protobuf.Int64ValueB\x10\xfa\xc71\f2-2147483647R\rgeqoThreshold\x12G\n" +
	"\vgeqo_effort\x18\x9a\x01 \x01(\v2\x1b.google.protobuf.Int64ValueB\b\xfa\xc71\x041-10R\n" +
	"geqoEffort\x12B\n" +
	"\x0egeqo_pool_size\x18\x9b\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\fgeqoPoolSize\x12G\n" +
	"\x10geqo_generations\x18\x9c\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\x0fgeqoGenerations\x12Z\n" +
	"\x13geqo_selection_bias\x18\x9d\x01 \x01(\v2\x1c.google.protobuf.DoubleValueB\v\xfa\xc71\a1.5-2.0R\x11geqoSelectionBias\x12G\n" +
	"\tgeqo_seed\x18\x9e\x01 \x01(\v2\x1c.google.protobuf.DoubleValueB\v\xfa\xc71\a0.0-1.0R\bgeqoSeed\x12k\n" +
	"\x1cpg_trgm_similarity_threshold\x18\x9f\x01 \x01(\v2\x1c.google.protobuf.DoubleValueB\v\xfa\xc71\a0.0-1.0R\x19pgTrgmSimilarityThreshold\x12t\n" +
	"!pg_trgm_word_similarity_threshold\x18\xa0\x01 \x01(\v2\x1c.google.protobuf.DoubleValueB\v\xfa\xc71\a0.0-1.0R\x1dpgTrgmWordSimilarityThreshold\x12\x81\x01\n" +
	"(pg_trgm_strict_word_similarity_threshold\x18\xa1\x01 \x01(\v2\x1c.google.protobuf.DoubleValueB\v\xfa\xc71\a0.0-1.0R#pgTrgmStrictWordSimilarityThreshold\x12W\n" +
	"\x19max_standby_archive_delay\x18\xa2\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\x16maxStandbyArchiveDelay\x12h\n" +
	"\x18session_duration_timeout\x18\xa3\x01 \x01(\v2\x1b.google.protobuf.Int64ValueB\x10\xfa\xc71\f0-2147483647R\x16sessionDurationTimeout\x12U\n" +
	"\x18log_replication_commands\x18\xa4\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\x16logReplicationCommands\x12n\n" +
	"\x1blog_autovacuum_min_duration\x18\xa5\x01 \x01(\v2\x1b.google.protobuf.Int64ValueB\x11\xfa\xc71\r-1-2147483647R\x18logAutovacuumMinDuration\x12~\n" +
	"\x13password_encryption\x18\xa7\x01 \x01(\x0e2L.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.PasswordEncryptionR\x12passwordEncryption\"\x9a\x01\n" +
	"\x0eBackslashQuote\x12\x1f\n" +
	"\x1bBACKSLASH_QUOTE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fBACKSLASH_QUOTE\x10\x01\x12\x16\n" +
	"\x12BACKSLASH_QUOTE_ON\x10\x02\x12\x17\n" +
	"\x13BACKSLASH_QUOTE_OFF\x10\x03\x12!\n" +
	"\x1dBACKSLASH_QUOTE_SAFE_ENCODING\x10\x04\"[\n" +
	"\vByteaOutput\x12\x1c\n" +
	"\x18BYTEA_OUTPUT_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10BYTEA_OUTPUT_HEX\x10\x01\x12\x18\n" +
	"\x14BYTEA_OUTPUT_ESCAPED\x10\x02\"\x9a\x01\n" +
	"\x13ConstraintExclusion\x12$\n" +
	" CONSTRAINT_EXCLUSION_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17CONSTRAINT_EXCLUSION_ON\x10\x01\x12\x1c\n" +
	"\x18CONSTRAINT_EXCLUSION_OFF\x10\x02\x12\"\n" +
	"\x1eCONSTRAINT_EXCLUSION_PARTITION\x10\x03\"\x92\x01\n" +
	"\x11ForceParallelMode\x12#\n" +
	"\x1fFORCE_PARALLEL_MODE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16FORCE_PARALLEL_MODE_ON\x10\x01\x12\x1b\n" +
	"\x17FORCE_PARALLEL_MODE_OFF\x10\x02\x12\x1f\n" +
	"\x1bFORCE_PARALLEL_MODE_REGRESS\x10\x03\"\x99\x01\n" +
	"\x11LogErrorVerbosity\x12#\n" +
	"\x1fLOG_ERROR_VERBOSITY_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19LOG_ERROR_VERBOSITY_TERSE\x10\x01\x12\x1f\n" +
	"\x1bLOG_ERROR_VERBOSITY_DEFAULT\x10\x02\x12\x1f\n" +
	"\x1bLOG_ERROR_VERBOSITY_VERBOSE\x10\x03\"\x92\x02\n" +
	"\bLogLevel\x12\x19\n" +
	"\x15LOG_LEVEL_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10LOG_LEVEL_DEBUG5\x10\x01\x12\x14\n" +
	"\x10LOG_LEVEL_DEBUG4\x10\x02\x12\x14\n" +
	"\x10LOG_LEVEL_DEBUG3\x10\x03\x12\x14\n" +
	"\x10LOG_LEVEL_DEBUG2\x10\x04\x12\x14\n" +
	"\x10LOG_LEVEL_DEBUG1\x10\x05\x12\x11\n" +
	"\rLOG_LEVEL_LOG\x10\x06\x12\x14\n" +
	"\x10LOG_LEVEL_NOTICE\x10\a\x12\x15\n" +
	"\x11LOG_LEVEL_WARNING\x10\b\x12\x13\n" +
	"\x0fLOG_LEVEL_ERROR\x10\t\x12\x13\n" +
	"\x0fLOG_LEVEL_FATAL\x10\n" +
	"\x12\x13\n" +
	"\x0fLOG_LEVEL_PANIC\x10\v\"\x8a\x01\n" +
	"\fLogStatement\x12\x1d\n" +
	"\x19LOG_STATEMENT_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12LOG_STATEMENT_NONE\x10\x01\x12\x15\n" +
	"\x11LOG_STATEMENT_DDL\x10\x02\x12\x15\n" +
	"\x11LOG_STATEMENT_MOD\x10\x03\x12\x15\n" +
	"\x11LOG_STATEMENT_ALL\x10\x04\"}\n" +
	"\x12PasswordEncryption\x12#\n" +
	"\x1fPASSWORD_ENCRYPTION_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17PASSWORD_ENCRYPTION_MD5\x10\x01\x12%\n" +
	"!PASSWORD_ENCRYPTION_SCRAM_SHA_256\x10\x02\"\xd0\x01\n" +
	"\x14PgHintPlanDebugPrint\x12(\n" +
	"$PG_HINT_PLAN_DEBUG_PRINT_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cPG_HINT_PLAN_DEBUG_PRINT_OFF\x10\x01\x12\x1f\n" +
	"\x1bPG_HINT_PLAN_DEBUG_PRINT_ON\x10\x02\x12%\n" +
	"!PG_HINT_PLAN_DEBUG_PRINT_DETAILED\x10\x03\x12$\n" +
	" PG_HINT_PLAN_DEBUG_PRINT_VERBOSE\x10\x04\"\x99\x01\n" +
	"\rPlanCacheMode\x12\x1f\n" +
	"\x1bPLAN_CACHE_MODE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14PLAN_CACHE_MODE_AUTO\x10\x01\x12%\n" +
	"!PLAN_CACHE_MODE_FORCE_CUSTOM_PLAN\x10\x02\x12&\n" +
	"\"PLAN_CACHE_MODE_FORCE_GENERIC_PLAN\x10\x03\"\x8a\x03\n" +
	"\x16SharedPreloadLibraries\x12(\n" +
	"$SHARED_PRELOAD_LIBRARIES_UNSPECIFIED\x10\x00\x12)\n" +
	"%SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN\x10\x01\x12)\n" +
	"%SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN\x10\x02\x12(\n" +
	"$SHARED_PRELOAD_LIBRARIES_TIMESCALEDB\x10\x03\x12)\n" +
	"%SHARED_PRELOAD_LIBRARIES_PG_QUALSTATS\x10\x04\x12$\n" +
	" SHARED_PRELOAD_LIBRARIES_PG_CRON\x10\x05\x12&\n" +
	"\"SHARED_PRELOAD_LIBRARIES_PGLOGICAL\x10\x06\x12'\n" +
	"#SHARED_PRELOAD_LIBRARIES_PG_PREWARM\x10\a\x12$\n" +
	" SHARED_PRELOAD_LIBRARIES_PGAUDIT\x10\b\"\xd6\x01\n" +
	"\x11SynchronousCommit\x12\"\n" +
	"\x1eSYNCHRONOUS_COMMIT_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15SYNCHRONOUS_COMMIT_ON\x10\x01\x12\x1a\n" +
	"\x16SYNCHRONOUS_COMMIT_OFF\x10\x02\x12\x1c\n" +
	"\x18SYNCHRONOUS_COMMIT_LOCAL\x10\x03\x12#\n" +
	"\x1fSYNCHRONOUS_COMMIT_REMOTE_WRITE\x10\x04\x12#\n" +
	"\x1fSYNCHRONOUS_COMMIT_REMOTE_APPLY\x10\x05\"\xe6\x01\n" +
	"\x14TransactionIsolation\x12%\n" +
	"!TRANSACTION_ISOLATION_UNSPECIFIED\x10\x00\x12*\n" +
	"&TRANSACTION_ISOLATION_READ_UNCOMMITTED\x10\x01\x12(\n" +
	"$TRANSACTION_ISOLATION_READ_COMMITTED\x10\x02\x12)\n" +
	"%TRANSACTION_ISOLATION_REPEATABLE_READ\x10\x03\x12&\n" +
	"\"TRANSACTION_ISOLATION_SERIALIZABLE\x10\x04\"S\n" +
	"\bWalLevel\x12\x19\n" +
	"\x15WAL_LEVEL_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11WAL_LEVEL_REPLICA\x10\x01\x12\x15\n" +
	"\x11WAL_LEVEL_LOGICAL\x10\x02\"R\n" +
	"\tXmlBinary\x12\x1a\n" +
	"\x16XML_BINARY_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11XML_BINARY_BASE64\x10\x01\x12\x12\n" +
	"\x0eXML_BINARY_HEX\x10\x02\"X\n" +
	"\tXmlOption\x12\x1a\n" +
	"\x16XML_OPTION_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13XML_OPTION_DOCUMENT\x10\x01\x12\x16\n" +
	"\x12XML_OPTION_CONTENT\x10\x02J\x06\b\x81\x01\x10\x96\x01J\x06\b\x97\x01\x10\x98\x01J\x06\b\xa6\x01\x10\xa7\x01J\x04\bN\x10P\"\xbb\x02\n" +
	"\x15PostgresqlConfigSet12\x12d\n" +
	"\x10effective_config\x18\x01 \x01(\v29.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12R\x0feffectiveConfig\x12Z\n" +
	"\vuser_config\x18\x02 \x01(\v29.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12R\n" +
	"userConfig\x12`\n" +
	"\x0edefault_config\x18\x03 \x01(\v29.yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12R\rdefaultConfigB\x81\x01\n" +
	")yandex.cloud.api.mdb.postgresql.v1.configZTgithub.com/yandex-cloud/go-genproto/yandex/cloud/mdb/postgresql/v1/config;postgresqlb\x06proto3"

var (
	file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescOnce sync.Once
	file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescData []byte
)

func file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescGZIP() []byte {
	file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDesc), len(file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDesc)))
	})
	return file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDescData
}

var file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes = make([]protoimpl.EnumInfo, 16)
var file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_goTypes = []any{
	(PostgresqlConfig12_BackslashQuote)(0),         // 0: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.BackslashQuote
	(PostgresqlConfig12_ByteaOutput)(0),            // 1: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.ByteaOutput
	(PostgresqlConfig12_ConstraintExclusion)(0),    // 2: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.ConstraintExclusion
	(PostgresqlConfig12_ForceParallelMode)(0),      // 3: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.ForceParallelMode
	(PostgresqlConfig12_LogErrorVerbosity)(0),      // 4: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.LogErrorVerbosity
	(PostgresqlConfig12_LogLevel)(0),               // 5: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.LogLevel
	(PostgresqlConfig12_LogStatement)(0),           // 6: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.LogStatement
	(PostgresqlConfig12_PasswordEncryption)(0),     // 7: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.PasswordEncryption
	(PostgresqlConfig12_PgHintPlanDebugPrint)(0),   // 8: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.PgHintPlanDebugPrint
	(PostgresqlConfig12_PlanCacheMode)(0),          // 9: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.PlanCacheMode
	(PostgresqlConfig12_SharedPreloadLibraries)(0), // 10: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.SharedPreloadLibraries
	(PostgresqlConfig12_SynchronousCommit)(0),      // 11: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.SynchronousCommit
	(PostgresqlConfig12_TransactionIsolation)(0),   // 12: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.TransactionIsolation
	(PostgresqlConfig12_WalLevel)(0),               // 13: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.WalLevel
	(PostgresqlConfig12_XmlBinary)(0),              // 14: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.XmlBinary
	(PostgresqlConfig12_XmlOption)(0),              // 15: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.XmlOption
	(*PostgresqlConfig12)(nil),                     // 16: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12
	(*PostgresqlConfigSet12)(nil),                  // 17: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet12
	(*wrapperspb.Int64Value)(nil),                  // 18: google.protobuf.Int64Value
	(*wrapperspb.DoubleValue)(nil),                 // 19: google.protobuf.DoubleValue
	(*wrapperspb.BoolValue)(nil),                   // 20: google.protobuf.BoolValue
}
var file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_depIdxs = []int32{
	18,  // 0: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.max_connections:type_name -> google.protobuf.Int64Value
	18,  // 1: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.shared_buffers:type_name -> google.protobuf.Int64Value
	18,  // 2: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.temp_buffers:type_name -> google.protobuf.Int64Value
	18,  // 3: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.max_prepared_transactions:type_name -> google.protobuf.Int64Value
	18,  // 4: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.work_mem:type_name -> google.protobuf.Int64Value
	18,  // 5: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.maintenance_work_mem:type_name -> google.protobuf.Int64Value
	18,  // 6: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.autovacuum_work_mem:type_name -> google.protobuf.Int64Value
	18,  // 7: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.temp_file_limit:type_name -> google.protobuf.Int64Value
	18,  // 8: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.vacuum_cost_delay:type_name -> google.protobuf.Int64Value
	18,  // 9: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.vacuum_cost_page_hit:type_name -> google.protobuf.Int64Value
	18,  // 10: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.vacuum_cost_page_miss:type_name -> google.protobuf.Int64Value
	18,  // 11: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.vacuum_cost_page_dirty:type_name -> google.protobuf.Int64Value
	18,  // 12: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.vacuum_cost_limit:type_name -> google.protobuf.Int64Value
	18,  // 13: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.bgwriter_delay:type_name -> google.protobuf.Int64Value
	18,  // 14: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.bgwriter_lru_maxpages:type_name -> google.protobuf.Int64Value
	19,  // 15: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.bgwriter_lru_multiplier:type_name -> google.protobuf.DoubleValue
	18,  // 16: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.bgwriter_flush_after:type_name -> google.protobuf.Int64Value
	18,  // 17: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.backend_flush_after:type_name -> google.protobuf.Int64Value
	18,  // 18: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.old_snapshot_threshold:type_name -> google.protobuf.Int64Value
	13,  // 19: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.wal_level:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.WalLevel
	11,  // 20: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.synchronous_commit:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.SynchronousCommit
	18,  // 21: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.checkpoint_timeout:type_name -> google.protobuf.Int64Value
	19,  // 22: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.checkpoint_completion_target:type_name -> google.protobuf.DoubleValue
	18,  // 23: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.checkpoint_flush_after:type_name -> google.protobuf.Int64Value
	18,  // 24: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.max_wal_size:type_name -> google.protobuf.Int64Value
	18,  // 25: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.min_wal_size:type_name -> google.protobuf.Int64Value
	18,  // 26: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.max_standby_streaming_delay:type_name -> google.protobuf.Int64Value
	18,  // 27: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.default_statistics_target:type_name -> google.protobuf.Int64Value
	2,   // 28: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.constraint_exclusion:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.ConstraintExclusion
	19,  // 29: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.cursor_tuple_fraction:type_name -> google.protobuf.DoubleValue
	18,  // 30: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.from_collapse_limit:type_name -> google.protobuf.Int64Value
	18,  // 31: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.join_collapse_limit:type_name -> google.protobuf.Int64Value
	3,   // 32: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.force_parallel_mode:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.ForceParallelMode
	5,   // 33: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.client_min_messages:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.LogLevel
	5,   // 34: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.log_min_messages:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.LogLevel
	5,   // 35: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.log_min_error_statement:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.LogLevel
	18,  // 36: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.log_min_duration_statement:type_name -> google.protobuf.Int64Value
	20,  // 37: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.log_checkpoints:type_name -> google.protobuf.BoolValue
	20,  // 38: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.log_connections:type_name -> google.protobuf.BoolValue
	20,  // 39: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.log_disconnections:type_name -> google.protobuf.BoolValue
	20,  // 40: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.log_duration:type_name -> google.protobuf.BoolValue
	4,   // 41: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.log_error_verbosity:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.LogErrorVerbosity
	20,  // 42: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.log_lock_waits:type_name -> google.protobuf.BoolValue
	6,   // 43: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.log_statement:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.LogStatement
	18,  // 44: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.log_temp_files:type_name -> google.protobuf.Int64Value
	20,  // 45: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.row_security:type_name -> google.protobuf.BoolValue
	12,  // 46: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.default_transaction_isolation:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.TransactionIsolation
	18,  // 47: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.statement_timeout:type_name -> google.protobuf.Int64Value
	18,  // 48: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.lock_timeout:type_name -> google.protobuf.Int64Value
	18,  // 49: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.idle_in_transaction_session_timeout:type_name -> google.protobuf.Int64Value
	1,   // 50: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.bytea_output:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.ByteaOutput
	14,  // 51: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.xmlbinary:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.XmlBinary
	15,  // 52: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.xmloption:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.XmlOption
	18,  // 53: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.gin_pending_list_limit:type_name -> google.protobuf.Int64Value
	18,  // 54: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.deadlock_timeout:type_name -> google.protobuf.Int64Value
	18,  // 55: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.max_locks_per_transaction:type_name -> google.protobuf.Int64Value
	18,  // 56: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.max_pred_locks_per_transaction:type_name -> google.protobuf.Int64Value
	20,  // 57: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.array_nulls:type_name -> google.protobuf.BoolValue
	0,   // 58: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.backslash_quote:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.BackslashQuote
	20,  // 59: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.default_with_oids:type_name -> google.protobuf.BoolValue
	20,  // 60: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.escape_string_warning:type_name -> google.protobuf.BoolValue
	20,  // 61: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.lo_compat_privileges:type_name -> google.protobuf.BoolValue
	20,  // 62: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.operator_precedence_warning:type_name -> google.protobuf.BoolValue
	20,  // 63: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.quote_all_identifiers:type_name -> google.protobuf.BoolValue
	20,  // 64: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.standard_conforming_strings:type_name -> google.protobuf.BoolValue
	20,  // 65: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.synchronize_seqscans:type_name -> google.protobuf.BoolValue
	20,  // 66: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.transform_null_equals:type_name -> google.protobuf.BoolValue
	20,  // 67: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.exit_on_error:type_name -> google.protobuf.BoolValue
	19,  // 68: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.seq_page_cost:type_name -> google.protobuf.DoubleValue
	19,  // 69: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.random_page_cost:type_name -> google.protobuf.DoubleValue
	18,  // 70: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.autovacuum_max_workers:type_name -> google.protobuf.Int64Value
	18,  // 71: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.autovacuum_vacuum_cost_delay:type_name -> google.protobuf.Int64Value
	18,  // 72: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.autovacuum_vacuum_cost_limit:type_name -> google.protobuf.Int64Value
	18,  // 73: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.autovacuum_naptime:type_name -> google.protobuf.Int64Value
	18,  // 74: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.archive_timeout:type_name -> google.protobuf.Int64Value
	18,  // 75: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.track_activity_query_size:type_name -> google.protobuf.Int64Value
	20,  // 76: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.enable_bitmapscan:type_name -> google.protobuf.BoolValue
	20,  // 77: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.enable_hashagg:type_name -> google.protobuf.BoolValue
	20,  // 78: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.enable_hashjoin:type_name -> google.protobuf.BoolValue
	20,  // 79: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.enable_indexscan:type_name -> google.protobuf.BoolValue
	20,  // 80: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.enable_indexonlyscan:type_name -> google.protobuf.BoolValue
	20,  // 81: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.enable_material:type_name -> google.protobuf.BoolValue
	20,  // 82: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.enable_mergejoin:type_name -> google.protobuf.BoolValue
	20,  // 83: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.enable_nestloop:type_name -> google.protobuf.BoolValue
	20,  // 84: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.enable_seqscan:type_name -> google.protobuf.BoolValue
	20,  // 85: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.enable_sort:type_name -> google.protobuf.BoolValue
	20,  // 86: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.enable_tidscan:type_name -> google.protobuf.BoolValue
	18,  // 87: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.max_worker_processes:type_name -> google.protobuf.Int64Value
	18,  // 88: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.max_parallel_workers:type_name -> google.protobuf.Int64Value
	18,  // 89: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.max_parallel_workers_per_gather:type_name -> google.protobuf.Int64Value
	19,  // 90: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.autovacuum_vacuum_scale_factor:type_name -> google.protobuf.DoubleValue
	19,  // 91: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.autovacuum_analyze_scale_factor:type_name -> google.protobuf.DoubleValue
	20,  // 92: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.default_transaction_read_only:type_name -> google.protobuf.BoolValue
	20,  // 93: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.enable_parallel_append:type_name -> google.protobuf.BoolValue
	20,  // 94: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.enable_parallel_hash:type_name -> google.protobuf.BoolValue
	20,  // 95: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.enable_partition_pruning:type_name -> google.protobuf.BoolValue
	20,  // 96: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.enable_partitionwise_aggregate:type_name -> google.protobuf.BoolValue
	20,  // 97: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.enable_partitionwise_join:type_name -> google.protobuf.BoolValue
	20,  // 98: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.jit:type_name -> google.protobuf.BoolValue
	18,  // 99: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.max_parallel_maintenance_workers:type_name -> google.protobuf.Int64Value
	20,  // 100: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.parallel_leader_participation:type_name -> google.protobuf.BoolValue
	19,  // 101: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.vacuum_cleanup_index_scale_factor:type_name -> google.protobuf.DoubleValue
	19,  // 102: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.log_transaction_sample_rate:type_name -> google.protobuf.DoubleValue
	9,   // 103: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.plan_cache_mode:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.PlanCacheMode
	18,  // 104: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.effective_io_concurrency:type_name -> google.protobuf.Int64Value
	18,  // 105: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.effective_cache_size:type_name -> google.protobuf.Int64Value
	10,  // 106: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.shared_preload_libraries:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.SharedPreloadLibraries
	18,  // 107: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.auto_explain_log_min_duration:type_name -> google.protobuf.Int64Value
	20,  // 108: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.auto_explain_log_analyze:type_name -> google.protobuf.BoolValue
	20,  // 109: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.auto_explain_log_buffers:type_name -> google.protobuf.BoolValue
	20,  // 110: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.auto_explain_log_timing:type_name -> google.protobuf.BoolValue
	20,  // 111: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.auto_explain_log_triggers:type_name -> google.protobuf.BoolValue
	20,  // 112: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.auto_explain_log_verbose:type_name -> google.protobuf.BoolValue
	20,  // 113: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.auto_explain_log_nested_statements:type_name -> google.protobuf.BoolValue
	19,  // 114: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.auto_explain_sample_rate:type_name -> google.protobuf.DoubleValue
	20,  // 115: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.pg_hint_plan_enable_hint:type_name -> google.protobuf.BoolValue
	20,  // 116: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.pg_hint_plan_enable_hint_table:type_name -> google.protobuf.BoolValue
	8,   // 117: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.pg_hint_plan_debug_print:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.PgHintPlanDebugPrint
	5,   // 118: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.pg_hint_plan_message_level:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.LogLevel
	20,  // 119: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.pg_qualstats_enabled:type_name -> google.protobuf.BoolValue
	20,  // 120: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.pg_qualstats_track_constants:type_name -> google.protobuf.BoolValue
	18,  // 121: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.pg_qualstats_max:type_name -> google.protobuf.Int64Value
	20,  // 122: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.pg_qualstats_resolve_oids:type_name -> google.protobuf.BoolValue
	19,  // 123: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.pg_qualstats_sample_rate:type_name -> google.protobuf.DoubleValue
	18,  // 124: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.max_stack_depth:type_name -> google.protobuf.Int64Value
	20,  // 125: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.geqo:type_name -> google.protobuf.BoolValue
	18,  // 126: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.geqo_threshold:type_name -> google.protobuf.Int64Value
	18,  // 127: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.geqo_effort:type_name -> google.protobuf.Int64Value
	18,  // 128: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.geqo_pool_size:type_name -> google.protobuf.Int64Value
	18,  // 129: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.geqo_generations:type_name -> google.protobuf.Int64Value
	19,  // 130: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.geqo_selection_bias:type_name -> google.protobuf.DoubleValue
	19,  // 131: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.geqo_seed:type_name -> google.protobuf.DoubleValue
	19,  // 132: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.pg_trgm_similarity_threshold:type_name -> google.protobuf.DoubleValue
	19,  // 133: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.pg_trgm_word_similarity_threshold:type_name -> google.protobuf.DoubleValue
	19,  // 134: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.pg_trgm_strict_word_similarity_threshold:type_name -> google.protobuf.DoubleValue
	18,  // 135: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.max_standby_archive_delay:type_name -> google.protobuf.Int64Value
	18,  // 136: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.session_duration_timeout:type_name -> google.protobuf.Int64Value
	20,  // 137: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.log_replication_commands:type_name -> google.protobuf.BoolValue
	18,  // 138: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.log_autovacuum_min_duration:type_name -> google.protobuf.Int64Value
	7,   // 139: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.password_encryption:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12.PasswordEncryption
	16,  // 140: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet12.effective_config:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12
	16,  // 141: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet12.user_config:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12
	16,  // 142: yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet12.default_config:type_name -> yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig12
	143, // [143:143] is the sub-list for method output_type
	143, // [143:143] is the sub-list for method input_type
	143, // [143:143] is the sub-list for extension type_name
	143, // [143:143] is the sub-list for extension extendee
	0,   // [0:143] is the sub-list for field type_name
}

func init() { file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_init() }
func file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_init() {
	if File_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDesc), len(file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_rawDesc)),
			NumEnums:      16,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_msgTypes,
	}.Build()
	File_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto = out.File
	file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_goTypes = nil
	file_yandex_cloud_mdb_postgresql_v1_config_postgresql12_proto_depIdxs = nil
}

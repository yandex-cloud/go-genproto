// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/mdb/postgresql/v1/user_service.proto

package postgresql

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster the user belongs to.
	// To get the cluster ID, use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Name of the PostgreSQL User resource to return.
	// To get the name of the user, use a [UserService.List] request.
	UserName      string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *GetUserRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type ListUsersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the cluster to list PostgreSQL users in.
	// To get the cluster ID, use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than `page_size`, the service returns a [ListUsersResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set `page_token` to the [ListUsersResponse.next_page_token]
	// returned by the previous list request.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListUsersRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListUsersRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUsersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListUsersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of PostgreSQL User resources.
	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListUsersRequest.page_size], use the `next_page_token` as the value
	// for the [ListUsersRequest.page_token] parameter in the next list request. Each subsequent
	// list request will have its own `next_page_token` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListUsersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster to create a user in.
	// To get the cluster ID, use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Properties of the user to be created.
	UserSpec      *UserSpec `protobuf:"bytes,2,opt,name=user_spec,json=userSpec,proto3" json:"user_spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateUserRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *CreateUserRequest) GetUserSpec() *UserSpec {
	if x != nil {
		return x.UserSpec
	}
	return nil
}

type CreateUserMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster the user is being created in.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Name of the user that is being created.
	UserName      string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserMetadata) Reset() {
	*x = CreateUserMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserMetadata) ProtoMessage() {}

func (x *CreateUserMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserMetadata.ProtoReflect.Descriptor instead.
func (*CreateUserMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateUserMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *CreateUserMetadata) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type UpdateUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster the user belongs to.
	// To get the cluster ID use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Name of the user to be updated.
	// To get the name of the user use a [UserService.List] request.
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// Field mask that specifies which fields of the PostgreSQL User resource should be updated.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// New password for the user.
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// Set of permissions granted to the user to access specific databases.
	Permissions []*Permission `protobuf:"bytes,5,rep,name=permissions,proto3" json:"permissions,omitempty"`
	// Maximum number of database connections available to the user.
	//
	// When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config.max_connections] setting.
	//
	// When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
	//
	// Minimum value: `10` (default: `50`), when used in session pooling.
	ConnLimit int64         `protobuf:"varint,6,opt,name=conn_limit,json=connLimit,proto3" json:"conn_limit,omitempty"`
	Settings  *UserSettings `protobuf:"bytes,7,opt,name=settings,proto3" json:"settings,omitempty"`
	// This flag defines whether the user can login to a PostgreSQL database.
	//
	// Default value: `true` (login is allowed).
	Login *wrapperspb.BoolValue `protobuf:"bytes,8,opt,name=login,proto3" json:"login,omitempty"`
	// A set of roles and privileges that are granted to the user.
	//
	// For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
	Grants []string `protobuf:"bytes,9,rep,name=grants,proto3" json:"grants,omitempty"`
	// Deletion Protection inhibits deletion of the user
	//
	// Default value: `unspecified` (inherits cluster's deletion_protection)
	DeletionProtection *wrapperspb.BoolValue `protobuf:"bytes,10,opt,name=deletion_protection,json=deletionProtection,proto3" json:"deletion_protection,omitempty"`
	// New password-based authentication method for user.
	// Possible values are “ USER_PASSWORD_ENCRYPTION_MD5 “ or “ USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 “.
	UserPasswordEncryption UserPasswordEncryption `protobuf:"varint,11,opt,name=user_password_encryption,json=userPasswordEncryption,proto3,enum=yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption" json:"user_password_encryption,omitempty"`
	// Generate password using Connection Manager.
	GeneratePassword *wrapperspb.BoolValue `protobuf:"bytes,12,opt,name=generate_password,json=generatePassword,proto3" json:"generate_password,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateUserRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateUserRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpdateUserRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateUserRequest) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *UpdateUserRequest) GetConnLimit() int64 {
	if x != nil {
		return x.ConnLimit
	}
	return 0
}

func (x *UpdateUserRequest) GetSettings() *UserSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *UpdateUserRequest) GetLogin() *wrapperspb.BoolValue {
	if x != nil {
		return x.Login
	}
	return nil
}

func (x *UpdateUserRequest) GetGrants() []string {
	if x != nil {
		return x.Grants
	}
	return nil
}

func (x *UpdateUserRequest) GetDeletionProtection() *wrapperspb.BoolValue {
	if x != nil {
		return x.DeletionProtection
	}
	return nil
}

func (x *UpdateUserRequest) GetUserPasswordEncryption() UserPasswordEncryption {
	if x != nil {
		return x.UserPasswordEncryption
	}
	return UserPasswordEncryption_USER_PASSWORD_ENCRYPTION_UNSPECIFIED
}

func (x *UpdateUserRequest) GetGeneratePassword() *wrapperspb.BoolValue {
	if x != nil {
		return x.GeneratePassword
	}
	return nil
}

type UpdateUserMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster the user belongs to.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Name of the user that is being updated.
	UserName      string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserMetadata) Reset() {
	*x = UpdateUserMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserMetadata) ProtoMessage() {}

func (x *UpdateUserMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserMetadata.ProtoReflect.Descriptor instead.
func (*UpdateUserMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateUserMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateUserMetadata) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type DeleteUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster the user belongs to.
	// To get the cluster ID, use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Name of the user to delete.
	// To get the name of the user, use a [UserService.List] request.
	UserName      string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteUserRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *DeleteUserRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type DeleteUserMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster the user belongs to.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Name of the user that is being deleted.
	UserName      string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserMetadata) Reset() {
	*x = DeleteUserMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserMetadata) ProtoMessage() {}

func (x *DeleteUserMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserMetadata.ProtoReflect.Descriptor instead.
func (*DeleteUserMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteUserMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *DeleteUserMetadata) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type GrantUserPermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster the user belongs to.
	// To get the cluster ID, use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Name of the user to grant the permission to.
	// To get the name of the user, use a [UserService.List] request.
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// Permission that should be granted to the specified user.
	Permission    *Permission `protobuf:"bytes,3,opt,name=permission,proto3" json:"permission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrantUserPermissionRequest) Reset() {
	*x = GrantUserPermissionRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrantUserPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantUserPermissionRequest) ProtoMessage() {}

func (x *GrantUserPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantUserPermissionRequest.ProtoReflect.Descriptor instead.
func (*GrantUserPermissionRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescGZIP(), []int{9}
}

func (x *GrantUserPermissionRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *GrantUserPermissionRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GrantUserPermissionRequest) GetPermission() *Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

type GrantUserPermissionMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster the user belongs to.
	// To get the cluster ID, use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Name of the user that is being granted a permission.
	UserName      string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrantUserPermissionMetadata) Reset() {
	*x = GrantUserPermissionMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrantUserPermissionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantUserPermissionMetadata) ProtoMessage() {}

func (x *GrantUserPermissionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantUserPermissionMetadata.ProtoReflect.Descriptor instead.
func (*GrantUserPermissionMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescGZIP(), []int{10}
}

func (x *GrantUserPermissionMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *GrantUserPermissionMetadata) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type RevokeUserPermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster the user belongs to.
	// To get the cluster ID, use a [ClusterService.List] request.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Name of the user to revoke a permission from.
	// To get the name of the user, use a [UserService.List] request.
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// Name of the database that the user should lose access to.
	DatabaseName  string `protobuf:"bytes,3,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeUserPermissionRequest) Reset() {
	*x = RevokeUserPermissionRequest{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeUserPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeUserPermissionRequest) ProtoMessage() {}

func (x *RevokeUserPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeUserPermissionRequest.ProtoReflect.Descriptor instead.
func (*RevokeUserPermissionRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescGZIP(), []int{11}
}

func (x *RevokeUserPermissionRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *RevokeUserPermissionRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RevokeUserPermissionRequest) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

type RevokeUserPermissionMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the PostgreSQL cluster the user belongs to.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Name of the user whose permission is being revoked.
	UserName      string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeUserPermissionMetadata) Reset() {
	*x = RevokeUserPermissionMetadata{}
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeUserPermissionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeUserPermissionMetadata) ProtoMessage() {}

func (x *RevokeUserPermissionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeUserPermissionMetadata.ProtoReflect.Descriptor instead.
func (*RevokeUserPermissionMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescGZIP(), []int{12}
}

func (x *RevokeUserPermissionMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *RevokeUserPermissionMetadata) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

var File_yandex_cloud_mdb_postgresql_v1_user_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDesc = "" +
	"\n" +
	"1yandex/cloud/mdb/postgresql/v1/user_service.proto\x12\x1eyandex.cloud.mdb.postgresql.v1\x1a\x1cgoogle/api/annotations.proto\x1a google/protobuf/field_mask.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\x1a)yandex/cloud/mdb/postgresql/v1/user.proto\x1a yandex/cloud/api/operation.proto\"z\n" +
	"\x0eGetUserRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12;\n" +
	"\tuser_name\x18\x02 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\buserName\"\x92\x01\n" +
	"\x10ListUsersRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\"w\n" +
	"\x11ListUsersResponse\x12:\n" +
	"\x05users\x18\x01 \x03(\v2$.yandex.cloud.mdb.postgresql.v1.UserR\x05users\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x8d\x01\n" +
	"\x11CreateUserRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12K\n" +
	"\tuser_spec\x18\x02 \x01(\v2(.yandex.cloud.mdb.postgresql.v1.UserSpecB\x04\xe8\xc71\x01R\buserSpec\"P\n" +
	"\x12CreateUserMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1b\n" +
	"\tuser_name\x18\x02 \x01(\tR\buserName\"\x8f\x06\n" +
	"\x11UpdateUserRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12;\n" +
	"\tuser_name\x18\x02 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\buserName\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12%\n" +
	"\bpassword\x18\x04 \x01(\tB\t\x8a\xc81\x058-128R\bpassword\x12L\n" +
	"\vpermissions\x18\x05 \x03(\v2*.yandex.cloud.mdb.postgresql.v1.PermissionR\vpermissions\x12'\n" +
	"\n" +
	"conn_limit\x18\x06 \x01(\x03B\b\xfa\xc71\x04>=10R\tconnLimit\x12H\n" +
	"\bsettings\x18\a \x01(\v2,.yandex.cloud.mdb.postgresql.v1.UserSettingsR\bsettings\x120\n" +
	"\x05login\x18\b \x01(\v2\x1a.google.protobuf.BoolValueR\x05login\x121\n" +
	"\x06grants\x18\t \x03(\tB\x19\xf2\xc71\r[a-zA-Z0-9_]*\x8a\xc81\x04<=63R\x06grants\x12K\n" +
	"\x13deletion_protection\x18\n" +
	" \x01(\v2\x1a.google.protobuf.BoolValueR\x12deletionProtection\x12p\n" +
	"\x18user_password_encryption\x18\v \x01(\x0e26.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryptionR\x16userPasswordEncryption\x12G\n" +
	"\x11generate_password\x18\f \x01(\v2\x1a.google.protobuf.BoolValueR\x10generatePassword\"P\n" +
	"\x12UpdateUserMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1b\n" +
	"\tuser_name\x18\x02 \x01(\tR\buserName\"}\n" +
	"\x11DeleteUserRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12;\n" +
	"\tuser_name\x18\x02 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\buserName\"P\n" +
	"\x12DeleteUserMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1b\n" +
	"\tuser_name\x18\x02 \x01(\tR\buserName\"\xd8\x01\n" +
	"\x1aGrantUserPermissionRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12;\n" +
	"\tuser_name\x18\x02 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\buserName\x12P\n" +
	"\n" +
	"permission\x18\x03 \x01(\v2*.yandex.cloud.mdb.postgresql.v1.PermissionB\x04\xe8\xc71\x01R\n" +
	"permission\"Y\n" +
	"\x1bGrantUserPermissionMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1b\n" +
	"\tuser_name\x18\x02 \x01(\tR\buserName\"\xcc\x01\n" +
	"\x1bRevokeUserPermissionRequest\x12+\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tclusterId\x12;\n" +
	"\tuser_name\x18\x02 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\buserName\x12C\n" +
	"\rdatabase_name\x18\x03 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\fdatabaseName\"Z\n" +
	"\x1cRevokeUserPermissionMetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1b\n" +
	"\tuser_name\x18\x02 \x01(\tR\buserName2\xad\v\n" +
	"\vUserService\x12\xa3\x01\n" +
	"\x03Get\x12..yandex.cloud.mdb.postgresql.v1.GetUserRequest\x1a$.yandex.cloud.mdb.postgresql.v1.User\"F\x82\xd3\xe4\x93\x02@\x12>/managed-postgresql/v1/clusters/{cluster_id}/users/{user_name}\x12\xa7\x01\n" +
	"\x04List\x120.yandex.cloud.mdb.postgresql.v1.ListUsersRequest\x1a1.yandex.cloud.mdb.postgresql.v1.ListUsersResponse\":\x82\xd3\xe4\x93\x024\x122/managed-postgresql/v1/clusters/{cluster_id}/users\x12\xbb\x01\n" +
	"\x06Create\x121.yandex.cloud.mdb.postgresql.v1.CreateUserRequest\x1a!.yandex.cloud.operation.Operation\"[\xb2\xd2*\x1a\n" +
	"\x12CreateUserMetadata\x12\x04User\x82\xd3\xe4\x93\x027:\x01*\"2/managed-postgresql/v1/clusters/{cluster_id}/users\x12\xc7\x01\n" +
	"\x06Update\x121.yandex.cloud.mdb.postgresql.v1.UpdateUserRequest\x1a!.yandex.cloud.operation.Operation\"g\xb2\xd2*\x1a\n" +
	"\x12UpdateUserMetadata\x12\x04User\x82\xd3\xe4\x93\x02C:\x01*2>/managed-postgresql/v1/clusters/{cluster_id}/users/{user_name}\x12\xd5\x01\n" +
	"\x06Delete\x121.yandex.cloud.mdb.postgresql.v1.DeleteUserRequest\x1a!.yandex.cloud.operation.Operation\"u\xb2\xd2*+\n" +
	"\x12DeleteUserMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02@*>/managed-postgresql/v1/clusters/{cluster_id}/users/{user_name}\x12\xf3\x01\n" +
	"\x0fGrantPermission\x12:.yandex.cloud.mdb.postgresql.v1.GrantUserPermissionRequest\x1a!.yandex.cloud.operation.Operation\"\x80\x01\xb2\xd2*#\n" +
	"\x1bGrantUserPermissionMetadata\x12\x04User\x82\xd3\xe4\x93\x02S:\x01*\"N/managed-postgresql/v1/clusters/{cluster_id}/users/{user_name}:grantPermission\x12\xf7\x01\n" +
	"\x10RevokePermission\x12;.yandex.cloud.mdb.postgresql.v1.RevokeUserPermissionRequest\x1a!.yandex.cloud.operation.Operation\"\x82\x01\xb2\xd2*$\n" +
	"\x1cRevokeUserPermissionMetadata\x12\x04User\x82\xd3\xe4\x93\x02T:\x01*\"O/managed-postgresql/v1/clusters/{cluster_id}/users/{user_name}:revokePermissionBs\n" +
	"\"yandex.cloud.api.mdb.postgresql.v1ZMgithub.com/yandex-cloud/go-genproto/yandex/cloud/mdb/postgresql/v1;postgresqlb\x06proto3"

var (
	file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescData []byte
)

func file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDesc), len(file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDesc)))
	})
	return file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDescData
}

var file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_yandex_cloud_mdb_postgresql_v1_user_service_proto_goTypes = []any{
	(*GetUserRequest)(nil),               // 0: yandex.cloud.mdb.postgresql.v1.GetUserRequest
	(*ListUsersRequest)(nil),             // 1: yandex.cloud.mdb.postgresql.v1.ListUsersRequest
	(*ListUsersResponse)(nil),            // 2: yandex.cloud.mdb.postgresql.v1.ListUsersResponse
	(*CreateUserRequest)(nil),            // 3: yandex.cloud.mdb.postgresql.v1.CreateUserRequest
	(*CreateUserMetadata)(nil),           // 4: yandex.cloud.mdb.postgresql.v1.CreateUserMetadata
	(*UpdateUserRequest)(nil),            // 5: yandex.cloud.mdb.postgresql.v1.UpdateUserRequest
	(*UpdateUserMetadata)(nil),           // 6: yandex.cloud.mdb.postgresql.v1.UpdateUserMetadata
	(*DeleteUserRequest)(nil),            // 7: yandex.cloud.mdb.postgresql.v1.DeleteUserRequest
	(*DeleteUserMetadata)(nil),           // 8: yandex.cloud.mdb.postgresql.v1.DeleteUserMetadata
	(*GrantUserPermissionRequest)(nil),   // 9: yandex.cloud.mdb.postgresql.v1.GrantUserPermissionRequest
	(*GrantUserPermissionMetadata)(nil),  // 10: yandex.cloud.mdb.postgresql.v1.GrantUserPermissionMetadata
	(*RevokeUserPermissionRequest)(nil),  // 11: yandex.cloud.mdb.postgresql.v1.RevokeUserPermissionRequest
	(*RevokeUserPermissionMetadata)(nil), // 12: yandex.cloud.mdb.postgresql.v1.RevokeUserPermissionMetadata
	(*User)(nil),                         // 13: yandex.cloud.mdb.postgresql.v1.User
	(*UserSpec)(nil),                     // 14: yandex.cloud.mdb.postgresql.v1.UserSpec
	(*fieldmaskpb.FieldMask)(nil),        // 15: google.protobuf.FieldMask
	(*Permission)(nil),                   // 16: yandex.cloud.mdb.postgresql.v1.Permission
	(*UserSettings)(nil),                 // 17: yandex.cloud.mdb.postgresql.v1.UserSettings
	(*wrapperspb.BoolValue)(nil),         // 18: google.protobuf.BoolValue
	(UserPasswordEncryption)(0),          // 19: yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption
	(*operation.Operation)(nil),          // 20: yandex.cloud.operation.Operation
}
var file_yandex_cloud_mdb_postgresql_v1_user_service_proto_depIdxs = []int32{
	13, // 0: yandex.cloud.mdb.postgresql.v1.ListUsersResponse.users:type_name -> yandex.cloud.mdb.postgresql.v1.User
	14, // 1: yandex.cloud.mdb.postgresql.v1.CreateUserRequest.user_spec:type_name -> yandex.cloud.mdb.postgresql.v1.UserSpec
	15, // 2: yandex.cloud.mdb.postgresql.v1.UpdateUserRequest.update_mask:type_name -> google.protobuf.FieldMask
	16, // 3: yandex.cloud.mdb.postgresql.v1.UpdateUserRequest.permissions:type_name -> yandex.cloud.mdb.postgresql.v1.Permission
	17, // 4: yandex.cloud.mdb.postgresql.v1.UpdateUserRequest.settings:type_name -> yandex.cloud.mdb.postgresql.v1.UserSettings
	18, // 5: yandex.cloud.mdb.postgresql.v1.UpdateUserRequest.login:type_name -> google.protobuf.BoolValue
	18, // 6: yandex.cloud.mdb.postgresql.v1.UpdateUserRequest.deletion_protection:type_name -> google.protobuf.BoolValue
	19, // 7: yandex.cloud.mdb.postgresql.v1.UpdateUserRequest.user_password_encryption:type_name -> yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption
	18, // 8: yandex.cloud.mdb.postgresql.v1.UpdateUserRequest.generate_password:type_name -> google.protobuf.BoolValue
	16, // 9: yandex.cloud.mdb.postgresql.v1.GrantUserPermissionRequest.permission:type_name -> yandex.cloud.mdb.postgresql.v1.Permission
	0,  // 10: yandex.cloud.mdb.postgresql.v1.UserService.Get:input_type -> yandex.cloud.mdb.postgresql.v1.GetUserRequest
	1,  // 11: yandex.cloud.mdb.postgresql.v1.UserService.List:input_type -> yandex.cloud.mdb.postgresql.v1.ListUsersRequest
	3,  // 12: yandex.cloud.mdb.postgresql.v1.UserService.Create:input_type -> yandex.cloud.mdb.postgresql.v1.CreateUserRequest
	5,  // 13: yandex.cloud.mdb.postgresql.v1.UserService.Update:input_type -> yandex.cloud.mdb.postgresql.v1.UpdateUserRequest
	7,  // 14: yandex.cloud.mdb.postgresql.v1.UserService.Delete:input_type -> yandex.cloud.mdb.postgresql.v1.DeleteUserRequest
	9,  // 15: yandex.cloud.mdb.postgresql.v1.UserService.GrantPermission:input_type -> yandex.cloud.mdb.postgresql.v1.GrantUserPermissionRequest
	11, // 16: yandex.cloud.mdb.postgresql.v1.UserService.RevokePermission:input_type -> yandex.cloud.mdb.postgresql.v1.RevokeUserPermissionRequest
	13, // 17: yandex.cloud.mdb.postgresql.v1.UserService.Get:output_type -> yandex.cloud.mdb.postgresql.v1.User
	2,  // 18: yandex.cloud.mdb.postgresql.v1.UserService.List:output_type -> yandex.cloud.mdb.postgresql.v1.ListUsersResponse
	20, // 19: yandex.cloud.mdb.postgresql.v1.UserService.Create:output_type -> yandex.cloud.operation.Operation
	20, // 20: yandex.cloud.mdb.postgresql.v1.UserService.Update:output_type -> yandex.cloud.operation.Operation
	20, // 21: yandex.cloud.mdb.postgresql.v1.UserService.Delete:output_type -> yandex.cloud.operation.Operation
	20, // 22: yandex.cloud.mdb.postgresql.v1.UserService.GrantPermission:output_type -> yandex.cloud.operation.Operation
	20, // 23: yandex.cloud.mdb.postgresql.v1.UserService.RevokePermission:output_type -> yandex.cloud.operation.Operation
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_yandex_cloud_mdb_postgresql_v1_user_service_proto_init() }
func file_yandex_cloud_mdb_postgresql_v1_user_service_proto_init() {
	if File_yandex_cloud_mdb_postgresql_v1_user_service_proto != nil {
		return
	}
	file_yandex_cloud_mdb_postgresql_v1_user_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDesc), len(file_yandex_cloud_mdb_postgresql_v1_user_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_mdb_postgresql_v1_user_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_mdb_postgresql_v1_user_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_mdb_postgresql_v1_user_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_mdb_postgresql_v1_user_service_proto = out.File
	file_yandex_cloud_mdb_postgresql_v1_user_service_proto_goTypes = nil
	file_yandex_cloud_mdb_postgresql_v1_user_service_proto_depIdxs = nil
}

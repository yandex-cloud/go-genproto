// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/organizationmanager/v1/idp/userpool_service.proto

package idp

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	access "github.com/yandex-cloud/go-genproto/yandex/cloud/access"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to get a userpool.
type GetUserpoolRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the userpool to return.
	// To get the userpool ID, make a [UserpoolService.List] request.
	UserpoolId    string `protobuf:"bytes,1,opt,name=userpool_id,json=userpoolId,proto3" json:"userpool_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserpoolRequest) Reset() {
	*x = GetUserpoolRequest{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserpoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserpoolRequest) ProtoMessage() {}

func (x *GetUserpoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserpoolRequest.ProtoReflect.Descriptor instead.
func (*GetUserpoolRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserpoolRequest) GetUserpoolId() string {
	if x != nil {
		return x.UserpoolId
	}
	return ""
}

// Request to list userpools.
type ListUserpoolsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the organization to list userpools in.
	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// The maximum number of results per page to return.
	// If the number of available results is larger than [page_size],
	// the service returns a [ListUserpoolsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token]
	// to the [ListUserpoolsResponse.next_page_token]
	// returned by a previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	Filter        string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserpoolsRequest) Reset() {
	*x = ListUserpoolsRequest{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserpoolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserpoolsRequest) ProtoMessage() {}

func (x *ListUserpoolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserpoolsRequest.ProtoReflect.Descriptor instead.
func (*ListUserpoolsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListUserpoolsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListUserpoolsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserpoolsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListUserpoolsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// Response message for [UserpoolService.List].
type ListUserpoolsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of userpools.
	Userpools []*Userpool `protobuf:"bytes,1,rep,name=userpools,proto3" json:"userpools,omitempty"`
	// This token allows you to get the next page of results for list requests.
	// If the number of results is larger than [ListUserpoolsRequest.page_size],
	// use the [next_page_token] as the value for the [ListUserpoolsRequest.page_token]
	// query parameter in the next list request.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserpoolsResponse) Reset() {
	*x = ListUserpoolsResponse{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserpoolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserpoolsResponse) ProtoMessage() {}

func (x *ListUserpoolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserpoolsResponse.ProtoReflect.Descriptor instead.
func (*ListUserpoolsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListUserpoolsResponse) GetUserpools() []*Userpool {
	if x != nil {
		return x.Userpools
	}
	return nil
}

func (x *ListUserpoolsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request to create a userpool.
type CreateUserpoolRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the organization to create a userpool in.
	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// Name of the userpool.
	// The name must be unique within the organization.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the userpool.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels as key:value pairs.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Default subdomain for the userpool.
	DefaultSubdomain string `protobuf:"bytes,5,opt,name=default_subdomain,json=defaultSubdomain,proto3" json:"default_subdomain,omitempty"`
	// User settings for the userpool.
	UserSettings *UserSettings `protobuf:"bytes,6,opt,name=user_settings,json=userSettings,proto3" json:"user_settings,omitempty"`
	// Password quality policy for the userpool.
	PasswordQualityPolicy *PasswordQualityPolicy `protobuf:"bytes,7,opt,name=password_quality_policy,json=passwordQualityPolicy,proto3" json:"password_quality_policy,omitempty"`
	// Password lifetime policy for the userpool.
	PasswordLifetimePolicy *PasswordLifetimePolicy `protobuf:"bytes,8,opt,name=password_lifetime_policy,json=passwordLifetimePolicy,proto3" json:"password_lifetime_policy,omitempty"`
	// Bruteforce protection policy for the userpool.
	BruteforceProtectionPolicy *BruteforceProtectionPolicy `protobuf:"bytes,9,opt,name=bruteforce_protection_policy,json=bruteforceProtectionPolicy,proto3" json:"bruteforce_protection_policy,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *CreateUserpoolRequest) Reset() {
	*x = CreateUserpoolRequest{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserpoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserpoolRequest) ProtoMessage() {}

func (x *CreateUserpoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserpoolRequest.ProtoReflect.Descriptor instead.
func (*CreateUserpoolRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateUserpoolRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *CreateUserpoolRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateUserpoolRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateUserpoolRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateUserpoolRequest) GetDefaultSubdomain() string {
	if x != nil {
		return x.DefaultSubdomain
	}
	return ""
}

func (x *CreateUserpoolRequest) GetUserSettings() *UserSettings {
	if x != nil {
		return x.UserSettings
	}
	return nil
}

func (x *CreateUserpoolRequest) GetPasswordQualityPolicy() *PasswordQualityPolicy {
	if x != nil {
		return x.PasswordQualityPolicy
	}
	return nil
}

func (x *CreateUserpoolRequest) GetPasswordLifetimePolicy() *PasswordLifetimePolicy {
	if x != nil {
		return x.PasswordLifetimePolicy
	}
	return nil
}

func (x *CreateUserpoolRequest) GetBruteforceProtectionPolicy() *BruteforceProtectionPolicy {
	if x != nil {
		return x.BruteforceProtectionPolicy
	}
	return nil
}

// Metadata for the [UserpoolService.Create] operation.
type CreateUserpoolMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the userpool that is being created.
	UserpoolId    string `protobuf:"bytes,1,opt,name=userpool_id,json=userpoolId,proto3" json:"userpool_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserpoolMetadata) Reset() {
	*x = CreateUserpoolMetadata{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserpoolMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserpoolMetadata) ProtoMessage() {}

func (x *CreateUserpoolMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserpoolMetadata.ProtoReflect.Descriptor instead.
func (*CreateUserpoolMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateUserpoolMetadata) GetUserpoolId() string {
	if x != nil {
		return x.UserpoolId
	}
	return ""
}

// Request to update a userpool.
type UpdateUserpoolRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the userpool to update.
	// To get the userpool ID, make a [UserpoolService.List] request.
	UserpoolId string `protobuf:"bytes,1,opt,name=userpool_id,json=userpoolId,proto3" json:"userpool_id,omitempty"`
	// Field mask that specifies which fields of the userpool are going to be updated.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// Name of the userpool.
	// The name must be unique within the organization.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the userpool.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels as key:value pairs.
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// User settings for the userpool.
	UserSettings *UserSettings `protobuf:"bytes,6,opt,name=user_settings,json=userSettings,proto3" json:"user_settings,omitempty"`
	// Password quality policy for the userpool.
	PasswordQualityPolicy *PasswordQualityPolicy `protobuf:"bytes,7,opt,name=password_quality_policy,json=passwordQualityPolicy,proto3" json:"password_quality_policy,omitempty"`
	// Password lifetime policy for the userpool.
	PasswordLifetimePolicy *PasswordLifetimePolicy `protobuf:"bytes,8,opt,name=password_lifetime_policy,json=passwordLifetimePolicy,proto3" json:"password_lifetime_policy,omitempty"`
	// Bruteforce protection policy for the userpool.
	BruteforceProtectionPolicy *BruteforceProtectionPolicy `protobuf:"bytes,9,opt,name=bruteforce_protection_policy,json=bruteforceProtectionPolicy,proto3" json:"bruteforce_protection_policy,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *UpdateUserpoolRequest) Reset() {
	*x = UpdateUserpoolRequest{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserpoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserpoolRequest) ProtoMessage() {}

func (x *UpdateUserpoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserpoolRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserpoolRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateUserpoolRequest) GetUserpoolId() string {
	if x != nil {
		return x.UserpoolId
	}
	return ""
}

func (x *UpdateUserpoolRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateUserpoolRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateUserpoolRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateUserpoolRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateUserpoolRequest) GetUserSettings() *UserSettings {
	if x != nil {
		return x.UserSettings
	}
	return nil
}

func (x *UpdateUserpoolRequest) GetPasswordQualityPolicy() *PasswordQualityPolicy {
	if x != nil {
		return x.PasswordQualityPolicy
	}
	return nil
}

func (x *UpdateUserpoolRequest) GetPasswordLifetimePolicy() *PasswordLifetimePolicy {
	if x != nil {
		return x.PasswordLifetimePolicy
	}
	return nil
}

func (x *UpdateUserpoolRequest) GetBruteforceProtectionPolicy() *BruteforceProtectionPolicy {
	if x != nil {
		return x.BruteforceProtectionPolicy
	}
	return nil
}

// Metadata for the [UserpoolService.Update] operation.
type UpdateUserpoolMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the userpool that is being updated.
	UserpoolId    string `protobuf:"bytes,1,opt,name=userpool_id,json=userpoolId,proto3" json:"userpool_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserpoolMetadata) Reset() {
	*x = UpdateUserpoolMetadata{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserpoolMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserpoolMetadata) ProtoMessage() {}

func (x *UpdateUserpoolMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserpoolMetadata.ProtoReflect.Descriptor instead.
func (*UpdateUserpoolMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateUserpoolMetadata) GetUserpoolId() string {
	if x != nil {
		return x.UserpoolId
	}
	return ""
}

// Request to delete a userpool.
type DeleteUserpoolRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the userpool to delete.
	// To get the userpool ID, make a [UserpoolService.List] request.
	UserpoolId    string `protobuf:"bytes,1,opt,name=userpool_id,json=userpoolId,proto3" json:"userpool_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserpoolRequest) Reset() {
	*x = DeleteUserpoolRequest{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserpoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserpoolRequest) ProtoMessage() {}

func (x *DeleteUserpoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserpoolRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserpoolRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteUserpoolRequest) GetUserpoolId() string {
	if x != nil {
		return x.UserpoolId
	}
	return ""
}

// Metadata for the [UserpoolService.Delete] operation.
type DeleteUserpoolMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the userpool that is being deleted.
	UserpoolId    string `protobuf:"bytes,1,opt,name=userpool_id,json=userpoolId,proto3" json:"userpool_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserpoolMetadata) Reset() {
	*x = DeleteUserpoolMetadata{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserpoolMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserpoolMetadata) ProtoMessage() {}

func (x *DeleteUserpoolMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserpoolMetadata.ProtoReflect.Descriptor instead.
func (*DeleteUserpoolMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteUserpoolMetadata) GetUserpoolId() string {
	if x != nil {
		return x.UserpoolId
	}
	return ""
}

// Request to get a domain for a userpool.
type GetUserpoolDomainRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the userpool to get a domain for.
	UserpoolId string `protobuf:"bytes,1,opt,name=userpool_id,json=userpoolId,proto3" json:"userpool_id,omitempty"`
	// Domain name.
	Domain        string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserpoolDomainRequest) Reset() {
	*x = GetUserpoolDomainRequest{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserpoolDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserpoolDomainRequest) ProtoMessage() {}

func (x *GetUserpoolDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserpoolDomainRequest.ProtoReflect.Descriptor instead.
func (*GetUserpoolDomainRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserpoolDomainRequest) GetUserpoolId() string {
	if x != nil {
		return x.UserpoolId
	}
	return ""
}

func (x *GetUserpoolDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// Request to list domains for a userpool.
type ListUserpoolDomainsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the userpool to list domains for.
	UserpoolId string `protobuf:"bytes,1,opt,name=userpool_id,json=userpoolId,proto3" json:"userpool_id,omitempty"`
	// The maximum number of results per page to return.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token for pagination.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	Filter        string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserpoolDomainsRequest) Reset() {
	*x = ListUserpoolDomainsRequest{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserpoolDomainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserpoolDomainsRequest) ProtoMessage() {}

func (x *ListUserpoolDomainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserpoolDomainsRequest.ProtoReflect.Descriptor instead.
func (*ListUserpoolDomainsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListUserpoolDomainsRequest) GetUserpoolId() string {
	if x != nil {
		return x.UserpoolId
	}
	return ""
}

func (x *ListUserpoolDomainsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserpoolDomainsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListUserpoolDomainsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// Response message for [UserpoolService.ListDomains].
type ListUserpoolDomainsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of domains.
	Domains []*Domain `protobuf:"bytes,1,rep,name=domains,proto3" json:"domains,omitempty"`
	// Token for getting the next page of the list.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserpoolDomainsResponse) Reset() {
	*x = ListUserpoolDomainsResponse{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserpoolDomainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserpoolDomainsResponse) ProtoMessage() {}

func (x *ListUserpoolDomainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserpoolDomainsResponse.ProtoReflect.Descriptor instead.
func (*ListUserpoolDomainsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListUserpoolDomainsResponse) GetDomains() []*Domain {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *ListUserpoolDomainsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request to add a domain to a userpool.
type AddUserpoolDomainRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the userpool to add a domain to.
	UserpoolId string `protobuf:"bytes,1,opt,name=userpool_id,json=userpoolId,proto3" json:"userpool_id,omitempty"`
	// Domain name to add.
	Domain        string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddUserpoolDomainRequest) Reset() {
	*x = AddUserpoolDomainRequest{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserpoolDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserpoolDomainRequest) ProtoMessage() {}

func (x *AddUserpoolDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserpoolDomainRequest.ProtoReflect.Descriptor instead.
func (*AddUserpoolDomainRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{12}
}

func (x *AddUserpoolDomainRequest) GetUserpoolId() string {
	if x != nil {
		return x.UserpoolId
	}
	return ""
}

func (x *AddUserpoolDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// Metadata for the [UserpoolService.AddDomain] operation.
type AddUserpoolDomainMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the userpool.
	UserpoolId string `protobuf:"bytes,1,opt,name=userpool_id,json=userpoolId,proto3" json:"userpool_id,omitempty"`
	// Domain name being added.
	Domain        string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddUserpoolDomainMetadata) Reset() {
	*x = AddUserpoolDomainMetadata{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserpoolDomainMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserpoolDomainMetadata) ProtoMessage() {}

func (x *AddUserpoolDomainMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserpoolDomainMetadata.ProtoReflect.Descriptor instead.
func (*AddUserpoolDomainMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{13}
}

func (x *AddUserpoolDomainMetadata) GetUserpoolId() string {
	if x != nil {
		return x.UserpoolId
	}
	return ""
}

func (x *AddUserpoolDomainMetadata) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// Request to validate a domain for a userpool.
type ValidateUserpoolDomainRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the userpool to validate a domain for.
	UserpoolId string `protobuf:"bytes,1,opt,name=userpool_id,json=userpoolId,proto3" json:"userpool_id,omitempty"`
	// Domain name to validate.
	Domain        string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateUserpoolDomainRequest) Reset() {
	*x = ValidateUserpoolDomainRequest{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateUserpoolDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateUserpoolDomainRequest) ProtoMessage() {}

func (x *ValidateUserpoolDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateUserpoolDomainRequest.ProtoReflect.Descriptor instead.
func (*ValidateUserpoolDomainRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{14}
}

func (x *ValidateUserpoolDomainRequest) GetUserpoolId() string {
	if x != nil {
		return x.UserpoolId
	}
	return ""
}

func (x *ValidateUserpoolDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// Metadata for the [UserpoolService.ValidateDomain] operation.
type ValidateUserpoolDomainMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the userpool.
	UserpoolId string `protobuf:"bytes,1,opt,name=userpool_id,json=userpoolId,proto3" json:"userpool_id,omitempty"`
	// Domain name being validated.
	Domain        string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateUserpoolDomainMetadata) Reset() {
	*x = ValidateUserpoolDomainMetadata{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateUserpoolDomainMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateUserpoolDomainMetadata) ProtoMessage() {}

func (x *ValidateUserpoolDomainMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateUserpoolDomainMetadata.ProtoReflect.Descriptor instead.
func (*ValidateUserpoolDomainMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{15}
}

func (x *ValidateUserpoolDomainMetadata) GetUserpoolId() string {
	if x != nil {
		return x.UserpoolId
	}
	return ""
}

func (x *ValidateUserpoolDomainMetadata) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// Request to delete a domain from a userpool.
type DeleteUserpoolDomainRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the userpool to delete a domain from.
	UserpoolId string `protobuf:"bytes,1,opt,name=userpool_id,json=userpoolId,proto3" json:"userpool_id,omitempty"`
	// Domain name to delete.
	Domain        string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserpoolDomainRequest) Reset() {
	*x = DeleteUserpoolDomainRequest{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserpoolDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserpoolDomainRequest) ProtoMessage() {}

func (x *DeleteUserpoolDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserpoolDomainRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserpoolDomainRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteUserpoolDomainRequest) GetUserpoolId() string {
	if x != nil {
		return x.UserpoolId
	}
	return ""
}

func (x *DeleteUserpoolDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// Metadata for the [UserpoolService.DeleteDomain] operation.
type DeleteUserpoolDomainMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the userpool.
	UserpoolId string `protobuf:"bytes,1,opt,name=userpool_id,json=userpoolId,proto3" json:"userpool_id,omitempty"`
	// Domain name being deleted.
	Domain        string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserpoolDomainMetadata) Reset() {
	*x = DeleteUserpoolDomainMetadata{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserpoolDomainMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserpoolDomainMetadata) ProtoMessage() {}

func (x *DeleteUserpoolDomainMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserpoolDomainMetadata.ProtoReflect.Descriptor instead.
func (*DeleteUserpoolDomainMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteUserpoolDomainMetadata) GetUserpoolId() string {
	if x != nil {
		return x.UserpoolId
	}
	return ""
}

func (x *DeleteUserpoolDomainMetadata) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// Request to list operations for a userpool.
type ListUserpoolOperationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the userpool to list operations for.
	UserpoolId string `protobuf:"bytes,1,opt,name=userpool_id,json=userpoolId,proto3" json:"userpool_id,omitempty"`
	// The maximum number of results per page to return.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token for pagination.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserpoolOperationsRequest) Reset() {
	*x = ListUserpoolOperationsRequest{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserpoolOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserpoolOperationsRequest) ProtoMessage() {}

func (x *ListUserpoolOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserpoolOperationsRequest.ProtoReflect.Descriptor instead.
func (*ListUserpoolOperationsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListUserpoolOperationsRequest) GetUserpoolId() string {
	if x != nil {
		return x.UserpoolId
	}
	return ""
}

func (x *ListUserpoolOperationsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserpoolOperationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response message for [UserpoolService.ListOperations].
type ListUserpoolOperationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of operations.
	Operations []*operation.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	// Token for getting the next page of the list.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserpoolOperationsResponse) Reset() {
	*x = ListUserpoolOperationsResponse{}
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserpoolOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserpoolOperationsResponse) ProtoMessage() {}

func (x *ListUserpoolOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserpoolOperationsResponse.ProtoReflect.Descriptor instead.
func (*ListUserpoolOperationsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP(), []int{19}
}

func (x *ListUserpoolOperationsResponse) GetOperations() []*operation.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ListUserpoolOperationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDesc = "" +
	"\n" +
	">yandex/cloud/organizationmanager/v1/idp/userpool_service.proto\x12'yandex.cloud.organizationmanager.v1.idp\x1a\x1cgoogle/api/annotations.proto\x1a yandex/cloud/api/operation.proto\x1a yandex/cloud/access/access.proto\x1a&yandex/cloud/operation/operation.proto\x1a6yandex/cloud/organizationmanager/v1/idp/userpool.proto\x1a\x1dyandex/cloud/validation.proto\x1a google/protobuf/field_mask.proto\"C\n" +
	"\x12GetUserpoolRequest\x12-\n" +
	"\vuserpool_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"userpoolId\"\xc5\x01\n" +
	"\x14ListUserpoolsRequest\x125\n" +
	"\x0forganization_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x0eorganizationId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x060-1000R\bpageSize\x12)\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\n" +
	"\x8a\xc81\x06<=2000R\tpageToken\x12\"\n" +
	"\x06filter\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\"\x90\x01\n" +
	"\x15ListUserpoolsResponse\x12O\n" +
	"\tuserpools\x18\x01 \x03(\v21.yandex.cloud.organizationmanager.v1.idp.UserpoolR\tuserpools\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xa7\a\n" +
	"\x15CreateUserpoolRequest\x125\n" +
	"\x0forganization_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x0eorganizationId\x12;\n" +
	"\x04name\x18\x02 \x01(\tB'\xe8\xc71\x01\xf2\xc71\x1f[a-z]([-a-z0-9]{0,61}[a-z0-9])?R\x04name\x12+\n" +
	"\vdescription\x18\x03 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x9f\x01\n" +
	"\x06labels\x18\x04 \x03(\v2J.yandex.cloud.organizationmanager.v1.idp.CreateUserpoolRequest.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x041-63R\x06labels\x129\n" +
	"\x11default_subdomain\x18\x05 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=63R\x10defaultSubdomain\x12Z\n" +
	"\ruser_settings\x18\x06 \x01(\v25.yandex.cloud.organizationmanager.v1.idp.UserSettingsR\fuserSettings\x12v\n" +
	"\x17password_quality_policy\x18\a \x01(\v2>.yandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicyR\x15passwordQualityPolicy\x12y\n" +
	"\x18password_lifetime_policy\x18\b \x01(\v2?.yandex.cloud.organizationmanager.v1.idp.PasswordLifetimePolicyR\x16passwordLifetimePolicy\x12\x85\x01\n" +
	"\x1cbruteforce_protection_policy\x18\t \x01(\v2C.yandex.cloud.organizationmanager.v1.idp.BruteforceProtectionPolicyR\x1abruteforceProtectionPolicy\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"9\n" +
	"\x16CreateUserpoolMetadata\x12\x1f\n" +
	"\vuserpool_id\x18\x01 \x01(\tR\n" +
	"userpoolId\"\x9e\a\n" +
	"\x15UpdateUserpoolRequest\x12-\n" +
	"\vuserpool_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"userpoolId\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x128\n" +
	"\x04name\x18\x03 \x01(\tB$\xf2\xc71 |[a-z]([-a-z0-9]{0,61}[a-z0-9])?R\x04name\x12+\n" +
	"\vdescription\x18\x04 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x9f\x01\n" +
	"\x06labels\x18\x05 \x03(\v2J.yandex.cloud.organizationmanager.v1.idp.UpdateUserpoolRequest.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x041-63R\x06labels\x12Z\n" +
	"\ruser_settings\x18\x06 \x01(\v25.yandex.cloud.organizationmanager.v1.idp.UserSettingsR\fuserSettings\x12v\n" +
	"\x17password_quality_policy\x18\a \x01(\v2>.yandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicyR\x15passwordQualityPolicy\x12y\n" +
	"\x18password_lifetime_policy\x18\b \x01(\v2?.yandex.cloud.organizationmanager.v1.idp.PasswordLifetimePolicyR\x16passwordLifetimePolicy\x12\x85\x01\n" +
	"\x1cbruteforce_protection_policy\x18\t \x01(\v2C.yandex.cloud.organizationmanager.v1.idp.BruteforceProtectionPolicyR\x1abruteforceProtectionPolicy\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"9\n" +
	"\x16UpdateUserpoolMetadata\x12\x1f\n" +
	"\vuserpool_id\x18\x01 \x01(\tR\n" +
	"userpoolId\"F\n" +
	"\x15DeleteUserpoolRequest\x12-\n" +
	"\vuserpool_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"userpoolId\"9\n" +
	"\x16DeleteUserpoolMetadata\x12\x1f\n" +
	"\vuserpool_id\x18\x01 \x01(\tR\n" +
	"userpoolId\"S\n" +
	"\x18GetUserpoolDomainRequest\x12\x1f\n" +
	"\vuserpool_id\x18\x01 \x01(\tR\n" +
	"userpoolId\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\"\xb5\x01\n" +
	"\x1aListUserpoolDomainsRequest\x12\x1f\n" +
	"\vuserpool_id\x18\x01 \x01(\tR\n" +
	"userpoolId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x060-1000R\bpageSize\x12)\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\n" +
	"\x8a\xc81\x06<=2000R\tpageToken\x12\"\n" +
	"\x06filter\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\"\x90\x01\n" +
	"\x1bListUserpoolDomainsResponse\x12I\n" +
	"\adomains\x18\x01 \x03(\v2/.yandex.cloud.organizationmanager.v1.idp.DomainR\adomains\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"S\n" +
	"\x18AddUserpoolDomainRequest\x12\x1f\n" +
	"\vuserpool_id\x18\x01 \x01(\tR\n" +
	"userpoolId\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\"T\n" +
	"\x19AddUserpoolDomainMetadata\x12\x1f\n" +
	"\vuserpool_id\x18\x01 \x01(\tR\n" +
	"userpoolId\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\"X\n" +
	"\x1dValidateUserpoolDomainRequest\x12\x1f\n" +
	"\vuserpool_id\x18\x01 \x01(\tR\n" +
	"userpoolId\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\"Y\n" +
	"\x1eValidateUserpoolDomainMetadata\x12\x1f\n" +
	"\vuserpool_id\x18\x01 \x01(\tR\n" +
	"userpoolId\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\"V\n" +
	"\x1bDeleteUserpoolDomainRequest\x12\x1f\n" +
	"\vuserpool_id\x18\x01 \x01(\tR\n" +
	"userpoolId\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\"W\n" +
	"\x1cDeleteUserpoolDomainMetadata\x12\x1f\n" +
	"\vuserpool_id\x18\x01 \x01(\tR\n" +
	"userpoolId\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\"\x9e\x01\n" +
	"\x1dListUserpoolOperationsRequest\x12)\n" +
	"\vuserpool_id\x18\x01 \x01(\tB\b\x8a\xc81\x04<=50R\n" +
	"userpoolId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x060-1000R\bpageSize\x12)\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\n" +
	"\x8a\xc81\x06<=2000R\tpageToken\"\x8b\x01\n" +
	"\x1eListUserpoolOperationsResponse\x12A\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2!.yandex.cloud.operation.OperationR\n" +
	"operations\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken2\xeb\x18\n" +
	"\x0fUserpoolService\x12\xb3\x01\n" +
	"\x03Get\x12;.yandex.cloud.organizationmanager.v1.idp.GetUserpoolRequest\x1a1.yandex.cloud.organizationmanager.v1.idp.Userpool\"<\x82\xd3\xe4\x93\x026\x124/organization-manager/v1/idp/userpools/{userpool_id}\x12\xb5\x01\n" +
	"\x04List\x12=.yandex.cloud.organizationmanager.v1.idp.ListUserpoolsRequest\x1a>.yandex.cloud.organizationmanager.v1.idp.ListUserpoolsResponse\".\x82\xd3\xe4\x93\x02(\x12&/organization-manager/v1/idp/userpools\x12\xc4\x01\n" +
	"\x06Create\x12>.yandex.cloud.organizationmanager.v1.idp.CreateUserpoolRequest\x1a!.yandex.cloud.operation.Operation\"W\xb2\xd2*\"\n" +
	"\x16CreateUserpoolMetadata\x12\bUserpool\x82\xd3\xe4\x93\x02+:\x01*\"&/organization-manager/v1/idp/userpools\x12\xd2\x01\n" +
	"\x06Update\x12>.yandex.cloud.organizationmanager.v1.idp.UpdateUserpoolRequest\x1a!.yandex.cloud.operation.Operation\"e\xb2\xd2*\"\n" +
	"\x16UpdateUserpoolMetadata\x12\bUserpool\x82\xd3\xe4\x93\x029:\x01*24/organization-manager/v1/idp/userpools/{userpool_id}\x12\xdc\x01\n" +
	"\x06Delete\x12>.yandex.cloud.organizationmanager.v1.idp.DeleteUserpoolRequest\x1a!.yandex.cloud.operation.Operation\"o\xb2\xd2*/\n" +
	"\x16DeleteUserpoolMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x026*4/organization-manager/v1/idp/userpools/{userpool_id}\x12\xce\x01\n" +
	"\tGetDomain\x12A.yandex.cloud.organizationmanager.v1.idp.GetUserpoolDomainRequest\x1a/.yandex.cloud.organizationmanager.v1.idp.Domain\"M\x82\xd3\xe4\x93\x02G\x12E/organization-manager/v1/idp/userpools/{userpool_id}/domains/{domain}\x12\xde\x01\n" +
	"\vListDomains\x12C.yandex.cloud.organizationmanager.v1.idp.ListUserpoolDomainsRequest\x1aD.yandex.cloud.organizationmanager.v1.idp.ListUserpoolDomainsResponse\"D\x82\xd3\xe4\x93\x02>\x12</organization-manager/v1/idp/userpools/{userpool_id}/domains\x12\xe1\x01\n" +
	"\tAddDomain\x12A.yandex.cloud.organizationmanager.v1.idp.AddUserpoolDomainRequest\x1a!.yandex.cloud.operation.Operation\"n\xb2\xd2*#\n" +
	"\x19AddUserpoolDomainMetadata\x12\x06Domain\x82\xd3\xe4\x93\x02A:\x01*\"</organization-manager/v1/idp/userpools/{userpool_id}/domains\x12\x83\x02\n" +
	"\x0eValidateDomain\x12F.yandex.cloud.organizationmanager.v1.idp.ValidateUserpoolDomainRequest\x1a!.yandex.cloud.operation.Operation\"\x85\x01\xb2\xd2*(\n" +
	"\x1eValidateUserpoolDomainMetadata\x12\x06Domain\x82\xd3\xe4\x93\x02S:\x01*\"N/organization-manager/v1/idp/userpools/{userpool_id}/domains/{domain}:validate\x12\x80\x02\n" +
	"\fDeleteDomain\x12D.yandex.cloud.organizationmanager.v1.idp.DeleteUserpoolDomainRequest\x1a!.yandex.cloud.operation.Operation\"\x86\x01\xb2\xd2*5\n" +
	"\x1cDeleteUserpoolDomainMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02G*E/organization-manager/v1/idp/userpools/{userpool_id}/domains/{domain}\x12\xea\x01\n" +
	"\x0eListOperations\x12F.yandex.cloud.organizationmanager.v1.idp.ListUserpoolOperationsRequest\x1aG.yandex.cloud.organizationmanager.v1.idp.ListUserpoolOperationsResponse\"G\x82\xd3\xe4\x93\x02A\x12?/organization-manager/v1/idp/userpools/{userpool_id}/operations\x12\xc6\x01\n" +
	"\x12ListAccessBindings\x12..yandex.cloud.access.ListAccessBindingsRequest\x1a/.yandex.cloud.access.ListAccessBindingsResponse\"O\x82\xd3\xe4\x93\x02I\x12G/organization-manager/v1/idp/userpools/{resource_id}:listAccessBindings\x12\x85\x02\n" +
	"\x11SetAccessBindings\x12-.yandex.cloud.access.SetAccessBindingsRequest\x1a!.yandex.cloud.operation.Operation\"\x9d\x01\xb2\xd2*H\n" +
	" access.SetAccessBindingsMetadata\x12$access.AccessBindingsOperationResult\x82\xd3\xe4\x93\x02K:\x01*\"F/organization-manager/v1/idp/userpools/{resource_id}:setAccessBindings\x12\x91\x02\n" +
	"\x14UpdateAccessBindings\x120.yandex.cloud.access.UpdateAccessBindingsRequest\x1a!.yandex.cloud.operation.Operation\"\xa3\x01\xb2\xd2*K\n" +
	"#access.UpdateAccessBindingsMetadata\x12$access.AccessBindingsOperationResult\x82\xd3\xe4\x93\x02N:\x01*2I/organization-manager/v1/idp/userpools/{resource_id}:updateAccessBindingsB~\n" +
	"+yandex.cloud.api.organizationmanager.v1.idpZOgithub.com/yandex-cloud/go-genproto/yandex/cloud/organizationmanager/v1/idp;idpb\x06proto3"

var (
	file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescData []byte
)

func file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDesc), len(file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDesc)))
	})
	return file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDescData
}

var file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_goTypes = []any{
	(*GetUserpoolRequest)(nil),                 // 0: yandex.cloud.organizationmanager.v1.idp.GetUserpoolRequest
	(*ListUserpoolsRequest)(nil),               // 1: yandex.cloud.organizationmanager.v1.idp.ListUserpoolsRequest
	(*ListUserpoolsResponse)(nil),              // 2: yandex.cloud.organizationmanager.v1.idp.ListUserpoolsResponse
	(*CreateUserpoolRequest)(nil),              // 3: yandex.cloud.organizationmanager.v1.idp.CreateUserpoolRequest
	(*CreateUserpoolMetadata)(nil),             // 4: yandex.cloud.organizationmanager.v1.idp.CreateUserpoolMetadata
	(*UpdateUserpoolRequest)(nil),              // 5: yandex.cloud.organizationmanager.v1.idp.UpdateUserpoolRequest
	(*UpdateUserpoolMetadata)(nil),             // 6: yandex.cloud.organizationmanager.v1.idp.UpdateUserpoolMetadata
	(*DeleteUserpoolRequest)(nil),              // 7: yandex.cloud.organizationmanager.v1.idp.DeleteUserpoolRequest
	(*DeleteUserpoolMetadata)(nil),             // 8: yandex.cloud.organizationmanager.v1.idp.DeleteUserpoolMetadata
	(*GetUserpoolDomainRequest)(nil),           // 9: yandex.cloud.organizationmanager.v1.idp.GetUserpoolDomainRequest
	(*ListUserpoolDomainsRequest)(nil),         // 10: yandex.cloud.organizationmanager.v1.idp.ListUserpoolDomainsRequest
	(*ListUserpoolDomainsResponse)(nil),        // 11: yandex.cloud.organizationmanager.v1.idp.ListUserpoolDomainsResponse
	(*AddUserpoolDomainRequest)(nil),           // 12: yandex.cloud.organizationmanager.v1.idp.AddUserpoolDomainRequest
	(*AddUserpoolDomainMetadata)(nil),          // 13: yandex.cloud.organizationmanager.v1.idp.AddUserpoolDomainMetadata
	(*ValidateUserpoolDomainRequest)(nil),      // 14: yandex.cloud.organizationmanager.v1.idp.ValidateUserpoolDomainRequest
	(*ValidateUserpoolDomainMetadata)(nil),     // 15: yandex.cloud.organizationmanager.v1.idp.ValidateUserpoolDomainMetadata
	(*DeleteUserpoolDomainRequest)(nil),        // 16: yandex.cloud.organizationmanager.v1.idp.DeleteUserpoolDomainRequest
	(*DeleteUserpoolDomainMetadata)(nil),       // 17: yandex.cloud.organizationmanager.v1.idp.DeleteUserpoolDomainMetadata
	(*ListUserpoolOperationsRequest)(nil),      // 18: yandex.cloud.organizationmanager.v1.idp.ListUserpoolOperationsRequest
	(*ListUserpoolOperationsResponse)(nil),     // 19: yandex.cloud.organizationmanager.v1.idp.ListUserpoolOperationsResponse
	nil,                                        // 20: yandex.cloud.organizationmanager.v1.idp.CreateUserpoolRequest.LabelsEntry
	nil,                                        // 21: yandex.cloud.organizationmanager.v1.idp.UpdateUserpoolRequest.LabelsEntry
	(*Userpool)(nil),                           // 22: yandex.cloud.organizationmanager.v1.idp.Userpool
	(*UserSettings)(nil),                       // 23: yandex.cloud.organizationmanager.v1.idp.UserSettings
	(*PasswordQualityPolicy)(nil),              // 24: yandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy
	(*PasswordLifetimePolicy)(nil),             // 25: yandex.cloud.organizationmanager.v1.idp.PasswordLifetimePolicy
	(*BruteforceProtectionPolicy)(nil),         // 26: yandex.cloud.organizationmanager.v1.idp.BruteforceProtectionPolicy
	(*fieldmaskpb.FieldMask)(nil),              // 27: google.protobuf.FieldMask
	(*Domain)(nil),                             // 28: yandex.cloud.organizationmanager.v1.idp.Domain
	(*operation.Operation)(nil),                // 29: yandex.cloud.operation.Operation
	(*access.ListAccessBindingsRequest)(nil),   // 30: yandex.cloud.access.ListAccessBindingsRequest
	(*access.SetAccessBindingsRequest)(nil),    // 31: yandex.cloud.access.SetAccessBindingsRequest
	(*access.UpdateAccessBindingsRequest)(nil), // 32: yandex.cloud.access.UpdateAccessBindingsRequest
	(*access.ListAccessBindingsResponse)(nil),  // 33: yandex.cloud.access.ListAccessBindingsResponse
}
var file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_depIdxs = []int32{
	22, // 0: yandex.cloud.organizationmanager.v1.idp.ListUserpoolsResponse.userpools:type_name -> yandex.cloud.organizationmanager.v1.idp.Userpool
	20, // 1: yandex.cloud.organizationmanager.v1.idp.CreateUserpoolRequest.labels:type_name -> yandex.cloud.organizationmanager.v1.idp.CreateUserpoolRequest.LabelsEntry
	23, // 2: yandex.cloud.organizationmanager.v1.idp.CreateUserpoolRequest.user_settings:type_name -> yandex.cloud.organizationmanager.v1.idp.UserSettings
	24, // 3: yandex.cloud.organizationmanager.v1.idp.CreateUserpoolRequest.password_quality_policy:type_name -> yandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy
	25, // 4: yandex.cloud.organizationmanager.v1.idp.CreateUserpoolRequest.password_lifetime_policy:type_name -> yandex.cloud.organizationmanager.v1.idp.PasswordLifetimePolicy
	26, // 5: yandex.cloud.organizationmanager.v1.idp.CreateUserpoolRequest.bruteforce_protection_policy:type_name -> yandex.cloud.organizationmanager.v1.idp.BruteforceProtectionPolicy
	27, // 6: yandex.cloud.organizationmanager.v1.idp.UpdateUserpoolRequest.update_mask:type_name -> google.protobuf.FieldMask
	21, // 7: yandex.cloud.organizationmanager.v1.idp.UpdateUserpoolRequest.labels:type_name -> yandex.cloud.organizationmanager.v1.idp.UpdateUserpoolRequest.LabelsEntry
	23, // 8: yandex.cloud.organizationmanager.v1.idp.UpdateUserpoolRequest.user_settings:type_name -> yandex.cloud.organizationmanager.v1.idp.UserSettings
	24, // 9: yandex.cloud.organizationmanager.v1.idp.UpdateUserpoolRequest.password_quality_policy:type_name -> yandex.cloud.organizationmanager.v1.idp.PasswordQualityPolicy
	25, // 10: yandex.cloud.organizationmanager.v1.idp.UpdateUserpoolRequest.password_lifetime_policy:type_name -> yandex.cloud.organizationmanager.v1.idp.PasswordLifetimePolicy
	26, // 11: yandex.cloud.organizationmanager.v1.idp.UpdateUserpoolRequest.bruteforce_protection_policy:type_name -> yandex.cloud.organizationmanager.v1.idp.BruteforceProtectionPolicy
	28, // 12: yandex.cloud.organizationmanager.v1.idp.ListUserpoolDomainsResponse.domains:type_name -> yandex.cloud.organizationmanager.v1.idp.Domain
	29, // 13: yandex.cloud.organizationmanager.v1.idp.ListUserpoolOperationsResponse.operations:type_name -> yandex.cloud.operation.Operation
	0,  // 14: yandex.cloud.organizationmanager.v1.idp.UserpoolService.Get:input_type -> yandex.cloud.organizationmanager.v1.idp.GetUserpoolRequest
	1,  // 15: yandex.cloud.organizationmanager.v1.idp.UserpoolService.List:input_type -> yandex.cloud.organizationmanager.v1.idp.ListUserpoolsRequest
	3,  // 16: yandex.cloud.organizationmanager.v1.idp.UserpoolService.Create:input_type -> yandex.cloud.organizationmanager.v1.idp.CreateUserpoolRequest
	5,  // 17: yandex.cloud.organizationmanager.v1.idp.UserpoolService.Update:input_type -> yandex.cloud.organizationmanager.v1.idp.UpdateUserpoolRequest
	7,  // 18: yandex.cloud.organizationmanager.v1.idp.UserpoolService.Delete:input_type -> yandex.cloud.organizationmanager.v1.idp.DeleteUserpoolRequest
	9,  // 19: yandex.cloud.organizationmanager.v1.idp.UserpoolService.GetDomain:input_type -> yandex.cloud.organizationmanager.v1.idp.GetUserpoolDomainRequest
	10, // 20: yandex.cloud.organizationmanager.v1.idp.UserpoolService.ListDomains:input_type -> yandex.cloud.organizationmanager.v1.idp.ListUserpoolDomainsRequest
	12, // 21: yandex.cloud.organizationmanager.v1.idp.UserpoolService.AddDomain:input_type -> yandex.cloud.organizationmanager.v1.idp.AddUserpoolDomainRequest
	14, // 22: yandex.cloud.organizationmanager.v1.idp.UserpoolService.ValidateDomain:input_type -> yandex.cloud.organizationmanager.v1.idp.ValidateUserpoolDomainRequest
	16, // 23: yandex.cloud.organizationmanager.v1.idp.UserpoolService.DeleteDomain:input_type -> yandex.cloud.organizationmanager.v1.idp.DeleteUserpoolDomainRequest
	18, // 24: yandex.cloud.organizationmanager.v1.idp.UserpoolService.ListOperations:input_type -> yandex.cloud.organizationmanager.v1.idp.ListUserpoolOperationsRequest
	30, // 25: yandex.cloud.organizationmanager.v1.idp.UserpoolService.ListAccessBindings:input_type -> yandex.cloud.access.ListAccessBindingsRequest
	31, // 26: yandex.cloud.organizationmanager.v1.idp.UserpoolService.SetAccessBindings:input_type -> yandex.cloud.access.SetAccessBindingsRequest
	32, // 27: yandex.cloud.organizationmanager.v1.idp.UserpoolService.UpdateAccessBindings:input_type -> yandex.cloud.access.UpdateAccessBindingsRequest
	22, // 28: yandex.cloud.organizationmanager.v1.idp.UserpoolService.Get:output_type -> yandex.cloud.organizationmanager.v1.idp.Userpool
	2,  // 29: yandex.cloud.organizationmanager.v1.idp.UserpoolService.List:output_type -> yandex.cloud.organizationmanager.v1.idp.ListUserpoolsResponse
	29, // 30: yandex.cloud.organizationmanager.v1.idp.UserpoolService.Create:output_type -> yandex.cloud.operation.Operation
	29, // 31: yandex.cloud.organizationmanager.v1.idp.UserpoolService.Update:output_type -> yandex.cloud.operation.Operation
	29, // 32: yandex.cloud.organizationmanager.v1.idp.UserpoolService.Delete:output_type -> yandex.cloud.operation.Operation
	28, // 33: yandex.cloud.organizationmanager.v1.idp.UserpoolService.GetDomain:output_type -> yandex.cloud.organizationmanager.v1.idp.Domain
	11, // 34: yandex.cloud.organizationmanager.v1.idp.UserpoolService.ListDomains:output_type -> yandex.cloud.organizationmanager.v1.idp.ListUserpoolDomainsResponse
	29, // 35: yandex.cloud.organizationmanager.v1.idp.UserpoolService.AddDomain:output_type -> yandex.cloud.operation.Operation
	29, // 36: yandex.cloud.organizationmanager.v1.idp.UserpoolService.ValidateDomain:output_type -> yandex.cloud.operation.Operation
	29, // 37: yandex.cloud.organizationmanager.v1.idp.UserpoolService.DeleteDomain:output_type -> yandex.cloud.operation.Operation
	19, // 38: yandex.cloud.organizationmanager.v1.idp.UserpoolService.ListOperations:output_type -> yandex.cloud.organizationmanager.v1.idp.ListUserpoolOperationsResponse
	33, // 39: yandex.cloud.organizationmanager.v1.idp.UserpoolService.ListAccessBindings:output_type -> yandex.cloud.access.ListAccessBindingsResponse
	29, // 40: yandex.cloud.organizationmanager.v1.idp.UserpoolService.SetAccessBindings:output_type -> yandex.cloud.operation.Operation
	29, // 41: yandex.cloud.organizationmanager.v1.idp.UserpoolService.UpdateAccessBindings:output_type -> yandex.cloud.operation.Operation
	28, // [28:42] is the sub-list for method output_type
	14, // [14:28] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_init() }
func file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_init() {
	if File_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto != nil {
		return
	}
	file_yandex_cloud_organizationmanager_v1_idp_userpool_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDesc), len(file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto = out.File
	file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_goTypes = nil
	file_yandex_cloud_organizationmanager_v1_idp_userpool_service_proto_depIdxs = nil
}

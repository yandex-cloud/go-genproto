// Code generated by protoc-gen-goext. DO NOT EDIT.

package organizationmanager

import (
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

func (m *CreateMfaEnforcementRequest) SetOrganizationId(v string) {
	m.OrganizationId = v
}

func (m *CreateMfaEnforcementRequest) SetAcrId(v string) {
	m.AcrId = v
}

func (m *CreateMfaEnforcementRequest) SetTtl(v *durationpb.Duration) {
	m.Ttl = v
}

func (m *CreateMfaEnforcementRequest) SetStatus(v CreateMfaEnforcementRequest_Status) {
	m.Status = v
}

func (m *CreateMfaEnforcementRequest) SetApplyAt(v *timestamppb.Timestamp) {
	m.ApplyAt = v
}

func (m *CreateMfaEnforcementRequest) SetEnrollWindow(v *durationpb.Duration) {
	m.EnrollWindow = v
}

func (m *CreateMfaEnforcementRequest) SetName(v string) {
	m.Name = v
}

func (m *CreateMfaEnforcementRequest) SetDescription(v string) {
	m.Description = v
}

func (m *CreateMfaEnforcementMetadata) SetOrganizationId(v string) {
	m.OrganizationId = v
}

func (m *CreateMfaEnforcementMetadata) SetMfaEnforcementId(v string) {
	m.MfaEnforcementId = v
}

func (m *UpdateMfaEnforcementRequest) SetMfaEnforcementId(v string) {
	m.MfaEnforcementId = v
}

func (m *UpdateMfaEnforcementRequest) SetAcrId(v string) {
	m.AcrId = v
}

func (m *UpdateMfaEnforcementRequest) SetTtl(v *durationpb.Duration) {
	m.Ttl = v
}

func (m *UpdateMfaEnforcementRequest) SetStatus(v UpdateMfaEnforcementRequest_Status) {
	m.Status = v
}

func (m *UpdateMfaEnforcementRequest) SetApplyAt(v *timestamppb.Timestamp) {
	m.ApplyAt = v
}

func (m *UpdateMfaEnforcementRequest) SetEnrollWindow(v *durationpb.Duration) {
	m.EnrollWindow = v
}

func (m *UpdateMfaEnforcementRequest) SetUpdateMask(v *fieldmaskpb.FieldMask) {
	m.UpdateMask = v
}

func (m *UpdateMfaEnforcementRequest) SetName(v string) {
	m.Name = v
}

func (m *UpdateMfaEnforcementRequest) SetDescription(v string) {
	m.Description = v
}

func (m *UpdateMfaEnforcementMetadata) SetMfaEnforcementId(v string) {
	m.MfaEnforcementId = v
}

func (m *ActivateMfaEnforcementRequest) SetMfaEnforcementId(v string) {
	m.MfaEnforcementId = v
}

func (m *ActivateMfaEnforcementMetadata) SetMfaEnforcementId(v string) {
	m.MfaEnforcementId = v
}

func (m *DeactivateMfaEnforcementRequest) SetMfaEnforcementId(v string) {
	m.MfaEnforcementId = v
}

func (m *DeactivateMfaEnforcementMetadata) SetMfaEnforcementId(v string) {
	m.MfaEnforcementId = v
}

func (m *DeleteMfaEnforcementRequest) SetMfaEnforcementId(v string) {
	m.MfaEnforcementId = v
}

func (m *DeleteMfaEnforcementMetadata) SetMfaEnforcementId(v string) {
	m.MfaEnforcementId = v
}

func (m *GetMfaEnforcementRequest) SetMfaEnforcementId(v string) {
	m.MfaEnforcementId = v
}

func (m *ListMfaEnforcementsRequest) SetOrganizationId(v string) {
	m.OrganizationId = v
}

func (m *ListMfaEnforcementsRequest) SetPageSize(v int64) {
	m.PageSize = v
}

func (m *ListMfaEnforcementsRequest) SetPageToken(v string) {
	m.PageToken = v
}

func (m *ListMfaEnforcementsResponse) SetMfaEnforcements(v []*MfaEnforcement) {
	m.MfaEnforcements = v
}

func (m *ListMfaEnforcementsResponse) SetNextPageToken(v string) {
	m.NextPageToken = v
}

func (m *UpdateAudienceRequest) SetMfaEnforcementId(v string) {
	m.MfaEnforcementId = v
}

func (m *UpdateAudienceRequest) SetAudienceDeltas(v []*AudienceDelta) {
	m.AudienceDeltas = v
}

func (m *UpdateAudienceResponse) SetMfaEnforcementId(v string) {
	m.MfaEnforcementId = v
}

func (m *UpdateAudienceResponse) SetEffectiveDeltas(v []*AudienceDelta) {
	m.EffectiveDeltas = v
}

func (m *AudienceDelta) SetAction(v AudienceDelta_Action) {
	m.Action = v
}

func (m *AudienceDelta) SetSubjectId(v string) {
	m.SubjectId = v
}

func (m *UpdateAudienceMetadata) SetMfaEnforcementId(v string) {
	m.MfaEnforcementId = v
}

func (m *ListAudienceRequest) SetMfaEnforcementId(v string) {
	m.MfaEnforcementId = v
}

func (m *ListAudienceRequest) SetPageSize(v int64) {
	m.PageSize = v
}

func (m *ListAudienceRequest) SetPageToken(v string) {
	m.PageToken = v
}

func (m *ListAudienceResponse) SetSubjects(v []*ListAudienceResponse_Subject) {
	m.Subjects = v
}

func (m *ListAudienceResponse) SetNextPageToken(v string) {
	m.NextPageToken = v
}

func (m *ListAudienceResponse_Subject) SetId(v string) {
	m.Id = v
}

func (m *ListAudienceResponse_Subject) SetType(v string) {
	m.Type = v
}

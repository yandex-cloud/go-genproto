// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: yandex/cloud/quotamanager/v1/quota_request_service.proto

package quotamanager

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetQuotaRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the quota request to return.
	QuotaRequestId string `protobuf:"bytes,1,opt,name=quota_request_id,json=quotaRequestId,proto3" json:"quota_request_id,omitempty"`
}

func (x *GetQuotaRequestRequest) Reset() {
	*x = GetQuotaRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuotaRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuotaRequestRequest) ProtoMessage() {}

func (x *GetQuotaRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuotaRequestRequest.ProtoReflect.Descriptor instead.
func (*GetQuotaRequestRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetQuotaRequestRequest) GetQuotaRequestId() string {
	if x != nil {
		return x.QuotaRequestId
	}
	return ""
}

type CreateQuotaRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource to create a quota request in.
	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	// Desired quota limits
	DesiredQuotaLimits []*CreateQuotaRequestRequest_DesiredQuotaLimit `protobuf:"bytes,2,rep,name=desired_quota_limits,json=desiredQuotaLimits,proto3" json:"desired_quota_limits,omitempty"`
}

func (x *CreateQuotaRequestRequest) Reset() {
	*x = CreateQuotaRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuotaRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuotaRequestRequest) ProtoMessage() {}

func (x *CreateQuotaRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuotaRequestRequest.ProtoReflect.Descriptor instead.
func (*CreateQuotaRequestRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateQuotaRequestRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *CreateQuotaRequestRequest) GetDesiredQuotaLimits() []*CreateQuotaRequestRequest_DesiredQuotaLimit {
	if x != nil {
		return x.DesiredQuotaLimits
	}
	return nil
}

type CreateQuotaRequestMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the quota request that is being created.
	QuotaRequestId string `protobuf:"bytes,1,opt,name=quota_request_id,json=quotaRequestId,proto3" json:"quota_request_id,omitempty"`
}

func (x *CreateQuotaRequestMetadata) Reset() {
	*x = CreateQuotaRequestMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuotaRequestMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuotaRequestMetadata) ProtoMessage() {}

func (x *CreateQuotaRequestMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuotaRequestMetadata.ProtoReflect.Descriptor instead.
func (*CreateQuotaRequestMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateQuotaRequestMetadata) GetQuotaRequestId() string {
	if x != nil {
		return x.QuotaRequestId
	}
	return ""
}

type CancelQuotaRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the quota request to update.
	QuotaRequestId string `protobuf:"bytes,1,opt,name=quota_request_id,json=quotaRequestId,proto3" json:"quota_request_id,omitempty"`
	// Quota IDs that is being canceled.
	QuotaIds []string `protobuf:"bytes,2,rep,name=quota_ids,json=quotaIds,proto3" json:"quota_ids,omitempty"`
}

func (x *CancelQuotaRequestRequest) Reset() {
	*x = CancelQuotaRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelQuotaRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelQuotaRequestRequest) ProtoMessage() {}

func (x *CancelQuotaRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelQuotaRequestRequest.ProtoReflect.Descriptor instead.
func (*CancelQuotaRequestRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescGZIP(), []int{3}
}

func (x *CancelQuotaRequestRequest) GetQuotaRequestId() string {
	if x != nil {
		return x.QuotaRequestId
	}
	return ""
}

func (x *CancelQuotaRequestRequest) GetQuotaIds() []string {
	if x != nil {
		return x.QuotaIds
	}
	return nil
}

type CancelQuotaRequestMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the quota request that is being updated.
	QuotaRequestId string `protobuf:"bytes,1,opt,name=quota_request_id,json=quotaRequestId,proto3" json:"quota_request_id,omitempty"`
}

func (x *CancelQuotaRequestMetadata) Reset() {
	*x = CancelQuotaRequestMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelQuotaRequestMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelQuotaRequestMetadata) ProtoMessage() {}

func (x *CancelQuotaRequestMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelQuotaRequestMetadata.ProtoReflect.Descriptor instead.
func (*CancelQuotaRequestMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescGZIP(), []int{4}
}

func (x *CancelQuotaRequestMetadata) GetQuotaRequestId() string {
	if x != nil {
		return x.QuotaRequestId
	}
	return ""
}

type ListQuotaRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource to list quota requests in.
	Resource *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	// A filter expression that filters resources listed in the response.
	// The expression must specify:
	// 1. The field name. Currently you can use filtering only on the [quotaRequest.status] field.
	// 2. An `=` operator.
	// 3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
	Filter string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size],
	// the service returns a [ListQuotaRequestsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value: 100
	PageSize int64 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token]
	// to the [ListQuotaRequestsResponse.next_page_token]
	// returned by a previous list request.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListQuotaRequestRequest) Reset() {
	*x = ListQuotaRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuotaRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotaRequestRequest) ProtoMessage() {}

func (x *ListQuotaRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuotaRequestRequest.ProtoReflect.Descriptor instead.
func (*ListQuotaRequestRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListQuotaRequestRequest) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ListQuotaRequestRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListQuotaRequestRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListQuotaRequestRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListQuotaRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of quota requests.
	QuotaRequests []*QuotaRequest `protobuf:"bytes,1,rep,name=quota_requests,json=quotaRequests,proto3" json:"quota_requests,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListQuotaRequestsRequest.page_size], use
	// the [next_page_token] as the value
	// for the [ListQuotaRequestsRequest.page_token] query parameter
	// in the next list request. Each subsequent list request will have its own
	// [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListQuotaRequestResponse) Reset() {
	*x = ListQuotaRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuotaRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotaRequestResponse) ProtoMessage() {}

func (x *ListQuotaRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuotaRequestResponse.ProtoReflect.Descriptor instead.
func (*ListQuotaRequestResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListQuotaRequestResponse) GetQuotaRequests() []*QuotaRequest {
	if x != nil {
		return x.QuotaRequests
	}
	return nil
}

func (x *ListQuotaRequestResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListQuotaRequestOperationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the quota request to list operations for.
	QuotaRequestId string `protobuf:"bytes,1,opt,name=quota_request_id,json=quotaRequestId,proto3" json:"quota_request_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size], the service returns a [ListQuotaRequestOperationsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	// Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token]
	// to the [ListQuotaRequestOperationsResponse.next_page_token]
	// returned by a previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListQuotaRequestOperationsRequest) Reset() {
	*x = ListQuotaRequestOperationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuotaRequestOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotaRequestOperationsRequest) ProtoMessage() {}

func (x *ListQuotaRequestOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuotaRequestOperationsRequest.ProtoReflect.Descriptor instead.
func (*ListQuotaRequestOperationsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListQuotaRequestOperationsRequest) GetQuotaRequestId() string {
	if x != nil {
		return x.QuotaRequestId
	}
	return ""
}

func (x *ListQuotaRequestOperationsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListQuotaRequestOperationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListQuotaRequestOperationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of operations for the specified quota request.
	Operations []*operation.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListQuotaRequestOperationsRequest.page_size], use the [next_page_token] as the value
	// for the [ListQuotaRequestOperationsRequest.page_token] query parameter in the next list request.
	// Each subsequent list request will have its own [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListQuotaRequestOperationsResponse) Reset() {
	*x = ListQuotaRequestOperationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuotaRequestOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotaRequestOperationsResponse) ProtoMessage() {}

func (x *ListQuotaRequestOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuotaRequestOperationsResponse.ProtoReflect.Descriptor instead.
func (*ListQuotaRequestOperationsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListQuotaRequestOperationsResponse) GetOperations() []*operation.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ListQuotaRequestOperationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateQuotaRequestRequest_DesiredQuotaLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the quota
	QuotaId string `protobuf:"bytes,1,opt,name=quota_id,json=quotaId,proto3" json:"quota_id,omitempty"`
	// Desired limit of the quota
	DesiredLimit float64 `protobuf:"fixed64,2,opt,name=desired_limit,json=desiredLimit,proto3" json:"desired_limit,omitempty"`
}

func (x *CreateQuotaRequestRequest_DesiredQuotaLimit) Reset() {
	*x = CreateQuotaRequestRequest_DesiredQuotaLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuotaRequestRequest_DesiredQuotaLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuotaRequestRequest_DesiredQuotaLimit) ProtoMessage() {}

func (x *CreateQuotaRequestRequest_DesiredQuotaLimit) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuotaRequestRequest_DesiredQuotaLimit.ProtoReflect.Descriptor instead.
func (*CreateQuotaRequestRequest_DesiredQuotaLimit) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CreateQuotaRequestRequest_DesiredQuotaLimit) GetQuotaId() string {
	if x != nil {
		return x.QuotaId
	}
	return ""
}

func (x *CreateQuotaRequestRequest_DesiredQuotaLimit) GetDesiredLimit() float64 {
	if x != nil {
		return x.DesiredLimit
	}
	return 0
}

var File_yandex_cloud_quotamanager_v1_quota_request_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDesc = []byte{
	0x0a, 0x38, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1d, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x50,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x10, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0xe8, 0xc7, 0x31, 0x01, 0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30,
	0x52, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x22, 0xec, 0x02, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x14, 0x64, 0x65, 0x73,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x42, 0x09, 0x82, 0xc8, 0x31, 0x05, 0x31, 0x2d, 0x31, 0x30, 0x30, 0x52, 0x12, 0x64,
	0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x73, 0x1a, 0x7c, 0x0a, 0x11, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe8, 0xc7, 0x31, 0x01, 0x8a, 0xc8,
	0x31, 0x04, 0x3c, 0x3d, 0x36, 0x34, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x49, 0x64, 0x12,
	0x3e, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x42, 0x19, 0xfa, 0xc7, 0x31, 0x15, 0x30, 0x2d, 0x39, 0x32,
	0x32, 0x33, 0x33, 0x37, 0x32, 0x30, 0x33, 0x36, 0x38, 0x35, 0x34, 0x37, 0x37, 0x35, 0x38, 0x30,
	0x37, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x46, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a,
	0x10, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x19, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x10, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xe8, 0xc7, 0x31, 0x01, 0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x0e, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a,
	0x09, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x12, 0x82, 0xc8, 0x31, 0x06, 0x31, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x8a, 0xc8, 0x31, 0x04,
	0x3c, 0x3d, 0x36, 0x34, 0x52, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x49, 0x64, 0x73, 0x22, 0x46,
	0x0a, 0x1a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x10,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xda, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x48, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x04, 0xe8, 0xc7,
	0x31, 0x01, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x8a, 0xc8,
	0x31, 0x06, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x0a, 0xfa, 0xc7, 0x31, 0x06, 0x30, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0x8a,
	0xc8, 0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x95, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x51, 0x0a, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xae, 0x01, 0x0a, 0x21,
	0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x36, 0x0a, 0x10, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe8, 0xc7, 0x31,
	0x01, 0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xfa, 0xc7,
	0x31, 0x06, 0x30, 0x2d, 0x31, 0x30, 0x30, 0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x28, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0x8a, 0xc8, 0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30,
	0x30, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8f, 0x01, 0x0a,
	0x22, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0xe3,
	0x07, 0x0a, 0x13, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa3, 0x01, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x34,
	0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x12, 0x32, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xbe, 0x01, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x37, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x58, 0xb2, 0xd2, 0x2a, 0x2a, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0xd8, 0x01,
	0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x37, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0xb2, 0xd2, 0x2a, 0x2a, 0x0a, 0x1a, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3e, 0x3a, 0x01, 0x2a, 0x22, 0x39, 0x2f,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x7b,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0xac, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x35, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0xda, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x2e, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x3f, 0x12, 0x3d, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2d, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x71, 0x0a, 0x20, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2d, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61,
	0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescData = file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDesc
)

func file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescData)
	})
	return file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDescData
}

var file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_yandex_cloud_quotamanager_v1_quota_request_service_proto_goTypes = []any{
	(*GetQuotaRequestRequest)(nil),                      // 0: yandex.cloud.quotamanager.v1.GetQuotaRequestRequest
	(*CreateQuotaRequestRequest)(nil),                   // 1: yandex.cloud.quotamanager.v1.CreateQuotaRequestRequest
	(*CreateQuotaRequestMetadata)(nil),                  // 2: yandex.cloud.quotamanager.v1.CreateQuotaRequestMetadata
	(*CancelQuotaRequestRequest)(nil),                   // 3: yandex.cloud.quotamanager.v1.CancelQuotaRequestRequest
	(*CancelQuotaRequestMetadata)(nil),                  // 4: yandex.cloud.quotamanager.v1.CancelQuotaRequestMetadata
	(*ListQuotaRequestRequest)(nil),                     // 5: yandex.cloud.quotamanager.v1.ListQuotaRequestRequest
	(*ListQuotaRequestResponse)(nil),                    // 6: yandex.cloud.quotamanager.v1.ListQuotaRequestResponse
	(*ListQuotaRequestOperationsRequest)(nil),           // 7: yandex.cloud.quotamanager.v1.ListQuotaRequestOperationsRequest
	(*ListQuotaRequestOperationsResponse)(nil),          // 8: yandex.cloud.quotamanager.v1.ListQuotaRequestOperationsResponse
	(*CreateQuotaRequestRequest_DesiredQuotaLimit)(nil), // 9: yandex.cloud.quotamanager.v1.CreateQuotaRequestRequest.DesiredQuotaLimit
	(*Resource)(nil),                                    // 10: yandex.cloud.quotamanager.v1.Resource
	(*QuotaRequest)(nil),                                // 11: yandex.cloud.quotamanager.v1.QuotaRequest
	(*operation.Operation)(nil),                         // 12: yandex.cloud.operation.Operation
}
var file_yandex_cloud_quotamanager_v1_quota_request_service_proto_depIdxs = []int32{
	10, // 0: yandex.cloud.quotamanager.v1.CreateQuotaRequestRequest.resource:type_name -> yandex.cloud.quotamanager.v1.Resource
	9,  // 1: yandex.cloud.quotamanager.v1.CreateQuotaRequestRequest.desired_quota_limits:type_name -> yandex.cloud.quotamanager.v1.CreateQuotaRequestRequest.DesiredQuotaLimit
	10, // 2: yandex.cloud.quotamanager.v1.ListQuotaRequestRequest.resource:type_name -> yandex.cloud.quotamanager.v1.Resource
	11, // 3: yandex.cloud.quotamanager.v1.ListQuotaRequestResponse.quota_requests:type_name -> yandex.cloud.quotamanager.v1.QuotaRequest
	12, // 4: yandex.cloud.quotamanager.v1.ListQuotaRequestOperationsResponse.operations:type_name -> yandex.cloud.operation.Operation
	0,  // 5: yandex.cloud.quotamanager.v1.QuotaRequestService.Get:input_type -> yandex.cloud.quotamanager.v1.GetQuotaRequestRequest
	1,  // 6: yandex.cloud.quotamanager.v1.QuotaRequestService.Create:input_type -> yandex.cloud.quotamanager.v1.CreateQuotaRequestRequest
	3,  // 7: yandex.cloud.quotamanager.v1.QuotaRequestService.Cancel:input_type -> yandex.cloud.quotamanager.v1.CancelQuotaRequestRequest
	5,  // 8: yandex.cloud.quotamanager.v1.QuotaRequestService.List:input_type -> yandex.cloud.quotamanager.v1.ListQuotaRequestRequest
	7,  // 9: yandex.cloud.quotamanager.v1.QuotaRequestService.ListOperations:input_type -> yandex.cloud.quotamanager.v1.ListQuotaRequestOperationsRequest
	11, // 10: yandex.cloud.quotamanager.v1.QuotaRequestService.Get:output_type -> yandex.cloud.quotamanager.v1.QuotaRequest
	12, // 11: yandex.cloud.quotamanager.v1.QuotaRequestService.Create:output_type -> yandex.cloud.operation.Operation
	12, // 12: yandex.cloud.quotamanager.v1.QuotaRequestService.Cancel:output_type -> yandex.cloud.operation.Operation
	6,  // 13: yandex.cloud.quotamanager.v1.QuotaRequestService.List:output_type -> yandex.cloud.quotamanager.v1.ListQuotaRequestResponse
	8,  // 14: yandex.cloud.quotamanager.v1.QuotaRequestService.ListOperations:output_type -> yandex.cloud.quotamanager.v1.ListQuotaRequestOperationsResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_yandex_cloud_quotamanager_v1_quota_request_service_proto_init() }
func file_yandex_cloud_quotamanager_v1_quota_request_service_proto_init() {
	if File_yandex_cloud_quotamanager_v1_quota_request_service_proto != nil {
		return
	}
	file_yandex_cloud_quotamanager_v1_quota_request_proto_init()
	file_yandex_cloud_quotamanager_v1_resource_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuotaRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateQuotaRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateQuotaRequestMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CancelQuotaRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CancelQuotaRequestMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListQuotaRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListQuotaRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ListQuotaRequestOperationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListQuotaRequestOperationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CreateQuotaRequestRequest_DesiredQuotaLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_quotamanager_v1_quota_request_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_quotamanager_v1_quota_request_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_quotamanager_v1_quota_request_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_quotamanager_v1_quota_request_service_proto = out.File
	file_yandex_cloud_quotamanager_v1_quota_request_service_proto_rawDesc = nil
	file_yandex_cloud_quotamanager_v1_quota_request_service_proto_goTypes = nil
	file_yandex_cloud_quotamanager_v1_quota_request_service_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: yandex/cloud/searchapi/v2/search_service.proto

package searchapi

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SortSpec_SortOrder int32

const (
	SortSpec_SORT_ORDER_UNSPECIFIED SortSpec_SortOrder = 0
	// Reverse order from oldest to most recent.
	SortSpec_SORT_ORDER_ASC SortSpec_SortOrder = 1
	// Direct order from most recent to oldest (default).
	SortSpec_SORT_ORDER_DESC SortSpec_SortOrder = 2
)

// Enum value maps for SortSpec_SortOrder.
var (
	SortSpec_SortOrder_name = map[int32]string{
		0: "SORT_ORDER_UNSPECIFIED",
		1: "SORT_ORDER_ASC",
		2: "SORT_ORDER_DESC",
	}
	SortSpec_SortOrder_value = map[string]int32{
		"SORT_ORDER_UNSPECIFIED": 0,
		"SORT_ORDER_ASC":         1,
		"SORT_ORDER_DESC":        2,
	}
)

func (x SortSpec_SortOrder) Enum() *SortSpec_SortOrder {
	p := new(SortSpec_SortOrder)
	*p = x
	return p
}

func (x SortSpec_SortOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortSpec_SortOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_searchapi_v2_search_service_proto_enumTypes[0].Descriptor()
}

func (SortSpec_SortOrder) Type() protoreflect.EnumType {
	return &file_yandex_cloud_searchapi_v2_search_service_proto_enumTypes[0]
}

func (x SortSpec_SortOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortSpec_SortOrder.Descriptor instead.
func (SortSpec_SortOrder) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_searchapi_v2_search_service_proto_rawDescGZIP(), []int{0, 0}
}

type SortSpec_SortMode int32

const (
	SortSpec_SORT_MODE_UNSPECIFIED SortSpec_SortMode = 0
	// Sort documents by relevance (default value).
	SortSpec_SORT_MODE_BY_RELEVANCE SortSpec_SortMode = 1
	// Sort documents by update time.
	SortSpec_SORT_MODE_BY_TIME SortSpec_SortMode = 2
)

// Enum value maps for SortSpec_SortMode.
var (
	SortSpec_SortMode_name = map[int32]string{
		0: "SORT_MODE_UNSPECIFIED",
		1: "SORT_MODE_BY_RELEVANCE",
		2: "SORT_MODE_BY_TIME",
	}
	SortSpec_SortMode_value = map[string]int32{
		"SORT_MODE_UNSPECIFIED":  0,
		"SORT_MODE_BY_RELEVANCE": 1,
		"SORT_MODE_BY_TIME":      2,
	}
)

func (x SortSpec_SortMode) Enum() *SortSpec_SortMode {
	p := new(SortSpec_SortMode)
	*p = x
	return p
}

func (x SortSpec_SortMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortSpec_SortMode) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_searchapi_v2_search_service_proto_enumTypes[1].Descriptor()
}

func (SortSpec_SortMode) Type() protoreflect.EnumType {
	return &file_yandex_cloud_searchapi_v2_search_service_proto_enumTypes[1]
}

func (x SortSpec_SortMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortSpec_SortMode.Descriptor instead.
func (SortSpec_SortMode) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_searchapi_v2_search_service_proto_rawDescGZIP(), []int{0, 1}
}

type GroupSpec_GroupMode int32

const (
	GroupSpec_GROUP_MODE_UNSPECIFIED GroupSpec_GroupMode = 0
	// Flat grouping. Each group contains a single document.
	GroupSpec_GROUP_MODE_FLAT GroupSpec_GroupMode = 1
	// Grouping by domain. Each group contains documents from one domain.
	GroupSpec_GROUP_MODE_DEEP GroupSpec_GroupMode = 2
)

// Enum value maps for GroupSpec_GroupMode.
var (
	GroupSpec_GroupMode_name = map[int32]string{
		0: "GROUP_MODE_UNSPECIFIED",
		1: "GROUP_MODE_FLAT",
		2: "GROUP_MODE_DEEP",
	}
	GroupSpec_GroupMode_value = map[string]int32{
		"GROUP_MODE_UNSPECIFIED": 0,
		"GROUP_MODE_FLAT":        1,
		"GROUP_MODE_DEEP":        2,
	}
)

func (x GroupSpec_GroupMode) Enum() *GroupSpec_GroupMode {
	p := new(GroupSpec_GroupMode)
	*p = x
	return p
}

func (x GroupSpec_GroupMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupSpec_GroupMode) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_searchapi_v2_search_service_proto_enumTypes[2].Descriptor()
}

func (GroupSpec_GroupMode) Type() protoreflect.EnumType {
	return &file_yandex_cloud_searchapi_v2_search_service_proto_enumTypes[2]
}

func (x GroupSpec_GroupMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupSpec_GroupMode.Descriptor instead.
func (GroupSpec_GroupMode) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_searchapi_v2_search_service_proto_rawDescGZIP(), []int{1, 0}
}

type WebSearchRequest_Localization int32

const (
	WebSearchRequest_LOCALIZATION_UNSPECIFIED WebSearchRequest_Localization = 0
	// Russian (default value)
	WebSearchRequest_LOCALIZATION_RU WebSearchRequest_Localization = 1
	// Ukrainian
	WebSearchRequest_LOCALIZATION_UK WebSearchRequest_Localization = 2
	// Belarusian
	WebSearchRequest_LOCALIZATION_BE WebSearchRequest_Localization = 3
	// Kazakh
	WebSearchRequest_LOCALIZATION_KK WebSearchRequest_Localization = 4
	// Turkish
	WebSearchRequest_LOCALIZATION_TR WebSearchRequest_Localization = 5
	// English
	WebSearchRequest_LOCALIZATION_EN WebSearchRequest_Localization = 6
)

// Enum value maps for WebSearchRequest_Localization.
var (
	WebSearchRequest_Localization_name = map[int32]string{
		0: "LOCALIZATION_UNSPECIFIED",
		1: "LOCALIZATION_RU",
		2: "LOCALIZATION_UK",
		3: "LOCALIZATION_BE",
		4: "LOCALIZATION_KK",
		5: "LOCALIZATION_TR",
		6: "LOCALIZATION_EN",
	}
	WebSearchRequest_Localization_value = map[string]int32{
		"LOCALIZATION_UNSPECIFIED": 0,
		"LOCALIZATION_RU":          1,
		"LOCALIZATION_UK":          2,
		"LOCALIZATION_BE":          3,
		"LOCALIZATION_KK":          4,
		"LOCALIZATION_TR":          5,
		"LOCALIZATION_EN":          6,
	}
)

func (x WebSearchRequest_Localization) Enum() *WebSearchRequest_Localization {
	p := new(WebSearchRequest_Localization)
	*p = x
	return p
}

func (x WebSearchRequest_Localization) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebSearchRequest_Localization) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_searchapi_v2_search_service_proto_enumTypes[3].Descriptor()
}

func (WebSearchRequest_Localization) Type() protoreflect.EnumType {
	return &file_yandex_cloud_searchapi_v2_search_service_proto_enumTypes[3]
}

func (x WebSearchRequest_Localization) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebSearchRequest_Localization.Descriptor instead.
func (WebSearchRequest_Localization) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_searchapi_v2_search_service_proto_rawDescGZIP(), []int{2, 0}
}

type WebSearchRequest_Format int32

const (
	WebSearchRequest_FORMAT_UNSPECIFIED WebSearchRequest_Format = 0
	// XML format (default value)
	WebSearchRequest_FORMAT_XML WebSearchRequest_Format = 1
	// HTML format
	WebSearchRequest_FORMAT_HTML WebSearchRequest_Format = 2
)

// Enum value maps for WebSearchRequest_Format.
var (
	WebSearchRequest_Format_name = map[int32]string{
		0: "FORMAT_UNSPECIFIED",
		1: "FORMAT_XML",
		2: "FORMAT_HTML",
	}
	WebSearchRequest_Format_value = map[string]int32{
		"FORMAT_UNSPECIFIED": 0,
		"FORMAT_XML":         1,
		"FORMAT_HTML":        2,
	}
)

func (x WebSearchRequest_Format) Enum() *WebSearchRequest_Format {
	p := new(WebSearchRequest_Format)
	*p = x
	return p
}

func (x WebSearchRequest_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebSearchRequest_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_searchapi_v2_search_service_proto_enumTypes[4].Descriptor()
}

func (WebSearchRequest_Format) Type() protoreflect.EnumType {
	return &file_yandex_cloud_searchapi_v2_search_service_proto_enumTypes[4]
}

func (x WebSearchRequest_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebSearchRequest_Format.Descriptor instead.
func (WebSearchRequest_Format) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_searchapi_v2_search_service_proto_rawDescGZIP(), []int{2, 1}
}

type SortSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Documents sorting mode.
	SortMode SortSpec_SortMode `protobuf:"varint,1,opt,name=sort_mode,json=sortMode,proto3,enum=yandex.cloud.searchapi.v2.SortSpec_SortMode" json:"sort_mode,omitempty"`
	// Documents sorting order.
	SortOrder SortSpec_SortOrder `protobuf:"varint,2,opt,name=sort_order,json=sortOrder,proto3,enum=yandex.cloud.searchapi.v2.SortSpec_SortOrder" json:"sort_order,omitempty"`
}

func (x *SortSpec) Reset() {
	*x = SortSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_searchapi_v2_search_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortSpec) ProtoMessage() {}

func (x *SortSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_searchapi_v2_search_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortSpec.ProtoReflect.Descriptor instead.
func (*SortSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_searchapi_v2_search_service_proto_rawDescGZIP(), []int{0}
}

func (x *SortSpec) GetSortMode() SortSpec_SortMode {
	if x != nil {
		return x.SortMode
	}
	return SortSpec_SORT_MODE_UNSPECIFIED
}

func (x *SortSpec) GetSortOrder() SortSpec_SortOrder {
	if x != nil {
		return x.SortOrder
	}
	return SortSpec_SORT_ORDER_UNSPECIFIED
}

type GroupSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Grouping method.
	GroupMode GroupSpec_GroupMode `protobuf:"varint,1,opt,name=group_mode,json=groupMode,proto3,enum=yandex.cloud.searchapi.v2.GroupSpec_GroupMode" json:"group_mode,omitempty"`
	// Maximum number of groups that can be returned per page with search results.
	GroupsOnPage int64 `protobuf:"varint,2,opt,name=groups_on_page,json=groupsOnPage,proto3" json:"groups_on_page,omitempty"`
	// Maximum number of documents that can be returned per group.
	DocsInGroup int64 `protobuf:"varint,3,opt,name=docs_in_group,json=docsInGroup,proto3" json:"docs_in_group,omitempty"`
}

func (x *GroupSpec) Reset() {
	*x = GroupSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_searchapi_v2_search_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSpec) ProtoMessage() {}

func (x *GroupSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_searchapi_v2_search_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSpec.ProtoReflect.Descriptor instead.
func (*GroupSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_searchapi_v2_search_service_proto_rawDescGZIP(), []int{1}
}

func (x *GroupSpec) GetGroupMode() GroupSpec_GroupMode {
	if x != nil {
		return x.GroupMode
	}
	return GroupSpec_GROUP_MODE_UNSPECIFIED
}

func (x *GroupSpec) GetGroupsOnPage() int64 {
	if x != nil {
		return x.GroupsOnPage
	}
	return 0
}

func (x *GroupSpec) GetDocsInGroup() int64 {
	if x != nil {
		return x.DocsInGroup
	}
	return 0
}

type WebSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Search query.
	Query *SearchQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// The rules for sorting search results that define the sequence of the returned search results.
	SortSpec *SortSpec `protobuf:"bytes,2,opt,name=sort_spec,json=sortSpec,proto3" json:"sort_spec,omitempty"`
	// Grouping settings that are used to group documents from a single domain into a container.
	GroupSpec *GroupSpec `protobuf:"bytes,3,opt,name=group_spec,json=groupSpec,proto3" json:"group_spec,omitempty"`
	// The maximum number of passages that can be used when generating a document snippet.
	MaxPassages int64 `protobuf:"varint,4,opt,name=max_passages,json=maxPassages,proto3" json:"max_passages,omitempty"`
	// ID of the search country or region that impacts the document ranking rules.
	Region string `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	// The notification language for a search response.
	L10N WebSearchRequest_Localization `protobuf:"varint,6,opt,name=l10n,proto3,enum=yandex.cloud.searchapi.v2.WebSearchRequest_Localization" json:"l10n,omitempty"`
	// ID of the folder.
	FolderId string `protobuf:"bytes,7,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Search results format.
	ResponseFormat WebSearchRequest_Format `protobuf:"varint,8,opt,name=response_format,json=responseFormat,proto3,enum=yandex.cloud.searchapi.v2.WebSearchRequest_Format" json:"response_format,omitempty"`
	// User-Agent request header value.
	UserAgent string `protobuf:"bytes,9,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
}

func (x *WebSearchRequest) Reset() {
	*x = WebSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_searchapi_v2_search_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSearchRequest) ProtoMessage() {}

func (x *WebSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_searchapi_v2_search_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSearchRequest.ProtoReflect.Descriptor instead.
func (*WebSearchRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_searchapi_v2_search_service_proto_rawDescGZIP(), []int{2}
}

func (x *WebSearchRequest) GetQuery() *SearchQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *WebSearchRequest) GetSortSpec() *SortSpec {
	if x != nil {
		return x.SortSpec
	}
	return nil
}

func (x *WebSearchRequest) GetGroupSpec() *GroupSpec {
	if x != nil {
		return x.GroupSpec
	}
	return nil
}

func (x *WebSearchRequest) GetMaxPassages() int64 {
	if x != nil {
		return x.MaxPassages
	}
	return 0
}

func (x *WebSearchRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *WebSearchRequest) GetL10N() WebSearchRequest_Localization {
	if x != nil {
		return x.L10N
	}
	return WebSearchRequest_LOCALIZATION_UNSPECIFIED
}

func (x *WebSearchRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *WebSearchRequest) GetResponseFormat() WebSearchRequest_Format {
	if x != nil {
		return x.ResponseFormat
	}
	return WebSearchRequest_FORMAT_UNSPECIFIED
}

func (x *WebSearchRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

type WebSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Search results, either in XML or HTML format depending on the request settings.
	RawData []byte `protobuf:"bytes,1,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`
}

func (x *WebSearchResponse) Reset() {
	*x = WebSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_searchapi_v2_search_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSearchResponse) ProtoMessage() {}

func (x *WebSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_searchapi_v2_search_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSearchResponse.ProtoReflect.Descriptor instead.
func (*WebSearchResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_searchapi_v2_search_service_proto_rawDescGZIP(), []int{3}
}

func (x *WebSearchResponse) GetRawData() []byte {
	if x != nil {
		return x.RawData
	}
	return nil
}

var File_yandex_cloud_searchapi_v2_search_service_proto protoreflect.FileDescriptor

var file_yandex_cloud_searchapi_v2_search_service_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x19, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x1a, 0x20, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xcf, 0x02, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x49, 0x0a,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2c, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x6f, 0x72,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x08,
	0x73, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x4c, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x50, 0x0a, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x12, 0x0a, 0x0e, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x53,
	0x43, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x02, 0x22, 0x58, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x4f, 0x44,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1a, 0x0a, 0x16, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x59, 0x5f,
	0x52, 0x45, 0x4c, 0x45, 0x56, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x53,
	0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x59, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x10, 0x02, 0x22, 0x8b, 0x02, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x4d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x2f, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xfa, 0xc7, 0x31, 0x05, 0x31, 0x2d, 0x31,
	0x30, 0x30, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4f, 0x6e, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x2b, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0xc7, 0x31, 0x03, 0x31, 0x2d, 0x33,
	0x52, 0x0b, 0x64, 0x6f, 0x63, 0x73, 0x49, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x51, 0x0a,
	0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f,
	0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x4c, 0x41, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x45, 0x45, 0x50, 0x10, 0x02,
	0x22, 0x98, 0x06, 0x0a, 0x10, 0x57, 0x65, 0x62, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x04, 0xe8, 0xc7,
	0x31, 0x01, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x40, 0x0a, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x43, 0x0a, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x70, 0x65, 0x63, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x2a, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0xc7, 0x31, 0x03, 0x31, 0x2d, 0x35, 0x52,
	0x0b, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0x8a, 0xc8,
	0x31, 0x05, 0x3c, 0x3d, 0x31, 0x30, 0x30, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x4c, 0x0a, 0x04, 0x6c, 0x31, 0x30, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x65, 0x62, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6c, 0x31, 0x30, 0x6e, 0x12, 0x25, 0x0a,
	0x09, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0x8a, 0xc8, 0x31, 0x04, 0x3c, 0x3d, 0x35, 0x30, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e,
	0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x65, 0x62, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x12, 0x28, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0x8a, 0xc8, 0x31, 0x05, 0x3c, 0x3d, 0x32, 0x30, 0x30,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x0c,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x18,
	0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x4f,
	0x43, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x55, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x55, 0x4b, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x49, 0x5a, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x45, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x4f, 0x43,
	0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4b, 0x4b, 0x10, 0x04, 0x12, 0x13,
	0x0a, 0x0f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x52, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x4e, 0x10, 0x06, 0x22, 0x41, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x4f,
	0x52, 0x4d, 0x41, 0x54, 0x5f, 0x58, 0x4d, 0x4c, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x4f,
	0x52, 0x4d, 0x41, 0x54, 0x5f, 0x48, 0x54, 0x4d, 0x4c, 0x10, 0x02, 0x22, 0x34, 0x0a, 0x11, 0x57,
	0x65, 0x62, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1f, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x04, 0xe8, 0xc7, 0x31, 0x01, 0x52, 0x07, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74,
	0x61, 0x32, 0xa9, 0x01, 0x0a, 0x15, 0x57, 0x65, 0x62, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41,
	0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x06,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x2b, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x2e, 0x57, 0x65, 0x62, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0xb2, 0xd2, 0x2a, 0x13, 0x12, 0x11, 0x57, 0x65,
	0x62, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x65,
	0x62, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x32, 0x92, 0x01,
	0x0a, 0x10, 0x57, 0x65, 0x62, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x7e, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x2b, 0x2e, 0x79,
	0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x65, 0x62, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x65, 0x62, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a,
	0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x65, 0x62, 0x2f, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x42, 0x65, 0x0a, 0x1a, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x32,
	0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x3b,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_yandex_cloud_searchapi_v2_search_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_searchapi_v2_search_service_proto_rawDescData = file_yandex_cloud_searchapi_v2_search_service_proto_rawDesc
)

func file_yandex_cloud_searchapi_v2_search_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_searchapi_v2_search_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_searchapi_v2_search_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_searchapi_v2_search_service_proto_rawDescData)
	})
	return file_yandex_cloud_searchapi_v2_search_service_proto_rawDescData
}

var file_yandex_cloud_searchapi_v2_search_service_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_yandex_cloud_searchapi_v2_search_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_yandex_cloud_searchapi_v2_search_service_proto_goTypes = []any{
	(SortSpec_SortOrder)(0),            // 0: yandex.cloud.searchapi.v2.SortSpec.SortOrder
	(SortSpec_SortMode)(0),             // 1: yandex.cloud.searchapi.v2.SortSpec.SortMode
	(GroupSpec_GroupMode)(0),           // 2: yandex.cloud.searchapi.v2.GroupSpec.GroupMode
	(WebSearchRequest_Localization)(0), // 3: yandex.cloud.searchapi.v2.WebSearchRequest.Localization
	(WebSearchRequest_Format)(0),       // 4: yandex.cloud.searchapi.v2.WebSearchRequest.Format
	(*SortSpec)(nil),                   // 5: yandex.cloud.searchapi.v2.SortSpec
	(*GroupSpec)(nil),                  // 6: yandex.cloud.searchapi.v2.GroupSpec
	(*WebSearchRequest)(nil),           // 7: yandex.cloud.searchapi.v2.WebSearchRequest
	(*WebSearchResponse)(nil),          // 8: yandex.cloud.searchapi.v2.WebSearchResponse
	(*SearchQuery)(nil),                // 9: yandex.cloud.searchapi.v2.SearchQuery
	(*operation.Operation)(nil),        // 10: yandex.cloud.operation.Operation
}
var file_yandex_cloud_searchapi_v2_search_service_proto_depIdxs = []int32{
	1,  // 0: yandex.cloud.searchapi.v2.SortSpec.sort_mode:type_name -> yandex.cloud.searchapi.v2.SortSpec.SortMode
	0,  // 1: yandex.cloud.searchapi.v2.SortSpec.sort_order:type_name -> yandex.cloud.searchapi.v2.SortSpec.SortOrder
	2,  // 2: yandex.cloud.searchapi.v2.GroupSpec.group_mode:type_name -> yandex.cloud.searchapi.v2.GroupSpec.GroupMode
	9,  // 3: yandex.cloud.searchapi.v2.WebSearchRequest.query:type_name -> yandex.cloud.searchapi.v2.SearchQuery
	5,  // 4: yandex.cloud.searchapi.v2.WebSearchRequest.sort_spec:type_name -> yandex.cloud.searchapi.v2.SortSpec
	6,  // 5: yandex.cloud.searchapi.v2.WebSearchRequest.group_spec:type_name -> yandex.cloud.searchapi.v2.GroupSpec
	3,  // 6: yandex.cloud.searchapi.v2.WebSearchRequest.l10n:type_name -> yandex.cloud.searchapi.v2.WebSearchRequest.Localization
	4,  // 7: yandex.cloud.searchapi.v2.WebSearchRequest.response_format:type_name -> yandex.cloud.searchapi.v2.WebSearchRequest.Format
	7,  // 8: yandex.cloud.searchapi.v2.WebSearchAsyncService.Search:input_type -> yandex.cloud.searchapi.v2.WebSearchRequest
	7,  // 9: yandex.cloud.searchapi.v2.WebSearchService.Search:input_type -> yandex.cloud.searchapi.v2.WebSearchRequest
	10, // 10: yandex.cloud.searchapi.v2.WebSearchAsyncService.Search:output_type -> yandex.cloud.operation.Operation
	8,  // 11: yandex.cloud.searchapi.v2.WebSearchService.Search:output_type -> yandex.cloud.searchapi.v2.WebSearchResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_yandex_cloud_searchapi_v2_search_service_proto_init() }
func file_yandex_cloud_searchapi_v2_search_service_proto_init() {
	if File_yandex_cloud_searchapi_v2_search_service_proto != nil {
		return
	}
	file_yandex_cloud_searchapi_v2_search_query_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_searchapi_v2_search_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SortSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_searchapi_v2_search_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GroupSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_searchapi_v2_search_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*WebSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_searchapi_v2_search_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*WebSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_searchapi_v2_search_service_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_yandex_cloud_searchapi_v2_search_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_searchapi_v2_search_service_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_searchapi_v2_search_service_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_searchapi_v2_search_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_searchapi_v2_search_service_proto = out.File
	file_yandex_cloud_searchapi_v2_search_service_proto_rawDesc = nil
	file_yandex_cloud_searchapi_v2_search_service_proto_goTypes = nil
	file_yandex_cloud_searchapi_v2_search_service_proto_depIdxs = nil
}

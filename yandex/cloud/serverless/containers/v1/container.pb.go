// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/serverless/containers/v1/container.proto

package containers

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	v1 "github.com/yandex-cloud/go-genproto/yandex/cloud/logging/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetadataOption int32

const (
	// Option is default
	MetadataOption_METADATA_OPTION_UNSPECIFIED MetadataOption = 0
	// Option is enabled
	MetadataOption_ENABLED MetadataOption = 1
	// Option is disabled
	MetadataOption_DISABLED MetadataOption = 2
)

// Enum value maps for MetadataOption.
var (
	MetadataOption_name = map[int32]string{
		0: "METADATA_OPTION_UNSPECIFIED",
		1: "ENABLED",
		2: "DISABLED",
	}
	MetadataOption_value = map[string]int32{
		"METADATA_OPTION_UNSPECIFIED": 0,
		"ENABLED":                     1,
		"DISABLED":                    2,
	}
)

func (x MetadataOption) Enum() *MetadataOption {
	p := new(MetadataOption)
	*p = x
	return p
}

func (x MetadataOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetadataOption) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_serverless_containers_v1_container_proto_enumTypes[0].Descriptor()
}

func (MetadataOption) Type() protoreflect.EnumType {
	return &file_yandex_cloud_serverless_containers_v1_container_proto_enumTypes[0]
}

func (x MetadataOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetadataOption.Descriptor instead.
func (MetadataOption) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{0}
}

type Container_Status int32

const (
	Container_STATUS_UNSPECIFIED Container_Status = 0
	// Container is being created.
	Container_CREATING Container_Status = 1
	// Container is ready for use.
	Container_ACTIVE Container_Status = 2
	// Container is being deleted.
	Container_DELETING Container_Status = 3
	// Container failed. The only allowed action is delete.
	Container_ERROR Container_Status = 4
)

// Enum value maps for Container_Status.
var (
	Container_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "CREATING",
		2: "ACTIVE",
		3: "DELETING",
		4: "ERROR",
	}
	Container_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"CREATING":           1,
		"ACTIVE":             2,
		"DELETING":           3,
		"ERROR":              4,
	}
)

func (x Container_Status) Enum() *Container_Status {
	p := new(Container_Status)
	*p = x
	return p
}

func (x Container_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Container_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_serverless_containers_v1_container_proto_enumTypes[1].Descriptor()
}

func (Container_Status) Type() protoreflect.EnumType {
	return &file_yandex_cloud_serverless_containers_v1_container_proto_enumTypes[1]
}

func (x Container_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Container_Status.Descriptor instead.
func (Container_Status) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{0, 0}
}

type Revision_Status int32

const (
	Revision_STATUS_UNSPECIFIED Revision_Status = 0
	// Revision is being created.
	Revision_CREATING Revision_Status = 1
	// Revision is currently used by the container.
	Revision_ACTIVE Revision_Status = 2
	// Revision is not used by the container. May be deleted later.
	Revision_OBSOLETE Revision_Status = 3
)

// Enum value maps for Revision_Status.
var (
	Revision_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "CREATING",
		2: "ACTIVE",
		3: "OBSOLETE",
	}
	Revision_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"CREATING":           1,
		"ACTIVE":             2,
		"OBSOLETE":           3,
	}
)

func (x Revision_Status) Enum() *Revision_Status {
	p := new(Revision_Status)
	*p = x
	return p
}

func (x Revision_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Revision_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_serverless_containers_v1_container_proto_enumTypes[2].Descriptor()
}

func (Revision_Status) Type() protoreflect.EnumType {
	return &file_yandex_cloud_serverless_containers_v1_container_proto_enumTypes[2]
}

func (x Revision_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Revision_Status.Descriptor instead.
func (Revision_Status) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{1, 0}
}

type Mount_Mode int32

const (
	Mount_MODE_UNSPECIFIED Mount_Mode = 0
	Mount_READ_ONLY        Mount_Mode = 1
	Mount_READ_WRITE       Mount_Mode = 2
)

// Enum value maps for Mount_Mode.
var (
	Mount_Mode_name = map[int32]string{
		0: "MODE_UNSPECIFIED",
		1: "READ_ONLY",
		2: "READ_WRITE",
	}
	Mount_Mode_value = map[string]int32{
		"MODE_UNSPECIFIED": 0,
		"READ_ONLY":        1,
		"READ_WRITE":       2,
	}
)

func (x Mount_Mode) Enum() *Mount_Mode {
	p := new(Mount_Mode)
	*p = x
	return p
}

func (x Mount_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mount_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_serverless_containers_v1_container_proto_enumTypes[3].Descriptor()
}

func (Mount_Mode) Type() protoreflect.EnumType {
	return &file_yandex_cloud_serverless_containers_v1_container_proto_enumTypes[3]
}

func (x Mount_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mount_Mode.Descriptor instead.
func (Mount_Mode) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{12, 0}
}

type Container struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the container. Generated at creation time.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the folder that the container belongs to.
	FolderId string `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Creation timestamp for the container.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Name of the container. The name is unique within the folder.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the container.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Container labels as `key:value` pairs.
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// URL that needs to be requested to call the container.
	Url string `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	// Status of the container.
	Status        Container_Status `protobuf:"varint,9,opt,name=status,proto3,enum=yandex.cloud.serverless.containers.v1.Container_Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Container) Reset() {
	*x = Container{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{0}
}

func (x *Container) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Container) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *Container) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Container) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Container) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Container) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Container) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Container) GetStatus() Container_Status {
	if x != nil {
		return x.Status
	}
	return Container_STATUS_UNSPECIFIED
}

type Revision struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the revision.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the container that the revision belongs to.
	ContainerId string `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Description of the revision.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Creation timestamp for the revision.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Image configuration for the revision.
	Image *Image `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	// Resources allocated to the revision.
	Resources *Resources `protobuf:"bytes,6,opt,name=resources,proto3" json:"resources,omitempty"`
	// Timeout for the execution of the revision.
	//
	// If the timeout is exceeded, Serverless Containers responds with a 504 HTTP code.
	ExecutionTimeout *durationpb.Duration `protobuf:"bytes,7,opt,name=execution_timeout,json=executionTimeout,proto3" json:"execution_timeout,omitempty"`
	// The number of concurrent requests allowed per container instance.
	Concurrency int64 `protobuf:"varint,8,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	// ID of the service account associated with the revision.
	ServiceAccountId string `protobuf:"bytes,9,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Status of the revision.
	Status Revision_Status `protobuf:"varint,10,opt,name=status,proto3,enum=yandex.cloud.serverless.containers.v1.Revision_Status" json:"status,omitempty"`
	// Yandex Lockbox secrets to be used by the revision.
	Secrets []*Secret `protobuf:"bytes,11,rep,name=secrets,proto3" json:"secrets,omitempty"`
	// Network access. If specified the revision will be attached to specified network/subnet(s).
	Connectivity *Connectivity `protobuf:"bytes,12,opt,name=connectivity,proto3" json:"connectivity,omitempty"`
	// Policy for provisioning instances of the revision.
	//
	// The policy is only applied when the revision is ACTIVE.
	ProvisionPolicy *ProvisionPolicy `protobuf:"bytes,13,opt,name=provision_policy,json=provisionPolicy,proto3" json:"provision_policy,omitempty"`
	// Policy for scaling instances of the revision.
	ScalingPolicy *ScalingPolicy `protobuf:"bytes,14,opt,name=scaling_policy,json=scalingPolicy,proto3" json:"scaling_policy,omitempty"`
	// Options for logging from the container.
	LogOptions *LogOptions `protobuf:"bytes,15,opt,name=log_options,json=logOptions,proto3" json:"log_options,omitempty"`
	// S3 mounts to be used by the revision.
	StorageMounts []*StorageMount `protobuf:"bytes,16,rep,name=storage_mounts,json=storageMounts,proto3" json:"storage_mounts,omitempty"`
	// Mounts to be used by the revision.
	Mounts []*Mount `protobuf:"bytes,17,rep,name=mounts,proto3" json:"mounts,omitempty"`
	// The container's execution mode.
	Runtime *Runtime `protobuf:"bytes,18,opt,name=runtime,proto3" json:"runtime,omitempty"`
	// Metadata options for the revision.
	MetadataOptions *MetadataOptions `protobuf:"bytes,19,opt,name=metadata_options,json=metadataOptions,proto3" json:"metadata_options,omitempty"`
	// Config for asynchronous invocations of the revision.
	AsyncInvocationConfig *AsyncInvocationConfig `protobuf:"bytes,20,opt,name=async_invocation_config,json=asyncInvocationConfig,proto3" json:"async_invocation_config,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Revision) Reset() {
	*x = Revision{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Revision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Revision) ProtoMessage() {}

func (x *Revision) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Revision.ProtoReflect.Descriptor instead.
func (*Revision) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{1}
}

func (x *Revision) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Revision) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *Revision) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Revision) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Revision) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Revision) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Revision) GetExecutionTimeout() *durationpb.Duration {
	if x != nil {
		return x.ExecutionTimeout
	}
	return nil
}

func (x *Revision) GetConcurrency() int64 {
	if x != nil {
		return x.Concurrency
	}
	return 0
}

func (x *Revision) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *Revision) GetStatus() Revision_Status {
	if x != nil {
		return x.Status
	}
	return Revision_STATUS_UNSPECIFIED
}

func (x *Revision) GetSecrets() []*Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *Revision) GetConnectivity() *Connectivity {
	if x != nil {
		return x.Connectivity
	}
	return nil
}

func (x *Revision) GetProvisionPolicy() *ProvisionPolicy {
	if x != nil {
		return x.ProvisionPolicy
	}
	return nil
}

func (x *Revision) GetScalingPolicy() *ScalingPolicy {
	if x != nil {
		return x.ScalingPolicy
	}
	return nil
}

func (x *Revision) GetLogOptions() *LogOptions {
	if x != nil {
		return x.LogOptions
	}
	return nil
}

func (x *Revision) GetStorageMounts() []*StorageMount {
	if x != nil {
		return x.StorageMounts
	}
	return nil
}

func (x *Revision) GetMounts() []*Mount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

func (x *Revision) GetRuntime() *Runtime {
	if x != nil {
		return x.Runtime
	}
	return nil
}

func (x *Revision) GetMetadataOptions() *MetadataOptions {
	if x != nil {
		return x.MetadataOptions
	}
	return nil
}

func (x *Revision) GetAsyncInvocationConfig() *AsyncInvocationConfig {
	if x != nil {
		return x.AsyncInvocationConfig
	}
	return nil
}

// Revision image specification.
type Image struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Image URL, that is used by the revision.
	ImageUrl string `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// Digest of the image. Calculated at creation time.
	ImageDigest string `protobuf:"bytes,2,opt,name=image_digest,json=imageDigest,proto3" json:"image_digest,omitempty"`
	// Override for the image's ENTRYPOINT.
	Command *Command `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	// Override for the image's CMD.
	Args *Args `protobuf:"bytes,4,opt,name=args,proto3" json:"args,omitempty"`
	// Additional environment for the container.
	Environment map[string]string `protobuf:"bytes,5,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Override for the image's WORKDIR.
	WorkingDir    string `protobuf:"bytes,6,opt,name=working_dir,json=workingDir,proto3" json:"working_dir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{2}
}

func (x *Image) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Image) GetImageDigest() string {
	if x != nil {
		return x.ImageDigest
	}
	return ""
}

func (x *Image) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *Image) GetArgs() *Args {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Image) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *Image) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

type Command struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Command that will override ENTRYPOINT of an image.
	//
	// Commands will be executed as is. The runtime will not substitute environment
	// variables or execute shell commands. If one wants to do that, they should
	// invoke shell interpreter with an appropriate shell script.
	Command       []string `protobuf:"bytes,1,rep,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{3}
}

func (x *Command) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

type Args struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Arguments that will override CMD of an image.
	//
	// Arguments will be passed as is. The runtime will not substitute environment
	// variables or execute shell commands. If one wants to do that, they should
	// invoke shell interpreter with an appropriate shell script.
	Args          []string `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Args) Reset() {
	*x = Args{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args) ProtoMessage() {}

func (x *Args) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args.ProtoReflect.Descriptor instead.
func (*Args) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{4}
}

func (x *Args) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

// Resources allocated to a revision.
type Resources struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Amount of memory available to the revision, specified in bytes, multiple of 128MB.
	Memory int64 `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	// Number of cores available to the revision.
	Cores int64 `protobuf:"varint,2,opt,name=cores,proto3" json:"cores,omitempty"`
	// Specifies baseline performance for a core in percent, multiple of 5%.
	// Should be 100% for cores > 1.
	CoreFraction  int64 `protobuf:"varint,3,opt,name=core_fraction,json=coreFraction,proto3" json:"core_fraction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resources) Reset() {
	*x = Resources{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{5}
}

func (x *Resources) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Resources) GetCores() int64 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *Resources) GetCoreFraction() int64 {
	if x != nil {
		return x.CoreFraction
	}
	return 0
}

type ProvisionPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Minimum number of guaranteed provisioned container instances for all zones
	// in total.
	MinInstances  int64 `protobuf:"varint,1,opt,name=min_instances,json=minInstances,proto3" json:"min_instances,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProvisionPolicy) Reset() {
	*x = ProvisionPolicy{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProvisionPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionPolicy) ProtoMessage() {}

func (x *ProvisionPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionPolicy.ProtoReflect.Descriptor instead.
func (*ProvisionPolicy) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{6}
}

func (x *ProvisionPolicy) GetMinInstances() int64 {
	if x != nil {
		return x.MinInstances
	}
	return 0
}

// Secret that is available to the container at run time.
type Secret struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of Yandex Lockbox secret.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of Yandex Lockbox secret.
	VersionId string `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// Key in secret's payload, which value to be delivered into container environment.
	Key string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are valid to be assigned to Reference:
	//
	//	*Secret_EnvironmentVariable
	Reference     isSecret_Reference `protobuf_oneof:"reference"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Secret) Reset() {
	*x = Secret{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{7}
}

func (x *Secret) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Secret) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *Secret) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Secret) GetReference() isSecret_Reference {
	if x != nil {
		return x.Reference
	}
	return nil
}

func (x *Secret) GetEnvironmentVariable() string {
	if x != nil {
		if x, ok := x.Reference.(*Secret_EnvironmentVariable); ok {
			return x.EnvironmentVariable
		}
	}
	return ""
}

type isSecret_Reference interface {
	isSecret_Reference()
}

type Secret_EnvironmentVariable struct {
	// Environment variable in which secret's value is delivered.
	EnvironmentVariable string `protobuf:"bytes,4,opt,name=environment_variable,json=environmentVariable,proto3,oneof"`
}

func (*Secret_EnvironmentVariable) isSecret_Reference() {}

// Revision connectivity specification.
type Connectivity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network the revision will have access to.
	NetworkId string `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// The list of subnets (from the same network) the revision can be attached to.
	//
	// Deprecated, it is sufficient to specify only network_id, without the list of subnet_ids.
	SubnetIds     []string `protobuf:"bytes,2,rep,name=subnet_ids,json=subnetIds,proto3" json:"subnet_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Connectivity) Reset() {
	*x = Connectivity{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Connectivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connectivity) ProtoMessage() {}

func (x *Connectivity) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connectivity.ProtoReflect.Descriptor instead.
func (*Connectivity) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{8}
}

func (x *Connectivity) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *Connectivity) GetSubnetIds() []string {
	if x != nil {
		return x.SubnetIds
	}
	return nil
}

type LogOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Is logging from container disabled.
	Disabled bool `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Log entries destination.
	//
	// Types that are valid to be assigned to Destination:
	//
	//	*LogOptions_LogGroupId
	//	*LogOptions_FolderId
	Destination isLogOptions_Destination `protobuf_oneof:"destination"`
	// Minimum log entry level.
	//
	// See [LogLevel.Level] for details.
	MinLevel      v1.LogLevel_Level `protobuf:"varint,4,opt,name=min_level,json=minLevel,proto3,enum=yandex.cloud.logging.v1.LogLevel_Level" json:"min_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogOptions) Reset() {
	*x = LogOptions{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogOptions) ProtoMessage() {}

func (x *LogOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogOptions.ProtoReflect.Descriptor instead.
func (*LogOptions) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{9}
}

func (x *LogOptions) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *LogOptions) GetDestination() isLogOptions_Destination {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *LogOptions) GetLogGroupId() string {
	if x != nil {
		if x, ok := x.Destination.(*LogOptions_LogGroupId); ok {
			return x.LogGroupId
		}
	}
	return ""
}

func (x *LogOptions) GetFolderId() string {
	if x != nil {
		if x, ok := x.Destination.(*LogOptions_FolderId); ok {
			return x.FolderId
		}
	}
	return ""
}

func (x *LogOptions) GetMinLevel() v1.LogLevel_Level {
	if x != nil {
		return x.MinLevel
	}
	return v1.LogLevel_Level(0)
}

type isLogOptions_Destination interface {
	isLogOptions_Destination()
}

type LogOptions_LogGroupId struct {
	// Entry should be written to log group resolved by ID.
	LogGroupId string `protobuf:"bytes,2,opt,name=log_group_id,json=logGroupId,proto3,oneof"`
}

type LogOptions_FolderId struct {
	// Entry should be written to default log group for specified folder.
	FolderId string `protobuf:"bytes,3,opt,name=folder_id,json=folderId,proto3,oneof"`
}

func (*LogOptions_LogGroupId) isLogOptions_Destination() {}

func (*LogOptions_FolderId) isLogOptions_Destination() {}

type ScalingPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Upper limit for instance count in each zone.
	// 0 means no limit.
	ZoneInstancesLimit int64 `protobuf:"varint,1,opt,name=zone_instances_limit,json=zoneInstancesLimit,proto3" json:"zone_instances_limit,omitempty"`
	// Upper limit of requests count in each zone.
	// 0 means no limit.
	ZoneRequestsLimit int64 `protobuf:"varint,2,opt,name=zone_requests_limit,json=zoneRequestsLimit,proto3" json:"zone_requests_limit,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ScalingPolicy) Reset() {
	*x = ScalingPolicy{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScalingPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalingPolicy) ProtoMessage() {}

func (x *ScalingPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalingPolicy.ProtoReflect.Descriptor instead.
func (*ScalingPolicy) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{10}
}

func (x *ScalingPolicy) GetZoneInstancesLimit() int64 {
	if x != nil {
		return x.ZoneInstancesLimit
	}
	return 0
}

func (x *ScalingPolicy) GetZoneRequestsLimit() int64 {
	if x != nil {
		return x.ZoneRequestsLimit
	}
	return 0
}

// Deprecated: Marked as deprecated in yandex/cloud/serverless/containers/v1/container.proto.
type StorageMount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// S3 bucket name for mounting.
	BucketId string `protobuf:"bytes,1,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
	// S3 bucket prefix for mounting.
	Prefix string `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// Is mount read only.
	ReadOnly bool `protobuf:"varint,4,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	// Mount point path inside the container for mounting.
	MountPointPath string `protobuf:"bytes,5,opt,name=mount_point_path,json=mountPointPath,proto3" json:"mount_point_path,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StorageMount) Reset() {
	*x = StorageMount{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageMount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageMount) ProtoMessage() {}

func (x *StorageMount) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageMount.ProtoReflect.Descriptor instead.
func (*StorageMount) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{11}
}

func (x *StorageMount) GetBucketId() string {
	if x != nil {
		return x.BucketId
	}
	return ""
}

func (x *StorageMount) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *StorageMount) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *StorageMount) GetMountPointPath() string {
	if x != nil {
		return x.MountPointPath
	}
	return ""
}

// Mount contains an information about version's external storage mount
type Mount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The absolute mount point path inside the container for mounting.
	MountPointPath string `protobuf:"bytes,2,opt,name=mount_point_path,json=mountPointPath,proto3" json:"mount_point_path,omitempty"`
	// Mount's mode
	Mode Mount_Mode `protobuf:"varint,3,opt,name=mode,proto3,enum=yandex.cloud.serverless.containers.v1.Mount_Mode" json:"mode,omitempty"`
	// Target mount option
	//
	// Types that are valid to be assigned to Target:
	//
	//	*Mount_ObjectStorage_
	//	*Mount_EphemeralDiskSpec
	Target        isMount_Target `protobuf_oneof:"target"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mount) Reset() {
	*x = Mount{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mount) ProtoMessage() {}

func (x *Mount) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mount.ProtoReflect.Descriptor instead.
func (*Mount) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{12}
}

func (x *Mount) GetMountPointPath() string {
	if x != nil {
		return x.MountPointPath
	}
	return ""
}

func (x *Mount) GetMode() Mount_Mode {
	if x != nil {
		return x.Mode
	}
	return Mount_MODE_UNSPECIFIED
}

func (x *Mount) GetTarget() isMount_Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Mount) GetObjectStorage() *Mount_ObjectStorage {
	if x != nil {
		if x, ok := x.Target.(*Mount_ObjectStorage_); ok {
			return x.ObjectStorage
		}
	}
	return nil
}

func (x *Mount) GetEphemeralDiskSpec() *Mount_DiskSpec {
	if x != nil {
		if x, ok := x.Target.(*Mount_EphemeralDiskSpec); ok {
			return x.EphemeralDiskSpec
		}
	}
	return nil
}

type isMount_Target interface {
	isMount_Target()
}

type Mount_ObjectStorage_ struct {
	// Object storage mounts
	ObjectStorage *Mount_ObjectStorage `protobuf:"bytes,10,opt,name=object_storage,json=objectStorage,proto3,oneof"`
}

type Mount_EphemeralDiskSpec struct {
	// Working disk (worker-local non-shared read-write NBS disk templates)
	EphemeralDiskSpec *Mount_DiskSpec `protobuf:"bytes,11,opt,name=ephemeral_disk_spec,json=ephemeralDiskSpec,proto3,oneof"`
}

func (*Mount_ObjectStorage_) isMount_Target() {}

func (*Mount_EphemeralDiskSpec) isMount_Target() {}

// The container's execution mode
type Runtime struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*Runtime_Http_
	//	*Runtime_Task_
	Type          isRuntime_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Runtime) Reset() {
	*x = Runtime{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Runtime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime) ProtoMessage() {}

func (x *Runtime) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime.ProtoReflect.Descriptor instead.
func (*Runtime) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{13}
}

func (x *Runtime) GetType() isRuntime_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Runtime) GetHttp() *Runtime_Http {
	if x != nil {
		if x, ok := x.Type.(*Runtime_Http_); ok {
			return x.Http
		}
	}
	return nil
}

func (x *Runtime) GetTask() *Runtime_Task {
	if x != nil {
		if x, ok := x.Type.(*Runtime_Task_); ok {
			return x.Task
		}
	}
	return nil
}

type isRuntime_Type interface {
	isRuntime_Type()
}

type Runtime_Http_ struct {
	// The classic one. You need to run an HTTP server inside the container.
	Http *Runtime_Http `protobuf:"bytes,1,opt,name=http,proto3,oneof"`
}

type Runtime_Task_ struct {
	// We run a process from ENTRYPOINT inside the container for each user request.
	Task *Runtime_Task `protobuf:"bytes,2,opt,name=task,proto3,oneof"`
}

func (*Runtime_Http_) isRuntime_Type() {}

func (*Runtime_Task_) isRuntime_Type() {}

type MetadataOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enabled access to GCE flavored metadata
	GceHttpEndpoint MetadataOption `protobuf:"varint,1,opt,name=gce_http_endpoint,json=gceHttpEndpoint,proto3,enum=yandex.cloud.serverless.containers.v1.MetadataOption" json:"gce_http_endpoint,omitempty"`
	// Enabled access to AWS flavored metadata (IMDSv1)
	AwsV1HttpEndpoint MetadataOption `protobuf:"varint,2,opt,name=aws_v1_http_endpoint,json=awsV1HttpEndpoint,proto3,enum=yandex.cloud.serverless.containers.v1.MetadataOption" json:"aws_v1_http_endpoint,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MetadataOptions) Reset() {
	*x = MetadataOptions{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataOptions) ProtoMessage() {}

func (x *MetadataOptions) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataOptions.ProtoReflect.Descriptor instead.
func (*MetadataOptions) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{14}
}

func (x *MetadataOptions) GetGceHttpEndpoint() MetadataOption {
	if x != nil {
		return x.GceHttpEndpoint
	}
	return MetadataOption_METADATA_OPTION_UNSPECIFIED
}

func (x *MetadataOptions) GetAwsV1HttpEndpoint() MetadataOption {
	if x != nil {
		return x.AwsV1HttpEndpoint
	}
	return MetadataOption_METADATA_OPTION_UNSPECIFIED
}

type AsyncInvocationConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional id of service account with permission to invoke container.
	ServiceAccountId string `protobuf:"bytes,1,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AsyncInvocationConfig) Reset() {
	*x = AsyncInvocationConfig{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncInvocationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncInvocationConfig) ProtoMessage() {}

func (x *AsyncInvocationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncInvocationConfig.ProtoReflect.Descriptor instead.
func (*AsyncInvocationConfig) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{15}
}

func (x *AsyncInvocationConfig) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

// ObjectStorage as a mount
type Mount_ObjectStorage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ObjectStorage bucket name for mounting.
	BucketId string `protobuf:"bytes,1,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
	// ObjectStorage bucket prefix for mounting.
	Prefix        string `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mount_ObjectStorage) Reset() {
	*x = Mount_ObjectStorage{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mount_ObjectStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mount_ObjectStorage) ProtoMessage() {}

func (x *Mount_ObjectStorage) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mount_ObjectStorage.ProtoReflect.Descriptor instead.
func (*Mount_ObjectStorage) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{12, 0}
}

func (x *Mount_ObjectStorage) GetBucketId() string {
	if x != nil {
		return x.BucketId
	}
	return ""
}

func (x *Mount_ObjectStorage) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

// Disk as a mount
type Mount_DiskSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The size of disk for mount in bytes
	Size int64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// Optional block size of disk for mount in bytes
	BlockSize     int64 `protobuf:"varint,2,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mount_DiskSpec) Reset() {
	*x = Mount_DiskSpec{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mount_DiskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mount_DiskSpec) ProtoMessage() {}

func (x *Mount_DiskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mount_DiskSpec.ProtoReflect.Descriptor instead.
func (*Mount_DiskSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{12, 1}
}

func (x *Mount_DiskSpec) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Mount_DiskSpec) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

type Runtime_Http struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Runtime_Http) Reset() {
	*x = Runtime_Http{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Runtime_Http) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Http) ProtoMessage() {}

func (x *Runtime_Http) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Http.ProtoReflect.Descriptor instead.
func (*Runtime_Http) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{13, 0}
}

type Runtime_Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Runtime_Task) Reset() {
	*x = Runtime_Task{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Runtime_Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Task) ProtoMessage() {}

func (x *Runtime_Task) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Task.ProtoReflect.Descriptor instead.
func (*Runtime_Task) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP(), []int{13, 1}
}

var File_yandex_cloud_serverless_containers_v1_container_proto protoreflect.FileDescriptor

const file_yandex_cloud_serverless_containers_v1_container_proto_rawDesc = "" +
	"\n" +
	"5yandex/cloud/serverless/containers/v1/container.proto\x12%yandex.cloud.serverless.containers.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a'yandex/cloud/logging/v1/log_entry.proto\x1a\x1dyandex/cloud/validation.proto\"\xf8\x03\n" +
	"\tContainer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tfolder_id\x18\x02 \x01(\tR\bfolderId\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12T\n" +
	"\x06labels\x18\x06 \x03(\v2<.yandex.cloud.serverless.containers.v1.Container.LabelsEntryR\x06labels\x12\x10\n" +
	"\x03url\x18\b \x01(\tR\x03url\x12O\n" +
	"\x06status\x18\t \x01(\x0e27.yandex.cloud.serverless.containers.v1.Container.StatusR\x06status\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"S\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bCREATING\x10\x01\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x02\x12\f\n" +
	"\bDELETING\x10\x03\x12\t\n" +
	"\x05ERROR\x10\x04J\x04\b\a\x10\b\"\xdb\v\n" +
	"\bRevision\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fcontainer_id\x18\x02 \x01(\tR\vcontainerId\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12B\n" +
	"\x05image\x18\x05 \x01(\v2,.yandex.cloud.serverless.containers.v1.ImageR\x05image\x12N\n" +
	"\tresources\x18\x06 \x01(\v20.yandex.cloud.serverless.containers.v1.ResourcesR\tresources\x12F\n" +
	"\x11execution_timeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\x10executionTimeout\x12 \n" +
	"\vconcurrency\x18\b \x01(\x03R\vconcurrency\x12,\n" +
	"\x12service_account_id\x18\t \x01(\tR\x10serviceAccountId\x12N\n" +
	"\x06status\x18\n" +
	" \x01(\x0e26.yandex.cloud.serverless.containers.v1.Revision.StatusR\x06status\x12G\n" +
	"\asecrets\x18\v \x03(\v2-.yandex.cloud.serverless.containers.v1.SecretR\asecrets\x12W\n" +
	"\fconnectivity\x18\f \x01(\v23.yandex.cloud.serverless.containers.v1.ConnectivityR\fconnectivity\x12a\n" +
	"\x10provision_policy\x18\r \x01(\v26.yandex.cloud.serverless.containers.v1.ProvisionPolicyR\x0fprovisionPolicy\x12[\n" +
	"\x0escaling_policy\x18\x0e \x01(\v24.yandex.cloud.serverless.containers.v1.ScalingPolicyR\rscalingPolicy\x12R\n" +
	"\vlog_options\x18\x0f \x01(\v21.yandex.cloud.serverless.containers.v1.LogOptionsR\n" +
	"logOptions\x12Z\n" +
	"\x0estorage_mounts\x18\x10 \x03(\v23.yandex.cloud.serverless.containers.v1.StorageMountR\rstorageMounts\x12D\n" +
	"\x06mounts\x18\x11 \x03(\v2,.yandex.cloud.serverless.containers.v1.MountR\x06mounts\x12H\n" +
	"\aruntime\x18\x12 \x01(\v2..yandex.cloud.serverless.containers.v1.RuntimeR\aruntime\x12a\n" +
	"\x10metadata_options\x18\x13 \x01(\v26.yandex.cloud.serverless.containers.v1.MetadataOptionsR\x0fmetadataOptions\x12t\n" +
	"\x17async_invocation_config\x18\x14 \x01(\v2<.yandex.cloud.serverless.containers.v1.AsyncInvocationConfigR\x15asyncInvocationConfig\"H\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bCREATING\x10\x01\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x02\x12\f\n" +
	"\bOBSOLETE\x10\x03\"\xbc\x03\n" +
	"\x05Image\x12\x1b\n" +
	"\timage_url\x18\x01 \x01(\tR\bimageUrl\x12!\n" +
	"\fimage_digest\x18\x02 \x01(\tR\vimageDigest\x12H\n" +
	"\acommand\x18\x03 \x01(\v2..yandex.cloud.serverless.containers.v1.CommandR\acommand\x12?\n" +
	"\x04args\x18\x04 \x01(\v2+.yandex.cloud.serverless.containers.v1.ArgsR\x04args\x12\x86\x01\n" +
	"\venvironment\x18\x05 \x03(\v2=.yandex.cloud.serverless.containers.v1.Image.EnvironmentEntryB%\x8a\xc81\x06<=4096\xb2\xc81\x17\x12\x15[a-zA-Z][a-zA-Z0-9_]*R\venvironment\x12\x1f\n" +
	"\vworking_dir\x18\x06 \x01(\tR\n" +
	"workingDir\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"#\n" +
	"\aCommand\x12\x18\n" +
	"\acommand\x18\x01 \x03(\tR\acommand\"\x1a\n" +
	"\x04Args\x12\x12\n" +
	"\x04args\x18\x01 \x03(\tR\x04args\"\x8c\x01\n" +
	"\tResources\x120\n" +
	"\x06memory\x18\x01 \x01(\x03B\x18\xfa\xc71\x14134217728-8589934592R\x06memory\x12\x1d\n" +
	"\x05cores\x18\x02 \x01(\x03B\a\xfa\xc71\x030-4R\x05cores\x12.\n" +
	"\rcore_fraction\x18\x03 \x01(\x03B\t\xfa\xc71\x050-100R\fcoreFraction\"6\n" +
	"\x0fProvisionPolicy\x12#\n" +
	"\rmin_instances\x18\x01 \x01(\x03R\fminInstances\"\x8b\x01\n" +
	"\x06Secret\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"version_id\x18\x02 \x01(\tR\tversionId\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\x123\n" +
	"\x14environment_variable\x18\x04 \x01(\tH\x00R\x13environmentVariableB\v\n" +
	"\treference\"X\n" +
	"\fConnectivity\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tR\tnetworkId\x12)\n" +
	"\n" +
	"subnet_ids\x18\x02 \x03(\tB\n" +
	"\x8a\xc81\x02>0\x90\xc81\x01R\tsubnetIds\"\x8a\x02\n" +
	"\n" +
	"LogOptions\x12\x1a\n" +
	"\bdisabled\x18\x01 \x01(\bR\bdisabled\x12G\n" +
	"\flog_group_id\x18\x02 \x01(\tB#\xf2\xc71\x1f([a-zA-Z][-a-zA-Z0-9_.]{0,63})?H\x00R\n" +
	"logGroupId\x12B\n" +
	"\tfolder_id\x18\x03 \x01(\tB#\xf2\xc71\x1f([a-zA-Z][-a-zA-Z0-9_.]{0,63})?H\x00R\bfolderId\x12D\n" +
	"\tmin_level\x18\x04 \x01(\x0e2'.yandex.cloud.logging.v1.LogLevel.LevelR\bminLevelB\r\n" +
	"\vdestination\"q\n" +
	"\rScalingPolicy\x120\n" +
	"\x14zone_instances_limit\x18\x01 \x01(\x03R\x12zoneInstancesLimit\x12.\n" +
	"\x13zone_requests_limit\x18\x02 \x01(\x03R\x11zoneRequestsLimit\"\xd6\x01\n" +
	"\fStorageMount\x12;\n" +
	"\tbucket_id\x18\x01 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[-.0-9a-zA-Z]*\x8a\xc81\x043-63R\bbucketId\x12\x16\n" +
	"\x06prefix\x18\x02 \x01(\tR\x06prefix\x12\x1b\n" +
	"\tread_only\x18\x04 \x01(\bR\breadOnly\x12J\n" +
	"\x10mount_point_path\x18\x05 \x01(\tB \xe8\xc71\x01\xf2\xc71\x0f[-_0-9a-zA-Z/]*\x8a\xc81\x051-300R\x0emountPointPath:\x02\x18\x01J\x04\b\x03\x10\x04\"\xee\x04\n" +
	"\x05Mount\x12J\n" +
	"\x10mount_point_path\x18\x02 \x01(\tB \xe8\xc71\x01\xf2\xc71\x0f[-_0-9a-zA-Z/]*\x8a\xc81\x051-300R\x0emountPointPath\x12E\n" +
	"\x04mode\x18\x03 \x01(\x0e21.yandex.cloud.serverless.containers.v1.Mount.ModeR\x04mode\x12c\n" +
	"\x0eobject_storage\x18\n" +
	" \x01(\v2:.yandex.cloud.serverless.containers.v1.Mount.ObjectStorageH\x00R\robjectStorage\x12g\n" +
	"\x13ephemeral_disk_spec\x18\v \x01(\v25.yandex.cloud.serverless.containers.v1.Mount.DiskSpecH\x00R\x11ephemeralDiskSpec\x1ad\n" +
	"\rObjectStorage\x12;\n" +
	"\tbucket_id\x18\x01 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[-.0-9a-zA-Z]*\x8a\xc81\x043-63R\bbucketId\x12\x16\n" +
	"\x06prefix\x18\x02 \x01(\tR\x06prefix\x1aE\n" +
	"\bDiskSpec\x12\x1a\n" +
	"\x04size\x18\x01 \x01(\x03B\x06\xfa\xc71\x02>0R\x04size\x12\x1d\n" +
	"\n" +
	"block_size\x18\x02 \x01(\x03R\tblockSize\";\n" +
	"\x04Mode\x12\x14\n" +
	"\x10MODE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tREAD_ONLY\x10\x01\x12\x0e\n" +
	"\n" +
	"READ_WRITE\x10\x02B\x0e\n" +
	"\x06target\x12\x04\xc0\xc11\x01J\x04\b\x04\x10\n" +
	"J\x04\b\x01\x10\x02\"\xbd\x01\n" +
	"\aRuntime\x12I\n" +
	"\x04http\x18\x01 \x01(\v23.yandex.cloud.serverless.containers.v1.Runtime.HttpH\x00R\x04http\x12I\n" +
	"\x04task\x18\x02 \x01(\v23.yandex.cloud.serverless.containers.v1.Runtime.TaskH\x00R\x04task\x1a\x06\n" +
	"\x04Http\x1a\x06\n" +
	"\x04TaskB\f\n" +
	"\x04type\x12\x04\xc0\xc11\x01\"\xdc\x01\n" +
	"\x0fMetadataOptions\x12a\n" +
	"\x11gce_http_endpoint\x18\x01 \x01(\x0e25.yandex.cloud.serverless.containers.v1.MetadataOptionR\x0fgceHttpEndpoint\x12f\n" +
	"\x14aws_v1_http_endpoint\x18\x02 \x01(\x0e25.yandex.cloud.serverless.containers.v1.MetadataOptionR\x11awsV1HttpEndpoint\"E\n" +
	"\x15AsyncInvocationConfig\x12,\n" +
	"\x12service_account_id\x18\x01 \x01(\tR\x10serviceAccountId*L\n" +
	"\x0eMetadataOption\x12\x1f\n" +
	"\x1bMETADATA_OPTION_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aENABLED\x10\x01\x12\f\n" +
	"\bDISABLED\x10\x02B\x81\x01\n" +
	")yandex.cloud.api.serverless.containers.v1ZTgithub.com/yandex-cloud/go-genproto/yandex/cloud/serverless/containers/v1;containersb\x06proto3"

var (
	file_yandex_cloud_serverless_containers_v1_container_proto_rawDescOnce sync.Once
	file_yandex_cloud_serverless_containers_v1_container_proto_rawDescData []byte
)

func file_yandex_cloud_serverless_containers_v1_container_proto_rawDescGZIP() []byte {
	file_yandex_cloud_serverless_containers_v1_container_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_serverless_containers_v1_container_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_serverless_containers_v1_container_proto_rawDesc), len(file_yandex_cloud_serverless_containers_v1_container_proto_rawDesc)))
	})
	return file_yandex_cloud_serverless_containers_v1_container_proto_rawDescData
}

var file_yandex_cloud_serverless_containers_v1_container_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_yandex_cloud_serverless_containers_v1_container_proto_goTypes = []any{
	(MetadataOption)(0),           // 0: yandex.cloud.serverless.containers.v1.MetadataOption
	(Container_Status)(0),         // 1: yandex.cloud.serverless.containers.v1.Container.Status
	(Revision_Status)(0),          // 2: yandex.cloud.serverless.containers.v1.Revision.Status
	(Mount_Mode)(0),               // 3: yandex.cloud.serverless.containers.v1.Mount.Mode
	(*Container)(nil),             // 4: yandex.cloud.serverless.containers.v1.Container
	(*Revision)(nil),              // 5: yandex.cloud.serverless.containers.v1.Revision
	(*Image)(nil),                 // 6: yandex.cloud.serverless.containers.v1.Image
	(*Command)(nil),               // 7: yandex.cloud.serverless.containers.v1.Command
	(*Args)(nil),                  // 8: yandex.cloud.serverless.containers.v1.Args
	(*Resources)(nil),             // 9: yandex.cloud.serverless.containers.v1.Resources
	(*ProvisionPolicy)(nil),       // 10: yandex.cloud.serverless.containers.v1.ProvisionPolicy
	(*Secret)(nil),                // 11: yandex.cloud.serverless.containers.v1.Secret
	(*Connectivity)(nil),          // 12: yandex.cloud.serverless.containers.v1.Connectivity
	(*LogOptions)(nil),            // 13: yandex.cloud.serverless.containers.v1.LogOptions
	(*ScalingPolicy)(nil),         // 14: yandex.cloud.serverless.containers.v1.ScalingPolicy
	(*StorageMount)(nil),          // 15: yandex.cloud.serverless.containers.v1.StorageMount
	(*Mount)(nil),                 // 16: yandex.cloud.serverless.containers.v1.Mount
	(*Runtime)(nil),               // 17: yandex.cloud.serverless.containers.v1.Runtime
	(*MetadataOptions)(nil),       // 18: yandex.cloud.serverless.containers.v1.MetadataOptions
	(*AsyncInvocationConfig)(nil), // 19: yandex.cloud.serverless.containers.v1.AsyncInvocationConfig
	nil,                           // 20: yandex.cloud.serverless.containers.v1.Container.LabelsEntry
	nil,                           // 21: yandex.cloud.serverless.containers.v1.Image.EnvironmentEntry
	(*Mount_ObjectStorage)(nil),   // 22: yandex.cloud.serverless.containers.v1.Mount.ObjectStorage
	(*Mount_DiskSpec)(nil),        // 23: yandex.cloud.serverless.containers.v1.Mount.DiskSpec
	(*Runtime_Http)(nil),          // 24: yandex.cloud.serverless.containers.v1.Runtime.Http
	(*Runtime_Task)(nil),          // 25: yandex.cloud.serverless.containers.v1.Runtime.Task
	(*timestamppb.Timestamp)(nil), // 26: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 27: google.protobuf.Duration
	(v1.LogLevel_Level)(0),        // 28: yandex.cloud.logging.v1.LogLevel.Level
}
var file_yandex_cloud_serverless_containers_v1_container_proto_depIdxs = []int32{
	26, // 0: yandex.cloud.serverless.containers.v1.Container.created_at:type_name -> google.protobuf.Timestamp
	20, // 1: yandex.cloud.serverless.containers.v1.Container.labels:type_name -> yandex.cloud.serverless.containers.v1.Container.LabelsEntry
	1,  // 2: yandex.cloud.serverless.containers.v1.Container.status:type_name -> yandex.cloud.serverless.containers.v1.Container.Status
	26, // 3: yandex.cloud.serverless.containers.v1.Revision.created_at:type_name -> google.protobuf.Timestamp
	6,  // 4: yandex.cloud.serverless.containers.v1.Revision.image:type_name -> yandex.cloud.serverless.containers.v1.Image
	9,  // 5: yandex.cloud.serverless.containers.v1.Revision.resources:type_name -> yandex.cloud.serverless.containers.v1.Resources
	27, // 6: yandex.cloud.serverless.containers.v1.Revision.execution_timeout:type_name -> google.protobuf.Duration
	2,  // 7: yandex.cloud.serverless.containers.v1.Revision.status:type_name -> yandex.cloud.serverless.containers.v1.Revision.Status
	11, // 8: yandex.cloud.serverless.containers.v1.Revision.secrets:type_name -> yandex.cloud.serverless.containers.v1.Secret
	12, // 9: yandex.cloud.serverless.containers.v1.Revision.connectivity:type_name -> yandex.cloud.serverless.containers.v1.Connectivity
	10, // 10: yandex.cloud.serverless.containers.v1.Revision.provision_policy:type_name -> yandex.cloud.serverless.containers.v1.ProvisionPolicy
	14, // 11: yandex.cloud.serverless.containers.v1.Revision.scaling_policy:type_name -> yandex.cloud.serverless.containers.v1.ScalingPolicy
	13, // 12: yandex.cloud.serverless.containers.v1.Revision.log_options:type_name -> yandex.cloud.serverless.containers.v1.LogOptions
	15, // 13: yandex.cloud.serverless.containers.v1.Revision.storage_mounts:type_name -> yandex.cloud.serverless.containers.v1.StorageMount
	16, // 14: yandex.cloud.serverless.containers.v1.Revision.mounts:type_name -> yandex.cloud.serverless.containers.v1.Mount
	17, // 15: yandex.cloud.serverless.containers.v1.Revision.runtime:type_name -> yandex.cloud.serverless.containers.v1.Runtime
	18, // 16: yandex.cloud.serverless.containers.v1.Revision.metadata_options:type_name -> yandex.cloud.serverless.containers.v1.MetadataOptions
	19, // 17: yandex.cloud.serverless.containers.v1.Revision.async_invocation_config:type_name -> yandex.cloud.serverless.containers.v1.AsyncInvocationConfig
	7,  // 18: yandex.cloud.serverless.containers.v1.Image.command:type_name -> yandex.cloud.serverless.containers.v1.Command
	8,  // 19: yandex.cloud.serverless.containers.v1.Image.args:type_name -> yandex.cloud.serverless.containers.v1.Args
	21, // 20: yandex.cloud.serverless.containers.v1.Image.environment:type_name -> yandex.cloud.serverless.containers.v1.Image.EnvironmentEntry
	28, // 21: yandex.cloud.serverless.containers.v1.LogOptions.min_level:type_name -> yandex.cloud.logging.v1.LogLevel.Level
	3,  // 22: yandex.cloud.serverless.containers.v1.Mount.mode:type_name -> yandex.cloud.serverless.containers.v1.Mount.Mode
	22, // 23: yandex.cloud.serverless.containers.v1.Mount.object_storage:type_name -> yandex.cloud.serverless.containers.v1.Mount.ObjectStorage
	23, // 24: yandex.cloud.serverless.containers.v1.Mount.ephemeral_disk_spec:type_name -> yandex.cloud.serverless.containers.v1.Mount.DiskSpec
	24, // 25: yandex.cloud.serverless.containers.v1.Runtime.http:type_name -> yandex.cloud.serverless.containers.v1.Runtime.Http
	25, // 26: yandex.cloud.serverless.containers.v1.Runtime.task:type_name -> yandex.cloud.serverless.containers.v1.Runtime.Task
	0,  // 27: yandex.cloud.serverless.containers.v1.MetadataOptions.gce_http_endpoint:type_name -> yandex.cloud.serverless.containers.v1.MetadataOption
	0,  // 28: yandex.cloud.serverless.containers.v1.MetadataOptions.aws_v1_http_endpoint:type_name -> yandex.cloud.serverless.containers.v1.MetadataOption
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_yandex_cloud_serverless_containers_v1_container_proto_init() }
func file_yandex_cloud_serverless_containers_v1_container_proto_init() {
	if File_yandex_cloud_serverless_containers_v1_container_proto != nil {
		return
	}
	file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[7].OneofWrappers = []any{
		(*Secret_EnvironmentVariable)(nil),
	}
	file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[9].OneofWrappers = []any{
		(*LogOptions_LogGroupId)(nil),
		(*LogOptions_FolderId)(nil),
	}
	file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[12].OneofWrappers = []any{
		(*Mount_ObjectStorage_)(nil),
		(*Mount_EphemeralDiskSpec)(nil),
	}
	file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes[13].OneofWrappers = []any{
		(*Runtime_Http_)(nil),
		(*Runtime_Task_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_serverless_containers_v1_container_proto_rawDesc), len(file_yandex_cloud_serverless_containers_v1_container_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_serverless_containers_v1_container_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_serverless_containers_v1_container_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_serverless_containers_v1_container_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_serverless_containers_v1_container_proto_msgTypes,
	}.Build()
	File_yandex_cloud_serverless_containers_v1_container_proto = out.File
	file_yandex_cloud_serverless_containers_v1_container_proto_goTypes = nil
	file_yandex_cloud_serverless_containers_v1_container_proto_depIdxs = nil
}

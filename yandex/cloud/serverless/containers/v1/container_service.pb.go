// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/serverless/containers/v1/container_service.proto

package containers

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	access "github.com/yandex-cloud/go-genproto/yandex/cloud/access"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the container to return.
	//
	// To get a container ID make a [ContainerService.List] request.
	ContainerId   string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerRequest) Reset() {
	*x = GetContainerRequest{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerRequest) ProtoMessage() {}

func (x *GetContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerRequest.ProtoReflect.Descriptor instead.
func (*GetContainerRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type ListContainersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to list containers in.
	//
	// To get a folder ID make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than `pageSize`, the service returns a [ListContainersResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	//
	// Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set `pageToken` to the
	// [ListContainersResponse.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters containers listed in the response.
	//
	// The expression must specify:
	// 1. The field name. Currently filtering can only be applied to the [Container.name] field.
	// 2. An `=` operator.
	// 3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
	// Example of a filter: `name="my-container"`.
	Filter        string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContainersRequest) Reset() {
	*x = ListContainersRequest{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContainersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainersRequest) ProtoMessage() {}

func (x *ListContainersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainersRequest.ProtoReflect.Descriptor instead.
func (*ListContainersRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListContainersRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListContainersRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListContainersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListContainersRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListContainersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of containers in the specified folder.
	Containers []*Container `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
	// Token for getting the next page of the list. If the number of results is greater than
	// the specified [ListContainersRequest.page_size], use `nextPageToken` as the value
	// for the [ListContainersRequest.page_token] parameter in the next list request.
	//
	// Each subsequent page will have its own `nextPageToken` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContainersResponse) Reset() {
	*x = ListContainersResponse{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContainersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainersResponse) ProtoMessage() {}

func (x *ListContainersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainersResponse.ProtoReflect.Descriptor instead.
func (*ListContainersResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListContainersResponse) GetContainers() []*Container {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *ListContainersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder to create a container in.
	//
	// To get a folder ID make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Name of the container.
	// The name must be unique within the folder.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the container.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels as `key:value` pairs.
	Labels        map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateContainerRequest) Reset() {
	*x = CreateContainerRequest{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerRequest) ProtoMessage() {}

func (x *CreateContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerRequest.ProtoReflect.Descriptor instead.
func (*CreateContainerRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateContainerRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *CreateContainerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateContainerRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateContainerRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type CreateContainerMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the container that is being created.
	ContainerId   string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateContainerMetadata) Reset() {
	*x = CreateContainerMetadata{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContainerMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerMetadata) ProtoMessage() {}

func (x *CreateContainerMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerMetadata.ProtoReflect.Descriptor instead.
func (*CreateContainerMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateContainerMetadata) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type UpdateContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the container to update.
	//
	// To get a container ID make a [ContainerService.List] request.
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Field mask that specifies which attributes of the container should be updated.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// New name for the container.
	// The name must be unique within the folder.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// New description for the container.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Container labels as `key:value` pairs.
	//
	// Existing set of labels is completely replaced by the provided set, so if you just want
	// to add or remove a label, request the current set of labels with a [ContainerService.Get] request.
	Labels        map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateContainerRequest) Reset() {
	*x = UpdateContainerRequest{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContainerRequest) ProtoMessage() {}

func (x *UpdateContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContainerRequest.ProtoReflect.Descriptor instead.
func (*UpdateContainerRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *UpdateContainerRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateContainerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateContainerRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateContainerRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type UpdateContainerMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the container that is being updated.
	ContainerId   string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateContainerMetadata) Reset() {
	*x = UpdateContainerMetadata{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContainerMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContainerMetadata) ProtoMessage() {}

func (x *UpdateContainerMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContainerMetadata.ProtoReflect.Descriptor instead.
func (*UpdateContainerMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateContainerMetadata) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type DeleteContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the container to delete.
	// To get a container ID make a [ContainerService.List] request.
	ContainerId   string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteContainerRequest) Reset() {
	*x = DeleteContainerRequest{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContainerRequest) ProtoMessage() {}

func (x *DeleteContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContainerRequest.ProtoReflect.Descriptor instead.
func (*DeleteContainerRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type DeleteContainerMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the container that is being deleted.
	ContainerId   string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteContainerMetadata) Reset() {
	*x = DeleteContainerMetadata{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteContainerMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContainerMetadata) ProtoMessage() {}

func (x *DeleteContainerMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContainerMetadata.ProtoReflect.Descriptor instead.
func (*DeleteContainerMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteContainerMetadata) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type GetContainerRevisionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the revision to return.
	//
	// To get a revision ID make a [ContainerService.ListRevisions] request.
	ContainerRevisionId string `protobuf:"bytes,1,opt,name=container_revision_id,json=containerRevisionId,proto3" json:"container_revision_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetContainerRevisionRequest) Reset() {
	*x = GetContainerRevisionRequest{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerRevisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerRevisionRequest) ProtoMessage() {}

func (x *GetContainerRevisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerRevisionRequest.ProtoReflect.Descriptor instead.
func (*GetContainerRevisionRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetContainerRevisionRequest) GetContainerRevisionId() string {
	if x != nil {
		return x.ContainerRevisionId
	}
	return ""
}

type ListContainersRevisionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Id:
	//
	//	*ListContainersRevisionsRequest_FolderId
	//	*ListContainersRevisionsRequest_ContainerId
	Id isListContainersRevisionsRequest_Id `protobuf_oneof:"id"`
	// The maximum number of results per page to return. If the number of available results
	// is larger than `pageSize`, the service returns a [ListContainersRevisionsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	//
	// Default value: 100.
	PageSize int64 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set `pageToken` to the
	// [ListContainersRevisionsResponse.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	//
	// The expression must specify:
	// 1. The field name. Currently filtering can only be applied to the [Revision.status] and [Revision.runtime] fields.
	// 2. An `=` operator.
	// 3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
	// Example of a filter: `status="ACTIVE"`.
	Filter        string `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContainersRevisionsRequest) Reset() {
	*x = ListContainersRevisionsRequest{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContainersRevisionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainersRevisionsRequest) ProtoMessage() {}

func (x *ListContainersRevisionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainersRevisionsRequest.ProtoReflect.Descriptor instead.
func (*ListContainersRevisionsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListContainersRevisionsRequest) GetId() isListContainersRevisionsRequest_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListContainersRevisionsRequest) GetFolderId() string {
	if x != nil {
		if x, ok := x.Id.(*ListContainersRevisionsRequest_FolderId); ok {
			return x.FolderId
		}
	}
	return ""
}

func (x *ListContainersRevisionsRequest) GetContainerId() string {
	if x != nil {
		if x, ok := x.Id.(*ListContainersRevisionsRequest_ContainerId); ok {
			return x.ContainerId
		}
	}
	return ""
}

func (x *ListContainersRevisionsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListContainersRevisionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListContainersRevisionsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type isListContainersRevisionsRequest_Id interface {
	isListContainersRevisionsRequest_Id()
}

type ListContainersRevisionsRequest_FolderId struct {
	// ID of the folder to list container revisions for.
	// To get a folder ID make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3,oneof"`
}

type ListContainersRevisionsRequest_ContainerId struct {
	// ID of the container to list revisions for.
	// To get a container ID use a [ContainerService.List] request.
	ContainerId string `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3,oneof"`
}

func (*ListContainersRevisionsRequest_FolderId) isListContainersRevisionsRequest_Id() {}

func (*ListContainersRevisionsRequest_ContainerId) isListContainersRevisionsRequest_Id() {}

type ListContainersRevisionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of revisions for the specified folder or container.
	Revisions []*Revision `protobuf:"bytes,1,rep,name=revisions,proto3" json:"revisions,omitempty"`
	// Token for getting the next page of the list. If the number of results is greater than
	// the specified [ListContainersRevisionsRequest.page_size], use `nextPageToken` as the value
	// for the [ListContainersRevisionsRequest.page_token] parameter in the next list request.
	//
	// Each subsequent page will have its own `nextPageToken` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContainersRevisionsResponse) Reset() {
	*x = ListContainersRevisionsResponse{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContainersRevisionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainersRevisionsResponse) ProtoMessage() {}

func (x *ListContainersRevisionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainersRevisionsResponse.ProtoReflect.Descriptor instead.
func (*ListContainersRevisionsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListContainersRevisionsResponse) GetRevisions() []*Revision {
	if x != nil {
		return x.Revisions
	}
	return nil
}

func (x *ListContainersRevisionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type DeployContainerRevisionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the container to create a revision for.
	//
	// To get a container ID, make a [ContainerService.List] request.
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Description of the revision.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Resources allocated to the revision.
	Resources *Resources `protobuf:"bytes,5,opt,name=resources,proto3" json:"resources,omitempty"`
	// Timeout for the execution of the revision.
	//
	// If the timeout is exceeded, Serverless Containers responds with a 504 HTTP code.
	ExecutionTimeout *durationpb.Duration `protobuf:"bytes,6,opt,name=execution_timeout,json=executionTimeout,proto3" json:"execution_timeout,omitempty"`
	// ID of the service account to associate with the revision.
	ServiceAccountId string `protobuf:"bytes,7,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Image configuration for the revision.
	ImageSpec *ImageSpec `protobuf:"bytes,8,opt,name=image_spec,json=imageSpec,proto3" json:"image_spec,omitempty"`
	// The number of concurrent requests allowed per container instance.
	//
	// The default value is 1.
	Concurrency int64 `protobuf:"varint,9,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	// Yandex Lockbox secrets to be used by the revision.
	Secrets []*Secret `protobuf:"bytes,10,rep,name=secrets,proto3" json:"secrets,omitempty"`
	// Network access. If specified the revision will be attached to specified network/subnet(s).
	Connectivity *Connectivity `protobuf:"bytes,11,opt,name=connectivity,proto3" json:"connectivity,omitempty"`
	// Policy for provisioning instances of the revision.
	//
	// The policy is only applied when the revision is ACTIVE.
	ProvisionPolicy *ProvisionPolicy `protobuf:"bytes,12,opt,name=provision_policy,json=provisionPolicy,proto3" json:"provision_policy,omitempty"`
	// Policy for scaling instances of the revision.
	ScalingPolicy *ScalingPolicy `protobuf:"bytes,13,opt,name=scaling_policy,json=scalingPolicy,proto3" json:"scaling_policy,omitempty"`
	// Options for logging from the container.
	LogOptions *LogOptions `protobuf:"bytes,14,opt,name=log_options,json=logOptions,proto3" json:"log_options,omitempty"`
	// S3 mounts to be used by the revision.
	StorageMounts []*StorageMount `protobuf:"bytes,15,rep,name=storage_mounts,json=storageMounts,proto3" json:"storage_mounts,omitempty"`
	// Mounts to be used by the revision.
	Mounts []*Mount `protobuf:"bytes,16,rep,name=mounts,proto3" json:"mounts,omitempty"`
	// The container's execution mode.
	Runtime *Runtime `protobuf:"bytes,17,opt,name=runtime,proto3" json:"runtime,omitempty"`
	// Metadata options for the revision.
	MetadataOptions *MetadataOptions `protobuf:"bytes,18,opt,name=metadata_options,json=metadataOptions,proto3" json:"metadata_options,omitempty"`
	// Config for asynchronous invocations of the revision.
	AsyncInvocationConfig *AsyncInvocationConfig `protobuf:"bytes,19,opt,name=async_invocation_config,json=asyncInvocationConfig,proto3" json:"async_invocation_config,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *DeployContainerRevisionRequest) Reset() {
	*x = DeployContainerRevisionRequest{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployContainerRevisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployContainerRevisionRequest) ProtoMessage() {}

func (x *DeployContainerRevisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployContainerRevisionRequest.ProtoReflect.Descriptor instead.
func (*DeployContainerRevisionRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{12}
}

func (x *DeployContainerRevisionRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *DeployContainerRevisionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DeployContainerRevisionRequest) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *DeployContainerRevisionRequest) GetExecutionTimeout() *durationpb.Duration {
	if x != nil {
		return x.ExecutionTimeout
	}
	return nil
}

func (x *DeployContainerRevisionRequest) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *DeployContainerRevisionRequest) GetImageSpec() *ImageSpec {
	if x != nil {
		return x.ImageSpec
	}
	return nil
}

func (x *DeployContainerRevisionRequest) GetConcurrency() int64 {
	if x != nil {
		return x.Concurrency
	}
	return 0
}

func (x *DeployContainerRevisionRequest) GetSecrets() []*Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *DeployContainerRevisionRequest) GetConnectivity() *Connectivity {
	if x != nil {
		return x.Connectivity
	}
	return nil
}

func (x *DeployContainerRevisionRequest) GetProvisionPolicy() *ProvisionPolicy {
	if x != nil {
		return x.ProvisionPolicy
	}
	return nil
}

func (x *DeployContainerRevisionRequest) GetScalingPolicy() *ScalingPolicy {
	if x != nil {
		return x.ScalingPolicy
	}
	return nil
}

func (x *DeployContainerRevisionRequest) GetLogOptions() *LogOptions {
	if x != nil {
		return x.LogOptions
	}
	return nil
}

func (x *DeployContainerRevisionRequest) GetStorageMounts() []*StorageMount {
	if x != nil {
		return x.StorageMounts
	}
	return nil
}

func (x *DeployContainerRevisionRequest) GetMounts() []*Mount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

func (x *DeployContainerRevisionRequest) GetRuntime() *Runtime {
	if x != nil {
		return x.Runtime
	}
	return nil
}

func (x *DeployContainerRevisionRequest) GetMetadataOptions() *MetadataOptions {
	if x != nil {
		return x.MetadataOptions
	}
	return nil
}

func (x *DeployContainerRevisionRequest) GetAsyncInvocationConfig() *AsyncInvocationConfig {
	if x != nil {
		return x.AsyncInvocationConfig
	}
	return nil
}

// Revision image specification.
type ImageSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Image URL, that is used by the revision.
	ImageUrl string `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// Override for the image's ENTRYPOINT.
	Command *Command `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	// Override for the image's CMD.
	Args *Args `protobuf:"bytes,3,opt,name=args,proto3" json:"args,omitempty"`
	// Additional environment for the container.
	Environment map[string]string `protobuf:"bytes,4,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Override for the image's WORKDIR.
	WorkingDir    string `protobuf:"bytes,5,opt,name=working_dir,json=workingDir,proto3" json:"working_dir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageSpec) Reset() {
	*x = ImageSpec{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageSpec) ProtoMessage() {}

func (x *ImageSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageSpec.ProtoReflect.Descriptor instead.
func (*ImageSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{13}
}

func (x *ImageSpec) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *ImageSpec) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *ImageSpec) GetArgs() *Args {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ImageSpec) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *ImageSpec) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

type DeployContainerRevisionMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the revision that is being created.
	ContainerRevisionId string `protobuf:"bytes,1,opt,name=container_revision_id,json=containerRevisionId,proto3" json:"container_revision_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DeployContainerRevisionMetadata) Reset() {
	*x = DeployContainerRevisionMetadata{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployContainerRevisionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployContainerRevisionMetadata) ProtoMessage() {}

func (x *DeployContainerRevisionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployContainerRevisionMetadata.ProtoReflect.Descriptor instead.
func (*DeployContainerRevisionMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{14}
}

func (x *DeployContainerRevisionMetadata) GetContainerRevisionId() string {
	if x != nil {
		return x.ContainerRevisionId
	}
	return ""
}

type RollbackContainerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the container to rollback to an old revision.
	//
	// To get a container ID, make a [ContainerService.List] request.
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// ID of the revision to rollback to.
	//
	// To get a revision ID make a [ContainerService.ListRevisions] request.
	RevisionId    string `protobuf:"bytes,2,opt,name=revision_id,json=revisionId,proto3" json:"revision_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackContainerRequest) Reset() {
	*x = RollbackContainerRequest{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackContainerRequest) ProtoMessage() {}

func (x *RollbackContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackContainerRequest.ProtoReflect.Descriptor instead.
func (*RollbackContainerRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{15}
}

func (x *RollbackContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *RollbackContainerRequest) GetRevisionId() string {
	if x != nil {
		return x.RevisionId
	}
	return ""
}

type RollbackContainerMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the container that is being rolled back.
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// ID of the revision that the container is being rolled back to.
	RevisionId    string `protobuf:"bytes,2,opt,name=revision_id,json=revisionId,proto3" json:"revision_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackContainerMetadata) Reset() {
	*x = RollbackContainerMetadata{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackContainerMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackContainerMetadata) ProtoMessage() {}

func (x *RollbackContainerMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackContainerMetadata.ProtoReflect.Descriptor instead.
func (*RollbackContainerMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{16}
}

func (x *RollbackContainerMetadata) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *RollbackContainerMetadata) GetRevisionId() string {
	if x != nil {
		return x.RevisionId
	}
	return ""
}

type ListContainerOperationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the container to list operations for.
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// The maximum number of results per page that should be returned. If the number of available
	// results is larger than `pageSize`, the service returns a [ListContainerOperationsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	//
	// Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set `pageToken` to the
	// [ListContainerOperationsResponse.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	//
	// The expression must specify:
	// 1. The field name. Currently filtering can be applied to the [operation.Operation.done], [operation.Operation.created_by] field.
	// 2. An `=` operator.
	// 3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
	// Examples of a filter: `done=false`, `created_by='John.Doe'`.
	Filter        string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContainerOperationsRequest) Reset() {
	*x = ListContainerOperationsRequest{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContainerOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainerOperationsRequest) ProtoMessage() {}

func (x *ListContainerOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainerOperationsRequest.ProtoReflect.Descriptor instead.
func (*ListContainerOperationsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListContainerOperationsRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ListContainerOperationsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListContainerOperationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListContainerOperationsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListContainerOperationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of operations for the specified container.
	Operations []*operation.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	// Token for getting the next page of the list. If the number of results is greater than
	// the specified [ListContainerOperationsRequest.page_size], use `nextPageToken` as the value
	// for the [ListContainerOperationsRequest.page_token] parameter in the next list request.
	//
	// Each subsequent page will have its own `nextPageToken` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContainerOperationsResponse) Reset() {
	*x = ListContainerOperationsResponse{}
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContainerOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainerOperationsResponse) ProtoMessage() {}

func (x *ListContainerOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainerOperationsResponse.ProtoReflect.Descriptor instead.
func (*ListContainerOperationsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListContainerOperationsResponse) GetOperations() []*operation.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ListContainerOperationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_yandex_cloud_serverless_containers_v1_container_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDesc = "" +
	"\n" +
	"=yandex/cloud/serverless/containers/v1/container_service.proto\x12%yandex.cloud.serverless.containers.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1egoogle/protobuf/duration.proto\x1a google/protobuf/field_mask.proto\x1a yandex/cloud/access/access.proto\x1a yandex/cloud/api/operation.proto\x1a&yandex/cloud/operation/operation.proto\x1a5yandex/cloud/serverless/containers/v1/container.proto\x1a\x1dyandex/cloud/validation.proto\">\n" +
	"\x13GetContainerRequest\x12'\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\vcontainerId\"\x8e\x01\n" +
	"\x15ListContainersRequest\x12!\n" +
	"\tfolder_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bfolderId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x03R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x04 \x01(\tR\x06filter\"\x92\x01\n" +
	"\x16ListContainersResponse\x12P\n" +
	"\n" +
	"containers\x18\x01 \x03(\v20.yandex.cloud.serverless.containers.v1.ContainerR\n" +
	"containers\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x83\x03\n" +
	"\x16CreateContainerRequest\x12!\n" +
	"\tfolder_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bfolderId\x125\n" +
	"\x04name\x18\x02 \x01(\tB!\xf2\xc71\x1d|[a-z][-a-z0-9]{1,61}[a-z0-9]R\x04name\x12+\n" +
	"\vdescription\x18\x03 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\xa6\x01\n" +
	"\x06labels\x18\x04 \x03(\v2I.yandex.cloud.serverless.containers.v1.CreateContainerRequest.LabelsEntryBC\xf2\xc71\x0f[-_./\\@0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x1c\x12\x14[a-z][-_./\\@0-9a-z]*\x1a\x041-63R\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"<\n" +
	"\x17CreateContainerMetadata\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\"\xc6\x03\n" +
	"\x16UpdateContainerRequest\x12'\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\vcontainerId\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x125\n" +
	"\x04name\x18\x03 \x01(\tB!\xf2\xc71\x1d|[a-z][-a-z0-9]{1,61}[a-z0-9]R\x04name\x12+\n" +
	"\vdescription\x18\x04 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\xa6\x01\n" +
	"\x06labels\x18\x05 \x03(\v2I.yandex.cloud.serverless.containers.v1.UpdateContainerRequest.LabelsEntryBC\xf2\xc71\x0f[-_./\\@0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x1c\x12\x14[a-z][-_./\\@0-9a-z]*\x1a\x041-63R\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"<\n" +
	"\x17UpdateContainerMetadata\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\"A\n" +
	"\x16DeleteContainerRequest\x12'\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\vcontainerId\"<\n" +
	"\x17DeleteContainerMetadata\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\"W\n" +
	"\x1bGetContainerRevisionRequest\x128\n" +
	"\x15container_revision_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\x13containerRevisionId\"\xe7\x01\n" +
	"\x1eListContainersRevisionsRequest\x12\x1d\n" +
	"\tfolder_id\x18\x01 \x01(\tH\x00R\bfolderId\x12#\n" +
	"\fcontainer_id\x18\x02 \x01(\tH\x00R\vcontainerId\x12'\n" +
	"\tpage_size\x18\x03 \x01(\x03B\n" +
	"\xfa\xc71\x060-1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x05 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filterB\n" +
	"\n" +
	"\x02id\x12\x04\xc0\xc11\x01\"\x98\x01\n" +
	"\x1fListContainersRevisionsResponse\x12M\n" +
	"\trevisions\x18\x01 \x03(\v2/.yandex.cloud.serverless.containers.v1.RevisionR\trevisions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xc5\n" +
	"\n" +
	"\x1eDeployContainerRevisionRequest\x12'\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\vcontainerId\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12T\n" +
	"\tresources\x18\x05 \x01(\v20.yandex.cloud.serverless.containers.v1.ResourcesB\x04\xe8\xc71\x01R\tresources\x12T\n" +
	"\x11execution_timeout\x18\x06 \x01(\v2\x19.google.protobuf.DurationB\f\xfa\xc71\b0s-3600sR\x10executionTimeout\x12,\n" +
	"\x12service_account_id\x18\a \x01(\tR\x10serviceAccountId\x12U\n" +
	"\n" +
	"image_spec\x18\b \x01(\v20.yandex.cloud.serverless.containers.v1.ImageSpecB\x04\xe8\xc71\x01R\timageSpec\x12 \n" +
	"\vconcurrency\x18\t \x01(\x03R\vconcurrency\x12G\n" +
	"\asecrets\x18\n" +
	" \x03(\v2-.yandex.cloud.serverless.containers.v1.SecretR\asecrets\x12W\n" +
	"\fconnectivity\x18\v \x01(\v23.yandex.cloud.serverless.containers.v1.ConnectivityR\fconnectivity\x12a\n" +
	"\x10provision_policy\x18\f \x01(\v26.yandex.cloud.serverless.containers.v1.ProvisionPolicyR\x0fprovisionPolicy\x12[\n" +
	"\x0escaling_policy\x18\r \x01(\v24.yandex.cloud.serverless.containers.v1.ScalingPolicyR\rscalingPolicy\x12R\n" +
	"\vlog_options\x18\x0e \x01(\v21.yandex.cloud.serverless.containers.v1.LogOptionsR\n" +
	"logOptions\x12Z\n" +
	"\x0estorage_mounts\x18\x0f \x03(\v23.yandex.cloud.serverless.containers.v1.StorageMountR\rstorageMounts\x12D\n" +
	"\x06mounts\x18\x10 \x03(\v2,.yandex.cloud.serverless.containers.v1.MountR\x06mounts\x12H\n" +
	"\aruntime\x18\x11 \x01(\v2..yandex.cloud.serverless.containers.v1.RuntimeR\aruntime\x12a\n" +
	"\x10metadata_options\x18\x12 \x01(\v26.yandex.cloud.serverless.containers.v1.MetadataOptionsR\x0fmetadataOptions\x12t\n" +
	"\x17async_invocation_config\x18\x13 \x01(\v2<.yandex.cloud.serverless.containers.v1.AsyncInvocationConfigR\x15asyncInvocationConfigJ\x04\b\x04\x10\x05J\x04\b\x02\x10\x03\"\xa7\x03\n" +
	"\tImageSpec\x12!\n" +
	"\timage_url\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bimageUrl\x12H\n" +
	"\acommand\x18\x02 \x01(\v2..yandex.cloud.serverless.containers.v1.CommandR\acommand\x12?\n" +
	"\x04args\x18\x03 \x01(\v2+.yandex.cloud.serverless.containers.v1.ArgsR\x04args\x12\x8a\x01\n" +
	"\venvironment\x18\x04 \x03(\v2A.yandex.cloud.serverless.containers.v1.ImageSpec.EnvironmentEntryB%\x8a\xc81\x06<=4096\xb2\xc81\x17\x12\x15[a-zA-Z][a-zA-Z0-9_]*R\venvironment\x12\x1f\n" +
	"\vworking_dir\x18\x05 \x01(\tR\n" +
	"workingDir\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"U\n" +
	"\x1fDeployContainerRevisionMetadata\x122\n" +
	"\x15container_revision_id\x18\x01 \x01(\tR\x13containerRevisionId\"j\n" +
	"\x18RollbackContainerRequest\x12'\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\vcontainerId\x12%\n" +
	"\vrevision_id\x18\x02 \x01(\tB\x04\xe8\xc71\x01R\n" +
	"revisionId\"_\n" +
	"\x19RollbackContainerMetadata\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x1f\n" +
	"\vrevision_id\x18\x02 \x01(\tR\n" +
	"revisionId\"\xc0\x01\n" +
	"\x1eListContainerOperationsRequest\x12'\n" +
	"\fcontainer_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\vcontainerId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x060-1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\"\x8c\x01\n" +
	"\x1fListContainerOperationsResponse\x12A\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2!.yandex.cloud.operation.OperationR\n" +
	"operations\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken2\xed\x14\n" +
	"\x10ContainerService\x12\xa5\x01\n" +
	"\x03Get\x12:.yandex.cloud.serverless.containers.v1.GetContainerRequest\x1a0.yandex.cloud.serverless.containers.v1.Container\"0\x82\xd3\xe4\x93\x02*\x12(/containers/v1/containers/{container_id}\x12\xa6\x01\n" +
	"\x04List\x12<.yandex.cloud.serverless.containers.v1.ListContainersRequest\x1a=.yandex.cloud.serverless.containers.v1.ListContainersResponse\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/containers/v1/containers\x12\xb8\x01\n" +
	"\x06Create\x12=.yandex.cloud.serverless.containers.v1.CreateContainerRequest\x1a!.yandex.cloud.operation.Operation\"L\xb2\xd2*$\n" +
	"\x17CreateContainerMetadata\x12\tContainer\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/containers/v1/containers\x12\xc7\x01\n" +
	"\x06Update\x12=.yandex.cloud.serverless.containers.v1.UpdateContainerRequest\x1a!.yandex.cloud.operation.Operation\"[\xb2\xd2*$\n" +
	"\x17UpdateContainerMetadata\x12\tContainer\x82\xd3\xe4\x93\x02-:\x01*2(/containers/v1/containers/{container_id}\x12\xd0\x01\n" +
	"\x06Delete\x12=.yandex.cloud.serverless.containers.v1.DeleteContainerRequest\x1a!.yandex.cloud.operation.Operation\"d\xb2\xd2*0\n" +
	"\x17DeleteContainerMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02**(/containers/v1/containers/{container_id}\x12\xd5\x01\n" +
	"\x0eDeployRevision\x12E.yandex.cloud.serverless.containers.v1.DeployContainerRevisionRequest\x1a!.yandex.cloud.operation.Operation\"Y\xb2\xd2*+\n" +
	"\x1fDeployContainerRevisionMetadata\x12\bRevision\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/containers/v1/revisions:deploy\x12\xd6\x01\n" +
	"\bRollback\x12?.yandex.cloud.serverless.containers.v1.RollbackContainerRequest\x1a!.yandex.cloud.operation.Operation\"f\xb2\xd2*&\n" +
	"\x19RollbackContainerMetadata\x12\tContainer\x82\xd3\xe4\x93\x026:\x01*\"1/containers/v1/containers/{container_id}:rollback\x12\xbc\x01\n" +
	"\vGetRevision\x12B.yandex.cloud.serverless.containers.v1.GetContainerRevisionRequest\x1a/.yandex.cloud.serverless.containers.v1.Revision\"8\x82\xd3\xe4\x93\x022\x120/containers/v1/revisions/{container_revision_id}\x12\xc0\x01\n" +
	"\rListRevisions\x12E.yandex.cloud.serverless.containers.v1.ListContainersRevisionsRequest\x1aF.yandex.cloud.serverless.containers.v1.ListContainersRevisionsResponse\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/containers/v1/revisions\x12\xdc\x01\n" +
	"\x0eListOperations\x12E.yandex.cloud.serverless.containers.v1.ListContainerOperationsRequest\x1aF.yandex.cloud.serverless.containers.v1.ListContainerOperationsResponse\";\x82\xd3\xe4\x93\x025\x123/containers/v1/containers/{container_id}/operations\x12\xb9\x01\n" +
	"\x12ListAccessBindings\x12..yandex.cloud.access.ListAccessBindingsRequest\x1a/.yandex.cloud.access.ListAccessBindingsResponse\"B\x82\xd3\xe4\x93\x02<\x12:/containers/v1/containers/{resource_id}:listAccessBindings\x12\xe9\x01\n" +
	"\x11SetAccessBindings\x12-.yandex.cloud.access.SetAccessBindingsRequest\x1a!.yandex.cloud.operation.Operation\"\x81\x01\xb2\xd2*9\n" +
	" access.SetAccessBindingsMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02>:\x01*\"9/containers/v1/containers/{resource_id}:setAccessBindings\x12\xf5\x01\n" +
	"\x14UpdateAccessBindings\x120.yandex.cloud.access.UpdateAccessBindingsRequest\x1a!.yandex.cloud.operation.Operation\"\x87\x01\xb2\xd2*<\n" +
	"#access.UpdateAccessBindingsMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02A:\x01*\"</containers/v1/containers/{resource_id}:updateAccessBindingsB\x81\x01\n" +
	")yandex.cloud.api.serverless.containers.v1ZTgithub.com/yandex-cloud/go-genproto/yandex/cloud/serverless/containers/v1;containersb\x06proto3"

var (
	file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescData []byte
)

func file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDesc), len(file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDesc)))
	})
	return file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDescData
}

var file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_yandex_cloud_serverless_containers_v1_container_service_proto_goTypes = []any{
	(*GetContainerRequest)(nil),                // 0: yandex.cloud.serverless.containers.v1.GetContainerRequest
	(*ListContainersRequest)(nil),              // 1: yandex.cloud.serverless.containers.v1.ListContainersRequest
	(*ListContainersResponse)(nil),             // 2: yandex.cloud.serverless.containers.v1.ListContainersResponse
	(*CreateContainerRequest)(nil),             // 3: yandex.cloud.serverless.containers.v1.CreateContainerRequest
	(*CreateContainerMetadata)(nil),            // 4: yandex.cloud.serverless.containers.v1.CreateContainerMetadata
	(*UpdateContainerRequest)(nil),             // 5: yandex.cloud.serverless.containers.v1.UpdateContainerRequest
	(*UpdateContainerMetadata)(nil),            // 6: yandex.cloud.serverless.containers.v1.UpdateContainerMetadata
	(*DeleteContainerRequest)(nil),             // 7: yandex.cloud.serverless.containers.v1.DeleteContainerRequest
	(*DeleteContainerMetadata)(nil),            // 8: yandex.cloud.serverless.containers.v1.DeleteContainerMetadata
	(*GetContainerRevisionRequest)(nil),        // 9: yandex.cloud.serverless.containers.v1.GetContainerRevisionRequest
	(*ListContainersRevisionsRequest)(nil),     // 10: yandex.cloud.serverless.containers.v1.ListContainersRevisionsRequest
	(*ListContainersRevisionsResponse)(nil),    // 11: yandex.cloud.serverless.containers.v1.ListContainersRevisionsResponse
	(*DeployContainerRevisionRequest)(nil),     // 12: yandex.cloud.serverless.containers.v1.DeployContainerRevisionRequest
	(*ImageSpec)(nil),                          // 13: yandex.cloud.serverless.containers.v1.ImageSpec
	(*DeployContainerRevisionMetadata)(nil),    // 14: yandex.cloud.serverless.containers.v1.DeployContainerRevisionMetadata
	(*RollbackContainerRequest)(nil),           // 15: yandex.cloud.serverless.containers.v1.RollbackContainerRequest
	(*RollbackContainerMetadata)(nil),          // 16: yandex.cloud.serverless.containers.v1.RollbackContainerMetadata
	(*ListContainerOperationsRequest)(nil),     // 17: yandex.cloud.serverless.containers.v1.ListContainerOperationsRequest
	(*ListContainerOperationsResponse)(nil),    // 18: yandex.cloud.serverless.containers.v1.ListContainerOperationsResponse
	nil,                                        // 19: yandex.cloud.serverless.containers.v1.CreateContainerRequest.LabelsEntry
	nil,                                        // 20: yandex.cloud.serverless.containers.v1.UpdateContainerRequest.LabelsEntry
	nil,                                        // 21: yandex.cloud.serverless.containers.v1.ImageSpec.EnvironmentEntry
	(*Container)(nil),                          // 22: yandex.cloud.serverless.containers.v1.Container
	(*fieldmaskpb.FieldMask)(nil),              // 23: google.protobuf.FieldMask
	(*Revision)(nil),                           // 24: yandex.cloud.serverless.containers.v1.Revision
	(*Resources)(nil),                          // 25: yandex.cloud.serverless.containers.v1.Resources
	(*durationpb.Duration)(nil),                // 26: google.protobuf.Duration
	(*Secret)(nil),                             // 27: yandex.cloud.serverless.containers.v1.Secret
	(*Connectivity)(nil),                       // 28: yandex.cloud.serverless.containers.v1.Connectivity
	(*ProvisionPolicy)(nil),                    // 29: yandex.cloud.serverless.containers.v1.ProvisionPolicy
	(*ScalingPolicy)(nil),                      // 30: yandex.cloud.serverless.containers.v1.ScalingPolicy
	(*LogOptions)(nil),                         // 31: yandex.cloud.serverless.containers.v1.LogOptions
	(*StorageMount)(nil),                       // 32: yandex.cloud.serverless.containers.v1.StorageMount
	(*Mount)(nil),                              // 33: yandex.cloud.serverless.containers.v1.Mount
	(*Runtime)(nil),                            // 34: yandex.cloud.serverless.containers.v1.Runtime
	(*MetadataOptions)(nil),                    // 35: yandex.cloud.serverless.containers.v1.MetadataOptions
	(*AsyncInvocationConfig)(nil),              // 36: yandex.cloud.serverless.containers.v1.AsyncInvocationConfig
	(*Command)(nil),                            // 37: yandex.cloud.serverless.containers.v1.Command
	(*Args)(nil),                               // 38: yandex.cloud.serverless.containers.v1.Args
	(*operation.Operation)(nil),                // 39: yandex.cloud.operation.Operation
	(*access.ListAccessBindingsRequest)(nil),   // 40: yandex.cloud.access.ListAccessBindingsRequest
	(*access.SetAccessBindingsRequest)(nil),    // 41: yandex.cloud.access.SetAccessBindingsRequest
	(*access.UpdateAccessBindingsRequest)(nil), // 42: yandex.cloud.access.UpdateAccessBindingsRequest
	(*access.ListAccessBindingsResponse)(nil),  // 43: yandex.cloud.access.ListAccessBindingsResponse
}
var file_yandex_cloud_serverless_containers_v1_container_service_proto_depIdxs = []int32{
	22, // 0: yandex.cloud.serverless.containers.v1.ListContainersResponse.containers:type_name -> yandex.cloud.serverless.containers.v1.Container
	19, // 1: yandex.cloud.serverless.containers.v1.CreateContainerRequest.labels:type_name -> yandex.cloud.serverless.containers.v1.CreateContainerRequest.LabelsEntry
	23, // 2: yandex.cloud.serverless.containers.v1.UpdateContainerRequest.update_mask:type_name -> google.protobuf.FieldMask
	20, // 3: yandex.cloud.serverless.containers.v1.UpdateContainerRequest.labels:type_name -> yandex.cloud.serverless.containers.v1.UpdateContainerRequest.LabelsEntry
	24, // 4: yandex.cloud.serverless.containers.v1.ListContainersRevisionsResponse.revisions:type_name -> yandex.cloud.serverless.containers.v1.Revision
	25, // 5: yandex.cloud.serverless.containers.v1.DeployContainerRevisionRequest.resources:type_name -> yandex.cloud.serverless.containers.v1.Resources
	26, // 6: yandex.cloud.serverless.containers.v1.DeployContainerRevisionRequest.execution_timeout:type_name -> google.protobuf.Duration
	13, // 7: yandex.cloud.serverless.containers.v1.DeployContainerRevisionRequest.image_spec:type_name -> yandex.cloud.serverless.containers.v1.ImageSpec
	27, // 8: yandex.cloud.serverless.containers.v1.DeployContainerRevisionRequest.secrets:type_name -> yandex.cloud.serverless.containers.v1.Secret
	28, // 9: yandex.cloud.serverless.containers.v1.DeployContainerRevisionRequest.connectivity:type_name -> yandex.cloud.serverless.containers.v1.Connectivity
	29, // 10: yandex.cloud.serverless.containers.v1.DeployContainerRevisionRequest.provision_policy:type_name -> yandex.cloud.serverless.containers.v1.ProvisionPolicy
	30, // 11: yandex.cloud.serverless.containers.v1.DeployContainerRevisionRequest.scaling_policy:type_name -> yandex.cloud.serverless.containers.v1.ScalingPolicy
	31, // 12: yandex.cloud.serverless.containers.v1.DeployContainerRevisionRequest.log_options:type_name -> yandex.cloud.serverless.containers.v1.LogOptions
	32, // 13: yandex.cloud.serverless.containers.v1.DeployContainerRevisionRequest.storage_mounts:type_name -> yandex.cloud.serverless.containers.v1.StorageMount
	33, // 14: yandex.cloud.serverless.containers.v1.DeployContainerRevisionRequest.mounts:type_name -> yandex.cloud.serverless.containers.v1.Mount
	34, // 15: yandex.cloud.serverless.containers.v1.DeployContainerRevisionRequest.runtime:type_name -> yandex.cloud.serverless.containers.v1.Runtime
	35, // 16: yandex.cloud.serverless.containers.v1.DeployContainerRevisionRequest.metadata_options:type_name -> yandex.cloud.serverless.containers.v1.MetadataOptions
	36, // 17: yandex.cloud.serverless.containers.v1.DeployContainerRevisionRequest.async_invocation_config:type_name -> yandex.cloud.serverless.containers.v1.AsyncInvocationConfig
	37, // 18: yandex.cloud.serverless.containers.v1.ImageSpec.command:type_name -> yandex.cloud.serverless.containers.v1.Command
	38, // 19: yandex.cloud.serverless.containers.v1.ImageSpec.args:type_name -> yandex.cloud.serverless.containers.v1.Args
	21, // 20: yandex.cloud.serverless.containers.v1.ImageSpec.environment:type_name -> yandex.cloud.serverless.containers.v1.ImageSpec.EnvironmentEntry
	39, // 21: yandex.cloud.serverless.containers.v1.ListContainerOperationsResponse.operations:type_name -> yandex.cloud.operation.Operation
	0,  // 22: yandex.cloud.serverless.containers.v1.ContainerService.Get:input_type -> yandex.cloud.serverless.containers.v1.GetContainerRequest
	1,  // 23: yandex.cloud.serverless.containers.v1.ContainerService.List:input_type -> yandex.cloud.serverless.containers.v1.ListContainersRequest
	3,  // 24: yandex.cloud.serverless.containers.v1.ContainerService.Create:input_type -> yandex.cloud.serverless.containers.v1.CreateContainerRequest
	5,  // 25: yandex.cloud.serverless.containers.v1.ContainerService.Update:input_type -> yandex.cloud.serverless.containers.v1.UpdateContainerRequest
	7,  // 26: yandex.cloud.serverless.containers.v1.ContainerService.Delete:input_type -> yandex.cloud.serverless.containers.v1.DeleteContainerRequest
	12, // 27: yandex.cloud.serverless.containers.v1.ContainerService.DeployRevision:input_type -> yandex.cloud.serverless.containers.v1.DeployContainerRevisionRequest
	15, // 28: yandex.cloud.serverless.containers.v1.ContainerService.Rollback:input_type -> yandex.cloud.serverless.containers.v1.RollbackContainerRequest
	9,  // 29: yandex.cloud.serverless.containers.v1.ContainerService.GetRevision:input_type -> yandex.cloud.serverless.containers.v1.GetContainerRevisionRequest
	10, // 30: yandex.cloud.serverless.containers.v1.ContainerService.ListRevisions:input_type -> yandex.cloud.serverless.containers.v1.ListContainersRevisionsRequest
	17, // 31: yandex.cloud.serverless.containers.v1.ContainerService.ListOperations:input_type -> yandex.cloud.serverless.containers.v1.ListContainerOperationsRequest
	40, // 32: yandex.cloud.serverless.containers.v1.ContainerService.ListAccessBindings:input_type -> yandex.cloud.access.ListAccessBindingsRequest
	41, // 33: yandex.cloud.serverless.containers.v1.ContainerService.SetAccessBindings:input_type -> yandex.cloud.access.SetAccessBindingsRequest
	42, // 34: yandex.cloud.serverless.containers.v1.ContainerService.UpdateAccessBindings:input_type -> yandex.cloud.access.UpdateAccessBindingsRequest
	22, // 35: yandex.cloud.serverless.containers.v1.ContainerService.Get:output_type -> yandex.cloud.serverless.containers.v1.Container
	2,  // 36: yandex.cloud.serverless.containers.v1.ContainerService.List:output_type -> yandex.cloud.serverless.containers.v1.ListContainersResponse
	39, // 37: yandex.cloud.serverless.containers.v1.ContainerService.Create:output_type -> yandex.cloud.operation.Operation
	39, // 38: yandex.cloud.serverless.containers.v1.ContainerService.Update:output_type -> yandex.cloud.operation.Operation
	39, // 39: yandex.cloud.serverless.containers.v1.ContainerService.Delete:output_type -> yandex.cloud.operation.Operation
	39, // 40: yandex.cloud.serverless.containers.v1.ContainerService.DeployRevision:output_type -> yandex.cloud.operation.Operation
	39, // 41: yandex.cloud.serverless.containers.v1.ContainerService.Rollback:output_type -> yandex.cloud.operation.Operation
	24, // 42: yandex.cloud.serverless.containers.v1.ContainerService.GetRevision:output_type -> yandex.cloud.serverless.containers.v1.Revision
	11, // 43: yandex.cloud.serverless.containers.v1.ContainerService.ListRevisions:output_type -> yandex.cloud.serverless.containers.v1.ListContainersRevisionsResponse
	18, // 44: yandex.cloud.serverless.containers.v1.ContainerService.ListOperations:output_type -> yandex.cloud.serverless.containers.v1.ListContainerOperationsResponse
	43, // 45: yandex.cloud.serverless.containers.v1.ContainerService.ListAccessBindings:output_type -> yandex.cloud.access.ListAccessBindingsResponse
	39, // 46: yandex.cloud.serverless.containers.v1.ContainerService.SetAccessBindings:output_type -> yandex.cloud.operation.Operation
	39, // 47: yandex.cloud.serverless.containers.v1.ContainerService.UpdateAccessBindings:output_type -> yandex.cloud.operation.Operation
	35, // [35:48] is the sub-list for method output_type
	22, // [22:35] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_yandex_cloud_serverless_containers_v1_container_service_proto_init() }
func file_yandex_cloud_serverless_containers_v1_container_service_proto_init() {
	if File_yandex_cloud_serverless_containers_v1_container_service_proto != nil {
		return
	}
	file_yandex_cloud_serverless_containers_v1_container_proto_init()
	file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes[10].OneofWrappers = []any{
		(*ListContainersRevisionsRequest_FolderId)(nil),
		(*ListContainersRevisionsRequest_ContainerId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDesc), len(file_yandex_cloud_serverless_containers_v1_container_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_serverless_containers_v1_container_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_serverless_containers_v1_container_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_serverless_containers_v1_container_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_serverless_containers_v1_container_service_proto = out.File
	file_yandex_cloud_serverless_containers_v1_container_service_proto_goTypes = nil
	file_yandex_cloud_serverless_containers_v1_container_service_proto_depIdxs = nil
}

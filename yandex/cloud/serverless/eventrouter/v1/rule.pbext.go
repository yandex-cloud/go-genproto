// Code generated by protoc-gen-goext. DO NOT EDIT.

package eventrouter

import (
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

func (m *Rule) SetId(v string) {
	m.Id = v
}

func (m *Rule) SetBusId(v string) {
	m.BusId = v
}

func (m *Rule) SetFolderId(v string) {
	m.FolderId = v
}

func (m *Rule) SetCloudId(v string) {
	m.CloudId = v
}

func (m *Rule) SetCreatedAt(v *timestamppb.Timestamp) {
	m.CreatedAt = v
}

func (m *Rule) SetName(v string) {
	m.Name = v
}

func (m *Rule) SetDescription(v string) {
	m.Description = v
}

func (m *Rule) SetLabels(v map[string]string) {
	m.Labels = v
}

func (m *Rule) SetFilter(v *Filter) {
	m.Filter = v
}

func (m *Rule) SetTargets(v []*Target) {
	m.Targets = v
}

func (m *Rule) SetDeletionProtection(v bool) {
	m.DeletionProtection = v
}

func (m *Rule) SetStatus(v Rule_Status) {
	m.Status = v
}

type Filter_Condition = isFilter_Condition

func (m *Filter) SetCondition(v Filter_Condition) {
	m.Condition = v
}

func (m *Filter) SetJqFilter(v string) {
	m.Condition = &Filter_JqFilter{
		JqFilter: v,
	}
}

type Transformer_Transformer = isTransformer_Transformer

func (m *Transformer) SetTransformer(v Transformer_Transformer) {
	m.Transformer = v
}

func (m *Transformer) SetJqTransformer(v string) {
	m.Transformer = &Transformer_JqTransformer{
		JqTransformer: v,
	}
}

type Target_Target = isTarget_Target

func (m *Target) SetTarget(v Target_Target) {
	m.Target = v
}

type Target_DeadLetter = isTarget_DeadLetter

func (m *Target) SetDeadLetter(v Target_DeadLetter) {
	m.DeadLetter = v
}

func (m *Target) SetYds(v *YdsTarget) {
	m.Target = &Target_Yds{
		Yds: v,
	}
}

func (m *Target) SetYmq(v *YmqTarget) {
	m.Target = &Target_Ymq{
		Ymq: v,
	}
}

func (m *Target) SetFunction(v *FunctionTarget) {
	m.Target = &Target_Function{
		Function: v,
	}
}

func (m *Target) SetContainer(v *ContainerTarget) {
	m.Target = &Target_Container{
		Container: v,
	}
}

func (m *Target) SetGatewayWsBroadcast(v *GatewayWebsocketBroadcastTarget) {
	m.Target = &Target_GatewayWsBroadcast{
		GatewayWsBroadcast: v,
	}
}

func (m *Target) SetLogging(v *LoggingTarget) {
	m.Target = &Target_Logging{
		Logging: v,
	}
}

func (m *Target) SetWorkflow(v *WorkflowTarget) {
	m.Target = &Target_Workflow{
		Workflow: v,
	}
}

func (m *Target) SetTransformer(v *Transformer) {
	m.Transformer = v
}

func (m *Target) SetRetrySettings(v *RetrySettings) {
	m.RetrySettings = v
}

func (m *Target) SetDeadLetterQueue(v *PutQueueMessage) {
	m.DeadLetter = &Target_DeadLetterQueue{
		DeadLetterQueue: v,
	}
}

func (m *Target) SetStatus(v Target_Status) {
	m.Status = v
}

func (m *YdsTarget) SetDatabase(v string) {
	m.Database = v
}

func (m *YdsTarget) SetStreamName(v string) {
	m.StreamName = v
}

func (m *YdsTarget) SetServiceAccountId(v string) {
	m.ServiceAccountId = v
}

func (m *YmqTarget) SetQueueArn(v string) {
	m.QueueArn = v
}

func (m *YmqTarget) SetServiceAccountId(v string) {
	m.ServiceAccountId = v
}

func (m *FunctionTarget) SetFunctionId(v string) {
	m.FunctionId = v
}

func (m *FunctionTarget) SetFunctionTag(v string) {
	m.FunctionTag = v
}

func (m *FunctionTarget) SetServiceAccountId(v string) {
	m.ServiceAccountId = v
}

func (m *FunctionTarget) SetBatchSettings(v *BatchSettings) {
	m.BatchSettings = v
}

func (m *ContainerTarget) SetContainerId(v string) {
	m.ContainerId = v
}

func (m *ContainerTarget) SetContainerRevisionId(v string) {
	m.ContainerRevisionId = v
}

func (m *ContainerTarget) SetPath(v string) {
	m.Path = v
}

func (m *ContainerTarget) SetServiceAccountId(v string) {
	m.ServiceAccountId = v
}

func (m *ContainerTarget) SetBatchSettings(v *BatchSettings) {
	m.BatchSettings = v
}

func (m *GatewayWebsocketBroadcastTarget) SetGatewayId(v string) {
	m.GatewayId = v
}

func (m *GatewayWebsocketBroadcastTarget) SetPath(v string) {
	m.Path = v
}

func (m *GatewayWebsocketBroadcastTarget) SetServiceAccountId(v string) {
	m.ServiceAccountId = v
}

func (m *GatewayWebsocketBroadcastTarget) SetBatchSettings(v *BatchSettings) {
	m.BatchSettings = v
}

type LoggingTarget_Destination = isLoggingTarget_Destination

func (m *LoggingTarget) SetDestination(v LoggingTarget_Destination) {
	m.Destination = v
}

func (m *LoggingTarget) SetLogGroupId(v string) {
	m.Destination = &LoggingTarget_LogGroupId{
		LogGroupId: v,
	}
}

func (m *LoggingTarget) SetFolderId(v string) {
	m.Destination = &LoggingTarget_FolderId{
		FolderId: v,
	}
}

func (m *LoggingTarget) SetServiceAccountId(v string) {
	m.ServiceAccountId = v
}

func (m *WorkflowTarget) SetWorkflowId(v string) {
	m.WorkflowId = v
}

func (m *WorkflowTarget) SetServiceAccountId(v string) {
	m.ServiceAccountId = v
}

func (m *WorkflowTarget) SetBatchSettings(v *BatchSettings) {
	m.BatchSettings = v
}

func (m *RetrySettings) SetRetryAttempts(v int64) {
	m.RetryAttempts = v
}

func (m *RetrySettings) SetMaximumAge(v *durationpb.Duration) {
	m.MaximumAge = v
}

func (m *PutQueueMessage) SetQueueArn(v string) {
	m.QueueArn = v
}

func (m *PutQueueMessage) SetServiceAccountId(v string) {
	m.ServiceAccountId = v
}

func (m *BatchSettings) SetMaxCount(v int64) {
	m.MaxCount = v
}

func (m *BatchSettings) SetMaxBytes(v int64) {
	m.MaxBytes = v
}

func (m *BatchSettings) SetCutoff(v *durationpb.Duration) {
	m.Cutoff = v
}

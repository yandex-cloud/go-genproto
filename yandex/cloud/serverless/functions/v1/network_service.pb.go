// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/serverless/functions/v1/network_service.proto

package functions

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UsedNetwork_Status int32

const (
	UsedNetwork_STATUS_UNSPECIFIED UsedNetwork_Status = 0
	// Network is connecting to its first serverless resource.
	UsedNetwork_CREATING UsedNetwork_Status = 1
	// Network is already being used by some serverless resources.
	UsedNetwork_ACTIVE UsedNetwork_Status = 2
	// Network is no longer used by any serverless resources.
	// It will be cleaned-up after a while.
	UsedNetwork_OBSOLETE UsedNetwork_Status = 3
)

// Enum value maps for UsedNetwork_Status.
var (
	UsedNetwork_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "CREATING",
		2: "ACTIVE",
		3: "OBSOLETE",
	}
	UsedNetwork_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"CREATING":           1,
		"ACTIVE":             2,
		"OBSOLETE":           3,
	}
)

func (x UsedNetwork_Status) Enum() *UsedNetwork_Status {
	p := new(UsedNetwork_Status)
	*p = x
	return p
}

func (x UsedNetwork_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsedNetwork_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_serverless_functions_v1_network_service_proto_enumTypes[0].Descriptor()
}

func (UsedNetwork_Status) Type() protoreflect.EnumType {
	return &file_yandex_cloud_serverless_functions_v1_network_service_proto_enumTypes[0]
}

func (x UsedNetwork_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsedNetwork_Status.Descriptor instead.
func (UsedNetwork_Status) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDescGZIP(), []int{0, 0}
}

// A VPC network used in serverless resources.
type UsedNetwork struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the VPC network.
	NetworkId string `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// ID of the cloud that the network belongs to.
	CloudId string `protobuf:"bytes,2,opt,name=cloud_id,json=cloudId,proto3" json:"cloud_id,omitempty"`
	// ID of the folder that the network belongs to.
	FolderId string `protobuf:"bytes,3,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Status of the network.
	Status UsedNetwork_Status `protobuf:"varint,4,opt,name=status,proto3,enum=yandex.cloud.serverless.functions.v1.UsedNetwork_Status" json:"status,omitempty"`
	// Clean-up timestamp of the obsolete network.
	WillBeCleanedUpAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=will_be_cleaned_up_at,json=willBeCleanedUpAt,proto3" json:"will_be_cleaned_up_at,omitempty"`
	// Number of serverless resources connected to the network.
	ConnectionsCount int64 `protobuf:"varint,6,opt,name=connections_count,json=connectionsCount,proto3" json:"connections_count,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UsedNetwork) Reset() {
	*x = UsedNetwork{}
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsedNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsedNetwork) ProtoMessage() {}

func (x *UsedNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsedNetwork.ProtoReflect.Descriptor instead.
func (*UsedNetwork) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDescGZIP(), []int{0}
}

func (x *UsedNetwork) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *UsedNetwork) GetCloudId() string {
	if x != nil {
		return x.CloudId
	}
	return ""
}

func (x *UsedNetwork) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *UsedNetwork) GetStatus() UsedNetwork_Status {
	if x != nil {
		return x.Status
	}
	return UsedNetwork_STATUS_UNSPECIFIED
}

func (x *UsedNetwork) GetWillBeCleanedUpAt() *timestamppb.Timestamp {
	if x != nil {
		return x.WillBeCleanedUpAt
	}
	return nil
}

func (x *UsedNetwork) GetConnectionsCount() int64 {
	if x != nil {
		return x.ConnectionsCount
	}
	return 0
}

type GetUsedNetworkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the network to return.
	NetworkId     string `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUsedNetworkRequest) Reset() {
	*x = GetUsedNetworkRequest{}
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsedNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsedNetworkRequest) ProtoMessage() {}

func (x *GetUsedNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsedNetworkRequest.ProtoReflect.Descriptor instead.
func (*GetUsedNetworkRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetUsedNetworkRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

type ListUsedNetworksRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than `pageSize`, the service returns a [ListUsedNetworksResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	//
	// Default value: 100.
	PageSize int64 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set `pageToken` to the
	// [ListUsedNetworksResponse.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Types that are valid to be assigned to Scope:
	//
	//	*ListUsedNetworksRequest_CloudId
	//	*ListUsedNetworksRequest_FolderId
	Scope         isListUsedNetworksRequest_Scope `protobuf_oneof:"scope"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsedNetworksRequest) Reset() {
	*x = ListUsedNetworksRequest{}
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsedNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsedNetworksRequest) ProtoMessage() {}

func (x *ListUsedNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsedNetworksRequest.ProtoReflect.Descriptor instead.
func (*ListUsedNetworksRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListUsedNetworksRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUsedNetworksRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListUsedNetworksRequest) GetScope() isListUsedNetworksRequest_Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *ListUsedNetworksRequest) GetCloudId() string {
	if x != nil {
		if x, ok := x.Scope.(*ListUsedNetworksRequest_CloudId); ok {
			return x.CloudId
		}
	}
	return ""
}

func (x *ListUsedNetworksRequest) GetFolderId() string {
	if x != nil {
		if x, ok := x.Scope.(*ListUsedNetworksRequest_FolderId); ok {
			return x.FolderId
		}
	}
	return ""
}

type isListUsedNetworksRequest_Scope interface {
	isListUsedNetworksRequest_Scope()
}

type ListUsedNetworksRequest_CloudId struct {
	// ID of the cloud to list used networks in.
	CloudId string `protobuf:"bytes,3,opt,name=cloud_id,json=cloudId,proto3,oneof"`
}

type ListUsedNetworksRequest_FolderId struct {
	// ID of the folder to list used networks in.
	FolderId string `protobuf:"bytes,4,opt,name=folder_id,json=folderId,proto3,oneof"`
}

func (*ListUsedNetworksRequest_CloudId) isListUsedNetworksRequest_Scope() {}

func (*ListUsedNetworksRequest_FolderId) isListUsedNetworksRequest_Scope() {}

type ListUsedNetworksResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of used networks in the specified scope.
	Networks []*UsedNetwork `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	// Token for getting the next page of the list. If the number of results is greater than
	// the specified [ListUsedNetworksRequest.page_size], use `nextPageToken` as the value
	// for the [ListUsedNetworksRequest.page_token] parameter in the next list request.
	//
	// Each subsequent page will have its own `nextPageToken` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsedNetworksResponse) Reset() {
	*x = ListUsedNetworksResponse{}
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsedNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsedNetworksResponse) ProtoMessage() {}

func (x *ListUsedNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsedNetworksResponse.ProtoReflect.Descriptor instead.
func (*ListUsedNetworksResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListUsedNetworksResponse) GetNetworks() []*UsedNetwork {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *ListUsedNetworksResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListConnectedResourcesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than `pageSize`, the service returns a [ListConnectedResourcesResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests.
	//
	// Default value: 100.
	PageSize int64 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set `pageToken` to the
	// [ListConnectedResourcesResponse.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Types that are valid to be assigned to NetworkScope:
	//
	//	*ListConnectedResourcesRequest_NetworkId
	//	*ListConnectedResourcesRequest_CloudId
	//	*ListConnectedResourcesRequest_FolderId
	NetworkScope  isListConnectedResourcesRequest_NetworkScope `protobuf_oneof:"network_scope"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConnectedResourcesRequest) Reset() {
	*x = ListConnectedResourcesRequest{}
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConnectedResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectedResourcesRequest) ProtoMessage() {}

func (x *ListConnectedResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectedResourcesRequest.ProtoReflect.Descriptor instead.
func (*ListConnectedResourcesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListConnectedResourcesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListConnectedResourcesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListConnectedResourcesRequest) GetNetworkScope() isListConnectedResourcesRequest_NetworkScope {
	if x != nil {
		return x.NetworkScope
	}
	return nil
}

func (x *ListConnectedResourcesRequest) GetNetworkId() string {
	if x != nil {
		if x, ok := x.NetworkScope.(*ListConnectedResourcesRequest_NetworkId); ok {
			return x.NetworkId
		}
	}
	return ""
}

func (x *ListConnectedResourcesRequest) GetCloudId() string {
	if x != nil {
		if x, ok := x.NetworkScope.(*ListConnectedResourcesRequest_CloudId); ok {
			return x.CloudId
		}
	}
	return ""
}

func (x *ListConnectedResourcesRequest) GetFolderId() string {
	if x != nil {
		if x, ok := x.NetworkScope.(*ListConnectedResourcesRequest_FolderId); ok {
			return x.FolderId
		}
	}
	return ""
}

type isListConnectedResourcesRequest_NetworkScope interface {
	isListConnectedResourcesRequest_NetworkScope()
}

type ListConnectedResourcesRequest_NetworkId struct {
	// ID of the network to list serverless resources connected to it.
	NetworkId string `protobuf:"bytes,3,opt,name=network_id,json=networkId,proto3,oneof"`
}

type ListConnectedResourcesRequest_CloudId struct {
	// ID of the cloud to list serverless resources connected to any network from it.
	CloudId string `protobuf:"bytes,4,opt,name=cloud_id,json=cloudId,proto3,oneof"`
}

type ListConnectedResourcesRequest_FolderId struct {
	// ID of the folder to list serverless resources connected to any network from it.
	FolderId string `protobuf:"bytes,5,opt,name=folder_id,json=folderId,proto3,oneof"`
}

func (*ListConnectedResourcesRequest_NetworkId) isListConnectedResourcesRequest_NetworkScope() {}

func (*ListConnectedResourcesRequest_CloudId) isListConnectedResourcesRequest_NetworkScope() {}

func (*ListConnectedResourcesRequest_FolderId) isListConnectedResourcesRequest_NetworkScope() {}

type ListConnectedResourcesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of serverless resources connected to any network from the specified scope.
	Resources []*ListConnectedResourcesResponse_ConnectedResource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	// Token for getting the next page of the list. If the number of results is greater than
	// the specified [ListConnectedResourcesRequest.page_size], use `nextPageToken` as the value
	// for the [ListConnectedResourcesRequest.page_token] parameter in the next list request.
	//
	// Each subsequent page will have its own `nextPageToken` to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConnectedResourcesResponse) Reset() {
	*x = ListConnectedResourcesResponse{}
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConnectedResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectedResourcesResponse) ProtoMessage() {}

func (x *ListConnectedResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectedResourcesResponse.ProtoReflect.Descriptor instead.
func (*ListConnectedResourcesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListConnectedResourcesResponse) GetResources() []*ListConnectedResourcesResponse_ConnectedResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ListConnectedResourcesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type TriggerUsedNetworkCleanupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the obsolete network to start the cleanup process for.
	NetworkId     string `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerUsedNetworkCleanupRequest) Reset() {
	*x = TriggerUsedNetworkCleanupRequest{}
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerUsedNetworkCleanupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerUsedNetworkCleanupRequest) ProtoMessage() {}

func (x *TriggerUsedNetworkCleanupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerUsedNetworkCleanupRequest.ProtoReflect.Descriptor instead.
func (*TriggerUsedNetworkCleanupRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDescGZIP(), []int{6}
}

func (x *TriggerUsedNetworkCleanupRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

type TriggerUsedNetworkCleanupResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timestamp when cleanup of the specified network will be started.
	NetworkCleanupTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=network_cleanup_time,json=networkCleanupTime,proto3" json:"network_cleanup_time,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TriggerUsedNetworkCleanupResponse) Reset() {
	*x = TriggerUsedNetworkCleanupResponse{}
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerUsedNetworkCleanupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerUsedNetworkCleanupResponse) ProtoMessage() {}

func (x *TriggerUsedNetworkCleanupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerUsedNetworkCleanupResponse.ProtoReflect.Descriptor instead.
func (*TriggerUsedNetworkCleanupResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDescGZIP(), []int{7}
}

func (x *TriggerUsedNetworkCleanupResponse) GetNetworkCleanupTime() *timestamppb.Timestamp {
	if x != nil {
		return x.NetworkCleanupTime
	}
	return nil
}

// Serverless resource connected to VPC network.
type ListConnectedResourcesResponse_ConnectedResource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the network to which the resource is connected.
	NetworkId string `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// Type of the serverless resource.
	ResourceType string `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	// ID of the serverless resource.
	ResourceId string `protobuf:"bytes,3,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// Type of the serverless subresource.
	SubresourceType string `protobuf:"bytes,4,opt,name=subresource_type,json=subresourceType,proto3" json:"subresource_type,omitempty"`
	// ID of the serverless subresource.
	SubresourceId string `protobuf:"bytes,5,opt,name=subresource_id,json=subresourceId,proto3" json:"subresource_id,omitempty"`
	// ID of the cloud that the resource belongs to.
	ResourceCloudId string `protobuf:"bytes,6,opt,name=resource_cloud_id,json=resourceCloudId,proto3" json:"resource_cloud_id,omitempty"`
	// ID of the folder thar the resource belongs to.
	ResourceFolderId string `protobuf:"bytes,7,opt,name=resource_folder_id,json=resourceFolderId,proto3" json:"resource_folder_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListConnectedResourcesResponse_ConnectedResource) Reset() {
	*x = ListConnectedResourcesResponse_ConnectedResource{}
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConnectedResourcesResponse_ConnectedResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectedResourcesResponse_ConnectedResource) ProtoMessage() {}

func (x *ListConnectedResourcesResponse_ConnectedResource) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectedResourcesResponse_ConnectedResource.ProtoReflect.Descriptor instead.
func (*ListConnectedResourcesResponse_ConnectedResource) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ListConnectedResourcesResponse_ConnectedResource) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *ListConnectedResourcesResponse_ConnectedResource) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *ListConnectedResourcesResponse_ConnectedResource) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ListConnectedResourcesResponse_ConnectedResource) GetSubresourceType() string {
	if x != nil {
		return x.SubresourceType
	}
	return ""
}

func (x *ListConnectedResourcesResponse_ConnectedResource) GetSubresourceId() string {
	if x != nil {
		return x.SubresourceId
	}
	return ""
}

func (x *ListConnectedResourcesResponse_ConnectedResource) GetResourceCloudId() string {
	if x != nil {
		return x.ResourceCloudId
	}
	return ""
}

func (x *ListConnectedResourcesResponse_ConnectedResource) GetResourceFolderId() string {
	if x != nil {
		return x.ResourceFolderId
	}
	return ""
}

var File_yandex_cloud_serverless_functions_v1_network_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDesc = "" +
	"\n" +
	":yandex/cloud/serverless/functions/v1/network_service.proto\x12$yandex.cloud.serverless.functions.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1dyandex/cloud/validation.proto\"\xfb\x02\n" +
	"\vUsedNetwork\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tR\tnetworkId\x12\x19\n" +
	"\bcloud_id\x18\x02 \x01(\tR\acloudId\x12\x1b\n" +
	"\tfolder_id\x18\x03 \x01(\tR\bfolderId\x12P\n" +
	"\x06status\x18\x04 \x01(\x0e28.yandex.cloud.serverless.functions.v1.UsedNetwork.StatusR\x06status\x12L\n" +
	"\x15will_be_cleaned_up_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x11willBeCleanedUpAt\x12+\n" +
	"\x11connections_count\x18\x06 \x01(\x03R\x10connectionsCount\"H\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bCREATING\x10\x01\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x02\x12\f\n" +
	"\bOBSOLETE\x10\x03\"<\n" +
	"\x15GetUsedNetworkRequest\x12#\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\tnetworkId\"\xb7\x01\n" +
	"\x17ListUsedNetworksRequest\x12'\n" +
	"\tpage_size\x18\x01 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\x1b\n" +
	"\bcloud_id\x18\x03 \x01(\tH\x00R\acloudId\x12\x1d\n" +
	"\tfolder_id\x18\x04 \x01(\tH\x00R\bfolderIdB\r\n" +
	"\x05scope\x12\x04\xc0\xc11\x01\"\x91\x01\n" +
	"\x18ListUsedNetworksResponse\x12M\n" +
	"\bnetworks\x18\x01 \x03(\v21.yandex.cloud.serverless.functions.v1.UsedNetworkR\bnetworks\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xe6\x01\n" +
	"\x1dListConnectedResourcesRequest\x12'\n" +
	"\tpage_size\x18\x01 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\x1f\n" +
	"\n" +
	"network_id\x18\x03 \x01(\tH\x00R\tnetworkId\x12\x1b\n" +
	"\bcloud_id\x18\x04 \x01(\tH\x00R\acloudId\x12\x1d\n" +
	"\tfolder_id\x18\x05 \x01(\tH\x00R\bfolderIdB\x15\n" +
	"\rnetwork_scope\x12\x04\xc0\xc11\x01\"\xe5\x03\n" +
	"\x1eListConnectedResourcesResponse\x12t\n" +
	"\tresources\x18\x01 \x03(\v2V.yandex.cloud.serverless.functions.v1.ListConnectedResourcesResponse.ConnectedResourceR\tresources\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x1a\xa4\x02\n" +
	"\x11ConnectedResource\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tR\tnetworkId\x12#\n" +
	"\rresource_type\x18\x02 \x01(\tR\fresourceType\x12\x1f\n" +
	"\vresource_id\x18\x03 \x01(\tR\n" +
	"resourceId\x12)\n" +
	"\x10subresource_type\x18\x04 \x01(\tR\x0fsubresourceType\x12%\n" +
	"\x0esubresource_id\x18\x05 \x01(\tR\rsubresourceId\x12*\n" +
	"\x11resource_cloud_id\x18\x06 \x01(\tR\x0fresourceCloudId\x12,\n" +
	"\x12resource_folder_id\x18\a \x01(\tR\x10resourceFolderId\"G\n" +
	" TriggerUsedNetworkCleanupRequest\x12#\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\tnetworkId\"q\n" +
	"!TriggerUsedNetworkCleanupResponse\x12L\n" +
	"\x14network_cleanup_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x12networkCleanupTime2\xad\x06\n" +
	"\x0eNetworkService\x12\xab\x01\n" +
	"\aGetUsed\x12;.yandex.cloud.serverless.functions.v1.GetUsedNetworkRequest\x1a1.yandex.cloud.serverless.functions.v1.UsedNetwork\"0\x82\xd3\xe4\x93\x02*\x12(/functions/v1/networks/used/{network_id}\x12\xae\x01\n" +
	"\bListUsed\x12=.yandex.cloud.serverless.functions.v1.ListUsedNetworksRequest\x1a>.yandex.cloud.serverless.functions.v1.ListUsedNetworksResponse\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/functions/v1/networks/used\x12\xcf\x01\n" +
	"\x16ListConnectedResources\x12C.yandex.cloud.serverless.functions.v1.ListConnectedResourcesRequest\x1aD.yandex.cloud.serverless.functions.v1.ListConnectedResourcesResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/functions/v1/networks/connections\x12\xe9\x01\n" +
	"\x12TriggerUsedCleanup\x12F.yandex.cloud.serverless.functions.v1.TriggerUsedNetworkCleanupRequest\x1aG.yandex.cloud.serverless.functions.v1.TriggerUsedNetworkCleanupResponse\"B\x82\xd3\xe4\x93\x02<:\x01*\"7/functions/v1/networks/used/{network_id}:triggerCleanupB~\n" +
	"(yandex.cloud.api.serverless.functions.v1ZRgithub.com/yandex-cloud/go-genproto/yandex/cloud/serverless/functions/v1;functionsb\x06proto3"

var (
	file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDescData []byte
)

func file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDesc), len(file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDesc)))
	})
	return file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDescData
}

var file_yandex_cloud_serverless_functions_v1_network_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_yandex_cloud_serverless_functions_v1_network_service_proto_goTypes = []any{
	(UsedNetwork_Status)(0),                                  // 0: yandex.cloud.serverless.functions.v1.UsedNetwork.Status
	(*UsedNetwork)(nil),                                      // 1: yandex.cloud.serverless.functions.v1.UsedNetwork
	(*GetUsedNetworkRequest)(nil),                            // 2: yandex.cloud.serverless.functions.v1.GetUsedNetworkRequest
	(*ListUsedNetworksRequest)(nil),                          // 3: yandex.cloud.serverless.functions.v1.ListUsedNetworksRequest
	(*ListUsedNetworksResponse)(nil),                         // 4: yandex.cloud.serverless.functions.v1.ListUsedNetworksResponse
	(*ListConnectedResourcesRequest)(nil),                    // 5: yandex.cloud.serverless.functions.v1.ListConnectedResourcesRequest
	(*ListConnectedResourcesResponse)(nil),                   // 6: yandex.cloud.serverless.functions.v1.ListConnectedResourcesResponse
	(*TriggerUsedNetworkCleanupRequest)(nil),                 // 7: yandex.cloud.serverless.functions.v1.TriggerUsedNetworkCleanupRequest
	(*TriggerUsedNetworkCleanupResponse)(nil),                // 8: yandex.cloud.serverless.functions.v1.TriggerUsedNetworkCleanupResponse
	(*ListConnectedResourcesResponse_ConnectedResource)(nil), // 9: yandex.cloud.serverless.functions.v1.ListConnectedResourcesResponse.ConnectedResource
	(*timestamppb.Timestamp)(nil),                            // 10: google.protobuf.Timestamp
}
var file_yandex_cloud_serverless_functions_v1_network_service_proto_depIdxs = []int32{
	0,  // 0: yandex.cloud.serverless.functions.v1.UsedNetwork.status:type_name -> yandex.cloud.serverless.functions.v1.UsedNetwork.Status
	10, // 1: yandex.cloud.serverless.functions.v1.UsedNetwork.will_be_cleaned_up_at:type_name -> google.protobuf.Timestamp
	1,  // 2: yandex.cloud.serverless.functions.v1.ListUsedNetworksResponse.networks:type_name -> yandex.cloud.serverless.functions.v1.UsedNetwork
	9,  // 3: yandex.cloud.serverless.functions.v1.ListConnectedResourcesResponse.resources:type_name -> yandex.cloud.serverless.functions.v1.ListConnectedResourcesResponse.ConnectedResource
	10, // 4: yandex.cloud.serverless.functions.v1.TriggerUsedNetworkCleanupResponse.network_cleanup_time:type_name -> google.protobuf.Timestamp
	2,  // 5: yandex.cloud.serverless.functions.v1.NetworkService.GetUsed:input_type -> yandex.cloud.serverless.functions.v1.GetUsedNetworkRequest
	3,  // 6: yandex.cloud.serverless.functions.v1.NetworkService.ListUsed:input_type -> yandex.cloud.serverless.functions.v1.ListUsedNetworksRequest
	5,  // 7: yandex.cloud.serverless.functions.v1.NetworkService.ListConnectedResources:input_type -> yandex.cloud.serverless.functions.v1.ListConnectedResourcesRequest
	7,  // 8: yandex.cloud.serverless.functions.v1.NetworkService.TriggerUsedCleanup:input_type -> yandex.cloud.serverless.functions.v1.TriggerUsedNetworkCleanupRequest
	1,  // 9: yandex.cloud.serverless.functions.v1.NetworkService.GetUsed:output_type -> yandex.cloud.serverless.functions.v1.UsedNetwork
	4,  // 10: yandex.cloud.serverless.functions.v1.NetworkService.ListUsed:output_type -> yandex.cloud.serverless.functions.v1.ListUsedNetworksResponse
	6,  // 11: yandex.cloud.serverless.functions.v1.NetworkService.ListConnectedResources:output_type -> yandex.cloud.serverless.functions.v1.ListConnectedResourcesResponse
	8,  // 12: yandex.cloud.serverless.functions.v1.NetworkService.TriggerUsedCleanup:output_type -> yandex.cloud.serverless.functions.v1.TriggerUsedNetworkCleanupResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_yandex_cloud_serverless_functions_v1_network_service_proto_init() }
func file_yandex_cloud_serverless_functions_v1_network_service_proto_init() {
	if File_yandex_cloud_serverless_functions_v1_network_service_proto != nil {
		return
	}
	file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[2].OneofWrappers = []any{
		(*ListUsedNetworksRequest_CloudId)(nil),
		(*ListUsedNetworksRequest_FolderId)(nil),
	}
	file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes[4].OneofWrappers = []any{
		(*ListConnectedResourcesRequest_NetworkId)(nil),
		(*ListConnectedResourcesRequest_CloudId)(nil),
		(*ListConnectedResourcesRequest_FolderId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDesc), len(file_yandex_cloud_serverless_functions_v1_network_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_serverless_functions_v1_network_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_serverless_functions_v1_network_service_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_serverless_functions_v1_network_service_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_serverless_functions_v1_network_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_serverless_functions_v1_network_service_proto = out.File
	file_yandex_cloud_serverless_functions_v1_network_service_proto_goTypes = nil
	file_yandex_cloud_serverless_functions_v1_network_service_proto_depIdxs = nil
}

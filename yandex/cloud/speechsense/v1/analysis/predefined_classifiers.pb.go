// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/speechsense/v1/analysis/predefined_classifiers.proto

package speechsense

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecognitionClassifierResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Start time of the audio segment used for classification
	StartTimeMs int64 `protobuf:"varint,1,opt,name=start_time_ms,json=startTimeMs,proto3" json:"start_time_ms,omitempty"`
	// End time of the audio segment used for classification
	EndTimeMs int64 `protobuf:"varint,2,opt,name=end_time_ms,json=endTimeMs,proto3" json:"end_time_ms,omitempty"`
	// Name of the triggered classifier
	Classifier string `protobuf:"bytes,3,opt,name=classifier,proto3" json:"classifier,omitempty"`
	// List of highlights, i.e. parts of phrase that determine the result of the classification
	Highlights []*PhraseHighlight `protobuf:"bytes,4,rep,name=highlights,proto3" json:"highlights,omitempty"`
	// Classifier predictions
	Labels        []*RecognitionClassifierLabel `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecognitionClassifierResult) Reset() {
	*x = RecognitionClassifierResult{}
	mi := &file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecognitionClassifierResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecognitionClassifierResult) ProtoMessage() {}

func (x *RecognitionClassifierResult) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecognitionClassifierResult.ProtoReflect.Descriptor instead.
func (*RecognitionClassifierResult) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescGZIP(), []int{0}
}

func (x *RecognitionClassifierResult) GetStartTimeMs() int64 {
	if x != nil {
		return x.StartTimeMs
	}
	return 0
}

func (x *RecognitionClassifierResult) GetEndTimeMs() int64 {
	if x != nil {
		return x.EndTimeMs
	}
	return 0
}

func (x *RecognitionClassifierResult) GetClassifier() string {
	if x != nil {
		return x.Classifier
	}
	return ""
}

func (x *RecognitionClassifierResult) GetHighlights() []*PhraseHighlight {
	if x != nil {
		return x.Highlights
	}
	return nil
}

func (x *RecognitionClassifierResult) GetLabels() []*RecognitionClassifierLabel {
	if x != nil {
		return x.Labels
	}
	return nil
}

type PhraseHighlight struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Text transcription of the highlighted audio segment
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// offset in symbols from the beginning of whole phrase where highlight begins
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// count of symbols in highlighted text
	Count         int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PhraseHighlight) Reset() {
	*x = PhraseHighlight{}
	mi := &file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PhraseHighlight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhraseHighlight) ProtoMessage() {}

func (x *PhraseHighlight) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhraseHighlight.ProtoReflect.Descriptor instead.
func (*PhraseHighlight) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescGZIP(), []int{1}
}

func (x *PhraseHighlight) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PhraseHighlight) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PhraseHighlight) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type RecognitionClassifierLabel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The label of the class predicted by the classifier
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	// The prediction confidence
	Confidence    float64 `protobuf:"fixed64,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecognitionClassifierLabel) Reset() {
	*x = RecognitionClassifierLabel{}
	mi := &file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecognitionClassifierLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecognitionClassifierLabel) ProtoMessage() {}

func (x *RecognitionClassifierLabel) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecognitionClassifierLabel.ProtoReflect.Descriptor instead.
func (*RecognitionClassifierLabel) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescGZIP(), []int{2}
}

func (x *RecognitionClassifierLabel) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *RecognitionClassifierLabel) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

var File_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto protoreflect.FileDescriptor

const file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDesc = "" +
	"\n" +
	"Ayandex/cloud/speechsense/v1/analysis/predefined_classifiers.proto\x12$yandex.cloud.speechsense.v1.analysis\"\xb2\x02\n" +
	"\x1bRecognitionClassifierResult\x12\"\n" +
	"\rstart_time_ms\x18\x01 \x01(\x03R\vstartTimeMs\x12\x1e\n" +
	"\vend_time_ms\x18\x02 \x01(\x03R\tendTimeMs\x12\x1e\n" +
	"\n" +
	"classifier\x18\x03 \x01(\tR\n" +
	"classifier\x12U\n" +
	"\n" +
	"highlights\x18\x04 \x03(\v25.yandex.cloud.speechsense.v1.analysis.PhraseHighlightR\n" +
	"highlights\x12X\n" +
	"\x06labels\x18\x05 \x03(\v2@.yandex.cloud.speechsense.v1.analysis.RecognitionClassifierLabelR\x06labels\"S\n" +
	"\x0fPhraseHighlight\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12\x14\n" +
	"\x05count\x18\x03 \x01(\x03R\x05count\"R\n" +
	"\x1aRecognitionClassifierLabel\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\x12\x1e\n" +
	"\n" +
	"confidence\x18\x02 \x01(\x01R\n" +
	"confidenceB\x9c\x01\n" +
	"(yandex.cloud.api.speechsense.v1.analysisB\x1aRecognitionClassifierProtoZTgithub.com/yandex-cloud/go-genproto/yandex/cloud/speechsense/v1/analysis;speechsenseb\x06proto3"

var (
	file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescOnce sync.Once
	file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescData []byte
)

func file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescGZIP() []byte {
	file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDesc), len(file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDesc)))
	})
	return file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescData
}

var file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_goTypes = []any{
	(*RecognitionClassifierResult)(nil), // 0: yandex.cloud.speechsense.v1.analysis.RecognitionClassifierResult
	(*PhraseHighlight)(nil),             // 1: yandex.cloud.speechsense.v1.analysis.PhraseHighlight
	(*RecognitionClassifierLabel)(nil),  // 2: yandex.cloud.speechsense.v1.analysis.RecognitionClassifierLabel
}
var file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_depIdxs = []int32{
	1, // 0: yandex.cloud.speechsense.v1.analysis.RecognitionClassifierResult.highlights:type_name -> yandex.cloud.speechsense.v1.analysis.PhraseHighlight
	2, // 1: yandex.cloud.speechsense.v1.analysis.RecognitionClassifierResult.labels:type_name -> yandex.cloud.speechsense.v1.analysis.RecognitionClassifierLabel
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_init() }
func file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_init() {
	if File_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDesc), len(file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes,
	}.Build()
	File_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto = out.File
	file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_goTypes = nil
	file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_depIdxs = nil
}

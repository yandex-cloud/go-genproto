// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: yandex/cloud/speechsense/v1/analysis/predefined_classifiers.proto

package speechsense

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecognitionClassifierResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Start time of the audio segment used for classification
	StartTimeMs int64 `protobuf:"varint,1,opt,name=start_time_ms,json=startTimeMs,proto3" json:"start_time_ms,omitempty"`
	// End time of the audio segment used for classification
	EndTimeMs int64 `protobuf:"varint,2,opt,name=end_time_ms,json=endTimeMs,proto3" json:"end_time_ms,omitempty"`
	// Name of the triggered classifier
	Classifier string `protobuf:"bytes,3,opt,name=classifier,proto3" json:"classifier,omitempty"`
	// List of highlights, i.e. parts of phrase that determine the result of the classification
	Highlights []*PhraseHighlight `protobuf:"bytes,4,rep,name=highlights,proto3" json:"highlights,omitempty"`
	// Classifier predictions
	Labels []*RecognitionClassifierLabel `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *RecognitionClassifierResult) Reset() {
	*x = RecognitionClassifierResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecognitionClassifierResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecognitionClassifierResult) ProtoMessage() {}

func (x *RecognitionClassifierResult) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecognitionClassifierResult.ProtoReflect.Descriptor instead.
func (*RecognitionClassifierResult) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescGZIP(), []int{0}
}

func (x *RecognitionClassifierResult) GetStartTimeMs() int64 {
	if x != nil {
		return x.StartTimeMs
	}
	return 0
}

func (x *RecognitionClassifierResult) GetEndTimeMs() int64 {
	if x != nil {
		return x.EndTimeMs
	}
	return 0
}

func (x *RecognitionClassifierResult) GetClassifier() string {
	if x != nil {
		return x.Classifier
	}
	return ""
}

func (x *RecognitionClassifierResult) GetHighlights() []*PhraseHighlight {
	if x != nil {
		return x.Highlights
	}
	return nil
}

func (x *RecognitionClassifierResult) GetLabels() []*RecognitionClassifierLabel {
	if x != nil {
		return x.Labels
	}
	return nil
}

type PhraseHighlight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Text transcription of the highlighted audio segment
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// offset in symbols from the beginning of whole phrase where highlight begins
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// count of symbols in highlighted text
	Count int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *PhraseHighlight) Reset() {
	*x = PhraseHighlight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhraseHighlight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhraseHighlight) ProtoMessage() {}

func (x *PhraseHighlight) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhraseHighlight.ProtoReflect.Descriptor instead.
func (*PhraseHighlight) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescGZIP(), []int{1}
}

func (x *PhraseHighlight) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PhraseHighlight) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PhraseHighlight) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type RecognitionClassifierLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The label of the class predicted by the classifier
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	// The prediction confidence
	Confidence float64 `protobuf:"fixed64,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
}

func (x *RecognitionClassifierLabel) Reset() {
	*x = RecognitionClassifierLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecognitionClassifierLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecognitionClassifierLabel) ProtoMessage() {}

func (x *RecognitionClassifierLabel) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecognitionClassifierLabel.ProtoReflect.Descriptor instead.
func (*RecognitionClassifierLabel) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescGZIP(), []int{2}
}

func (x *RecognitionClassifierLabel) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *RecognitionClassifierLabel) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

var File_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto protoreflect.FileDescriptor

var file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDesc = []byte{
	0x0a, 0x41, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x73,
	0x70, 0x65, 0x65, 0x63, 0x68, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x70, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x24, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x22, 0xb2, 0x02, 0x0a, 0x1b, 0x52, 0x65,
	0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x12, 0x1e, 0x0a,
	0x0b, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x55, 0x0a,
	0x0a, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x48,
	0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0a, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x12, 0x58, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x53,
	0x0a, 0x0f, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x52, 0x0a, 0x1a, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x9c, 0x01, 0x0a, 0x28, 0x79, 0x61, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x65,
	0x65, 0x63, 0x68, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x42, 0x1a, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x5a, 0x54, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6e,
	0x64, 0x65, 0x78, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x61, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x3b, 0x73, 0x70, 0x65, 0x65, 0x63,
	0x68, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescOnce sync.Once
	file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescData = file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDesc
)

func file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescGZIP() []byte {
	file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescData = protoimpl.X.CompressGZIP(file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescData)
	})
	return file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDescData
}

var file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_goTypes = []any{
	(*RecognitionClassifierResult)(nil), // 0: yandex.cloud.speechsense.v1.analysis.RecognitionClassifierResult
	(*PhraseHighlight)(nil),             // 1: yandex.cloud.speechsense.v1.analysis.PhraseHighlight
	(*RecognitionClassifierLabel)(nil),  // 2: yandex.cloud.speechsense.v1.analysis.RecognitionClassifierLabel
}
var file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_depIdxs = []int32{
	1, // 0: yandex.cloud.speechsense.v1.analysis.RecognitionClassifierResult.highlights:type_name -> yandex.cloud.speechsense.v1.analysis.PhraseHighlight
	2, // 1: yandex.cloud.speechsense.v1.analysis.RecognitionClassifierResult.labels:type_name -> yandex.cloud.speechsense.v1.analysis.RecognitionClassifierLabel
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_init() }
func file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_init() {
	if File_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RecognitionClassifierResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PhraseHighlight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RecognitionClassifierLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_msgTypes,
	}.Build()
	File_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto = out.File
	file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_rawDesc = nil
	file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_goTypes = nil
	file_yandex_cloud_speechsense_v1_analysis_predefined_classifiers_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/speechsense/v1/search.proto

package speechsense

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SortOrder int32

const (
	SortOrder_SORT_ORDER_UNSPECIFIED SortOrder = 0
	SortOrder_SORT_ORDER_ASC         SortOrder = 1
	SortOrder_SORT_ORDER_DESC        SortOrder = 2
)

// Enum value maps for SortOrder.
var (
	SortOrder_name = map[int32]string{
		0: "SORT_ORDER_UNSPECIFIED",
		1: "SORT_ORDER_ASC",
		2: "SORT_ORDER_DESC",
	}
	SortOrder_value = map[string]int32{
		"SORT_ORDER_UNSPECIFIED": 0,
		"SORT_ORDER_ASC":         1,
		"SORT_ORDER_DESC":        2,
	}
)

func (x SortOrder) Enum() *SortOrder {
	p := new(SortOrder)
	*p = x
	return p
}

func (x SortOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_speechsense_v1_search_proto_enumTypes[0].Descriptor()
}

func (SortOrder) Type() protoreflect.EnumType {
	return &file_yandex_cloud_speechsense_v1_search_proto_enumTypes[0]
}

func (x SortOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortOrder.Descriptor instead.
func (SortOrder) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_search_proto_rawDescGZIP(), []int{0}
}

type Filter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// metadata key (user.some_key / system.created_at / analysis.speechkit.duration)
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are valid to be assigned to Filter:
	//
	//	*Filter_AnyMatch
	//	*Filter_IntRange
	//	*Filter_DoubleRange
	//	*Filter_DateRange
	//	*Filter_DurationRange
	//	*Filter_BooleanMatch
	Filter  isFilter_Filter `protobuf_oneof:"filter"`
	Inverse bool            `protobuf:"varint,7,opt,name=inverse,proto3" json:"inverse,omitempty"`
	// channel number to apply filter for, starting with 0. applies to all channels if not specified
	ChannelNumber *wrapperspb.Int64Value `protobuf:"bytes,8,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filter) Reset() {
	*x = Filter{}
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_search_proto_rawDescGZIP(), []int{0}
}

func (x *Filter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Filter) GetFilter() isFilter_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Filter) GetAnyMatch() *AnyMatchFilter {
	if x != nil {
		if x, ok := x.Filter.(*Filter_AnyMatch); ok {
			return x.AnyMatch
		}
	}
	return nil
}

func (x *Filter) GetIntRange() *IntRangeFilter {
	if x != nil {
		if x, ok := x.Filter.(*Filter_IntRange); ok {
			return x.IntRange
		}
	}
	return nil
}

func (x *Filter) GetDoubleRange() *DoubleRangeFilter {
	if x != nil {
		if x, ok := x.Filter.(*Filter_DoubleRange); ok {
			return x.DoubleRange
		}
	}
	return nil
}

func (x *Filter) GetDateRange() *DateRangeFilter {
	if x != nil {
		if x, ok := x.Filter.(*Filter_DateRange); ok {
			return x.DateRange
		}
	}
	return nil
}

func (x *Filter) GetDurationRange() *DurationRangeFilter {
	if x != nil {
		if x, ok := x.Filter.(*Filter_DurationRange); ok {
			return x.DurationRange
		}
	}
	return nil
}

func (x *Filter) GetBooleanMatch() *BooleanFilter {
	if x != nil {
		if x, ok := x.Filter.(*Filter_BooleanMatch); ok {
			return x.BooleanMatch
		}
	}
	return nil
}

func (x *Filter) GetInverse() bool {
	if x != nil {
		return x.Inverse
	}
	return false
}

func (x *Filter) GetChannelNumber() *wrapperspb.Int64Value {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

type isFilter_Filter interface {
	isFilter_Filter()
}

type Filter_AnyMatch struct {
	// find talk matched by any text filters
	AnyMatch *AnyMatchFilter `protobuf:"bytes,2,opt,name=any_match,json=anyMatch,proto3,oneof"`
}

type Filter_IntRange struct {
	// find talks with value from int range
	IntRange *IntRangeFilter `protobuf:"bytes,3,opt,name=int_range,json=intRange,proto3,oneof"`
}

type Filter_DoubleRange struct {
	// find talks with value from double range
	DoubleRange *DoubleRangeFilter `protobuf:"bytes,4,opt,name=double_range,json=doubleRange,proto3,oneof"`
}

type Filter_DateRange struct {
	// find talks with value from date range
	DateRange *DateRangeFilter `protobuf:"bytes,5,opt,name=date_range,json=dateRange,proto3,oneof"`
}

type Filter_DurationRange struct {
	// find talks with value from duration range
	DurationRange *DurationRangeFilter `protobuf:"bytes,6,opt,name=duration_range,json=durationRange,proto3,oneof"`
}

type Filter_BooleanMatch struct {
	// find talks with value equals boolean
	BooleanMatch *BooleanFilter `protobuf:"bytes,9,opt,name=boolean_match,json=booleanMatch,proto3,oneof"`
}

func (*Filter_AnyMatch) isFilter_Filter() {}

func (*Filter_IntRange) isFilter_Filter() {}

func (*Filter_DoubleRange) isFilter_Filter() {}

func (*Filter_DateRange) isFilter_Filter() {}

func (*Filter_DurationRange) isFilter_Filter() {}

func (*Filter_BooleanMatch) isFilter_Filter() {}

type Query struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Text  string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// should or should NOT match
	Inverse bool `protobuf:"varint,2,opt,name=inverse,proto3" json:"inverse,omitempty"`
	// id of channel to search ("1", "2", ..., any channel if not set)
	ChannelNumber *wrapperspb.Int64Value `protobuf:"bytes,3,opt,name=channel_number,json=channelNumber,proto3" json:"channel_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_search_proto_rawDescGZIP(), []int{1}
}

func (x *Query) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Query) GetInverse() bool {
	if x != nil {
		return x.Inverse
	}
	return false
}

func (x *Query) GetChannelNumber() *wrapperspb.Int64Value {
	if x != nil {
		return x.ChannelNumber
	}
	return nil
}

type AnyMatchFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// values list to match with "OR" operator
	Values        []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnyMatchFilter) Reset() {
	*x = AnyMatchFilter{}
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnyMatchFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyMatchFilter) ProtoMessage() {}

func (x *AnyMatchFilter) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyMatchFilter.ProtoReflect.Descriptor instead.
func (*AnyMatchFilter) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_search_proto_rawDescGZIP(), []int{2}
}

func (x *AnyMatchFilter) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// indicates whether to include range boundaries
type BoundsInclusive struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// include from bound
	FromInclusive bool `protobuf:"varint,1,opt,name=from_inclusive,json=fromInclusive,proto3" json:"from_inclusive,omitempty"`
	// include to bound
	ToInclusive   bool `protobuf:"varint,2,opt,name=to_inclusive,json=toInclusive,proto3" json:"to_inclusive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoundsInclusive) Reset() {
	*x = BoundsInclusive{}
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoundsInclusive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoundsInclusive) ProtoMessage() {}

func (x *BoundsInclusive) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoundsInclusive.ProtoReflect.Descriptor instead.
func (*BoundsInclusive) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_search_proto_rawDescGZIP(), []int{3}
}

func (x *BoundsInclusive) GetFromInclusive() bool {
	if x != nil {
		return x.FromInclusive
	}
	return false
}

func (x *BoundsInclusive) GetToInclusive() bool {
	if x != nil {
		return x.ToInclusive
	}
	return false
}

type IntRangeFilter struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FromValue       *wrapperspb.Int64Value `protobuf:"bytes,1,opt,name=from_value,json=fromValue,proto3" json:"from_value,omitempty"`
	ToValue         *wrapperspb.Int64Value `protobuf:"bytes,2,opt,name=to_value,json=toValue,proto3" json:"to_value,omitempty"`
	BoundsInclusive *BoundsInclusive       `protobuf:"bytes,3,opt,name=bounds_inclusive,json=boundsInclusive,proto3" json:"bounds_inclusive,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *IntRangeFilter) Reset() {
	*x = IntRangeFilter{}
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntRangeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntRangeFilter) ProtoMessage() {}

func (x *IntRangeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntRangeFilter.ProtoReflect.Descriptor instead.
func (*IntRangeFilter) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_search_proto_rawDescGZIP(), []int{4}
}

func (x *IntRangeFilter) GetFromValue() *wrapperspb.Int64Value {
	if x != nil {
		return x.FromValue
	}
	return nil
}

func (x *IntRangeFilter) GetToValue() *wrapperspb.Int64Value {
	if x != nil {
		return x.ToValue
	}
	return nil
}

func (x *IntRangeFilter) GetBoundsInclusive() *BoundsInclusive {
	if x != nil {
		return x.BoundsInclusive
	}
	return nil
}

type DoubleRangeFilter struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	FromValue       *wrapperspb.DoubleValue `protobuf:"bytes,1,opt,name=from_value,json=fromValue,proto3" json:"from_value,omitempty"`
	ToValue         *wrapperspb.DoubleValue `protobuf:"bytes,2,opt,name=to_value,json=toValue,proto3" json:"to_value,omitempty"`
	BoundsInclusive *BoundsInclusive        `protobuf:"bytes,3,opt,name=bounds_inclusive,json=boundsInclusive,proto3" json:"bounds_inclusive,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DoubleRangeFilter) Reset() {
	*x = DoubleRangeFilter{}
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DoubleRangeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleRangeFilter) ProtoMessage() {}

func (x *DoubleRangeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleRangeFilter.ProtoReflect.Descriptor instead.
func (*DoubleRangeFilter) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_search_proto_rawDescGZIP(), []int{5}
}

func (x *DoubleRangeFilter) GetFromValue() *wrapperspb.DoubleValue {
	if x != nil {
		return x.FromValue
	}
	return nil
}

func (x *DoubleRangeFilter) GetToValue() *wrapperspb.DoubleValue {
	if x != nil {
		return x.ToValue
	}
	return nil
}

func (x *DoubleRangeFilter) GetBoundsInclusive() *BoundsInclusive {
	if x != nil {
		return x.BoundsInclusive
	}
	return nil
}

type DateRangeFilter struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FromValue       *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=from_value,json=fromValue,proto3" json:"from_value,omitempty"`
	ToValue         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=to_value,json=toValue,proto3" json:"to_value,omitempty"`
	BoundsInclusive *BoundsInclusive       `protobuf:"bytes,3,opt,name=bounds_inclusive,json=boundsInclusive,proto3" json:"bounds_inclusive,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DateRangeFilter) Reset() {
	*x = DateRangeFilter{}
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DateRangeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateRangeFilter) ProtoMessage() {}

func (x *DateRangeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateRangeFilter.ProtoReflect.Descriptor instead.
func (*DateRangeFilter) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_search_proto_rawDescGZIP(), []int{6}
}

func (x *DateRangeFilter) GetFromValue() *timestamppb.Timestamp {
	if x != nil {
		return x.FromValue
	}
	return nil
}

func (x *DateRangeFilter) GetToValue() *timestamppb.Timestamp {
	if x != nil {
		return x.ToValue
	}
	return nil
}

func (x *DateRangeFilter) GetBoundsInclusive() *BoundsInclusive {
	if x != nil {
		return x.BoundsInclusive
	}
	return nil
}

type DurationRangeFilter struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FromValue       *durationpb.Duration   `protobuf:"bytes,1,opt,name=from_value,json=fromValue,proto3" json:"from_value,omitempty"`
	ToValue         *durationpb.Duration   `protobuf:"bytes,2,opt,name=to_value,json=toValue,proto3" json:"to_value,omitempty"`
	BoundsInclusive *BoundsInclusive       `protobuf:"bytes,3,opt,name=bounds_inclusive,json=boundsInclusive,proto3" json:"bounds_inclusive,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DurationRangeFilter) Reset() {
	*x = DurationRangeFilter{}
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DurationRangeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DurationRangeFilter) ProtoMessage() {}

func (x *DurationRangeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DurationRangeFilter.ProtoReflect.Descriptor instead.
func (*DurationRangeFilter) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_search_proto_rawDescGZIP(), []int{7}
}

func (x *DurationRangeFilter) GetFromValue() *durationpb.Duration {
	if x != nil {
		return x.FromValue
	}
	return nil
}

func (x *DurationRangeFilter) GetToValue() *durationpb.Duration {
	if x != nil {
		return x.ToValue
	}
	return nil
}

func (x *DurationRangeFilter) GetBoundsInclusive() *BoundsInclusive {
	if x != nil {
		return x.BoundsInclusive
	}
	return nil
}

type BooleanFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         bool                   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BooleanFilter) Reset() {
	*x = BooleanFilter{}
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BooleanFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanFilter) ProtoMessage() {}

func (x *BooleanFilter) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanFilter.ProtoReflect.Descriptor instead.
func (*BooleanFilter) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_search_proto_rawDescGZIP(), []int{8}
}

func (x *BooleanFilter) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type SortData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        []*SortField           `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortData) Reset() {
	*x = SortData{}
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortData) ProtoMessage() {}

func (x *SortData) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortData.ProtoReflect.Descriptor instead.
func (*SortData) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_search_proto_rawDescGZIP(), []int{9}
}

func (x *SortData) GetFields() []*SortField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type SortField struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// sorting key
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// sorting order by current `field`
	Order SortOrder `protobuf:"varint,2,opt,name=order,proto3,enum=yandex.cloud.speechsense.v1.SortOrder" json:"order,omitempty"`
	// number of field in comparing order (sort by key1 (position = 0), then key2 (position = 1), then key3...)
	Position      int64 `protobuf:"varint,3,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortField) Reset() {
	*x = SortField{}
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortField) ProtoMessage() {}

func (x *SortField) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_search_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortField.ProtoReflect.Descriptor instead.
func (*SortField) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_search_proto_rawDescGZIP(), []int{10}
}

func (x *SortField) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SortField) GetOrder() SortOrder {
	if x != nil {
		return x.Order
	}
	return SortOrder_SORT_ORDER_UNSPECIFIED
}

func (x *SortField) GetPosition() int64 {
	if x != nil {
		return x.Position
	}
	return 0
}

var File_yandex_cloud_speechsense_v1_search_proto protoreflect.FileDescriptor

const file_yandex_cloud_speechsense_v1_search_proto_rawDesc = "" +
	"\n" +
	"(yandex/cloud/speechsense/v1/search.proto\x12\x1byandex.cloud.speechsense.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\xec\x04\n" +
	"\x06Filter\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12J\n" +
	"\tany_match\x18\x02 \x01(\v2+.yandex.cloud.speechsense.v1.AnyMatchFilterH\x00R\banyMatch\x12J\n" +
	"\tint_range\x18\x03 \x01(\v2+.yandex.cloud.speechsense.v1.IntRangeFilterH\x00R\bintRange\x12S\n" +
	"\fdouble_range\x18\x04 \x01(\v2..yandex.cloud.speechsense.v1.DoubleRangeFilterH\x00R\vdoubleRange\x12M\n" +
	"\n" +
	"date_range\x18\x05 \x01(\v2,.yandex.cloud.speechsense.v1.DateRangeFilterH\x00R\tdateRange\x12Y\n" +
	"\x0eduration_range\x18\x06 \x01(\v20.yandex.cloud.speechsense.v1.DurationRangeFilterH\x00R\rdurationRange\x12Q\n" +
	"\rboolean_match\x18\t \x01(\v2*.yandex.cloud.speechsense.v1.BooleanFilterH\x00R\fbooleanMatch\x12\x18\n" +
	"\ainverse\x18\a \x01(\bR\ainverse\x12B\n" +
	"\x0echannel_number\x18\b \x01(\v2\x1b.google.protobuf.Int64ValueR\rchannelNumberB\b\n" +
	"\x06filter\"y\n" +
	"\x05Query\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x18\n" +
	"\ainverse\x18\x02 \x01(\bR\ainverse\x12B\n" +
	"\x0echannel_number\x18\x03 \x01(\v2\x1b.google.protobuf.Int64ValueR\rchannelNumber\"(\n" +
	"\x0eAnyMatchFilter\x12\x16\n" +
	"\x06values\x18\x01 \x03(\tR\x06values\"[\n" +
	"\x0fBoundsInclusive\x12%\n" +
	"\x0efrom_inclusive\x18\x01 \x01(\bR\rfromInclusive\x12!\n" +
	"\fto_inclusive\x18\x02 \x01(\bR\vtoInclusive\"\xdd\x01\n" +
	"\x0eIntRangeFilter\x12:\n" +
	"\n" +
	"from_value\x18\x01 \x01(\v2\x1b.google.protobuf.Int64ValueR\tfromValue\x126\n" +
	"\bto_value\x18\x02 \x01(\v2\x1b.google.protobuf.Int64ValueR\atoValue\x12W\n" +
	"\x10bounds_inclusive\x18\x03 \x01(\v2,.yandex.cloud.speechsense.v1.BoundsInclusiveR\x0fboundsInclusive\"\xe2\x01\n" +
	"\x11DoubleRangeFilter\x12;\n" +
	"\n" +
	"from_value\x18\x01 \x01(\v2\x1c.google.protobuf.DoubleValueR\tfromValue\x127\n" +
	"\bto_value\x18\x02 \x01(\v2\x1c.google.protobuf.DoubleValueR\atoValue\x12W\n" +
	"\x10bounds_inclusive\x18\x03 \x01(\v2,.yandex.cloud.speechsense.v1.BoundsInclusiveR\x0fboundsInclusive\"\xdc\x01\n" +
	"\x0fDateRangeFilter\x129\n" +
	"\n" +
	"from_value\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tfromValue\x125\n" +
	"\bto_value\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\atoValue\x12W\n" +
	"\x10bounds_inclusive\x18\x03 \x01(\v2,.yandex.cloud.speechsense.v1.BoundsInclusiveR\x0fboundsInclusive\"\xde\x01\n" +
	"\x13DurationRangeFilter\x128\n" +
	"\n" +
	"from_value\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\tfromValue\x124\n" +
	"\bto_value\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\atoValue\x12W\n" +
	"\x10bounds_inclusive\x18\x03 \x01(\v2,.yandex.cloud.speechsense.v1.BoundsInclusiveR\x0fboundsInclusive\"%\n" +
	"\rBooleanFilter\x12\x14\n" +
	"\x05value\x18\x01 \x01(\bR\x05value\"J\n" +
	"\bSortData\x12>\n" +
	"\x06fields\x18\x01 \x03(\v2&.yandex.cloud.speechsense.v1.SortFieldR\x06fields\"{\n" +
	"\tSortField\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12<\n" +
	"\x05order\x18\x02 \x01(\x0e2&.yandex.cloud.speechsense.v1.SortOrderR\x05order\x12\x1a\n" +
	"\bposition\x18\x03 \x01(\x03R\bposition*P\n" +
	"\tSortOrder\x12\x1a\n" +
	"\x16SORT_ORDER_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eSORT_ORDER_ASC\x10\x01\x12\x13\n" +
	"\x0fSORT_ORDER_DESC\x10\x02B{\n" +
	"\x1fyandex.cloud.api.speechsense.v1B\vSearchProtoZKgithub.com/yandex-cloud/go-genproto/yandex/cloud/speechsense/v1;speechsenseb\x06proto3"

var (
	file_yandex_cloud_speechsense_v1_search_proto_rawDescOnce sync.Once
	file_yandex_cloud_speechsense_v1_search_proto_rawDescData []byte
)

func file_yandex_cloud_speechsense_v1_search_proto_rawDescGZIP() []byte {
	file_yandex_cloud_speechsense_v1_search_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_speechsense_v1_search_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_speechsense_v1_search_proto_rawDesc), len(file_yandex_cloud_speechsense_v1_search_proto_rawDesc)))
	})
	return file_yandex_cloud_speechsense_v1_search_proto_rawDescData
}

var file_yandex_cloud_speechsense_v1_search_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_speechsense_v1_search_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_yandex_cloud_speechsense_v1_search_proto_goTypes = []any{
	(SortOrder)(0),                 // 0: yandex.cloud.speechsense.v1.SortOrder
	(*Filter)(nil),                 // 1: yandex.cloud.speechsense.v1.Filter
	(*Query)(nil),                  // 2: yandex.cloud.speechsense.v1.Query
	(*AnyMatchFilter)(nil),         // 3: yandex.cloud.speechsense.v1.AnyMatchFilter
	(*BoundsInclusive)(nil),        // 4: yandex.cloud.speechsense.v1.BoundsInclusive
	(*IntRangeFilter)(nil),         // 5: yandex.cloud.speechsense.v1.IntRangeFilter
	(*DoubleRangeFilter)(nil),      // 6: yandex.cloud.speechsense.v1.DoubleRangeFilter
	(*DateRangeFilter)(nil),        // 7: yandex.cloud.speechsense.v1.DateRangeFilter
	(*DurationRangeFilter)(nil),    // 8: yandex.cloud.speechsense.v1.DurationRangeFilter
	(*BooleanFilter)(nil),          // 9: yandex.cloud.speechsense.v1.BooleanFilter
	(*SortData)(nil),               // 10: yandex.cloud.speechsense.v1.SortData
	(*SortField)(nil),              // 11: yandex.cloud.speechsense.v1.SortField
	(*wrapperspb.Int64Value)(nil),  // 12: google.protobuf.Int64Value
	(*wrapperspb.DoubleValue)(nil), // 13: google.protobuf.DoubleValue
	(*timestamppb.Timestamp)(nil),  // 14: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),    // 15: google.protobuf.Duration
}
var file_yandex_cloud_speechsense_v1_search_proto_depIdxs = []int32{
	3,  // 0: yandex.cloud.speechsense.v1.Filter.any_match:type_name -> yandex.cloud.speechsense.v1.AnyMatchFilter
	5,  // 1: yandex.cloud.speechsense.v1.Filter.int_range:type_name -> yandex.cloud.speechsense.v1.IntRangeFilter
	6,  // 2: yandex.cloud.speechsense.v1.Filter.double_range:type_name -> yandex.cloud.speechsense.v1.DoubleRangeFilter
	7,  // 3: yandex.cloud.speechsense.v1.Filter.date_range:type_name -> yandex.cloud.speechsense.v1.DateRangeFilter
	8,  // 4: yandex.cloud.speechsense.v1.Filter.duration_range:type_name -> yandex.cloud.speechsense.v1.DurationRangeFilter
	9,  // 5: yandex.cloud.speechsense.v1.Filter.boolean_match:type_name -> yandex.cloud.speechsense.v1.BooleanFilter
	12, // 6: yandex.cloud.speechsense.v1.Filter.channel_number:type_name -> google.protobuf.Int64Value
	12, // 7: yandex.cloud.speechsense.v1.Query.channel_number:type_name -> google.protobuf.Int64Value
	12, // 8: yandex.cloud.speechsense.v1.IntRangeFilter.from_value:type_name -> google.protobuf.Int64Value
	12, // 9: yandex.cloud.speechsense.v1.IntRangeFilter.to_value:type_name -> google.protobuf.Int64Value
	4,  // 10: yandex.cloud.speechsense.v1.IntRangeFilter.bounds_inclusive:type_name -> yandex.cloud.speechsense.v1.BoundsInclusive
	13, // 11: yandex.cloud.speechsense.v1.DoubleRangeFilter.from_value:type_name -> google.protobuf.DoubleValue
	13, // 12: yandex.cloud.speechsense.v1.DoubleRangeFilter.to_value:type_name -> google.protobuf.DoubleValue
	4,  // 13: yandex.cloud.speechsense.v1.DoubleRangeFilter.bounds_inclusive:type_name -> yandex.cloud.speechsense.v1.BoundsInclusive
	14, // 14: yandex.cloud.speechsense.v1.DateRangeFilter.from_value:type_name -> google.protobuf.Timestamp
	14, // 15: yandex.cloud.speechsense.v1.DateRangeFilter.to_value:type_name -> google.protobuf.Timestamp
	4,  // 16: yandex.cloud.speechsense.v1.DateRangeFilter.bounds_inclusive:type_name -> yandex.cloud.speechsense.v1.BoundsInclusive
	15, // 17: yandex.cloud.speechsense.v1.DurationRangeFilter.from_value:type_name -> google.protobuf.Duration
	15, // 18: yandex.cloud.speechsense.v1.DurationRangeFilter.to_value:type_name -> google.protobuf.Duration
	4,  // 19: yandex.cloud.speechsense.v1.DurationRangeFilter.bounds_inclusive:type_name -> yandex.cloud.speechsense.v1.BoundsInclusive
	11, // 20: yandex.cloud.speechsense.v1.SortData.fields:type_name -> yandex.cloud.speechsense.v1.SortField
	0,  // 21: yandex.cloud.speechsense.v1.SortField.order:type_name -> yandex.cloud.speechsense.v1.SortOrder
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_yandex_cloud_speechsense_v1_search_proto_init() }
func file_yandex_cloud_speechsense_v1_search_proto_init() {
	if File_yandex_cloud_speechsense_v1_search_proto != nil {
		return
	}
	file_yandex_cloud_speechsense_v1_search_proto_msgTypes[0].OneofWrappers = []any{
		(*Filter_AnyMatch)(nil),
		(*Filter_IntRange)(nil),
		(*Filter_DoubleRange)(nil),
		(*Filter_DateRange)(nil),
		(*Filter_DurationRange)(nil),
		(*Filter_BooleanMatch)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_speechsense_v1_search_proto_rawDesc), len(file_yandex_cloud_speechsense_v1_search_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_speechsense_v1_search_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_speechsense_v1_search_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_speechsense_v1_search_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_speechsense_v1_search_proto_msgTypes,
	}.Build()
	File_yandex_cloud_speechsense_v1_search_proto = out.File
	file_yandex_cloud_speechsense_v1_search_proto_goTypes = nil
	file_yandex_cloud_speechsense_v1_search_proto_depIdxs = nil
}

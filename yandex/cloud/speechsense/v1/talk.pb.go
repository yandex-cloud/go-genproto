// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/speechsense/v1/talk.proto

package speechsense

import (
	analysis "github.com/yandex-cloud/go-genproto/yandex/cloud/speechsense/v1/analysis"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// connection field type
type FieldType int32

const (
	FieldType_FIELD_TYPE_UNSPECIFIED FieldType = 0
	FieldType_FIELD_TYPE_STRING      FieldType = 1
	FieldType_FIELD_TYPE_NUMBER      FieldType = 2
	FieldType_FIELD_TYPE_DECIMAL     FieldType = 3
	FieldType_FIELD_TYPE_BOOLEAN     FieldType = 4
	FieldType_FIELD_TYPE_DATE        FieldType = 5
	FieldType_FIELD_TYPE_JSON        FieldType = 6
)

// Enum value maps for FieldType.
var (
	FieldType_name = map[int32]string{
		0: "FIELD_TYPE_UNSPECIFIED",
		1: "FIELD_TYPE_STRING",
		2: "FIELD_TYPE_NUMBER",
		3: "FIELD_TYPE_DECIMAL",
		4: "FIELD_TYPE_BOOLEAN",
		5: "FIELD_TYPE_DATE",
		6: "FIELD_TYPE_JSON",
	}
	FieldType_value = map[string]int32{
		"FIELD_TYPE_UNSPECIFIED": 0,
		"FIELD_TYPE_STRING":      1,
		"FIELD_TYPE_NUMBER":      2,
		"FIELD_TYPE_DECIMAL":     3,
		"FIELD_TYPE_BOOLEAN":     4,
		"FIELD_TYPE_DATE":        5,
		"FIELD_TYPE_JSON":        6,
	}
)

func (x FieldType) Enum() *FieldType {
	p := new(FieldType)
	*p = x
	return p
}

func (x FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_speechsense_v1_talk_proto_enumTypes[0].Descriptor()
}

func (FieldType) Type() protoreflect.EnumType {
	return &file_yandex_cloud_speechsense_v1_talk_proto_enumTypes[0]
}

func (x FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldType.Descriptor instead.
func (FieldType) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_talk_proto_rawDescGZIP(), []int{0}
}

type ProcessingState int32

const (
	ProcessingState_PROCESSING_STATE_UNSPECIFIED ProcessingState = 0
	ProcessingState_PROCESSING_STATE_NOT_STARTED ProcessingState = 1
	ProcessingState_PROCESSING_STATE_PROCESSING  ProcessingState = 2
	ProcessingState_PROCESSING_STATE_SUCCESS     ProcessingState = 3
	ProcessingState_PROCESSING_STATE_FAILED      ProcessingState = 4
)

// Enum value maps for ProcessingState.
var (
	ProcessingState_name = map[int32]string{
		0: "PROCESSING_STATE_UNSPECIFIED",
		1: "PROCESSING_STATE_NOT_STARTED",
		2: "PROCESSING_STATE_PROCESSING",
		3: "PROCESSING_STATE_SUCCESS",
		4: "PROCESSING_STATE_FAILED",
	}
	ProcessingState_value = map[string]int32{
		"PROCESSING_STATE_UNSPECIFIED": 0,
		"PROCESSING_STATE_NOT_STARTED": 1,
		"PROCESSING_STATE_PROCESSING":  2,
		"PROCESSING_STATE_SUCCESS":     3,
		"PROCESSING_STATE_FAILED":      4,
	}
)

func (x ProcessingState) Enum() *ProcessingState {
	p := new(ProcessingState)
	*p = x
	return p
}

func (x ProcessingState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessingState) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_speechsense_v1_talk_proto_enumTypes[1].Descriptor()
}

func (ProcessingState) Type() protoreflect.EnumType {
	return &file_yandex_cloud_speechsense_v1_talk_proto_enumTypes[1]
}

func (x ProcessingState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessingState.Descriptor instead.
func (ProcessingState) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_talk_proto_rawDescGZIP(), []int{1}
}

type Algorithm int32

const (
	Algorithm_ALGORITHM_UNSPECIFIED   Algorithm = 0
	Algorithm_ALGORITHM_SPEECHKIT     Algorithm = 1
	Algorithm_ALGORITHM_YGPT          Algorithm = 2
	Algorithm_ALGORITHM_CLASSIFIER    Algorithm = 3
	Algorithm_ALGORITHM_SUMMARIZATION Algorithm = 4
	Algorithm_ALGORITHM_EMBEDDING     Algorithm = 5
	Algorithm_ALGORITHM_STATISTICS    Algorithm = 6
)

// Enum value maps for Algorithm.
var (
	Algorithm_name = map[int32]string{
		0: "ALGORITHM_UNSPECIFIED",
		1: "ALGORITHM_SPEECHKIT",
		2: "ALGORITHM_YGPT",
		3: "ALGORITHM_CLASSIFIER",
		4: "ALGORITHM_SUMMARIZATION",
		5: "ALGORITHM_EMBEDDING",
		6: "ALGORITHM_STATISTICS",
	}
	Algorithm_value = map[string]int32{
		"ALGORITHM_UNSPECIFIED":   0,
		"ALGORITHM_SPEECHKIT":     1,
		"ALGORITHM_YGPT":          2,
		"ALGORITHM_CLASSIFIER":    3,
		"ALGORITHM_SUMMARIZATION": 4,
		"ALGORITHM_EMBEDDING":     5,
		"ALGORITHM_STATISTICS":    6,
	}
)

func (x Algorithm) Enum() *Algorithm {
	p := new(Algorithm)
	*p = x
	return p
}

func (x Algorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Algorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_speechsense_v1_talk_proto_enumTypes[2].Descriptor()
}

func (Algorithm) Type() protoreflect.EnumType {
	return &file_yandex_cloud_speechsense_v1_talk_proto_enumTypes[2]
}

func (x Algorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Algorithm.Descriptor instead.
func (Algorithm) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_talk_proto_rawDescGZIP(), []int{2}
}

type Talk struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// talk id
	Id             string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizationId string   `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	SpaceId        string   `protobuf:"bytes,3,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	ConnectionId   string   `protobuf:"bytes,4,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	ProjectIds     []string `protobuf:"bytes,5,rep,name=project_ids,json=projectIds,proto3" json:"project_ids,omitempty"`
	// audition info
	CreatedBy  string                 `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ModifiedBy string                 `protobuf:"bytes,8,opt,name=modified_by,json=modifiedBy,proto3" json:"modified_by,omitempty"`
	ModifiedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=modified_at,json=modifiedAt,proto3" json:"modified_at,omitempty"`
	// key-value representation of talk fields with values
	TalkFields []*Field `protobuf:"bytes,10,rep,name=talk_fields,json=talkFields,proto3" json:"talk_fields,omitempty"`
	// various ml analysis results
	Transcription          *analysis.Transcription          `protobuf:"bytes,11,opt,name=transcription,proto3" json:"transcription,omitempty"`
	SpeechStatistics       *analysis.SpeechStatistics       `protobuf:"bytes,12,opt,name=speech_statistics,json=speechStatistics,proto3" json:"speech_statistics,omitempty"`
	SilenceStatistics      *analysis.SilenceStatistics      `protobuf:"bytes,13,opt,name=silence_statistics,json=silenceStatistics,proto3" json:"silence_statistics,omitempty"`
	InterruptsStatistics   *analysis.InterruptsStatistics   `protobuf:"bytes,14,opt,name=interrupts_statistics,json=interruptsStatistics,proto3" json:"interrupts_statistics,omitempty"`
	ConversationStatistics *analysis.ConversationStatistics `protobuf:"bytes,15,opt,name=conversation_statistics,json=conversationStatistics,proto3" json:"conversation_statistics,omitempty"`
	Points                 *analysis.Points                 `protobuf:"bytes,16,opt,name=points,proto3" json:"points,omitempty"`
	TextClassifiers        *analysis.TextClassifiers        `protobuf:"bytes,17,opt,name=text_classifiers,json=textClassifiers,proto3" json:"text_classifiers,omitempty"`
	Summarization          *analysis.Summarization          `protobuf:"bytes,18,opt,name=summarization,proto3" json:"summarization,omitempty"`
	TalkState              *TalkState                       `protobuf:"bytes,19,opt,name=talk_state,json=talkState,proto3" json:"talk_state,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Talk) Reset() {
	*x = Talk{}
	mi := &file_yandex_cloud_speechsense_v1_talk_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Talk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Talk) ProtoMessage() {}

func (x *Talk) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_talk_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Talk.ProtoReflect.Descriptor instead.
func (*Talk) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_talk_proto_rawDescGZIP(), []int{0}
}

func (x *Talk) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Talk) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *Talk) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *Talk) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *Talk) GetProjectIds() []string {
	if x != nil {
		return x.ProjectIds
	}
	return nil
}

func (x *Talk) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Talk) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Talk) GetModifiedBy() string {
	if x != nil {
		return x.ModifiedBy
	}
	return ""
}

func (x *Talk) GetModifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ModifiedAt
	}
	return nil
}

func (x *Talk) GetTalkFields() []*Field {
	if x != nil {
		return x.TalkFields
	}
	return nil
}

func (x *Talk) GetTranscription() *analysis.Transcription {
	if x != nil {
		return x.Transcription
	}
	return nil
}

func (x *Talk) GetSpeechStatistics() *analysis.SpeechStatistics {
	if x != nil {
		return x.SpeechStatistics
	}
	return nil
}

func (x *Talk) GetSilenceStatistics() *analysis.SilenceStatistics {
	if x != nil {
		return x.SilenceStatistics
	}
	return nil
}

func (x *Talk) GetInterruptsStatistics() *analysis.InterruptsStatistics {
	if x != nil {
		return x.InterruptsStatistics
	}
	return nil
}

func (x *Talk) GetConversationStatistics() *analysis.ConversationStatistics {
	if x != nil {
		return x.ConversationStatistics
	}
	return nil
}

func (x *Talk) GetPoints() *analysis.Points {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *Talk) GetTextClassifiers() *analysis.TextClassifiers {
	if x != nil {
		return x.TextClassifiers
	}
	return nil
}

func (x *Talk) GetSummarization() *analysis.Summarization {
	if x != nil {
		return x.Summarization
	}
	return nil
}

func (x *Talk) GetTalkState() *TalkState {
	if x != nil {
		return x.TalkState
	}
	return nil
}

type TalkState struct {
	state                    protoimpl.MessageState     `protogen:"open.v1"`
	ProcessingState          ProcessingState            `protobuf:"varint,1,opt,name=processing_state,json=processingState,proto3,enum=yandex.cloud.speechsense.v1.ProcessingState" json:"processing_state,omitempty"`
	AlgorithmProcessingInfos []*AlgorithmProcessingInfo `protobuf:"bytes,2,rep,name=algorithm_processing_infos,json=algorithmProcessingInfos,proto3" json:"algorithm_processing_infos,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *TalkState) Reset() {
	*x = TalkState{}
	mi := &file_yandex_cloud_speechsense_v1_talk_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TalkState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalkState) ProtoMessage() {}

func (x *TalkState) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_talk_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalkState.ProtoReflect.Descriptor instead.
func (*TalkState) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_talk_proto_rawDescGZIP(), []int{1}
}

func (x *TalkState) GetProcessingState() ProcessingState {
	if x != nil {
		return x.ProcessingState
	}
	return ProcessingState_PROCESSING_STATE_UNSPECIFIED
}

func (x *TalkState) GetAlgorithmProcessingInfos() []*AlgorithmProcessingInfo {
	if x != nil {
		return x.AlgorithmProcessingInfos
	}
	return nil
}

// connection field value
type Field struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name of the field
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// field value
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// field type
	Type          FieldType `protobuf:"varint,3,opt,name=type,proto3,enum=yandex.cloud.speechsense.v1.FieldType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Field) Reset() {
	*x = Field{}
	mi := &file_yandex_cloud_speechsense_v1_talk_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_talk_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_talk_proto_rawDescGZIP(), []int{2}
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Field) GetType() FieldType {
	if x != nil {
		return x.Type
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

type AlgorithmProcessingInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Algorithm       Algorithm              `protobuf:"varint,1,opt,name=algorithm,proto3,enum=yandex.cloud.speechsense.v1.Algorithm" json:"algorithm,omitempty"`
	ProcessingState ProcessingState        `protobuf:"varint,2,opt,name=processing_state,json=processingState,proto3,enum=yandex.cloud.speechsense.v1.ProcessingState" json:"processing_state,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AlgorithmProcessingInfo) Reset() {
	*x = AlgorithmProcessingInfo{}
	mi := &file_yandex_cloud_speechsense_v1_talk_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlgorithmProcessingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlgorithmProcessingInfo) ProtoMessage() {}

func (x *AlgorithmProcessingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_speechsense_v1_talk_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlgorithmProcessingInfo.ProtoReflect.Descriptor instead.
func (*AlgorithmProcessingInfo) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_speechsense_v1_talk_proto_rawDescGZIP(), []int{3}
}

func (x *AlgorithmProcessingInfo) GetAlgorithm() Algorithm {
	if x != nil {
		return x.Algorithm
	}
	return Algorithm_ALGORITHM_UNSPECIFIED
}

func (x *AlgorithmProcessingInfo) GetProcessingState() ProcessingState {
	if x != nil {
		return x.ProcessingState
	}
	return ProcessingState_PROCESSING_STATE_UNSPECIFIED
}

var File_yandex_cloud_speechsense_v1_talk_proto protoreflect.FileDescriptor

const file_yandex_cloud_speechsense_v1_talk_proto_rawDesc = "" +
	"\n" +
	"&yandex/cloud/speechsense/v1/talk.proto\x12\x1byandex.cloud.speechsense.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1aByandex/cloud/speechsense/v1/analysis/conversation_statistics.proto\x1a@yandex/cloud/speechsense/v1/analysis/interrupts_statistics.proto\x1a=yandex/cloud/speechsense/v1/analysis/silence_statistics.proto\x1a<yandex/cloud/speechsense/v1/analysis/speech_statistics.proto\x1a8yandex/cloud/speechsense/v1/analysis/summarization.proto\x1a8yandex/cloud/speechsense/v1/analysis/transcription.proto\x1a;yandex/cloud/speechsense/v1/analysis/text_classifiers.proto\x1a1yandex/cloud/speechsense/v1/analysis/points.proto\"\xf7\t\n" +
	"\x04Talk\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\x0forganization_id\x18\x02 \x01(\tR\x0eorganizationId\x12\x19\n" +
	"\bspace_id\x18\x03 \x01(\tR\aspaceId\x12#\n" +
	"\rconnection_id\x18\x04 \x01(\tR\fconnectionId\x12\x1f\n" +
	"\vproject_ids\x18\x05 \x03(\tR\n" +
	"projectIds\x12\x1d\n" +
	"\n" +
	"created_by\x18\x06 \x01(\tR\tcreatedBy\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x1f\n" +
	"\vmodified_by\x18\b \x01(\tR\n" +
	"modifiedBy\x12;\n" +
	"\vmodified_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"modifiedAt\x12C\n" +
	"\vtalk_fields\x18\n" +
	" \x03(\v2\".yandex.cloud.speechsense.v1.FieldR\n" +
	"talkFields\x12Y\n" +
	"\rtranscription\x18\v \x01(\v23.yandex.cloud.speechsense.v1.analysis.TranscriptionR\rtranscription\x12c\n" +
	"\x11speech_statistics\x18\f \x01(\v26.yandex.cloud.speechsense.v1.analysis.SpeechStatisticsR\x10speechStatistics\x12f\n" +
	"\x12silence_statistics\x18\r \x01(\v27.yandex.cloud.speechsense.v1.analysis.SilenceStatisticsR\x11silenceStatistics\x12o\n" +
	"\x15interrupts_statistics\x18\x0e \x01(\v2:.yandex.cloud.speechsense.v1.analysis.InterruptsStatisticsR\x14interruptsStatistics\x12u\n" +
	"\x17conversation_statistics\x18\x0f \x01(\v2<.yandex.cloud.speechsense.v1.analysis.ConversationStatisticsR\x16conversationStatistics\x12D\n" +
	"\x06points\x18\x10 \x01(\v2,.yandex.cloud.speechsense.v1.analysis.PointsR\x06points\x12`\n" +
	"\x10text_classifiers\x18\x11 \x01(\v25.yandex.cloud.speechsense.v1.analysis.TextClassifiersR\x0ftextClassifiers\x12Y\n" +
	"\rsummarization\x18\x12 \x01(\v23.yandex.cloud.speechsense.v1.analysis.SummarizationR\rsummarization\x12E\n" +
	"\n" +
	"talk_state\x18\x13 \x01(\v2&.yandex.cloud.speechsense.v1.TalkStateR\ttalkState\"\xd8\x01\n" +
	"\tTalkState\x12W\n" +
	"\x10processing_state\x18\x01 \x01(\x0e2,.yandex.cloud.speechsense.v1.ProcessingStateR\x0fprocessingState\x12r\n" +
	"\x1aalgorithm_processing_infos\x18\x02 \x03(\v24.yandex.cloud.speechsense.v1.AlgorithmProcessingInfoR\x18algorithmProcessingInfos\"m\n" +
	"\x05Field\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12:\n" +
	"\x04type\x18\x03 \x01(\x0e2&.yandex.cloud.speechsense.v1.FieldTypeR\x04type\"\xb8\x01\n" +
	"\x17AlgorithmProcessingInfo\x12D\n" +
	"\talgorithm\x18\x01 \x01(\x0e2&.yandex.cloud.speechsense.v1.AlgorithmR\talgorithm\x12W\n" +
	"\x10processing_state\x18\x02 \x01(\x0e2,.yandex.cloud.speechsense.v1.ProcessingStateR\x0fprocessingState*\xaf\x01\n" +
	"\tFieldType\x12\x1a\n" +
	"\x16FIELD_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11FIELD_TYPE_STRING\x10\x01\x12\x15\n" +
	"\x11FIELD_TYPE_NUMBER\x10\x02\x12\x16\n" +
	"\x12FIELD_TYPE_DECIMAL\x10\x03\x12\x16\n" +
	"\x12FIELD_TYPE_BOOLEAN\x10\x04\x12\x13\n" +
	"\x0fFIELD_TYPE_DATE\x10\x05\x12\x13\n" +
	"\x0fFIELD_TYPE_JSON\x10\x06*\xb1\x01\n" +
	"\x0fProcessingState\x12 \n" +
	"\x1cPROCESSING_STATE_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cPROCESSING_STATE_NOT_STARTED\x10\x01\x12\x1f\n" +
	"\x1bPROCESSING_STATE_PROCESSING\x10\x02\x12\x1c\n" +
	"\x18PROCESSING_STATE_SUCCESS\x10\x03\x12\x1b\n" +
	"\x17PROCESSING_STATE_FAILED\x10\x04*\xbd\x01\n" +
	"\tAlgorithm\x12\x19\n" +
	"\x15ALGORITHM_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13ALGORITHM_SPEECHKIT\x10\x01\x12\x12\n" +
	"\x0eALGORITHM_YGPT\x10\x02\x12\x18\n" +
	"\x14ALGORITHM_CLASSIFIER\x10\x03\x12\x1b\n" +
	"\x17ALGORITHM_SUMMARIZATION\x10\x04\x12\x17\n" +
	"\x13ALGORITHM_EMBEDDING\x10\x05\x12\x18\n" +
	"\x14ALGORITHM_STATISTICS\x10\x06By\n" +
	"\x1fyandex.cloud.api.speechsense.v1B\tTalkProtoZKgithub.com/yandex-cloud/go-genproto/yandex/cloud/speechsense/v1;speechsenseb\x06proto3"

var (
	file_yandex_cloud_speechsense_v1_talk_proto_rawDescOnce sync.Once
	file_yandex_cloud_speechsense_v1_talk_proto_rawDescData []byte
)

func file_yandex_cloud_speechsense_v1_talk_proto_rawDescGZIP() []byte {
	file_yandex_cloud_speechsense_v1_talk_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_speechsense_v1_talk_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_speechsense_v1_talk_proto_rawDesc), len(file_yandex_cloud_speechsense_v1_talk_proto_rawDesc)))
	})
	return file_yandex_cloud_speechsense_v1_talk_proto_rawDescData
}

var file_yandex_cloud_speechsense_v1_talk_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_yandex_cloud_speechsense_v1_talk_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_yandex_cloud_speechsense_v1_talk_proto_goTypes = []any{
	(FieldType)(0),                          // 0: yandex.cloud.speechsense.v1.FieldType
	(ProcessingState)(0),                    // 1: yandex.cloud.speechsense.v1.ProcessingState
	(Algorithm)(0),                          // 2: yandex.cloud.speechsense.v1.Algorithm
	(*Talk)(nil),                            // 3: yandex.cloud.speechsense.v1.Talk
	(*TalkState)(nil),                       // 4: yandex.cloud.speechsense.v1.TalkState
	(*Field)(nil),                           // 5: yandex.cloud.speechsense.v1.Field
	(*AlgorithmProcessingInfo)(nil),         // 6: yandex.cloud.speechsense.v1.AlgorithmProcessingInfo
	(*timestamppb.Timestamp)(nil),           // 7: google.protobuf.Timestamp
	(*analysis.Transcription)(nil),          // 8: yandex.cloud.speechsense.v1.analysis.Transcription
	(*analysis.SpeechStatistics)(nil),       // 9: yandex.cloud.speechsense.v1.analysis.SpeechStatistics
	(*analysis.SilenceStatistics)(nil),      // 10: yandex.cloud.speechsense.v1.analysis.SilenceStatistics
	(*analysis.InterruptsStatistics)(nil),   // 11: yandex.cloud.speechsense.v1.analysis.InterruptsStatistics
	(*analysis.ConversationStatistics)(nil), // 12: yandex.cloud.speechsense.v1.analysis.ConversationStatistics
	(*analysis.Points)(nil),                 // 13: yandex.cloud.speechsense.v1.analysis.Points
	(*analysis.TextClassifiers)(nil),        // 14: yandex.cloud.speechsense.v1.analysis.TextClassifiers
	(*analysis.Summarization)(nil),          // 15: yandex.cloud.speechsense.v1.analysis.Summarization
}
var file_yandex_cloud_speechsense_v1_talk_proto_depIdxs = []int32{
	7,  // 0: yandex.cloud.speechsense.v1.Talk.created_at:type_name -> google.protobuf.Timestamp
	7,  // 1: yandex.cloud.speechsense.v1.Talk.modified_at:type_name -> google.protobuf.Timestamp
	5,  // 2: yandex.cloud.speechsense.v1.Talk.talk_fields:type_name -> yandex.cloud.speechsense.v1.Field
	8,  // 3: yandex.cloud.speechsense.v1.Talk.transcription:type_name -> yandex.cloud.speechsense.v1.analysis.Transcription
	9,  // 4: yandex.cloud.speechsense.v1.Talk.speech_statistics:type_name -> yandex.cloud.speechsense.v1.analysis.SpeechStatistics
	10, // 5: yandex.cloud.speechsense.v1.Talk.silence_statistics:type_name -> yandex.cloud.speechsense.v1.analysis.SilenceStatistics
	11, // 6: yandex.cloud.speechsense.v1.Talk.interrupts_statistics:type_name -> yandex.cloud.speechsense.v1.analysis.InterruptsStatistics
	12, // 7: yandex.cloud.speechsense.v1.Talk.conversation_statistics:type_name -> yandex.cloud.speechsense.v1.analysis.ConversationStatistics
	13, // 8: yandex.cloud.speechsense.v1.Talk.points:type_name -> yandex.cloud.speechsense.v1.analysis.Points
	14, // 9: yandex.cloud.speechsense.v1.Talk.text_classifiers:type_name -> yandex.cloud.speechsense.v1.analysis.TextClassifiers
	15, // 10: yandex.cloud.speechsense.v1.Talk.summarization:type_name -> yandex.cloud.speechsense.v1.analysis.Summarization
	4,  // 11: yandex.cloud.speechsense.v1.Talk.talk_state:type_name -> yandex.cloud.speechsense.v1.TalkState
	1,  // 12: yandex.cloud.speechsense.v1.TalkState.processing_state:type_name -> yandex.cloud.speechsense.v1.ProcessingState
	6,  // 13: yandex.cloud.speechsense.v1.TalkState.algorithm_processing_infos:type_name -> yandex.cloud.speechsense.v1.AlgorithmProcessingInfo
	0,  // 14: yandex.cloud.speechsense.v1.Field.type:type_name -> yandex.cloud.speechsense.v1.FieldType
	2,  // 15: yandex.cloud.speechsense.v1.AlgorithmProcessingInfo.algorithm:type_name -> yandex.cloud.speechsense.v1.Algorithm
	1,  // 16: yandex.cloud.speechsense.v1.AlgorithmProcessingInfo.processing_state:type_name -> yandex.cloud.speechsense.v1.ProcessingState
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_yandex_cloud_speechsense_v1_talk_proto_init() }
func file_yandex_cloud_speechsense_v1_talk_proto_init() {
	if File_yandex_cloud_speechsense_v1_talk_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_speechsense_v1_talk_proto_rawDesc), len(file_yandex_cloud_speechsense_v1_talk_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_speechsense_v1_talk_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_speechsense_v1_talk_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_speechsense_v1_talk_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_speechsense_v1_talk_proto_msgTypes,
	}.Build()
	File_yandex_cloud_speechsense_v1_talk_proto = out.File
	file_yandex_cloud_speechsense_v1_talk_proto_goTypes = nil
	file_yandex_cloud_speechsense_v1_talk_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/trino/v1/catalog.proto

package trino

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Connector configuration. Exactly one connector type must be specified.
type Connector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*Connector_Hive
	//	*Connector_Iceberg
	//	*Connector_DeltaLake
	//	*Connector_Postgresql
	//	*Connector_Clickhouse
	//	*Connector_Tpch
	//	*Connector_Tpcds
	//	*Connector_Oracle
	//	*Connector_Sqlserver
	Type          isConnector_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Connector) Reset() {
	*x = Connector{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Connector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connector) ProtoMessage() {}

func (x *Connector) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connector.ProtoReflect.Descriptor instead.
func (*Connector) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{0}
}

func (x *Connector) GetType() isConnector_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Connector) GetHive() *HiveConnector {
	if x != nil {
		if x, ok := x.Type.(*Connector_Hive); ok {
			return x.Hive
		}
	}
	return nil
}

func (x *Connector) GetIceberg() *IcebergConnector {
	if x != nil {
		if x, ok := x.Type.(*Connector_Iceberg); ok {
			return x.Iceberg
		}
	}
	return nil
}

func (x *Connector) GetDeltaLake() *DeltaLakeConnector {
	if x != nil {
		if x, ok := x.Type.(*Connector_DeltaLake); ok {
			return x.DeltaLake
		}
	}
	return nil
}

func (x *Connector) GetPostgresql() *PostgresqlConnector {
	if x != nil {
		if x, ok := x.Type.(*Connector_Postgresql); ok {
			return x.Postgresql
		}
	}
	return nil
}

func (x *Connector) GetClickhouse() *ClickhouseConnector {
	if x != nil {
		if x, ok := x.Type.(*Connector_Clickhouse); ok {
			return x.Clickhouse
		}
	}
	return nil
}

func (x *Connector) GetTpch() *TPCHConnector {
	if x != nil {
		if x, ok := x.Type.(*Connector_Tpch); ok {
			return x.Tpch
		}
	}
	return nil
}

func (x *Connector) GetTpcds() *TPCDSConnector {
	if x != nil {
		if x, ok := x.Type.(*Connector_Tpcds); ok {
			return x.Tpcds
		}
	}
	return nil
}

func (x *Connector) GetOracle() *OracleConnector {
	if x != nil {
		if x, ok := x.Type.(*Connector_Oracle); ok {
			return x.Oracle
		}
	}
	return nil
}

func (x *Connector) GetSqlserver() *SQLServerConnector {
	if x != nil {
		if x, ok := x.Type.(*Connector_Sqlserver); ok {
			return x.Sqlserver
		}
	}
	return nil
}

type isConnector_Type interface {
	isConnector_Type()
}

type Connector_Hive struct {
	// Hive connector configuration.
	Hive *HiveConnector `protobuf:"bytes,1,opt,name=hive,proto3,oneof"`
}

type Connector_Iceberg struct {
	// Iceberg connector configuration.
	Iceberg *IcebergConnector `protobuf:"bytes,2,opt,name=iceberg,proto3,oneof"`
}

type Connector_DeltaLake struct {
	// Delta Lake connector configuration.
	DeltaLake *DeltaLakeConnector `protobuf:"bytes,3,opt,name=delta_lake,json=deltaLake,proto3,oneof"`
}

type Connector_Postgresql struct {
	// PostgreSQL connector configuration.
	Postgresql *PostgresqlConnector `protobuf:"bytes,4,opt,name=postgresql,proto3,oneof"`
}

type Connector_Clickhouse struct {
	// ClickHouse connector configuration.
	Clickhouse *ClickhouseConnector `protobuf:"bytes,5,opt,name=clickhouse,proto3,oneof"`
}

type Connector_Tpch struct {
	// TPC-H connector for synthetic benchmarking.
	Tpch *TPCHConnector `protobuf:"bytes,6,opt,name=tpch,proto3,oneof"`
}

type Connector_Tpcds struct {
	// TPC-DS connector for synthetic benchmarking.
	Tpcds *TPCDSConnector `protobuf:"bytes,7,opt,name=tpcds,proto3,oneof"`
}

type Connector_Oracle struct {
	// Oracle connector configuration for connecting to Oracle Database instances.
	Oracle *OracleConnector `protobuf:"bytes,8,opt,name=oracle,proto3,oneof"`
}

type Connector_Sqlserver struct {
	// SQLServer connector configuration for connecting to SQLServer Database instances.
	Sqlserver *SQLServerConnector `protobuf:"bytes,9,opt,name=sqlserver,proto3,oneof"`
}

func (*Connector_Hive) isConnector_Type() {}

func (*Connector_Iceberg) isConnector_Type() {}

func (*Connector_DeltaLake) isConnector_Type() {}

func (*Connector_Postgresql) isConnector_Type() {}

func (*Connector_Clickhouse) isConnector_Type() {}

func (*Connector_Tpch) isConnector_Type() {}

func (*Connector_Tpcds) isConnector_Type() {}

func (*Connector_Oracle) isConnector_Type() {}

func (*Connector_Sqlserver) isConnector_Type() {}

// Catalog is a logical Trino catalog backed by a specific connector.
type Catalog struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the catalog.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the catalog.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Connector backing this catalog.
	Connector *Connector `protobuf:"bytes,3,opt,name=connector,proto3" json:"connector,omitempty"`
	// Description of the catalog.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Labels associated with the catalog.
	Labels        map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Catalog) Reset() {
	*x = Catalog{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Catalog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Catalog) ProtoMessage() {}

func (x *Catalog) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Catalog.ProtoReflect.Descriptor instead.
func (*Catalog) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{1}
}

func (x *Catalog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Catalog) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Catalog) GetConnector() *Connector {
	if x != nil {
		return x.Connector
	}
	return nil
}

func (x *Catalog) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Catalog) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// CatalogSpec defines the desired state of a new catalog.
type CatalogSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the catalog.
	// Must be unique within a Trino cluster.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Connector backing this catalog.
	Connector *Connector `protobuf:"bytes,2,opt,name=connector,proto3" json:"connector,omitempty"`
	// Description of the catalog.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Labels associated with the catalog.
	Labels        map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CatalogSpec) Reset() {
	*x = CatalogSpec{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CatalogSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogSpec) ProtoMessage() {}

func (x *CatalogSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogSpec.ProtoReflect.Descriptor instead.
func (*CatalogSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{2}
}

func (x *CatalogSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CatalogSpec) GetConnector() *Connector {
	if x != nil {
		return x.Connector
	}
	return nil
}

func (x *CatalogSpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CatalogSpec) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// CatalogUpdateSpec defines changes to an existing catalog.
// Fields are optional and only provided fields will be updated.
type CatalogUpdateSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// New name of the catalog.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Updated connector configuration.
	// If specified, replaces the existing connector.
	Connector *Connector `protobuf:"bytes,2,opt,name=connector,proto3" json:"connector,omitempty"`
	// Description of the catalog.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Labels associated with the catalog.
	Labels        map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CatalogUpdateSpec) Reset() {
	*x = CatalogUpdateSpec{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CatalogUpdateSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogUpdateSpec) ProtoMessage() {}

func (x *CatalogUpdateSpec) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogUpdateSpec.ProtoReflect.Descriptor instead.
func (*CatalogUpdateSpec) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{3}
}

func (x *CatalogUpdateSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CatalogUpdateSpec) GetConnector() *Connector {
	if x != nil {
		return x.Connector
	}
	return nil
}

func (x *CatalogUpdateSpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CatalogUpdateSpec) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// Metastore configuration.
type Metastore struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*Metastore_Hive
	Type          isMetastore_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metastore) Reset() {
	*x = Metastore{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metastore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metastore) ProtoMessage() {}

func (x *Metastore) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metastore.ProtoReflect.Descriptor instead.
func (*Metastore) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{4}
}

func (x *Metastore) GetType() isMetastore_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Metastore) GetHive() *Metastore_HiveMetastore {
	if x != nil {
		if x, ok := x.Type.(*Metastore_Hive); ok {
			return x.Hive
		}
	}
	return nil
}

type isMetastore_Type interface {
	isMetastore_Type()
}

type Metastore_Hive struct {
	Hive *Metastore_HiveMetastore `protobuf:"bytes,1,opt,name=hive,proto3,oneof"`
}

func (*Metastore_Hive) isMetastore_Type() {}

// Configuration of file system used by a connector.
type FileSystem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*FileSystem_S3
	//	*FileSystem_ExternalS3
	Type          isFileSystem_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileSystem) Reset() {
	*x = FileSystem{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSystem) ProtoMessage() {}

func (x *FileSystem) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSystem.ProtoReflect.Descriptor instead.
func (*FileSystem) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{5}
}

func (x *FileSystem) GetType() isFileSystem_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *FileSystem) GetS3() *FileSystem_S3FileSystem {
	if x != nil {
		if x, ok := x.Type.(*FileSystem_S3); ok {
			return x.S3
		}
	}
	return nil
}

func (x *FileSystem) GetExternalS3() *FileSystem_ExternalS3FileSystem {
	if x != nil {
		if x, ok := x.Type.(*FileSystem_ExternalS3); ok {
			return x.ExternalS3
		}
	}
	return nil
}

type isFileSystem_Type interface {
	isFileSystem_Type()
}

type FileSystem_S3 struct {
	S3 *FileSystem_S3FileSystem `protobuf:"bytes,1,opt,name=s3,proto3,oneof"`
}

type FileSystem_ExternalS3 struct {
	ExternalS3 *FileSystem_ExternalS3FileSystem `protobuf:"bytes,2,opt,name=external_s3,json=externalS3,proto3,oneof"`
}

func (*FileSystem_S3) isFileSystem_Type() {}

func (*FileSystem_ExternalS3) isFileSystem_Type() {}

type HiveConnector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Metastore configuration.
	Metastore *Metastore `protobuf:"bytes,1,opt,name=metastore,proto3" json:"metastore,omitempty"`
	// File system configuration.
	Filesystem *FileSystem `protobuf:"bytes,2,opt,name=filesystem,proto3" json:"filesystem,omitempty"`
	// Additional properties.
	AdditionalProperties map[string]string `protobuf:"bytes,3,rep,name=additional_properties,json=additionalProperties,proto3" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *HiveConnector) Reset() {
	*x = HiveConnector{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HiveConnector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiveConnector) ProtoMessage() {}

func (x *HiveConnector) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiveConnector.ProtoReflect.Descriptor instead.
func (*HiveConnector) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{6}
}

func (x *HiveConnector) GetMetastore() *Metastore {
	if x != nil {
		return x.Metastore
	}
	return nil
}

func (x *HiveConnector) GetFilesystem() *FileSystem {
	if x != nil {
		return x.Filesystem
	}
	return nil
}

func (x *HiveConnector) GetAdditionalProperties() map[string]string {
	if x != nil {
		return x.AdditionalProperties
	}
	return nil
}

type IcebergConnector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Metastore configuration.
	Metastore *Metastore `protobuf:"bytes,1,opt,name=metastore,proto3" json:"metastore,omitempty"`
	// File system configuration.
	Filesystem *FileSystem `protobuf:"bytes,2,opt,name=filesystem,proto3" json:"filesystem,omitempty"`
	// Additional properties.
	AdditionalProperties map[string]string `protobuf:"bytes,3,rep,name=additional_properties,json=additionalProperties,proto3" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *IcebergConnector) Reset() {
	*x = IcebergConnector{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IcebergConnector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcebergConnector) ProtoMessage() {}

func (x *IcebergConnector) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcebergConnector.ProtoReflect.Descriptor instead.
func (*IcebergConnector) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{7}
}

func (x *IcebergConnector) GetMetastore() *Metastore {
	if x != nil {
		return x.Metastore
	}
	return nil
}

func (x *IcebergConnector) GetFilesystem() *FileSystem {
	if x != nil {
		return x.Filesystem
	}
	return nil
}

func (x *IcebergConnector) GetAdditionalProperties() map[string]string {
	if x != nil {
		return x.AdditionalProperties
	}
	return nil
}

type DeltaLakeConnector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Metastore configuration.
	Metastore *Metastore `protobuf:"bytes,1,opt,name=metastore,proto3" json:"metastore,omitempty"`
	// File system configuration.
	Filesystem *FileSystem `protobuf:"bytes,2,opt,name=filesystem,proto3" json:"filesystem,omitempty"`
	// Additional properties.
	AdditionalProperties map[string]string `protobuf:"bytes,3,rep,name=additional_properties,json=additionalProperties,proto3" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DeltaLakeConnector) Reset() {
	*x = DeltaLakeConnector{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeltaLakeConnector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaLakeConnector) ProtoMessage() {}

func (x *DeltaLakeConnector) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaLakeConnector.ProtoReflect.Descriptor instead.
func (*DeltaLakeConnector) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{8}
}

func (x *DeltaLakeConnector) GetMetastore() *Metastore {
	if x != nil {
		return x.Metastore
	}
	return nil
}

func (x *DeltaLakeConnector) GetFilesystem() *FileSystem {
	if x != nil {
		return x.Filesystem
	}
	return nil
}

func (x *DeltaLakeConnector) GetAdditionalProperties() map[string]string {
	if x != nil {
		return x.AdditionalProperties
	}
	return nil
}

type PostgresqlConnection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*PostgresqlConnection_OnPremise_
	//	*PostgresqlConnection_ConnectionManager_
	Type          isPostgresqlConnection_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostgresqlConnection) Reset() {
	*x = PostgresqlConnection{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostgresqlConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgresqlConnection) ProtoMessage() {}

func (x *PostgresqlConnection) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostgresqlConnection.ProtoReflect.Descriptor instead.
func (*PostgresqlConnection) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{9}
}

func (x *PostgresqlConnection) GetType() isPostgresqlConnection_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *PostgresqlConnection) GetOnPremise() *PostgresqlConnection_OnPremise {
	if x != nil {
		if x, ok := x.Type.(*PostgresqlConnection_OnPremise_); ok {
			return x.OnPremise
		}
	}
	return nil
}

func (x *PostgresqlConnection) GetConnectionManager() *PostgresqlConnection_ConnectionManager {
	if x != nil {
		if x, ok := x.Type.(*PostgresqlConnection_ConnectionManager_); ok {
			return x.ConnectionManager
		}
	}
	return nil
}

type isPostgresqlConnection_Type interface {
	isPostgresqlConnection_Type()
}

type PostgresqlConnection_OnPremise_ struct {
	OnPremise *PostgresqlConnection_OnPremise `protobuf:"bytes,1,opt,name=on_premise,json=onPremise,proto3,oneof"`
}

type PostgresqlConnection_ConnectionManager_ struct {
	ConnectionManager *PostgresqlConnection_ConnectionManager `protobuf:"bytes,2,opt,name=connection_manager,json=connectionManager,proto3,oneof"`
}

func (*PostgresqlConnection_OnPremise_) isPostgresqlConnection_Type() {}

func (*PostgresqlConnection_ConnectionManager_) isPostgresqlConnection_Type() {}

type PostgresqlConnector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Connection configuration.
	Connection *PostgresqlConnection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	// Additional properties.
	AdditionalProperties map[string]string `protobuf:"bytes,2,rep,name=additional_properties,json=additionalProperties,proto3" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PostgresqlConnector) Reset() {
	*x = PostgresqlConnector{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostgresqlConnector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgresqlConnector) ProtoMessage() {}

func (x *PostgresqlConnector) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostgresqlConnector.ProtoReflect.Descriptor instead.
func (*PostgresqlConnector) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{10}
}

func (x *PostgresqlConnector) GetConnection() *PostgresqlConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *PostgresqlConnector) GetAdditionalProperties() map[string]string {
	if x != nil {
		return x.AdditionalProperties
	}
	return nil
}

type ClickhouseConnection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*ClickhouseConnection_OnPremise_
	//	*ClickhouseConnection_ConnectionManager_
	Type          isClickhouseConnection_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickhouseConnection) Reset() {
	*x = ClickhouseConnection{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickhouseConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickhouseConnection) ProtoMessage() {}

func (x *ClickhouseConnection) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickhouseConnection.ProtoReflect.Descriptor instead.
func (*ClickhouseConnection) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{11}
}

func (x *ClickhouseConnection) GetType() isClickhouseConnection_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ClickhouseConnection) GetOnPremise() *ClickhouseConnection_OnPremise {
	if x != nil {
		if x, ok := x.Type.(*ClickhouseConnection_OnPremise_); ok {
			return x.OnPremise
		}
	}
	return nil
}

func (x *ClickhouseConnection) GetConnectionManager() *ClickhouseConnection_ConnectionManager {
	if x != nil {
		if x, ok := x.Type.(*ClickhouseConnection_ConnectionManager_); ok {
			return x.ConnectionManager
		}
	}
	return nil
}

type isClickhouseConnection_Type interface {
	isClickhouseConnection_Type()
}

type ClickhouseConnection_OnPremise_ struct {
	OnPremise *ClickhouseConnection_OnPremise `protobuf:"bytes,1,opt,name=on_premise,json=onPremise,proto3,oneof"`
}

type ClickhouseConnection_ConnectionManager_ struct {
	ConnectionManager *ClickhouseConnection_ConnectionManager `protobuf:"bytes,2,opt,name=connection_manager,json=connectionManager,proto3,oneof"`
}

func (*ClickhouseConnection_OnPremise_) isClickhouseConnection_Type() {}

func (*ClickhouseConnection_ConnectionManager_) isClickhouseConnection_Type() {}

type ClickhouseConnector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Connection configuration.
	Connection *ClickhouseConnection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	// Additional properties.
	AdditionalProperties map[string]string `protobuf:"bytes,2,rep,name=additional_properties,json=additionalProperties,proto3" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ClickhouseConnector) Reset() {
	*x = ClickhouseConnector{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickhouseConnector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickhouseConnector) ProtoMessage() {}

func (x *ClickhouseConnector) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickhouseConnector.ProtoReflect.Descriptor instead.
func (*ClickhouseConnector) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{12}
}

func (x *ClickhouseConnector) GetConnection() *ClickhouseConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *ClickhouseConnector) GetAdditionalProperties() map[string]string {
	if x != nil {
		return x.AdditionalProperties
	}
	return nil
}

type TPCHConnector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Additional properties.
	AdditionalProperties map[string]string `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties,proto3" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TPCHConnector) Reset() {
	*x = TPCHConnector{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TPCHConnector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPCHConnector) ProtoMessage() {}

func (x *TPCHConnector) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPCHConnector.ProtoReflect.Descriptor instead.
func (*TPCHConnector) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{13}
}

func (x *TPCHConnector) GetAdditionalProperties() map[string]string {
	if x != nil {
		return x.AdditionalProperties
	}
	return nil
}

type TPCDSConnector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Additional properties.
	AdditionalProperties map[string]string `protobuf:"bytes,1,rep,name=additional_properties,json=additionalProperties,proto3" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TPCDSConnector) Reset() {
	*x = TPCDSConnector{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TPCDSConnector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPCDSConnector) ProtoMessage() {}

func (x *TPCDSConnector) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPCDSConnector.ProtoReflect.Descriptor instead.
func (*TPCDSConnector) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{14}
}

func (x *TPCDSConnector) GetAdditionalProperties() map[string]string {
	if x != nil {
		return x.AdditionalProperties
	}
	return nil
}

type OracleConnection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*OracleConnection_OnPremise_
	Type          isOracleConnection_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OracleConnection) Reset() {
	*x = OracleConnection{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OracleConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OracleConnection) ProtoMessage() {}

func (x *OracleConnection) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OracleConnection.ProtoReflect.Descriptor instead.
func (*OracleConnection) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{15}
}

func (x *OracleConnection) GetType() isOracleConnection_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *OracleConnection) GetOnPremise() *OracleConnection_OnPremise {
	if x != nil {
		if x, ok := x.Type.(*OracleConnection_OnPremise_); ok {
			return x.OnPremise
		}
	}
	return nil
}

type isOracleConnection_Type interface {
	isOracleConnection_Type()
}

type OracleConnection_OnPremise_ struct {
	OnPremise *OracleConnection_OnPremise `protobuf:"bytes,1,opt,name=on_premise,json=onPremise,proto3,oneof"`
}

func (*OracleConnection_OnPremise_) isOracleConnection_Type() {}

type OracleConnector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Connection configuration.
	Connection *OracleConnection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	// Additional properties.
	AdditionalProperties map[string]string `protobuf:"bytes,2,rep,name=additional_properties,json=additionalProperties,proto3" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *OracleConnector) Reset() {
	*x = OracleConnector{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OracleConnector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OracleConnector) ProtoMessage() {}

func (x *OracleConnector) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OracleConnector.ProtoReflect.Descriptor instead.
func (*OracleConnector) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{16}
}

func (x *OracleConnector) GetConnection() *OracleConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *OracleConnector) GetAdditionalProperties() map[string]string {
	if x != nil {
		return x.AdditionalProperties
	}
	return nil
}

type SQLServerConnection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*SQLServerConnection_OnPremise_
	Type          isSQLServerConnection_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SQLServerConnection) Reset() {
	*x = SQLServerConnection{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SQLServerConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLServerConnection) ProtoMessage() {}

func (x *SQLServerConnection) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLServerConnection.ProtoReflect.Descriptor instead.
func (*SQLServerConnection) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{17}
}

func (x *SQLServerConnection) GetType() isSQLServerConnection_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *SQLServerConnection) GetOnPremise() *SQLServerConnection_OnPremise {
	if x != nil {
		if x, ok := x.Type.(*SQLServerConnection_OnPremise_); ok {
			return x.OnPremise
		}
	}
	return nil
}

type isSQLServerConnection_Type interface {
	isSQLServerConnection_Type()
}

type SQLServerConnection_OnPremise_ struct {
	OnPremise *SQLServerConnection_OnPremise `protobuf:"bytes,1,opt,name=on_premise,json=onPremise,proto3,oneof"`
}

func (*SQLServerConnection_OnPremise_) isSQLServerConnection_Type() {}

type SQLServerConnector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Connection configuration.
	Connection *SQLServerConnection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	// Additional properties.
	AdditionalProperties map[string]string `protobuf:"bytes,2,rep,name=additional_properties,json=additionalProperties,proto3" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SQLServerConnector) Reset() {
	*x = SQLServerConnector{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SQLServerConnector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLServerConnector) ProtoMessage() {}

func (x *SQLServerConnector) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLServerConnector.ProtoReflect.Descriptor instead.
func (*SQLServerConnector) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{18}
}

func (x *SQLServerConnector) GetConnection() *SQLServerConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *SQLServerConnector) GetAdditionalProperties() map[string]string {
	if x != nil {
		return x.AdditionalProperties
	}
	return nil
}

// Configuration of Hive's metastore type.
type Metastore_HiveMetastore struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Connection:
	//
	//	*Metastore_HiveMetastore_Uri
	Connection    isMetastore_HiveMetastore_Connection `protobuf_oneof:"connection"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metastore_HiveMetastore) Reset() {
	*x = Metastore_HiveMetastore{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metastore_HiveMetastore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metastore_HiveMetastore) ProtoMessage() {}

func (x *Metastore_HiveMetastore) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metastore_HiveMetastore.ProtoReflect.Descriptor instead.
func (*Metastore_HiveMetastore) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Metastore_HiveMetastore) GetConnection() isMetastore_HiveMetastore_Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *Metastore_HiveMetastore) GetUri() string {
	if x != nil {
		if x, ok := x.Connection.(*Metastore_HiveMetastore_Uri); ok {
			return x.Uri
		}
	}
	return ""
}

type isMetastore_HiveMetastore_Connection interface {
	isMetastore_HiveMetastore_Connection()
}

type Metastore_HiveMetastore_Uri struct {
	// URI or cluster ID of the Hive Metastore.
	Uri string `protobuf:"bytes,1,opt,name=uri,proto3,oneof"`
}

func (*Metastore_HiveMetastore_Uri) isMetastore_HiveMetastore_Connection() {}

// Describes YandexCloud native S3 file system.
// Currently does not require configuration.
type FileSystem_S3FileSystem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileSystem_S3FileSystem) Reset() {
	*x = FileSystem_S3FileSystem{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileSystem_S3FileSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSystem_S3FileSystem) ProtoMessage() {}

func (x *FileSystem_S3FileSystem) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSystem_S3FileSystem.ProtoReflect.Descriptor instead.
func (*FileSystem_S3FileSystem) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{5, 0}
}

// Describes External S3 compatible file system.
type FileSystem_ExternalS3FileSystem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AwsAccessKey  string                 `protobuf:"bytes,1,opt,name=aws_access_key,json=awsAccessKey,proto3" json:"aws_access_key,omitempty"`
	AwsSecretKey  string                 `protobuf:"bytes,2,opt,name=aws_secret_key,json=awsSecretKey,proto3" json:"aws_secret_key,omitempty"`
	AwsEndpoint   string                 `protobuf:"bytes,3,opt,name=aws_endpoint,json=awsEndpoint,proto3" json:"aws_endpoint,omitempty"`
	AwsRegion     string                 `protobuf:"bytes,4,opt,name=aws_region,json=awsRegion,proto3" json:"aws_region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileSystem_ExternalS3FileSystem) Reset() {
	*x = FileSystem_ExternalS3FileSystem{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileSystem_ExternalS3FileSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSystem_ExternalS3FileSystem) ProtoMessage() {}

func (x *FileSystem_ExternalS3FileSystem) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSystem_ExternalS3FileSystem.ProtoReflect.Descriptor instead.
func (*FileSystem_ExternalS3FileSystem) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{5, 1}
}

func (x *FileSystem_ExternalS3FileSystem) GetAwsAccessKey() string {
	if x != nil {
		return x.AwsAccessKey
	}
	return ""
}

func (x *FileSystem_ExternalS3FileSystem) GetAwsSecretKey() string {
	if x != nil {
		return x.AwsSecretKey
	}
	return ""
}

func (x *FileSystem_ExternalS3FileSystem) GetAwsEndpoint() string {
	if x != nil {
		return x.AwsEndpoint
	}
	return ""
}

func (x *FileSystem_ExternalS3FileSystem) GetAwsRegion() string {
	if x != nil {
		return x.AwsRegion
	}
	return ""
}

type PostgresqlConnection_OnPremise struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Connection to the Postgresql.
	ConnectionUrl string `protobuf:"bytes,1,opt,name=connection_url,json=connectionUrl,proto3" json:"connection_url,omitempty"`
	// Name of the Postgresql user.
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// Password of the Postgresql user.
	Password      string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostgresqlConnection_OnPremise) Reset() {
	*x = PostgresqlConnection_OnPremise{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostgresqlConnection_OnPremise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgresqlConnection_OnPremise) ProtoMessage() {}

func (x *PostgresqlConnection_OnPremise) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostgresqlConnection_OnPremise.ProtoReflect.Descriptor instead.
func (*PostgresqlConnection_OnPremise) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{9, 0}
}

func (x *PostgresqlConnection_OnPremise) GetConnectionUrl() string {
	if x != nil {
		return x.ConnectionUrl
	}
	return ""
}

func (x *PostgresqlConnection_OnPremise) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *PostgresqlConnection_OnPremise) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type PostgresqlConnection_ConnectionManager struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Connection ID.
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	// Database.
	Database string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	// Additional connection properties.
	ConnectionProperties map[string]string `protobuf:"bytes,3,rep,name=connection_properties,json=connectionProperties,proto3" json:"connection_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PostgresqlConnection_ConnectionManager) Reset() {
	*x = PostgresqlConnection_ConnectionManager{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostgresqlConnection_ConnectionManager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgresqlConnection_ConnectionManager) ProtoMessage() {}

func (x *PostgresqlConnection_ConnectionManager) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostgresqlConnection_ConnectionManager.ProtoReflect.Descriptor instead.
func (*PostgresqlConnection_ConnectionManager) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{9, 1}
}

func (x *PostgresqlConnection_ConnectionManager) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *PostgresqlConnection_ConnectionManager) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *PostgresqlConnection_ConnectionManager) GetConnectionProperties() map[string]string {
	if x != nil {
		return x.ConnectionProperties
	}
	return nil
}

type ClickhouseConnection_OnPremise struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Connection to the Clickhouse.
	ConnectionUrl string `protobuf:"bytes,1,opt,name=connection_url,json=connectionUrl,proto3" json:"connection_url,omitempty"`
	// Name of the Clickhouse user.
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// Password of the Clickhouse user.
	Password      string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickhouseConnection_OnPremise) Reset() {
	*x = ClickhouseConnection_OnPremise{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickhouseConnection_OnPremise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickhouseConnection_OnPremise) ProtoMessage() {}

func (x *ClickhouseConnection_OnPremise) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickhouseConnection_OnPremise.ProtoReflect.Descriptor instead.
func (*ClickhouseConnection_OnPremise) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ClickhouseConnection_OnPremise) GetConnectionUrl() string {
	if x != nil {
		return x.ConnectionUrl
	}
	return ""
}

func (x *ClickhouseConnection_OnPremise) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ClickhouseConnection_OnPremise) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ClickhouseConnection_ConnectionManager struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Connection ID.
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	// Database.
	Database string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	// Additional connection properties.
	ConnectionProperties map[string]string `protobuf:"bytes,3,rep,name=connection_properties,json=connectionProperties,proto3" json:"connection_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ClickhouseConnection_ConnectionManager) Reset() {
	*x = ClickhouseConnection_ConnectionManager{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickhouseConnection_ConnectionManager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickhouseConnection_ConnectionManager) ProtoMessage() {}

func (x *ClickhouseConnection_ConnectionManager) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickhouseConnection_ConnectionManager.ProtoReflect.Descriptor instead.
func (*ClickhouseConnection_ConnectionManager) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{11, 1}
}

func (x *ClickhouseConnection_ConnectionManager) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ClickhouseConnection_ConnectionManager) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ClickhouseConnection_ConnectionManager) GetConnectionProperties() map[string]string {
	if x != nil {
		return x.ConnectionProperties
	}
	return nil
}

type OracleConnection_OnPremise struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Connection to the Oracle.
	ConnectionUrl string `protobuf:"bytes,1,opt,name=connection_url,json=connectionUrl,proto3" json:"connection_url,omitempty"`
	// Name of the Oracle user.
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// Password of the Oracle user.
	Password      string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OracleConnection_OnPremise) Reset() {
	*x = OracleConnection_OnPremise{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OracleConnection_OnPremise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OracleConnection_OnPremise) ProtoMessage() {}

func (x *OracleConnection_OnPremise) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OracleConnection_OnPremise.ProtoReflect.Descriptor instead.
func (*OracleConnection_OnPremise) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{15, 0}
}

func (x *OracleConnection_OnPremise) GetConnectionUrl() string {
	if x != nil {
		return x.ConnectionUrl
	}
	return ""
}

func (x *OracleConnection_OnPremise) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *OracleConnection_OnPremise) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SQLServerConnection_OnPremise struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Connection to the SQLServer.
	ConnectionUrl string `protobuf:"bytes,1,opt,name=connection_url,json=connectionUrl,proto3" json:"connection_url,omitempty"`
	// Name of the SQLServer user.
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// Password of the SQLServer user.
	Password      string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SQLServerConnection_OnPremise) Reset() {
	*x = SQLServerConnection_OnPremise{}
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SQLServerConnection_OnPremise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLServerConnection_OnPremise) ProtoMessage() {}

func (x *SQLServerConnection_OnPremise) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_trino_v1_catalog_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLServerConnection_OnPremise.ProtoReflect.Descriptor instead.
func (*SQLServerConnection_OnPremise) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP(), []int{17, 0}
}

func (x *SQLServerConnection_OnPremise) GetConnectionUrl() string {
	if x != nil {
		return x.ConnectionUrl
	}
	return ""
}

func (x *SQLServerConnection_OnPremise) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SQLServerConnection_OnPremise) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

var File_yandex_cloud_trino_v1_catalog_proto protoreflect.FileDescriptor

const file_yandex_cloud_trino_v1_catalog_proto_rawDesc = "" +
	"\n" +
	"#yandex/cloud/trino/v1/catalog.proto\x12\x15yandex.cloud.trino.v1\x1a\x1dyandex/cloud/validation.proto\"\x8a\x05\n" +
	"\tConnector\x12:\n" +
	"\x04hive\x18\x01 \x01(\v2$.yandex.cloud.trino.v1.HiveConnectorH\x00R\x04hive\x12C\n" +
	"\aiceberg\x18\x02 \x01(\v2'.yandex.cloud.trino.v1.IcebergConnectorH\x00R\aiceberg\x12J\n" +
	"\n" +
	"delta_lake\x18\x03 \x01(\v2).yandex.cloud.trino.v1.DeltaLakeConnectorH\x00R\tdeltaLake\x12L\n" +
	"\n" +
	"postgresql\x18\x04 \x01(\v2*.yandex.cloud.trino.v1.PostgresqlConnectorH\x00R\n" +
	"postgresql\x12L\n" +
	"\n" +
	"clickhouse\x18\x05 \x01(\v2*.yandex.cloud.trino.v1.ClickhouseConnectorH\x00R\n" +
	"clickhouse\x12:\n" +
	"\x04tpch\x18\x06 \x01(\v2$.yandex.cloud.trino.v1.TPCHConnectorH\x00R\x04tpch\x12=\n" +
	"\x05tpcds\x18\a \x01(\v2%.yandex.cloud.trino.v1.TPCDSConnectorH\x00R\x05tpcds\x12@\n" +
	"\x06oracle\x18\b \x01(\v2&.yandex.cloud.trino.v1.OracleConnectorH\x00R\x06oracle\x12I\n" +
	"\tsqlserver\x18\t \x01(\v2).yandex.cloud.trino.v1.SQLServerConnectorH\x00R\tsqlserverB\f\n" +
	"\x04type\x12\x04\xc0\xc11\x01\"\x8e\x02\n" +
	"\aCatalog\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12>\n" +
	"\tconnector\x18\x03 \x01(\v2 .yandex.cloud.trino.v1.ConnectorR\tconnector\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12B\n" +
	"\x06labels\x18\x05 \x03(\v2*.yandex.cloud.trino.v1.Catalog.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf5\x02\n" +
	"\vCatalogSpec\x122\n" +
	"\x04name\x18\x01 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\x04name\x12D\n" +
	"\tconnector\x18\x02 \x01(\v2 .yandex.cloud.trino.v1.ConnectorB\x04\xe8\xc71\x01R\tconnector\x12+\n" +
	"\vdescription\x18\x03 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x83\x01\n" +
	"\x06labels\x18\x04 \x03(\v2..yandex.cloud.trino.v1.CatalogSpec.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x041-63R\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf7\x02\n" +
	"\x11CatalogUpdateSpec\x12.\n" +
	"\x04name\x18\x01 \x01(\tB\x1a\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\x04name\x12>\n" +
	"\tconnector\x18\x02 \x01(\v2 .yandex.cloud.trino.v1.ConnectorR\tconnector\x12+\n" +
	"\vdescription\x18\x03 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x89\x01\n" +
	"\x06labels\x18\x04 \x03(\v24.yandex.cloud.trino.v1.CatalogUpdateSpec.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x041-63R\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x98\x01\n" +
	"\tMetastore\x12D\n" +
	"\x04hive\x18\x01 \x01(\v2..yandex.cloud.trino.v1.Metastore.HiveMetastoreH\x00R\x04hive\x1a7\n" +
	"\rHiveMetastore\x12\x12\n" +
	"\x03uri\x18\x01 \x01(\tH\x00R\x03uriB\x12\n" +
	"\n" +
	"connection\x12\x04\xc0\xc11\x01B\f\n" +
	"\x04type\x12\x04\xc0\xc11\x01\"\x86\x03\n" +
	"\n" +
	"FileSystem\x12@\n" +
	"\x02s3\x18\x01 \x01(\v2..yandex.cloud.trino.v1.FileSystem.S3FileSystemH\x00R\x02s3\x12Y\n" +
	"\vexternal_s3\x18\x02 \x01(\v26.yandex.cloud.trino.v1.FileSystem.ExternalS3FileSystemH\x00R\n" +
	"externalS3\x1a\x0e\n" +
	"\fS3FileSystem\x1a\xbc\x01\n" +
	"\x14ExternalS3FileSystem\x12*\n" +
	"\x0eaws_access_key\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\fawsAccessKey\x12*\n" +
	"\x0eaws_secret_key\x18\x02 \x01(\tB\x04\xe8\xc71\x01R\fawsSecretKey\x12'\n" +
	"\faws_endpoint\x18\x03 \x01(\tB\x04\xe8\xc71\x01R\vawsEndpoint\x12#\n" +
	"\n" +
	"aws_region\x18\x04 \x01(\tB\x04\xe8\xc71\x01R\tawsRegionB\f\n" +
	"\x04type\x12\x04\xc0\xc11\x01\"\xa8\x03\n" +
	"\rHiveConnector\x12D\n" +
	"\tmetastore\x18\x01 \x01(\v2 .yandex.cloud.trino.v1.MetastoreB\x04\xe8\xc71\x01R\tmetastore\x12G\n" +
	"\n" +
	"filesystem\x18\x02 \x01(\v2!.yandex.cloud.trino.v1.FileSystemB\x04\xe8\xc71\x01R\n" +
	"filesystem\x12\xbe\x01\n" +
	"\x15additional_properties\x18\x03 \x03(\v2>.yandex.cloud.trino.v1.HiveConnector.AdditionalPropertiesEntryBI\xf2\xc71\x15[-_0-9a-zA-Z.,:\\/_ ]*\x82\xc81\x05<=256\x8a\xc81\x05<=128\xb2\xc81\x1a\x12\x11[a-z][-_0-9a-z.]*\x1a\x051-128R\x14additionalProperties\x1aG\n" +
	"\x19AdditionalPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xae\x03\n" +
	"\x10IcebergConnector\x12D\n" +
	"\tmetastore\x18\x01 \x01(\v2 .yandex.cloud.trino.v1.MetastoreB\x04\xe8\xc71\x01R\tmetastore\x12G\n" +
	"\n" +
	"filesystem\x18\x02 \x01(\v2!.yandex.cloud.trino.v1.FileSystemB\x04\xe8\xc71\x01R\n" +
	"filesystem\x12\xc1\x01\n" +
	"\x15additional_properties\x18\x03 \x03(\v2A.yandex.cloud.trino.v1.IcebergConnector.AdditionalPropertiesEntryBI\xf2\xc71\x15[-_0-9a-zA-Z.,:\\/_ ]*\x82\xc81\x05<=256\x8a\xc81\x05<=128\xb2\xc81\x1a\x12\x11[a-z][-_0-9a-z.]*\x1a\x051-128R\x14additionalProperties\x1aG\n" +
	"\x19AdditionalPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb2\x03\n" +
	"\x12DeltaLakeConnector\x12D\n" +
	"\tmetastore\x18\x01 \x01(\v2 .yandex.cloud.trino.v1.MetastoreB\x04\xe8\xc71\x01R\tmetastore\x12G\n" +
	"\n" +
	"filesystem\x18\x02 \x01(\v2!.yandex.cloud.trino.v1.FileSystemB\x04\xe8\xc71\x01R\n" +
	"filesystem\x12\xc3\x01\n" +
	"\x15additional_properties\x18\x03 \x03(\v2C.yandex.cloud.trino.v1.DeltaLakeConnector.AdditionalPropertiesEntryBI\xf2\xc71\x15[-_0-9a-zA-Z.,:\\/_ ]*\x82\xc81\x05<=256\x8a\xc81\x05<=128\xb2\xc81\x1a\x12\x11[a-z][-_0-9a-z.]*\x1a\x051-128R\x14additionalProperties\x1aG\n" +
	"\x19AdditionalPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd6\x06\n" +
	"\x14PostgresqlConnection\x12V\n" +
	"\n" +
	"on_premise\x18\x01 \x01(\v25.yandex.cloud.trino.v1.PostgresqlConnection.OnPremiseH\x00R\tonPremise\x12n\n" +
	"\x12connection_manager\x18\x02 \x01(\v2=.yandex.cloud.trino.v1.PostgresqlConnection.ConnectionManagerH\x00R\x11connectionManager\x1a\xc8\x01\n" +
	"\tOnPremise\x12S\n" +
	"\x0econnection_url\x18\x01 \x01(\tB,\xe8\xc71\x01\xf2\xc71$^jdbc:[a-z0-9]+://(?:.+:\\d+)/(?:.*)$R\rconnectionUrl\x12;\n" +
	"\tuser_name\x18\x02 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\buserName\x12)\n" +
	"\bpassword\x18\x03 \x01(\tB\r\xe8\xc71\x01\x8a\xc81\x050-128R\bpassword\x1a\x9c\x03\n" +
	"\x11ConnectionManager\x121\n" +
	"\rconnection_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x041-50R\fconnectionId\x12:\n" +
	"\bdatabase\x18\x02 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\bdatabase\x12\xce\x01\n" +
	"\x15connection_properties\x18\x03 \x03(\v2W.yandex.cloud.trino.v1.PostgresqlConnection.ConnectionManager.ConnectionPropertiesEntryB@\xf2\xc71\x14[-_0-9a-zA-Z.,:\\/_]*\x82\xc81\x05<=256\x8a\xc81\x05<=128\xb2\xc81\x12\x12\t[a-zA-Z]*\x1a\x051-128R\x14connectionProperties\x1aG\n" +
	"\x19ConnectionPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\f\n" +
	"\x04type\x12\x04\xc0\xc11\x01\"\xf2\x02\n" +
	"\x13PostgresqlConnector\x12K\n" +
	"\n" +
	"connection\x18\x01 \x01(\v2+.yandex.cloud.trino.v1.PostgresqlConnectionR\n" +
	"connection\x12\xc4\x01\n" +
	"\x15additional_properties\x18\x02 \x03(\v2D.yandex.cloud.trino.v1.PostgresqlConnector.AdditionalPropertiesEntryBI\xf2\xc71\x15[-_0-9a-zA-Z.,:\\/_ ]*\x82\xc81\x05<=256\x8a\xc81\x05<=128\xb2\xc81\x1a\x12\x11[a-z][-_0-9a-z.]*\x1a\x051-128R\x14additionalProperties\x1aG\n" +
	"\x19AdditionalPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd7\x06\n" +
	"\x14ClickhouseConnection\x12V\n" +
	"\n" +
	"on_premise\x18\x01 \x01(\v25.yandex.cloud.trino.v1.ClickhouseConnection.OnPremiseH\x00R\tonPremise\x12n\n" +
	"\x12connection_manager\x18\x02 \x01(\v2=.yandex.cloud.trino.v1.ClickhouseConnection.ConnectionManagerH\x00R\x11connectionManager\x1a\xc8\x01\n" +
	"\tOnPremise\x12S\n" +
	"\x0econnection_url\x18\x01 \x01(\tB,\xe8\xc71\x01\xf2\xc71$^jdbc:[a-z0-9]+://(?:.+:\\d+)/(?:.*)$R\rconnectionUrl\x12;\n" +
	"\tuser_name\x18\x02 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\buserName\x12)\n" +
	"\bpassword\x18\x03 \x01(\tB\r\xe8\xc71\x01\x8a\xc81\x050-128R\bpassword\x1a\x9d\x03\n" +
	"\x11ConnectionManager\x121\n" +
	"\rconnection_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x041-50R\fconnectionId\x12:\n" +
	"\bdatabase\x18\x02 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\bdatabase\x12\xcf\x01\n" +
	"\x15connection_properties\x18\x03 \x03(\v2W.yandex.cloud.trino.v1.ClickhouseConnection.ConnectionManager.ConnectionPropertiesEntryBA\xf2\xc71\x14[-_0-9a-zA-Z.,:\\/_]*\x82\xc81\x05<=256\x8a\xc81\x05<=128\xb2\xc81\x13\x12\n" +
	"[a-zA-Z_]*\x1a\x051-128R\x14connectionProperties\x1aG\n" +
	"\x19ConnectionPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\f\n" +
	"\x04type\x12\x04\xc0\xc11\x01\"\xf2\x02\n" +
	"\x13ClickhouseConnector\x12K\n" +
	"\n" +
	"connection\x18\x01 \x01(\v2+.yandex.cloud.trino.v1.ClickhouseConnectionR\n" +
	"connection\x12\xc4\x01\n" +
	"\x15additional_properties\x18\x02 \x03(\v2D.yandex.cloud.trino.v1.ClickhouseConnector.AdditionalPropertiesEntryBI\xf2\xc71\x15[-_0-9a-zA-Z.,:\\/_ ]*\x82\xc81\x05<=256\x8a\xc81\x05<=128\xb2\xc81\x1a\x12\x11[a-z][-_0-9a-z.]*\x1a\x051-128R\x14additionalProperties\x1aG\n" +
	"\x19AdditionalPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x99\x02\n" +
	"\rTPCHConnector\x12\xbe\x01\n" +
	"\x15additional_properties\x18\x01 \x03(\v2>.yandex.cloud.trino.v1.TPCHConnector.AdditionalPropertiesEntryBI\xf2\xc71\x15[-_0-9a-zA-Z.,:\\/_ ]*\x82\xc81\x05<=256\x8a\xc81\x05<=128\xb2\xc81\x1a\x12\x11[a-z][-_0-9a-z.]*\x1a\x051-128R\x14additionalProperties\x1aG\n" +
	"\x19AdditionalPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9b\x02\n" +
	"\x0eTPCDSConnector\x12\xbf\x01\n" +
	"\x15additional_properties\x18\x01 \x03(\v2?.yandex.cloud.trino.v1.TPCDSConnector.AdditionalPropertiesEntryBI\xf2\xc71\x15[-_0-9a-zA-Z.,:\\/_ ]*\x82\xc81\x05<=256\x8a\xc81\x05<=128\xb2\xc81\x1a\x12\x11[a-z][-_0-9a-z.]*\x1a\x051-128R\x14additionalProperties\x1aG\n" +
	"\x19AdditionalPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb3\x02\n" +
	"\x10OracleConnection\x12R\n" +
	"\n" +
	"on_premise\x18\x01 \x01(\v21.yandex.cloud.trino.v1.OracleConnection.OnPremiseH\x00R\tonPremise\x1a\xbc\x01\n" +
	"\tOnPremise\x12G\n" +
	"\x0econnection_url\x18\x01 \x01(\tB \xe8\xc71\x01\xf2\xc71\x18^jdbc:[a-z0-9]+:(?s:.*)$R\rconnectionUrl\x12;\n" +
	"\tuser_name\x18\x02 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\buserName\x12)\n" +
	"\bpassword\x18\x03 \x01(\tB\r\xe8\xc71\x01\x8a\xc81\x050-128R\bpasswordB\f\n" +
	"\x04type\x12\x04\xc0\xc11\x01\"\xe6\x02\n" +
	"\x0fOracleConnector\x12G\n" +
	"\n" +
	"connection\x18\x01 \x01(\v2'.yandex.cloud.trino.v1.OracleConnectionR\n" +
	"connection\x12\xc0\x01\n" +
	"\x15additional_properties\x18\x02 \x03(\v2@.yandex.cloud.trino.v1.OracleConnector.AdditionalPropertiesEntryBI\xf2\xc71\x15[-_0-9a-zA-Z.,:\\/_ ]*\x82\xc81\x05<=256\x8a\xc81\x05<=128\xb2\xc81\x1a\x12\x11[a-z][-_0-9a-z.]*\x1a\x051-128R\x14additionalProperties\x1aG\n" +
	"\x19AdditionalPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb9\x02\n" +
	"\x13SQLServerConnection\x12U\n" +
	"\n" +
	"on_premise\x18\x01 \x01(\v24.yandex.cloud.trino.v1.SQLServerConnection.OnPremiseH\x00R\tonPremise\x1a\xbc\x01\n" +
	"\tOnPremise\x12G\n" +
	"\x0econnection_url\x18\x01 \x01(\tB \xe8\xc71\x01\xf2\xc71\x18^jdbc:[a-z0-9]+:(?s:.*)$R\rconnectionUrl\x12;\n" +
	"\tuser_name\x18\x02 \x01(\tB\x1e\xe8\xc71\x01\xf2\xc71\x0e[a-zA-Z0-9_-]*\x8a\xc81\x04<=63R\buserName\x12)\n" +
	"\bpassword\x18\x03 \x01(\tB\r\xe8\xc71\x01\x8a\xc81\x050-128R\bpasswordB\f\n" +
	"\x04type\x12\x04\xc0\xc11\x01\"\xef\x02\n" +
	"\x12SQLServerConnector\x12J\n" +
	"\n" +
	"connection\x18\x01 \x01(\v2*.yandex.cloud.trino.v1.SQLServerConnectionR\n" +
	"connection\x12\xc3\x01\n" +
	"\x15additional_properties\x18\x02 \x03(\v2C.yandex.cloud.trino.v1.SQLServerConnector.AdditionalPropertiesEntryBI\xf2\xc71\x15[-_0-9a-zA-Z.,:\\/_ ]*\x82\xc81\x05<=256\x8a\xc81\x05<=128\xb2\xc81\x1a\x12\x11[a-z][-_0-9a-z.]*\x1a\x051-128R\x14additionalProperties\x1aG\n" +
	"\x19AdditionalPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\\\n" +
	"\x19yandex.cloud.api.trino.v1Z?github.com/yandex-cloud/go-genproto/yandex/cloud/trino/v1;trinob\x06proto3"

var (
	file_yandex_cloud_trino_v1_catalog_proto_rawDescOnce sync.Once
	file_yandex_cloud_trino_v1_catalog_proto_rawDescData []byte
)

func file_yandex_cloud_trino_v1_catalog_proto_rawDescGZIP() []byte {
	file_yandex_cloud_trino_v1_catalog_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_trino_v1_catalog_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_trino_v1_catalog_proto_rawDesc), len(file_yandex_cloud_trino_v1_catalog_proto_rawDesc)))
	})
	return file_yandex_cloud_trino_v1_catalog_proto_rawDescData
}

var file_yandex_cloud_trino_v1_catalog_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_yandex_cloud_trino_v1_catalog_proto_goTypes = []any{
	(*Connector)(nil),                       // 0: yandex.cloud.trino.v1.Connector
	(*Catalog)(nil),                         // 1: yandex.cloud.trino.v1.Catalog
	(*CatalogSpec)(nil),                     // 2: yandex.cloud.trino.v1.CatalogSpec
	(*CatalogUpdateSpec)(nil),               // 3: yandex.cloud.trino.v1.CatalogUpdateSpec
	(*Metastore)(nil),                       // 4: yandex.cloud.trino.v1.Metastore
	(*FileSystem)(nil),                      // 5: yandex.cloud.trino.v1.FileSystem
	(*HiveConnector)(nil),                   // 6: yandex.cloud.trino.v1.HiveConnector
	(*IcebergConnector)(nil),                // 7: yandex.cloud.trino.v1.IcebergConnector
	(*DeltaLakeConnector)(nil),              // 8: yandex.cloud.trino.v1.DeltaLakeConnector
	(*PostgresqlConnection)(nil),            // 9: yandex.cloud.trino.v1.PostgresqlConnection
	(*PostgresqlConnector)(nil),             // 10: yandex.cloud.trino.v1.PostgresqlConnector
	(*ClickhouseConnection)(nil),            // 11: yandex.cloud.trino.v1.ClickhouseConnection
	(*ClickhouseConnector)(nil),             // 12: yandex.cloud.trino.v1.ClickhouseConnector
	(*TPCHConnector)(nil),                   // 13: yandex.cloud.trino.v1.TPCHConnector
	(*TPCDSConnector)(nil),                  // 14: yandex.cloud.trino.v1.TPCDSConnector
	(*OracleConnection)(nil),                // 15: yandex.cloud.trino.v1.OracleConnection
	(*OracleConnector)(nil),                 // 16: yandex.cloud.trino.v1.OracleConnector
	(*SQLServerConnection)(nil),             // 17: yandex.cloud.trino.v1.SQLServerConnection
	(*SQLServerConnector)(nil),              // 18: yandex.cloud.trino.v1.SQLServerConnector
	nil,                                     // 19: yandex.cloud.trino.v1.Catalog.LabelsEntry
	nil,                                     // 20: yandex.cloud.trino.v1.CatalogSpec.LabelsEntry
	nil,                                     // 21: yandex.cloud.trino.v1.CatalogUpdateSpec.LabelsEntry
	(*Metastore_HiveMetastore)(nil),         // 22: yandex.cloud.trino.v1.Metastore.HiveMetastore
	(*FileSystem_S3FileSystem)(nil),         // 23: yandex.cloud.trino.v1.FileSystem.S3FileSystem
	(*FileSystem_ExternalS3FileSystem)(nil), // 24: yandex.cloud.trino.v1.FileSystem.ExternalS3FileSystem
	nil,                                     // 25: yandex.cloud.trino.v1.HiveConnector.AdditionalPropertiesEntry
	nil,                                     // 26: yandex.cloud.trino.v1.IcebergConnector.AdditionalPropertiesEntry
	nil,                                     // 27: yandex.cloud.trino.v1.DeltaLakeConnector.AdditionalPropertiesEntry
	(*PostgresqlConnection_OnPremise)(nil),  // 28: yandex.cloud.trino.v1.PostgresqlConnection.OnPremise
	(*PostgresqlConnection_ConnectionManager)(nil), // 29: yandex.cloud.trino.v1.PostgresqlConnection.ConnectionManager
	nil,                                    // 30: yandex.cloud.trino.v1.PostgresqlConnection.ConnectionManager.ConnectionPropertiesEntry
	nil,                                    // 31: yandex.cloud.trino.v1.PostgresqlConnector.AdditionalPropertiesEntry
	(*ClickhouseConnection_OnPremise)(nil), // 32: yandex.cloud.trino.v1.ClickhouseConnection.OnPremise
	(*ClickhouseConnection_ConnectionManager)(nil), // 33: yandex.cloud.trino.v1.ClickhouseConnection.ConnectionManager
	nil,                                   // 34: yandex.cloud.trino.v1.ClickhouseConnection.ConnectionManager.ConnectionPropertiesEntry
	nil,                                   // 35: yandex.cloud.trino.v1.ClickhouseConnector.AdditionalPropertiesEntry
	nil,                                   // 36: yandex.cloud.trino.v1.TPCHConnector.AdditionalPropertiesEntry
	nil,                                   // 37: yandex.cloud.trino.v1.TPCDSConnector.AdditionalPropertiesEntry
	(*OracleConnection_OnPremise)(nil),    // 38: yandex.cloud.trino.v1.OracleConnection.OnPremise
	nil,                                   // 39: yandex.cloud.trino.v1.OracleConnector.AdditionalPropertiesEntry
	(*SQLServerConnection_OnPremise)(nil), // 40: yandex.cloud.trino.v1.SQLServerConnection.OnPremise
	nil,                                   // 41: yandex.cloud.trino.v1.SQLServerConnector.AdditionalPropertiesEntry
}
var file_yandex_cloud_trino_v1_catalog_proto_depIdxs = []int32{
	6,  // 0: yandex.cloud.trino.v1.Connector.hive:type_name -> yandex.cloud.trino.v1.HiveConnector
	7,  // 1: yandex.cloud.trino.v1.Connector.iceberg:type_name -> yandex.cloud.trino.v1.IcebergConnector
	8,  // 2: yandex.cloud.trino.v1.Connector.delta_lake:type_name -> yandex.cloud.trino.v1.DeltaLakeConnector
	10, // 3: yandex.cloud.trino.v1.Connector.postgresql:type_name -> yandex.cloud.trino.v1.PostgresqlConnector
	12, // 4: yandex.cloud.trino.v1.Connector.clickhouse:type_name -> yandex.cloud.trino.v1.ClickhouseConnector
	13, // 5: yandex.cloud.trino.v1.Connector.tpch:type_name -> yandex.cloud.trino.v1.TPCHConnector
	14, // 6: yandex.cloud.trino.v1.Connector.tpcds:type_name -> yandex.cloud.trino.v1.TPCDSConnector
	16, // 7: yandex.cloud.trino.v1.Connector.oracle:type_name -> yandex.cloud.trino.v1.OracleConnector
	18, // 8: yandex.cloud.trino.v1.Connector.sqlserver:type_name -> yandex.cloud.trino.v1.SQLServerConnector
	0,  // 9: yandex.cloud.trino.v1.Catalog.connector:type_name -> yandex.cloud.trino.v1.Connector
	19, // 10: yandex.cloud.trino.v1.Catalog.labels:type_name -> yandex.cloud.trino.v1.Catalog.LabelsEntry
	0,  // 11: yandex.cloud.trino.v1.CatalogSpec.connector:type_name -> yandex.cloud.trino.v1.Connector
	20, // 12: yandex.cloud.trino.v1.CatalogSpec.labels:type_name -> yandex.cloud.trino.v1.CatalogSpec.LabelsEntry
	0,  // 13: yandex.cloud.trino.v1.CatalogUpdateSpec.connector:type_name -> yandex.cloud.trino.v1.Connector
	21, // 14: yandex.cloud.trino.v1.CatalogUpdateSpec.labels:type_name -> yandex.cloud.trino.v1.CatalogUpdateSpec.LabelsEntry
	22, // 15: yandex.cloud.trino.v1.Metastore.hive:type_name -> yandex.cloud.trino.v1.Metastore.HiveMetastore
	23, // 16: yandex.cloud.trino.v1.FileSystem.s3:type_name -> yandex.cloud.trino.v1.FileSystem.S3FileSystem
	24, // 17: yandex.cloud.trino.v1.FileSystem.external_s3:type_name -> yandex.cloud.trino.v1.FileSystem.ExternalS3FileSystem
	4,  // 18: yandex.cloud.trino.v1.HiveConnector.metastore:type_name -> yandex.cloud.trino.v1.Metastore
	5,  // 19: yandex.cloud.trino.v1.HiveConnector.filesystem:type_name -> yandex.cloud.trino.v1.FileSystem
	25, // 20: yandex.cloud.trino.v1.HiveConnector.additional_properties:type_name -> yandex.cloud.trino.v1.HiveConnector.AdditionalPropertiesEntry
	4,  // 21: yandex.cloud.trino.v1.IcebergConnector.metastore:type_name -> yandex.cloud.trino.v1.Metastore
	5,  // 22: yandex.cloud.trino.v1.IcebergConnector.filesystem:type_name -> yandex.cloud.trino.v1.FileSystem
	26, // 23: yandex.cloud.trino.v1.IcebergConnector.additional_properties:type_name -> yandex.cloud.trino.v1.IcebergConnector.AdditionalPropertiesEntry
	4,  // 24: yandex.cloud.trino.v1.DeltaLakeConnector.metastore:type_name -> yandex.cloud.trino.v1.Metastore
	5,  // 25: yandex.cloud.trino.v1.DeltaLakeConnector.filesystem:type_name -> yandex.cloud.trino.v1.FileSystem
	27, // 26: yandex.cloud.trino.v1.DeltaLakeConnector.additional_properties:type_name -> yandex.cloud.trino.v1.DeltaLakeConnector.AdditionalPropertiesEntry
	28, // 27: yandex.cloud.trino.v1.PostgresqlConnection.on_premise:type_name -> yandex.cloud.trino.v1.PostgresqlConnection.OnPremise
	29, // 28: yandex.cloud.trino.v1.PostgresqlConnection.connection_manager:type_name -> yandex.cloud.trino.v1.PostgresqlConnection.ConnectionManager
	9,  // 29: yandex.cloud.trino.v1.PostgresqlConnector.connection:type_name -> yandex.cloud.trino.v1.PostgresqlConnection
	31, // 30: yandex.cloud.trino.v1.PostgresqlConnector.additional_properties:type_name -> yandex.cloud.trino.v1.PostgresqlConnector.AdditionalPropertiesEntry
	32, // 31: yandex.cloud.trino.v1.ClickhouseConnection.on_premise:type_name -> yandex.cloud.trino.v1.ClickhouseConnection.OnPremise
	33, // 32: yandex.cloud.trino.v1.ClickhouseConnection.connection_manager:type_name -> yandex.cloud.trino.v1.ClickhouseConnection.ConnectionManager
	11, // 33: yandex.cloud.trino.v1.ClickhouseConnector.connection:type_name -> yandex.cloud.trino.v1.ClickhouseConnection
	35, // 34: yandex.cloud.trino.v1.ClickhouseConnector.additional_properties:type_name -> yandex.cloud.trino.v1.ClickhouseConnector.AdditionalPropertiesEntry
	36, // 35: yandex.cloud.trino.v1.TPCHConnector.additional_properties:type_name -> yandex.cloud.trino.v1.TPCHConnector.AdditionalPropertiesEntry
	37, // 36: yandex.cloud.trino.v1.TPCDSConnector.additional_properties:type_name -> yandex.cloud.trino.v1.TPCDSConnector.AdditionalPropertiesEntry
	38, // 37: yandex.cloud.trino.v1.OracleConnection.on_premise:type_name -> yandex.cloud.trino.v1.OracleConnection.OnPremise
	15, // 38: yandex.cloud.trino.v1.OracleConnector.connection:type_name -> yandex.cloud.trino.v1.OracleConnection
	39, // 39: yandex.cloud.trino.v1.OracleConnector.additional_properties:type_name -> yandex.cloud.trino.v1.OracleConnector.AdditionalPropertiesEntry
	40, // 40: yandex.cloud.trino.v1.SQLServerConnection.on_premise:type_name -> yandex.cloud.trino.v1.SQLServerConnection.OnPremise
	17, // 41: yandex.cloud.trino.v1.SQLServerConnector.connection:type_name -> yandex.cloud.trino.v1.SQLServerConnection
	41, // 42: yandex.cloud.trino.v1.SQLServerConnector.additional_properties:type_name -> yandex.cloud.trino.v1.SQLServerConnector.AdditionalPropertiesEntry
	30, // 43: yandex.cloud.trino.v1.PostgresqlConnection.ConnectionManager.connection_properties:type_name -> yandex.cloud.trino.v1.PostgresqlConnection.ConnectionManager.ConnectionPropertiesEntry
	34, // 44: yandex.cloud.trino.v1.ClickhouseConnection.ConnectionManager.connection_properties:type_name -> yandex.cloud.trino.v1.ClickhouseConnection.ConnectionManager.ConnectionPropertiesEntry
	45, // [45:45] is the sub-list for method output_type
	45, // [45:45] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_yandex_cloud_trino_v1_catalog_proto_init() }
func file_yandex_cloud_trino_v1_catalog_proto_init() {
	if File_yandex_cloud_trino_v1_catalog_proto != nil {
		return
	}
	file_yandex_cloud_trino_v1_catalog_proto_msgTypes[0].OneofWrappers = []any{
		(*Connector_Hive)(nil),
		(*Connector_Iceberg)(nil),
		(*Connector_DeltaLake)(nil),
		(*Connector_Postgresql)(nil),
		(*Connector_Clickhouse)(nil),
		(*Connector_Tpch)(nil),
		(*Connector_Tpcds)(nil),
		(*Connector_Oracle)(nil),
		(*Connector_Sqlserver)(nil),
	}
	file_yandex_cloud_trino_v1_catalog_proto_msgTypes[4].OneofWrappers = []any{
		(*Metastore_Hive)(nil),
	}
	file_yandex_cloud_trino_v1_catalog_proto_msgTypes[5].OneofWrappers = []any{
		(*FileSystem_S3)(nil),
		(*FileSystem_ExternalS3)(nil),
	}
	file_yandex_cloud_trino_v1_catalog_proto_msgTypes[9].OneofWrappers = []any{
		(*PostgresqlConnection_OnPremise_)(nil),
		(*PostgresqlConnection_ConnectionManager_)(nil),
	}
	file_yandex_cloud_trino_v1_catalog_proto_msgTypes[11].OneofWrappers = []any{
		(*ClickhouseConnection_OnPremise_)(nil),
		(*ClickhouseConnection_ConnectionManager_)(nil),
	}
	file_yandex_cloud_trino_v1_catalog_proto_msgTypes[15].OneofWrappers = []any{
		(*OracleConnection_OnPremise_)(nil),
	}
	file_yandex_cloud_trino_v1_catalog_proto_msgTypes[17].OneofWrappers = []any{
		(*SQLServerConnection_OnPremise_)(nil),
	}
	file_yandex_cloud_trino_v1_catalog_proto_msgTypes[22].OneofWrappers = []any{
		(*Metastore_HiveMetastore_Uri)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_trino_v1_catalog_proto_rawDesc), len(file_yandex_cloud_trino_v1_catalog_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_trino_v1_catalog_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_trino_v1_catalog_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_trino_v1_catalog_proto_msgTypes,
	}.Build()
	File_yandex_cloud_trino_v1_catalog_proto = out.File
	file_yandex_cloud_trino_v1_catalog_proto_goTypes = nil
	file_yandex_cloud_trino_v1_catalog_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/video/v1/playlist_service.proto

package video

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPlaylistRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the playlist to retrieve.
	PlaylistId    string `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlaylistRequest) Reset() {
	*x = GetPlaylistRequest{}
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaylistRequest) ProtoMessage() {}

func (x *GetPlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaylistRequest.ProtoReflect.Descriptor instead.
func (*GetPlaylistRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_playlist_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetPlaylistRequest) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

type ListPlaylistsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the channel containing the playlists to list.
	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// The maximum number of playlists to return per page.
	PageSize int64 `protobuf:"varint,100,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token for retrieving the next page of results.
	// This token is obtained from the next_page_token field in the previous ListPlaylistsResponse.
	PageToken string `protobuf:"bytes,101,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Specifies the ordering of results.
	// Format is "<field> <order>" (e.g., "createdAt desc").
	// Default: "id asc".
	// Supported fields: ["id", "title", "createdAt", "updatedAt"].
	// Both snake_case and camelCase field names are supported.
	OrderBy string `protobuf:"bytes,102,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	// Filter expression to narrow down the list of returned playlists.
	// Expressions consist of terms connected by logical operators.
	// Values containing spaces or quotes must be enclosed in quotes (`'` or `"`)
	// with inner quotes being backslash-escaped.
	//
	// Supported logical operators: ["AND", "OR"].
	// Supported comparison operators: ["=", "!=", ":"] where ":" enables substring matching.
	// Parentheses can be used to group logical expressions.
	//
	// Example: `title:'highlights' AND id='playlist-1'`
	//
	// Filterable fields: ["id", "title"].
	// Both snake_case and camelCase field names are supported.
	Filter        string `protobuf:"bytes,103,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPlaylistsRequest) Reset() {
	*x = ListPlaylistsRequest{}
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlaylistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlaylistsRequest) ProtoMessage() {}

func (x *ListPlaylistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlaylistsRequest.ProtoReflect.Descriptor instead.
func (*ListPlaylistsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_playlist_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListPlaylistsRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ListPlaylistsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPlaylistsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListPlaylistsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListPlaylistsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListPlaylistsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of playlists matching the request criteria.
	// May be empty if no playlists match the criteria or if the channel has no playlists.
	Playlists []*Playlist `protobuf:"bytes,1,rep,name=playlists,proto3" json:"playlists,omitempty"`
	// Token for retrieving the next page of results.
	// Empty if there are no more results available.
	NextPageToken string `protobuf:"bytes,100,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPlaylistsResponse) Reset() {
	*x = ListPlaylistsResponse{}
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPlaylistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlaylistsResponse) ProtoMessage() {}

func (x *ListPlaylistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlaylistsResponse.ProtoReflect.Descriptor instead.
func (*ListPlaylistsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_playlist_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListPlaylistsResponse) GetPlaylists() []*Playlist {
	if x != nil {
		return x.Playlists
	}
	return nil
}

func (x *ListPlaylistsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreatePlaylistRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the channel where the playlist will be created.
	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// Title of the playlist to be displayed in interfaces and players.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Detailed description of the playlist content and context.
	// Optional field that can provide additional information about the playlist.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// List of items to include in the playlist.
	// Each item represents a video or episode to be played in sequence.
	// The order of items in this list determines the playback order.
	Items []*PlaylistItem `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	// ID of the style preset to be applied to the playlist player.
	// Style presets control the visual appearance of the player.
	StylePresetId string `protobuf:"bytes,5,opt,name=style_preset_id,json=stylePresetId,proto3" json:"style_preset_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePlaylistRequest) Reset() {
	*x = CreatePlaylistRequest{}
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaylistRequest) ProtoMessage() {}

func (x *CreatePlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaylistRequest.ProtoReflect.Descriptor instead.
func (*CreatePlaylistRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_playlist_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePlaylistRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *CreatePlaylistRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreatePlaylistRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePlaylistRequest) GetItems() []*PlaylistItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CreatePlaylistRequest) GetStylePresetId() string {
	if x != nil {
		return x.StylePresetId
	}
	return ""
}

type CreatePlaylistMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the playlist being created.
	PlaylistId    string `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePlaylistMetadata) Reset() {
	*x = CreatePlaylistMetadata{}
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePlaylistMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaylistMetadata) ProtoMessage() {}

func (x *CreatePlaylistMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaylistMetadata.ProtoReflect.Descriptor instead.
func (*CreatePlaylistMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_playlist_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePlaylistMetadata) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

type UpdatePlaylistRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the playlist to update.
	PlaylistId string `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	// Field mask specifying which fields of the playlist should be updated.
	// Only fields specified in this mask will be modified;
	// all other fields will retain their current values.
	// This allows for partial updates.
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	// New title for the playlist.
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// New description for the playlist.
	// Optional field that can provide additional information about the playlist.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// New list of items to include in the playlist.
	// This completely replaces the existing items if specified in the field mask.
	// The order of items in this list determines the playback order.
	Items []*PlaylistItem `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
	// New ID of the style preset to be applied to the playlist player.
	StylePresetId string `protobuf:"bytes,6,opt,name=style_preset_id,json=stylePresetId,proto3" json:"style_preset_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePlaylistRequest) Reset() {
	*x = UpdatePlaylistRequest{}
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlaylistRequest) ProtoMessage() {}

func (x *UpdatePlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlaylistRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlaylistRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_playlist_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePlaylistRequest) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

func (x *UpdatePlaylistRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *UpdatePlaylistRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdatePlaylistRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdatePlaylistRequest) GetItems() []*PlaylistItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *UpdatePlaylistRequest) GetStylePresetId() string {
	if x != nil {
		return x.StylePresetId
	}
	return ""
}

type UpdatePlaylistMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the playlist being updated.
	PlaylistId    string `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePlaylistMetadata) Reset() {
	*x = UpdatePlaylistMetadata{}
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePlaylistMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlaylistMetadata) ProtoMessage() {}

func (x *UpdatePlaylistMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlaylistMetadata.ProtoReflect.Descriptor instead.
func (*UpdatePlaylistMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_playlist_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePlaylistMetadata) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

type DeletePlaylistRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the playlist to delete.
	PlaylistId    string `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePlaylistRequest) Reset() {
	*x = DeletePlaylistRequest{}
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlaylistRequest) ProtoMessage() {}

func (x *DeletePlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlaylistRequest.ProtoReflect.Descriptor instead.
func (*DeletePlaylistRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_playlist_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeletePlaylistRequest) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

type DeletePlaylistMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the playlist being deleted.
	// This identifier can be used to track the playlist deletion operation.
	PlaylistId    string `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePlaylistMetadata) Reset() {
	*x = DeletePlaylistMetadata{}
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePlaylistMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlaylistMetadata) ProtoMessage() {}

func (x *DeletePlaylistMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlaylistMetadata.ProtoReflect.Descriptor instead.
func (*DeletePlaylistMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_playlist_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeletePlaylistMetadata) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

type BatchDeletePlaylistsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the channel containing the playlists to delete.
	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// List of playlist IDs to delete.
	// All playlists must exist in the specified channel.
	PlaylistIds   []string `protobuf:"bytes,2,rep,name=playlist_ids,json=playlistIds,proto3" json:"playlist_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeletePlaylistsRequest) Reset() {
	*x = BatchDeletePlaylistsRequest{}
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeletePlaylistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeletePlaylistsRequest) ProtoMessage() {}

func (x *BatchDeletePlaylistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeletePlaylistsRequest.ProtoReflect.Descriptor instead.
func (*BatchDeletePlaylistsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_playlist_service_proto_rawDescGZIP(), []int{9}
}

func (x *BatchDeletePlaylistsRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *BatchDeletePlaylistsRequest) GetPlaylistIds() []string {
	if x != nil {
		return x.PlaylistIds
	}
	return nil
}

type BatchDeletePlaylistsMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of playlist IDs being deleted.
	// This list can be used to track which playlists are included
	// in the batch deletion operation.
	PlaylistIds   []string `protobuf:"bytes,1,rep,name=playlist_ids,json=playlistIds,proto3" json:"playlist_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeletePlaylistsMetadata) Reset() {
	*x = BatchDeletePlaylistsMetadata{}
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeletePlaylistsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeletePlaylistsMetadata) ProtoMessage() {}

func (x *BatchDeletePlaylistsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeletePlaylistsMetadata.ProtoReflect.Descriptor instead.
func (*BatchDeletePlaylistsMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_playlist_service_proto_rawDescGZIP(), []int{10}
}

func (x *BatchDeletePlaylistsMetadata) GetPlaylistIds() []string {
	if x != nil {
		return x.PlaylistIds
	}
	return nil
}

type GetPlaylistPlayerURLRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the playlist for which to generate a player URL.
	PlaylistId string `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	// Optional player parameters to customize the playback experience.
	// These parameters control initial player state such as mute, autoplay, and visibility of interface controls.
	Params        *PlaylistPlayerParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlaylistPlayerURLRequest) Reset() {
	*x = GetPlaylistPlayerURLRequest{}
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlaylistPlayerURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaylistPlayerURLRequest) ProtoMessage() {}

func (x *GetPlaylistPlayerURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaylistPlayerURLRequest.ProtoReflect.Descriptor instead.
func (*GetPlaylistPlayerURLRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_playlist_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetPlaylistPlayerURLRequest) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

func (x *GetPlaylistPlayerURLRequest) GetParams() *PlaylistPlayerParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type PlaylistPlayerParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, the player will start with audio muted.
	// Users can unmute the audio manually after playback starts.
	Mute bool `protobuf:"varint,1,opt,name=mute,proto3" json:"mute,omitempty"`
	// If true, the playlist will start playing automatically when the player loads.
	// This may be subject to browser autoplay policies that restrict autoplay with sound.
	Autoplay bool `protobuf:"varint,2,opt,name=autoplay,proto3" json:"autoplay,omitempty"`
	// If true, the player interface controls will be hidden initially.
	// Users can typically reveal the controls by moving the mouse over the player.
	Hidden        bool `protobuf:"varint,3,opt,name=hidden,proto3" json:"hidden,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaylistPlayerParams) Reset() {
	*x = PlaylistPlayerParams{}
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaylistPlayerParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistPlayerParams) ProtoMessage() {}

func (x *PlaylistPlayerParams) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistPlayerParams.ProtoReflect.Descriptor instead.
func (*PlaylistPlayerParams) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_playlist_service_proto_rawDescGZIP(), []int{12}
}

func (x *PlaylistPlayerParams) GetMute() bool {
	if x != nil {
		return x.Mute
	}
	return false
}

func (x *PlaylistPlayerParams) GetAutoplay() bool {
	if x != nil {
		return x.Autoplay
	}
	return false
}

func (x *PlaylistPlayerParams) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

type GetPlaylistPlayerURLResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Direct URL to the playlist player.
	// This URL can be used to access the playlist in a web browser
	// or shared with users who have appropriate permissions.
	PlayerUrl string `protobuf:"bytes,1,opt,name=player_url,json=playerUrl,proto3" json:"player_url,omitempty"`
	// HTML embed code in iframe format that can be inserted into web pages.
	// This code allows the playlist to be embedded directly in third-party websites.
	Html          string `protobuf:"bytes,2,opt,name=html,proto3" json:"html,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlaylistPlayerURLResponse) Reset() {
	*x = GetPlaylistPlayerURLResponse{}
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlaylistPlayerURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaylistPlayerURLResponse) ProtoMessage() {}

func (x *GetPlaylistPlayerURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_playlist_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaylistPlayerURLResponse.ProtoReflect.Descriptor instead.
func (*GetPlaylistPlayerURLResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_playlist_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetPlaylistPlayerURLResponse) GetPlayerUrl() string {
	if x != nil {
		return x.PlayerUrl
	}
	return ""
}

func (x *GetPlaylistPlayerURLResponse) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

var File_yandex_cloud_video_v1_playlist_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_video_v1_playlist_service_proto_rawDesc = "" +
	"\n" +
	",yandex/cloud/video/v1/playlist_service.proto\x12\x15yandex.cloud.video.v1\x1a\x1cgoogle/api/annotations.proto\x1a google/protobuf/field_mask.proto\x1a yandex/cloud/api/operation.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\x1a$yandex/cloud/video/v1/playlist.proto\"C\n" +
	"\x12GetPlaylistRequest\x12-\n" +
	"\vplaylist_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"playlistId\"\xe6\x01\n" +
	"\x14ListPlaylistsRequest\x12+\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tchannelId\x12&\n" +
	"\tpage_size\x18d \x01(\x03B\t\xfa\xc71\x05<=100R\bpageSize\x12*\n" +
	"\n" +
	"page_token\x18e \x01(\tB\v\x8a\xc81\a<=15000R\tpageToken\x12#\n" +
	"\border_by\x18f \x01(\tB\b\x8a\xc81\x04<=50R\aorderBy\x12\"\n" +
	"\x06filter\x18g \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filterJ\x04\b\x02\x10d\"\x84\x01\n" +
	"\x15ListPlaylistsResponse\x12=\n" +
	"\tplaylists\x18\x01 \x03(\v2\x1f.yandex.cloud.video.v1.PlaylistR\tplaylists\x12&\n" +
	"\x0fnext_page_token\x18d \x01(\tR\rnextPageTokenJ\x04\b\x02\x10d\"\x8f\x02\n" +
	"\x15CreatePlaylistRequest\x12+\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tchannelId\x12#\n" +
	"\x05title\x18\x02 \x01(\tB\r\xe8\xc71\x01\x8a\xc81\x05<=300R\x05title\x12,\n" +
	"\vdescription\x18\x03 \x01(\tB\n" +
	"\x8a\xc81\x06<=4000R\vdescription\x12D\n" +
	"\x05items\x18\x04 \x03(\v2#.yandex.cloud.video.v1.PlaylistItemB\t\x82\xc81\x05<=100R\x05items\x120\n" +
	"\x0fstyle_preset_id\x18\x05 \x01(\tB\b\x8a\xc81\x04<=50R\rstylePresetId\"9\n" +
	"\x16CreatePlaylistMetadata\x12\x1f\n" +
	"\vplaylist_id\x18\x01 \x01(\tR\n" +
	"playlistId\"\xce\x02\n" +
	"\x15UpdatePlaylistRequest\x12-\n" +
	"\vplaylist_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"playlistId\x12?\n" +
	"\n" +
	"field_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskB\x04\xe8\xc71\x01R\tfieldMask\x12\x1f\n" +
	"\x05title\x18\x03 \x01(\tB\t\x8a\xc81\x05<=300R\x05title\x12,\n" +
	"\vdescription\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=4000R\vdescription\x12D\n" +
	"\x05items\x18\x05 \x03(\v2#.yandex.cloud.video.v1.PlaylistItemB\t\x82\xc81\x05<=100R\x05items\x120\n" +
	"\x0fstyle_preset_id\x18\x06 \x01(\tB\b\x8a\xc81\x04<=50R\rstylePresetId\"9\n" +
	"\x16UpdatePlaylistMetadata\x12\x1f\n" +
	"\vplaylist_id\x18\x01 \x01(\tR\n" +
	"playlistId\"F\n" +
	"\x15DeletePlaylistRequest\x12-\n" +
	"\vplaylist_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"playlistId\"9\n" +
	"\x16DeletePlaylistMetadata\x12\x1f\n" +
	"\vplaylist_id\x18\x01 \x01(\tR\n" +
	"playlistId\"\x80\x01\n" +
	"\x1bBatchDeletePlaylistsRequest\x12+\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tchannelId\x124\n" +
	"\fplaylist_ids\x18\x02 \x03(\tB\x11\x82\xc81\x051-100\x8a\xc81\x04<=50R\vplaylistIds\"A\n" +
	"\x1cBatchDeletePlaylistsMetadata\x12!\n" +
	"\fplaylist_ids\x18\x01 \x03(\tR\vplaylistIds\"\x91\x01\n" +
	"\x1bGetPlaylistPlayerURLRequest\x12-\n" +
	"\vplaylist_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"playlistId\x12C\n" +
	"\x06params\x18\x02 \x01(\v2+.yandex.cloud.video.v1.PlaylistPlayerParamsR\x06params\"^\n" +
	"\x14PlaylistPlayerParams\x12\x12\n" +
	"\x04mute\x18\x01 \x01(\bR\x04mute\x12\x1a\n" +
	"\bautoplay\x18\x02 \x01(\bR\bautoplay\x12\x16\n" +
	"\x06hidden\x18\x03 \x01(\bR\x06hidden\"Q\n" +
	"\x1cGetPlaylistPlayerURLResponse\x12\x1d\n" +
	"\n" +
	"player_url\x18\x01 \x01(\tR\tplayerUrl\x12\x12\n" +
	"\x04html\x18\x02 \x01(\tR\x04html2\x99\t\n" +
	"\x0fPlaylistService\x12|\n" +
	"\x03Get\x12).yandex.cloud.video.v1.GetPlaylistRequest\x1a\x1f.yandex.cloud.video.v1.Playlist\")\x82\xd3\xe4\x93\x02#\x12!/video/v1/playlists/{playlist_id}\x12~\n" +
	"\x04List\x12+.yandex.cloud.video.v1.ListPlaylistsRequest\x1a,.yandex.cloud.video.v1.ListPlaylistsResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/video/v1/playlists\x12\x9f\x01\n" +
	"\x06Create\x12,.yandex.cloud.video.v1.CreatePlaylistRequest\x1a!.yandex.cloud.operation.Operation\"D\xb2\xd2*\"\n" +
	"\x16CreatePlaylistMetadata\x12\bPlaylist\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/video/v1/playlists\x12\xad\x01\n" +
	"\x06Update\x12,.yandex.cloud.video.v1.UpdatePlaylistRequest\x1a!.yandex.cloud.operation.Operation\"R\xb2\xd2*\"\n" +
	"\x16UpdatePlaylistMetadata\x12\bPlaylist\x82\xd3\xe4\x93\x02&:\x01*2!/video/v1/playlists/{playlist_id}\x12\xb7\x01\n" +
	"\x06Delete\x12,.yandex.cloud.video.v1.DeletePlaylistRequest\x1a!.yandex.cloud.operation.Operation\"\\\xb2\xd2*/\n" +
	"\x16DeletePlaylistMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02#*!/video/v1/playlists/{playlist_id}\x12\xc9\x01\n" +
	"\vBatchDelete\x122.yandex.cloud.video.v1.BatchDeletePlaylistsRequest\x1a!.yandex.cloud.operation.Operation\"c\xb2\xd2*5\n" +
	"\x1cBatchDeletePlaylistsMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/video/v1/playlists:batchDelete\x12\xaf\x01\n" +
	"\fGetPlayerURL\x122.yandex.cloud.video.v1.GetPlaylistPlayerURLRequest\x1a3.yandex.cloud.video.v1.GetPlaylistPlayerURLResponse\"6\x82\xd3\xe4\x93\x020\x12./video/v1/playlists/{playlist_id}:getPlayerURLB\\\n" +
	"\x19yandex.cloud.api.video.v1Z?github.com/yandex-cloud/go-genproto/yandex/cloud/video/v1;videob\x06proto3"

var (
	file_yandex_cloud_video_v1_playlist_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_video_v1_playlist_service_proto_rawDescData []byte
)

func file_yandex_cloud_video_v1_playlist_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_video_v1_playlist_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_video_v1_playlist_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_video_v1_playlist_service_proto_rawDesc), len(file_yandex_cloud_video_v1_playlist_service_proto_rawDesc)))
	})
	return file_yandex_cloud_video_v1_playlist_service_proto_rawDescData
}

var file_yandex_cloud_video_v1_playlist_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_yandex_cloud_video_v1_playlist_service_proto_goTypes = []any{
	(*GetPlaylistRequest)(nil),           // 0: yandex.cloud.video.v1.GetPlaylistRequest
	(*ListPlaylistsRequest)(nil),         // 1: yandex.cloud.video.v1.ListPlaylistsRequest
	(*ListPlaylistsResponse)(nil),        // 2: yandex.cloud.video.v1.ListPlaylistsResponse
	(*CreatePlaylistRequest)(nil),        // 3: yandex.cloud.video.v1.CreatePlaylistRequest
	(*CreatePlaylistMetadata)(nil),       // 4: yandex.cloud.video.v1.CreatePlaylistMetadata
	(*UpdatePlaylistRequest)(nil),        // 5: yandex.cloud.video.v1.UpdatePlaylistRequest
	(*UpdatePlaylistMetadata)(nil),       // 6: yandex.cloud.video.v1.UpdatePlaylistMetadata
	(*DeletePlaylistRequest)(nil),        // 7: yandex.cloud.video.v1.DeletePlaylistRequest
	(*DeletePlaylistMetadata)(nil),       // 8: yandex.cloud.video.v1.DeletePlaylistMetadata
	(*BatchDeletePlaylistsRequest)(nil),  // 9: yandex.cloud.video.v1.BatchDeletePlaylistsRequest
	(*BatchDeletePlaylistsMetadata)(nil), // 10: yandex.cloud.video.v1.BatchDeletePlaylistsMetadata
	(*GetPlaylistPlayerURLRequest)(nil),  // 11: yandex.cloud.video.v1.GetPlaylistPlayerURLRequest
	(*PlaylistPlayerParams)(nil),         // 12: yandex.cloud.video.v1.PlaylistPlayerParams
	(*GetPlaylistPlayerURLResponse)(nil), // 13: yandex.cloud.video.v1.GetPlaylistPlayerURLResponse
	(*Playlist)(nil),                     // 14: yandex.cloud.video.v1.Playlist
	(*PlaylistItem)(nil),                 // 15: yandex.cloud.video.v1.PlaylistItem
	(*fieldmaskpb.FieldMask)(nil),        // 16: google.protobuf.FieldMask
	(*operation.Operation)(nil),          // 17: yandex.cloud.operation.Operation
}
var file_yandex_cloud_video_v1_playlist_service_proto_depIdxs = []int32{
	14, // 0: yandex.cloud.video.v1.ListPlaylistsResponse.playlists:type_name -> yandex.cloud.video.v1.Playlist
	15, // 1: yandex.cloud.video.v1.CreatePlaylistRequest.items:type_name -> yandex.cloud.video.v1.PlaylistItem
	16, // 2: yandex.cloud.video.v1.UpdatePlaylistRequest.field_mask:type_name -> google.protobuf.FieldMask
	15, // 3: yandex.cloud.video.v1.UpdatePlaylistRequest.items:type_name -> yandex.cloud.video.v1.PlaylistItem
	12, // 4: yandex.cloud.video.v1.GetPlaylistPlayerURLRequest.params:type_name -> yandex.cloud.video.v1.PlaylistPlayerParams
	0,  // 5: yandex.cloud.video.v1.PlaylistService.Get:input_type -> yandex.cloud.video.v1.GetPlaylistRequest
	1,  // 6: yandex.cloud.video.v1.PlaylistService.List:input_type -> yandex.cloud.video.v1.ListPlaylistsRequest
	3,  // 7: yandex.cloud.video.v1.PlaylistService.Create:input_type -> yandex.cloud.video.v1.CreatePlaylistRequest
	5,  // 8: yandex.cloud.video.v1.PlaylistService.Update:input_type -> yandex.cloud.video.v1.UpdatePlaylistRequest
	7,  // 9: yandex.cloud.video.v1.PlaylistService.Delete:input_type -> yandex.cloud.video.v1.DeletePlaylistRequest
	9,  // 10: yandex.cloud.video.v1.PlaylistService.BatchDelete:input_type -> yandex.cloud.video.v1.BatchDeletePlaylistsRequest
	11, // 11: yandex.cloud.video.v1.PlaylistService.GetPlayerURL:input_type -> yandex.cloud.video.v1.GetPlaylistPlayerURLRequest
	14, // 12: yandex.cloud.video.v1.PlaylistService.Get:output_type -> yandex.cloud.video.v1.Playlist
	2,  // 13: yandex.cloud.video.v1.PlaylistService.List:output_type -> yandex.cloud.video.v1.ListPlaylistsResponse
	17, // 14: yandex.cloud.video.v1.PlaylistService.Create:output_type -> yandex.cloud.operation.Operation
	17, // 15: yandex.cloud.video.v1.PlaylistService.Update:output_type -> yandex.cloud.operation.Operation
	17, // 16: yandex.cloud.video.v1.PlaylistService.Delete:output_type -> yandex.cloud.operation.Operation
	17, // 17: yandex.cloud.video.v1.PlaylistService.BatchDelete:output_type -> yandex.cloud.operation.Operation
	13, // 18: yandex.cloud.video.v1.PlaylistService.GetPlayerURL:output_type -> yandex.cloud.video.v1.GetPlaylistPlayerURLResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_yandex_cloud_video_v1_playlist_service_proto_init() }
func file_yandex_cloud_video_v1_playlist_service_proto_init() {
	if File_yandex_cloud_video_v1_playlist_service_proto != nil {
		return
	}
	file_yandex_cloud_video_v1_playlist_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_video_v1_playlist_service_proto_rawDesc), len(file_yandex_cloud_video_v1_playlist_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_video_v1_playlist_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_video_v1_playlist_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_video_v1_playlist_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_video_v1_playlist_service_proto = out.File
	file_yandex_cloud_video_v1_playlist_service_proto_goTypes = nil
	file_yandex_cloud_video_v1_playlist_service_proto_depIdxs = nil
}

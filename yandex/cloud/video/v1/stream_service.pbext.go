// Code generated by protoc-gen-goext. DO NOT EDIT.

package video

import (
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

func (m *GetStreamRequest) SetStreamId(v string) {
	m.StreamId = v
}

func (m *ListStreamsRequest) SetChannelId(v string) {
	m.ChannelId = v
}

func (m *ListStreamsRequest) SetPageSize(v int64) {
	m.PageSize = v
}

func (m *ListStreamsRequest) SetPageToken(v string) {
	m.PageToken = v
}

func (m *ListStreamsRequest) SetOrderBy(v string) {
	m.OrderBy = v
}

func (m *ListStreamsRequest) SetFilter(v string) {
	m.Filter = v
}

func (m *ListStreamsResponse) SetStreams(v []*Stream) {
	m.Streams = v
}

func (m *ListStreamsResponse) SetNextPageToken(v string) {
	m.NextPageToken = v
}

func (m *BatchGetStreamsRequest) SetChannelId(v string) {
	m.ChannelId = v
}

func (m *BatchGetStreamsRequest) SetStreamIds(v []string) {
	m.StreamIds = v
}

func (m *BatchGetStreamsResponse) SetStreams(v []*Stream) {
	m.Streams = v
}

type CreateStreamRequest_StreamType = isCreateStreamRequest_StreamType

func (m *CreateStreamRequest) SetStreamType(v CreateStreamRequest_StreamType) {
	m.StreamType = v
}

func (m *CreateStreamRequest) SetChannelId(v string) {
	m.ChannelId = v
}

func (m *CreateStreamRequest) SetLineId(v string) {
	m.LineId = v
}

func (m *CreateStreamRequest) SetTitle(v string) {
	m.Title = v
}

func (m *CreateStreamRequest) SetDescription(v string) {
	m.Description = v
}

func (m *CreateStreamRequest) SetThumbnailId(v string) {
	m.ThumbnailId = v
}

func (m *CreateStreamRequest) SetLabels(v map[string]string) {
	m.Labels = v
}

func (m *CreateStreamRequest) SetOnDemand(v *OnDemandParams) {
	m.StreamType = &CreateStreamRequest_OnDemand{
		OnDemand: v,
	}
}

func (m *CreateStreamRequest) SetSchedule(v *ScheduleParams) {
	m.StreamType = &CreateStreamRequest_Schedule{
		Schedule: v,
	}
}

func (m *ScheduleParams) SetStartTime(v *timestamppb.Timestamp) {
	m.StartTime = v
}

func (m *ScheduleParams) SetFinishTime(v *timestamppb.Timestamp) {
	m.FinishTime = v
}

func (m *CreateStreamMetadata) SetStreamId(v string) {
	m.StreamId = v
}

type UpdateStreamRequest_StreamType = isUpdateStreamRequest_StreamType

func (m *UpdateStreamRequest) SetStreamType(v UpdateStreamRequest_StreamType) {
	m.StreamType = v
}

func (m *UpdateStreamRequest) SetStreamId(v string) {
	m.StreamId = v
}

func (m *UpdateStreamRequest) SetFieldMask(v *fieldmaskpb.FieldMask) {
	m.FieldMask = v
}

func (m *UpdateStreamRequest) SetLineId(v string) {
	m.LineId = v
}

func (m *UpdateStreamRequest) SetTitle(v string) {
	m.Title = v
}

func (m *UpdateStreamRequest) SetDescription(v string) {
	m.Description = v
}

func (m *UpdateStreamRequest) SetThumbnailId(v string) {
	m.ThumbnailId = v
}

func (m *UpdateStreamRequest) SetLabels(v map[string]string) {
	m.Labels = v
}

func (m *UpdateStreamRequest) SetOnDemand(v *OnDemandParams) {
	m.StreamType = &UpdateStreamRequest_OnDemand{
		OnDemand: v,
	}
}

func (m *UpdateStreamRequest) SetSchedule(v *ScheduleParams) {
	m.StreamType = &UpdateStreamRequest_Schedule{
		Schedule: v,
	}
}

func (m *UpdateStreamMetadata) SetStreamId(v string) {
	m.StreamId = v
}

func (m *DeleteStreamRequest) SetStreamId(v string) {
	m.StreamId = v
}

func (m *DeleteStreamMetadata) SetStreamId(v string) {
	m.StreamId = v
}

func (m *BatchDeleteStreamsRequest) SetChannelId(v string) {
	m.ChannelId = v
}

func (m *BatchDeleteStreamsRequest) SetStreamIds(v []string) {
	m.StreamIds = v
}

func (m *BatchDeleteStreamsMetadata) SetStreamIds(v []string) {
	m.StreamIds = v
}

type PerformStreamActionRequest_Action = isPerformStreamActionRequest_Action

func (m *PerformStreamActionRequest) SetAction(v PerformStreamActionRequest_Action) {
	m.Action = v
}

func (m *PerformStreamActionRequest) SetStreamId(v string) {
	m.StreamId = v
}

func (m *PerformStreamActionRequest) SetPublish(v *PublishAction) {
	m.Action = &PerformStreamActionRequest_Publish{
		Publish: v,
	}
}

func (m *PerformStreamActionRequest) SetStop(v *StopAction) {
	m.Action = &PerformStreamActionRequest_Stop{
		Stop: v,
	}
}

func (m *PerformStreamActionMetadata) SetStreamId(v string) {
	m.StreamId = v
}

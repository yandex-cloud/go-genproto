// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/video/v1/subtitle.proto

package video

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Subtitle_SubtitleStatus int32

const (
	// Subtitle status unspecified.
	Subtitle_SUBTITLE_STATUS_UNSPECIFIED Subtitle_SubtitleStatus = 0
	// Waiting for all the bytes to be loaded.
	Subtitle_WAIT_UPLOADING Subtitle_SubtitleStatus = 1
	// Uploading is complete.
	Subtitle_UPLOADED Subtitle_SubtitleStatus = 2
)

// Enum value maps for Subtitle_SubtitleStatus.
var (
	Subtitle_SubtitleStatus_name = map[int32]string{
		0: "SUBTITLE_STATUS_UNSPECIFIED",
		1: "WAIT_UPLOADING",
		2: "UPLOADED",
	}
	Subtitle_SubtitleStatus_value = map[string]int32{
		"SUBTITLE_STATUS_UNSPECIFIED": 0,
		"WAIT_UPLOADING":              1,
		"UPLOADED":                    2,
	}
)

func (x Subtitle_SubtitleStatus) Enum() *Subtitle_SubtitleStatus {
	p := new(Subtitle_SubtitleStatus)
	*p = x
	return p
}

func (x Subtitle_SubtitleStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Subtitle_SubtitleStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_video_v1_subtitle_proto_enumTypes[0].Descriptor()
}

func (Subtitle_SubtitleStatus) Type() protoreflect.EnumType {
	return &file_yandex_cloud_video_v1_subtitle_proto_enumTypes[0]
}

func (x Subtitle_SubtitleStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Subtitle_SubtitleStatus.Descriptor instead.
func (Subtitle_SubtitleStatus) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_subtitle_proto_rawDescGZIP(), []int{0, 0}
}

type Subtitle_SubtitleSourceType int32

const (
	// Subtitle source type unspecified.
	Subtitle_SUBTITLE_SOURCE_TYPE_UNSPECIFIED Subtitle_SubtitleSourceType = 0
	// Manually uploaded subtitle.
	Subtitle_MANUAL Subtitle_SubtitleSourceType = 1
	// Automatically generated subtitle.
	Subtitle_GENERATED Subtitle_SubtitleSourceType = 2
)

// Enum value maps for Subtitle_SubtitleSourceType.
var (
	Subtitle_SubtitleSourceType_name = map[int32]string{
		0: "SUBTITLE_SOURCE_TYPE_UNSPECIFIED",
		1: "MANUAL",
		2: "GENERATED",
	}
	Subtitle_SubtitleSourceType_value = map[string]int32{
		"SUBTITLE_SOURCE_TYPE_UNSPECIFIED": 0,
		"MANUAL":                           1,
		"GENERATED":                        2,
	}
)

func (x Subtitle_SubtitleSourceType) Enum() *Subtitle_SubtitleSourceType {
	p := new(Subtitle_SubtitleSourceType)
	*p = x
	return p
}

func (x Subtitle_SubtitleSourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Subtitle_SubtitleSourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_video_v1_subtitle_proto_enumTypes[1].Descriptor()
}

func (Subtitle_SubtitleSourceType) Type() protoreflect.EnumType {
	return &file_yandex_cloud_video_v1_subtitle_proto_enumTypes[1]
}

func (x Subtitle_SubtitleSourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Subtitle_SubtitleSourceType.Descriptor instead.
func (Subtitle_SubtitleSourceType) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_subtitle_proto_rawDescGZIP(), []int{0, 1}
}

type Subtitle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subtitle.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Subtitle language represented as a three-letter code according to ISO 639-2/T.
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	// Subtitle caption to be displayed on screen during video playback.
	Label string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	// Subtitle status.
	Status Subtitle_SubtitleStatus `protobuf:"varint,4,opt,name=status,proto3,enum=yandex.cloud.video.v1.Subtitle_SubtitleStatus" json:"status,omitempty"`
	// Source type.
	SourceType Subtitle_SubtitleSourceType `protobuf:"varint,6,opt,name=source_type,json=sourceType,proto3,enum=yandex.cloud.video.v1.Subtitle_SubtitleSourceType" json:"source_type,omitempty"`
	// Subtitle filename.
	Filename string `protobuf:"bytes,5,opt,name=filename,proto3" json:"filename,omitempty"`
	// Time when subtitle was created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Time of last subtitle update.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Types that are valid to be assigned to ParentId:
	//
	//	*Subtitle_VideoId
	ParentId      isSubtitle_ParentId `protobuf_oneof:"parent_id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subtitle) Reset() {
	*x = Subtitle{}
	mi := &file_yandex_cloud_video_v1_subtitle_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subtitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subtitle) ProtoMessage() {}

func (x *Subtitle) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_subtitle_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subtitle.ProtoReflect.Descriptor instead.
func (*Subtitle) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_subtitle_proto_rawDescGZIP(), []int{0}
}

func (x *Subtitle) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Subtitle) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Subtitle) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Subtitle) GetStatus() Subtitle_SubtitleStatus {
	if x != nil {
		return x.Status
	}
	return Subtitle_SUBTITLE_STATUS_UNSPECIFIED
}

func (x *Subtitle) GetSourceType() Subtitle_SubtitleSourceType {
	if x != nil {
		return x.SourceType
	}
	return Subtitle_SUBTITLE_SOURCE_TYPE_UNSPECIFIED
}

func (x *Subtitle) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Subtitle) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Subtitle) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Subtitle) GetParentId() isSubtitle_ParentId {
	if x != nil {
		return x.ParentId
	}
	return nil
}

func (x *Subtitle) GetVideoId() string {
	if x != nil {
		if x, ok := x.ParentId.(*Subtitle_VideoId); ok {
			return x.VideoId
		}
	}
	return ""
}

type isSubtitle_ParentId interface {
	isSubtitle_ParentId()
}

type Subtitle_VideoId struct {
	// ID of the video.
	VideoId string `protobuf:"bytes,1000,opt,name=video_id,json=videoId,proto3,oneof"`
}

func (*Subtitle_VideoId) isSubtitle_ParentId() {}

var File_yandex_cloud_video_v1_subtitle_proto protoreflect.FileDescriptor

const file_yandex_cloud_video_v1_subtitle_proto_rawDesc = "" +
	"\n" +
	"$yandex/cloud/video/v1/subtitle.proto\x12\x15yandex.cloud.video.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xdf\x04\n" +
	"\bSubtitle\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\blanguage\x18\x02 \x01(\tR\blanguage\x12\x14\n" +
	"\x05label\x18\x03 \x01(\tR\x05label\x12F\n" +
	"\x06status\x18\x04 \x01(\x0e2..yandex.cloud.video.v1.Subtitle.SubtitleStatusR\x06status\x12S\n" +
	"\vsource_type\x18\x06 \x01(\x0e22.yandex.cloud.video.v1.Subtitle.SubtitleSourceTypeR\n" +
	"sourceType\x12\x1a\n" +
	"\bfilename\x18\x05 \x01(\tR\bfilename\x129\n" +
	"\n" +
	"created_at\x18d \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18e \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1c\n" +
	"\bvideo_id\x18\xe8\a \x01(\tH\x00R\avideoId\"S\n" +
	"\x0eSubtitleStatus\x12\x1f\n" +
	"\x1bSUBTITLE_STATUS_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eWAIT_UPLOADING\x10\x01\x12\f\n" +
	"\bUPLOADED\x10\x02\"U\n" +
	"\x12SubtitleSourceType\x12$\n" +
	" SUBTITLE_SOURCE_TYPE_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06MANUAL\x10\x01\x12\r\n" +
	"\tGENERATED\x10\x02B\v\n" +
	"\tparent_idJ\x04\b\a\x10dJ\x05\bf\x10\xe8\aB\\\n" +
	"\x19yandex.cloud.api.video.v1Z?github.com/yandex-cloud/go-genproto/yandex/cloud/video/v1;videob\x06proto3"

var (
	file_yandex_cloud_video_v1_subtitle_proto_rawDescOnce sync.Once
	file_yandex_cloud_video_v1_subtitle_proto_rawDescData []byte
)

func file_yandex_cloud_video_v1_subtitle_proto_rawDescGZIP() []byte {
	file_yandex_cloud_video_v1_subtitle_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_video_v1_subtitle_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_video_v1_subtitle_proto_rawDesc), len(file_yandex_cloud_video_v1_subtitle_proto_rawDesc)))
	})
	return file_yandex_cloud_video_v1_subtitle_proto_rawDescData
}

var file_yandex_cloud_video_v1_subtitle_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_yandex_cloud_video_v1_subtitle_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_yandex_cloud_video_v1_subtitle_proto_goTypes = []any{
	(Subtitle_SubtitleStatus)(0),     // 0: yandex.cloud.video.v1.Subtitle.SubtitleStatus
	(Subtitle_SubtitleSourceType)(0), // 1: yandex.cloud.video.v1.Subtitle.SubtitleSourceType
	(*Subtitle)(nil),                 // 2: yandex.cloud.video.v1.Subtitle
	(*timestamppb.Timestamp)(nil),    // 3: google.protobuf.Timestamp
}
var file_yandex_cloud_video_v1_subtitle_proto_depIdxs = []int32{
	0, // 0: yandex.cloud.video.v1.Subtitle.status:type_name -> yandex.cloud.video.v1.Subtitle.SubtitleStatus
	1, // 1: yandex.cloud.video.v1.Subtitle.source_type:type_name -> yandex.cloud.video.v1.Subtitle.SubtitleSourceType
	3, // 2: yandex.cloud.video.v1.Subtitle.created_at:type_name -> google.protobuf.Timestamp
	3, // 3: yandex.cloud.video.v1.Subtitle.updated_at:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_yandex_cloud_video_v1_subtitle_proto_init() }
func file_yandex_cloud_video_v1_subtitle_proto_init() {
	if File_yandex_cloud_video_v1_subtitle_proto != nil {
		return
	}
	file_yandex_cloud_video_v1_subtitle_proto_msgTypes[0].OneofWrappers = []any{
		(*Subtitle_VideoId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_video_v1_subtitle_proto_rawDesc), len(file_yandex_cloud_video_v1_subtitle_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yandex_cloud_video_v1_subtitle_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_video_v1_subtitle_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_video_v1_subtitle_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_video_v1_subtitle_proto_msgTypes,
	}.Build()
	File_yandex_cloud_video_v1_subtitle_proto = out.File
	file_yandex_cloud_video_v1_subtitle_proto_goTypes = nil
	file_yandex_cloud_video_v1_subtitle_proto_depIdxs = nil
}

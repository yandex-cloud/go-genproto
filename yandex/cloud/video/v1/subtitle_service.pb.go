// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/video/v1/subtitle_service.proto

package video

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSubtitleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subtitle.
	SubtitleId    string `protobuf:"bytes,1,opt,name=subtitle_id,json=subtitleId,proto3" json:"subtitle_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubtitleRequest) Reset() {
	*x = GetSubtitleRequest{}
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubtitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubtitleRequest) ProtoMessage() {}

func (x *GetSubtitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubtitleRequest.ProtoReflect.Descriptor instead.
func (*GetSubtitleRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_subtitle_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetSubtitleRequest) GetSubtitleId() string {
	if x != nil {
		return x.SubtitleId
	}
	return ""
}

type ListSubtitlesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of the results per page to return.
	// Default value: 100.
	PageSize int64 `protobuf:"varint,100,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token for getting the next page of the result.
	PageToken string `protobuf:"bytes,101,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Types that are valid to be assigned to ParentId:
	//
	//	*ListSubtitlesRequest_VideoId
	ParentId      isListSubtitlesRequest_ParentId `protobuf_oneof:"parent_id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubtitlesRequest) Reset() {
	*x = ListSubtitlesRequest{}
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubtitlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubtitlesRequest) ProtoMessage() {}

func (x *ListSubtitlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubtitlesRequest.ProtoReflect.Descriptor instead.
func (*ListSubtitlesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_subtitle_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListSubtitlesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSubtitlesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListSubtitlesRequest) GetParentId() isListSubtitlesRequest_ParentId {
	if x != nil {
		return x.ParentId
	}
	return nil
}

func (x *ListSubtitlesRequest) GetVideoId() string {
	if x != nil {
		if x, ok := x.ParentId.(*ListSubtitlesRequest_VideoId); ok {
			return x.VideoId
		}
	}
	return ""
}

type isListSubtitlesRequest_ParentId interface {
	isListSubtitlesRequest_ParentId()
}

type ListSubtitlesRequest_VideoId struct {
	// ID of the video.
	VideoId string `protobuf:"bytes,1000,opt,name=video_id,json=videoId,proto3,oneof"`
}

func (*ListSubtitlesRequest_VideoId) isListSubtitlesRequest_ParentId() {}

type ListSubtitlesResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Subtitles []*Subtitle            `protobuf:"bytes,1,rep,name=subtitles,proto3" json:"subtitles,omitempty"`
	// Token for getting the next page.
	NextPageToken string `protobuf:"bytes,100,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubtitlesResponse) Reset() {
	*x = ListSubtitlesResponse{}
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubtitlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubtitlesResponse) ProtoMessage() {}

func (x *ListSubtitlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubtitlesResponse.ProtoReflect.Descriptor instead.
func (*ListSubtitlesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_subtitle_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListSubtitlesResponse) GetSubtitles() []*Subtitle {
	if x != nil {
		return x.Subtitles
	}
	return nil
}

func (x *ListSubtitlesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateSubtitleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Subtitle language represented as a three-letter code according to ISO 639-2/T.
	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	// Contains the subtitle label (or title) that will be displayed on screen during video playback.
	// Should provide a concise and accurate representation of the spoken content.
	// If not provided, it will be auto-generated based on the specified language.
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	// Types that are valid to be assigned to ParentId:
	//
	//	*CreateSubtitleRequest_VideoId
	ParentId isCreateSubtitleRequest_ParentId `protobuf_oneof:"parent_id"`
	// Source type.
	//
	// Types that are valid to be assigned to Source:
	//
	//	*CreateSubtitleRequest_Upload
	Source        isCreateSubtitleRequest_Source `protobuf_oneof:"source"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubtitleRequest) Reset() {
	*x = CreateSubtitleRequest{}
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubtitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubtitleRequest) ProtoMessage() {}

func (x *CreateSubtitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubtitleRequest.ProtoReflect.Descriptor instead.
func (*CreateSubtitleRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_subtitle_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSubtitleRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *CreateSubtitleRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *CreateSubtitleRequest) GetParentId() isCreateSubtitleRequest_ParentId {
	if x != nil {
		return x.ParentId
	}
	return nil
}

func (x *CreateSubtitleRequest) GetVideoId() string {
	if x != nil {
		if x, ok := x.ParentId.(*CreateSubtitleRequest_VideoId); ok {
			return x.VideoId
		}
	}
	return ""
}

func (x *CreateSubtitleRequest) GetSource() isCreateSubtitleRequest_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *CreateSubtitleRequest) GetUpload() *SubtitleUploadParams {
	if x != nil {
		if x, ok := x.Source.(*CreateSubtitleRequest_Upload); ok {
			return x.Upload
		}
	}
	return nil
}

type isCreateSubtitleRequest_ParentId interface {
	isCreateSubtitleRequest_ParentId()
}

type CreateSubtitleRequest_VideoId struct {
	// ID of the video.
	VideoId string `protobuf:"bytes,1000,opt,name=video_id,json=videoId,proto3,oneof"`
}

func (*CreateSubtitleRequest_VideoId) isCreateSubtitleRequest_ParentId() {}

type isCreateSubtitleRequest_Source interface {
	isCreateSubtitleRequest_Source()
}

type CreateSubtitleRequest_Upload struct {
	// Upload subtitle.
	Upload *SubtitleUploadParams `protobuf:"bytes,1100,opt,name=upload,proto3,oneof"`
}

func (*CreateSubtitleRequest_Upload) isCreateSubtitleRequest_Source() {}

type SubtitleUploadParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubtitleUploadParams) Reset() {
	*x = SubtitleUploadParams{}
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubtitleUploadParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubtitleUploadParams) ProtoMessage() {}

func (x *SubtitleUploadParams) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubtitleUploadParams.ProtoReflect.Descriptor instead.
func (*SubtitleUploadParams) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_subtitle_service_proto_rawDescGZIP(), []int{4}
}

func (x *SubtitleUploadParams) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type CreateSubtitleMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subtitle.
	SubtitleId    string `protobuf:"bytes,1,opt,name=subtitle_id,json=subtitleId,proto3" json:"subtitle_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubtitleMetadata) Reset() {
	*x = CreateSubtitleMetadata{}
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubtitleMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubtitleMetadata) ProtoMessage() {}

func (x *CreateSubtitleMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubtitleMetadata.ProtoReflect.Descriptor instead.
func (*CreateSubtitleMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_subtitle_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateSubtitleMetadata) GetSubtitleId() string {
	if x != nil {
		return x.SubtitleId
	}
	return ""
}

type GenerateSubtitleUploadURLRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subtitle.
	SubtitleId    string `protobuf:"bytes,1,opt,name=subtitle_id,json=subtitleId,proto3" json:"subtitle_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateSubtitleUploadURLRequest) Reset() {
	*x = GenerateSubtitleUploadURLRequest{}
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateSubtitleUploadURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateSubtitleUploadURLRequest) ProtoMessage() {}

func (x *GenerateSubtitleUploadURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateSubtitleUploadURLRequest.ProtoReflect.Descriptor instead.
func (*GenerateSubtitleUploadURLRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_subtitle_service_proto_rawDescGZIP(), []int{6}
}

func (x *GenerateSubtitleUploadURLRequest) GetSubtitleId() string {
	if x != nil {
		return x.SubtitleId
	}
	return ""
}

type GenerateSubtitleUploadURLResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Upload url.
	UploadUrl     string `protobuf:"bytes,1,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateSubtitleUploadURLResponse) Reset() {
	*x = GenerateSubtitleUploadURLResponse{}
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateSubtitleUploadURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateSubtitleUploadURLResponse) ProtoMessage() {}

func (x *GenerateSubtitleUploadURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateSubtitleUploadURLResponse.ProtoReflect.Descriptor instead.
func (*GenerateSubtitleUploadURLResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_subtitle_service_proto_rawDescGZIP(), []int{7}
}

func (x *GenerateSubtitleUploadURLResponse) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

type DeleteSubtitleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subtitle.
	SubtitleId    string `protobuf:"bytes,1,opt,name=subtitle_id,json=subtitleId,proto3" json:"subtitle_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSubtitleRequest) Reset() {
	*x = DeleteSubtitleRequest{}
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSubtitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubtitleRequest) ProtoMessage() {}

func (x *DeleteSubtitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubtitleRequest.ProtoReflect.Descriptor instead.
func (*DeleteSubtitleRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_subtitle_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteSubtitleRequest) GetSubtitleId() string {
	if x != nil {
		return x.SubtitleId
	}
	return ""
}

type DeleteSubtitleMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the subtitle.
	SubtitleId    string `protobuf:"bytes,1,opt,name=subtitle_id,json=subtitleId,proto3" json:"subtitle_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSubtitleMetadata) Reset() {
	*x = DeleteSubtitleMetadata{}
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSubtitleMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubtitleMetadata) ProtoMessage() {}

func (x *DeleteSubtitleMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubtitleMetadata.ProtoReflect.Descriptor instead.
func (*DeleteSubtitleMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_subtitle_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteSubtitleMetadata) GetSubtitleId() string {
	if x != nil {
		return x.SubtitleId
	}
	return ""
}

var File_yandex_cloud_video_v1_subtitle_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_video_v1_subtitle_service_proto_rawDesc = "" +
	"\n" +
	",yandex/cloud/video/v1/subtitle_service.proto\x12\x15yandex.cloud.video.v1\x1a\x1cgoogle/api/annotations.proto\x1a yandex/cloud/api/operation.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\x1a$yandex/cloud/video/v1/subtitle.proto\"C\n" +
	"\x12GetSubtitleRequest\x12-\n" +
	"\vsubtitle_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"subtitleId\"\xb2\x01\n" +
	"\x14ListSubtitlesRequest\x12&\n" +
	"\tpage_size\x18d \x01(\x03B\t\xfa\xc71\x05<=100R\bpageSize\x12*\n" +
	"\n" +
	"page_token\x18e \x01(\tB\v\x8a\xc81\a<=15000R\tpageToken\x12&\n" +
	"\bvideo_id\x18\xe8\a \x01(\tB\b\x8a\xc81\x04<=50H\x00R\avideoIdB\x11\n" +
	"\tparent_id\x12\x04\xc0\xc11\x01J\x04\b\x01\x10dJ\x05\bf\x10\xe8\a\"\x84\x01\n" +
	"\x15ListSubtitlesResponse\x12=\n" +
	"\tsubtitles\x18\x01 \x03(\v2\x1f.yandex.cloud.video.v1.SubtitleR\tsubtitles\x12&\n" +
	"\x0fnext_page_token\x18d \x01(\tR\rnextPageTokenJ\x04\b\x02\x10d\"\xa7\x02\n" +
	"\x15CreateSubtitleRequest\x12L\n" +
	"\blanguage\x18\x01 \x01(\tB0\xf2\xc71'deu|eng|fra|ita|jpn|kaz|rus|spa|ukr|zho\x8a\xc81\x013R\blanguage\x12\x1e\n" +
	"\x05label\x18\x02 \x01(\tB\b\x8a\xc81\x04<=50R\x05label\x12&\n" +
	"\bvideo_id\x18\xe8\a \x01(\tB\b\x8a\xc81\x04<=50H\x00R\avideoId\x12F\n" +
	"\x06upload\x18\xcc\b \x01(\v2+.yandex.cloud.video.v1.SubtitleUploadParamsH\x01R\x06uploadB\x11\n" +
	"\tparent_id\x12\x04\xc0\xc11\x01B\x0e\n" +
	"\x06source\x12\x04\xc0\xc11\x01J\x05\b\x03\x10\xe8\aJ\x06\b\xe9\a\x10\xcc\b\"8\n" +
	"\x14SubtitleUploadParams\x12 \n" +
	"\bfilename\x18\x01 \x01(\tB\x04\xe8\xc71\x01R\bfilename\"9\n" +
	"\x16CreateSubtitleMetadata\x12\x1f\n" +
	"\vsubtitle_id\x18\x01 \x01(\tR\n" +
	"subtitleId\"Q\n" +
	" GenerateSubtitleUploadURLRequest\x12-\n" +
	"\vsubtitle_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"subtitleId\"B\n" +
	"!GenerateSubtitleUploadURLResponse\x12\x1d\n" +
	"\n" +
	"upload_url\x18\x01 \x01(\tR\tuploadUrl\"F\n" +
	"\x15DeleteSubtitleRequest\x12-\n" +
	"\vsubtitle_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\n" +
	"subtitleId\"9\n" +
	"\x16DeleteSubtitleMetadata\x12\x1f\n" +
	"\vsubtitle_id\x18\x01 \x01(\tR\n" +
	"subtitleId2\xb1\x06\n" +
	"\x0fSubtitleService\x12|\n" +
	"\x03Get\x12).yandex.cloud.video.v1.GetSubtitleRequest\x1a\x1f.yandex.cloud.video.v1.Subtitle\")\x82\xd3\xe4\x93\x02#\x12!/video/v1/subtitles/{subtitle_id}\x12~\n" +
	"\x04List\x12+.yandex.cloud.video.v1.ListSubtitlesRequest\x1a,.yandex.cloud.video.v1.ListSubtitlesResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/video/v1/subtitles\x12\x9f\x01\n" +
	"\x06Create\x12,.yandex.cloud.video.v1.CreateSubtitleRequest\x1a!.yandex.cloud.operation.Operation\"D\xb2\xd2*\"\n" +
	"\x16CreateSubtitleMetadata\x12\bSubtitle\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/video/v1/subtitles\x12\xc3\x01\n" +
	"\x11GenerateUploadURL\x127.yandex.cloud.video.v1.GenerateSubtitleUploadURLRequest\x1a8.yandex.cloud.video.v1.GenerateSubtitleUploadURLResponse\";\x82\xd3\xe4\x93\x025\x123/video/v1/subtitles/{subtitle_id}:generateUploadURL\x12\xb7\x01\n" +
	"\x06Delete\x12,.yandex.cloud.video.v1.DeleteSubtitleRequest\x1a!.yandex.cloud.operation.Operation\"\\\xb2\xd2*/\n" +
	"\x16DeleteSubtitleMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02#*!/video/v1/subtitles/{subtitle_id}B\\\n" +
	"\x19yandex.cloud.api.video.v1Z?github.com/yandex-cloud/go-genproto/yandex/cloud/video/v1;videob\x06proto3"

var (
	file_yandex_cloud_video_v1_subtitle_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_video_v1_subtitle_service_proto_rawDescData []byte
)

func file_yandex_cloud_video_v1_subtitle_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_video_v1_subtitle_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_video_v1_subtitle_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_video_v1_subtitle_service_proto_rawDesc), len(file_yandex_cloud_video_v1_subtitle_service_proto_rawDesc)))
	})
	return file_yandex_cloud_video_v1_subtitle_service_proto_rawDescData
}

var file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_yandex_cloud_video_v1_subtitle_service_proto_goTypes = []any{
	(*GetSubtitleRequest)(nil),                // 0: yandex.cloud.video.v1.GetSubtitleRequest
	(*ListSubtitlesRequest)(nil),              // 1: yandex.cloud.video.v1.ListSubtitlesRequest
	(*ListSubtitlesResponse)(nil),             // 2: yandex.cloud.video.v1.ListSubtitlesResponse
	(*CreateSubtitleRequest)(nil),             // 3: yandex.cloud.video.v1.CreateSubtitleRequest
	(*SubtitleUploadParams)(nil),              // 4: yandex.cloud.video.v1.SubtitleUploadParams
	(*CreateSubtitleMetadata)(nil),            // 5: yandex.cloud.video.v1.CreateSubtitleMetadata
	(*GenerateSubtitleUploadURLRequest)(nil),  // 6: yandex.cloud.video.v1.GenerateSubtitleUploadURLRequest
	(*GenerateSubtitleUploadURLResponse)(nil), // 7: yandex.cloud.video.v1.GenerateSubtitleUploadURLResponse
	(*DeleteSubtitleRequest)(nil),             // 8: yandex.cloud.video.v1.DeleteSubtitleRequest
	(*DeleteSubtitleMetadata)(nil),            // 9: yandex.cloud.video.v1.DeleteSubtitleMetadata
	(*Subtitle)(nil),                          // 10: yandex.cloud.video.v1.Subtitle
	(*operation.Operation)(nil),               // 11: yandex.cloud.operation.Operation
}
var file_yandex_cloud_video_v1_subtitle_service_proto_depIdxs = []int32{
	10, // 0: yandex.cloud.video.v1.ListSubtitlesResponse.subtitles:type_name -> yandex.cloud.video.v1.Subtitle
	4,  // 1: yandex.cloud.video.v1.CreateSubtitleRequest.upload:type_name -> yandex.cloud.video.v1.SubtitleUploadParams
	0,  // 2: yandex.cloud.video.v1.SubtitleService.Get:input_type -> yandex.cloud.video.v1.GetSubtitleRequest
	1,  // 3: yandex.cloud.video.v1.SubtitleService.List:input_type -> yandex.cloud.video.v1.ListSubtitlesRequest
	3,  // 4: yandex.cloud.video.v1.SubtitleService.Create:input_type -> yandex.cloud.video.v1.CreateSubtitleRequest
	6,  // 5: yandex.cloud.video.v1.SubtitleService.GenerateUploadURL:input_type -> yandex.cloud.video.v1.GenerateSubtitleUploadURLRequest
	8,  // 6: yandex.cloud.video.v1.SubtitleService.Delete:input_type -> yandex.cloud.video.v1.DeleteSubtitleRequest
	10, // 7: yandex.cloud.video.v1.SubtitleService.Get:output_type -> yandex.cloud.video.v1.Subtitle
	2,  // 8: yandex.cloud.video.v1.SubtitleService.List:output_type -> yandex.cloud.video.v1.ListSubtitlesResponse
	11, // 9: yandex.cloud.video.v1.SubtitleService.Create:output_type -> yandex.cloud.operation.Operation
	7,  // 10: yandex.cloud.video.v1.SubtitleService.GenerateUploadURL:output_type -> yandex.cloud.video.v1.GenerateSubtitleUploadURLResponse
	11, // 11: yandex.cloud.video.v1.SubtitleService.Delete:output_type -> yandex.cloud.operation.Operation
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_yandex_cloud_video_v1_subtitle_service_proto_init() }
func file_yandex_cloud_video_v1_subtitle_service_proto_init() {
	if File_yandex_cloud_video_v1_subtitle_service_proto != nil {
		return
	}
	file_yandex_cloud_video_v1_subtitle_proto_init()
	file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[1].OneofWrappers = []any{
		(*ListSubtitlesRequest_VideoId)(nil),
	}
	file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes[3].OneofWrappers = []any{
		(*CreateSubtitleRequest_VideoId)(nil),
		(*CreateSubtitleRequest_Upload)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_video_v1_subtitle_service_proto_rawDesc), len(file_yandex_cloud_video_v1_subtitle_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_video_v1_subtitle_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_video_v1_subtitle_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_video_v1_subtitle_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_video_v1_subtitle_service_proto = out.File
	file_yandex_cloud_video_v1_subtitle_service_proto_goTypes = nil
	file_yandex_cloud_video_v1_subtitle_service_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/video/v1/thumbnail_service.proto

package video

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Image format of a thumbnail.
type ThumbnailDownloadURL_ImageFormat int32

const (
	// The image format is not specified.
	ThumbnailDownloadURL_IMAGE_FORMAT_UNSPECIFIED ThumbnailDownloadURL_ImageFormat = 0
	// JPEG image format.
	// Provides good compression with some quality loss.
	// Widely supported across all platforms and browsers.
	ThumbnailDownloadURL_JPEG ThumbnailDownloadURL_ImageFormat = 1
	// WebP image format.
	// Provides better compression than JPEG with similar quality.
	// May not be supported on all platforms and older browsers.
	ThumbnailDownloadURL_WEBP ThumbnailDownloadURL_ImageFormat = 2
)

// Enum value maps for ThumbnailDownloadURL_ImageFormat.
var (
	ThumbnailDownloadURL_ImageFormat_name = map[int32]string{
		0: "IMAGE_FORMAT_UNSPECIFIED",
		1: "JPEG",
		2: "WEBP",
	}
	ThumbnailDownloadURL_ImageFormat_value = map[string]int32{
		"IMAGE_FORMAT_UNSPECIFIED": 0,
		"JPEG":                     1,
		"WEBP":                     2,
	}
)

func (x ThumbnailDownloadURL_ImageFormat) Enum() *ThumbnailDownloadURL_ImageFormat {
	p := new(ThumbnailDownloadURL_ImageFormat)
	*p = x
	return p
}

func (x ThumbnailDownloadURL_ImageFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThumbnailDownloadURL_ImageFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_yandex_cloud_video_v1_thumbnail_service_proto_enumTypes[0].Descriptor()
}

func (ThumbnailDownloadURL_ImageFormat) Type() protoreflect.EnumType {
	return &file_yandex_cloud_video_v1_thumbnail_service_proto_enumTypes[0]
}

func (x ThumbnailDownloadURL_ImageFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThumbnailDownloadURL_ImageFormat.Descriptor instead.
func (ThumbnailDownloadURL_ImageFormat) EnumDescriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescGZIP(), []int{7, 0}
}

type GetThumbnailRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the thumbnail to retrieve.
	// Must be a valid thumbnail identifier string.
	ThumbnailId   string `protobuf:"bytes,1,opt,name=thumbnail_id,json=thumbnailId,proto3" json:"thumbnail_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThumbnailRequest) Reset() {
	*x = GetThumbnailRequest{}
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThumbnailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThumbnailRequest) ProtoMessage() {}

func (x *GetThumbnailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThumbnailRequest.ProtoReflect.Descriptor instead.
func (*GetThumbnailRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetThumbnailRequest) GetThumbnailId() string {
	if x != nil {
		return x.ThumbnailId
	}
	return ""
}

type ListThumbnailRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// [Deprecated] ID of the channel.
	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// Types that are valid to be assigned to ParentId:
	//
	//	*ListThumbnailRequest_EpisodeId
	//	*ListThumbnailRequest_VideoId
	ParentId isListThumbnailRequest_ParentId `protobuf_oneof:"parent_id"`
	// The maximum number of thumbnails to return per page.
	PageSize int64 `protobuf:"varint,100,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token for retrieving the next page of results.
	// This token is obtained from the next_page_token field in the previous ListThumbnailResponse.
	PageToken     string `protobuf:"bytes,101,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListThumbnailRequest) Reset() {
	*x = ListThumbnailRequest{}
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListThumbnailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThumbnailRequest) ProtoMessage() {}

func (x *ListThumbnailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThumbnailRequest.ProtoReflect.Descriptor instead.
func (*ListThumbnailRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListThumbnailRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ListThumbnailRequest) GetParentId() isListThumbnailRequest_ParentId {
	if x != nil {
		return x.ParentId
	}
	return nil
}

func (x *ListThumbnailRequest) GetEpisodeId() string {
	if x != nil {
		if x, ok := x.ParentId.(*ListThumbnailRequest_EpisodeId); ok {
			return x.EpisodeId
		}
	}
	return ""
}

func (x *ListThumbnailRequest) GetVideoId() string {
	if x != nil {
		if x, ok := x.ParentId.(*ListThumbnailRequest_VideoId); ok {
			return x.VideoId
		}
	}
	return ""
}

func (x *ListThumbnailRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListThumbnailRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type isListThumbnailRequest_ParentId interface {
	isListThumbnailRequest_ParentId()
}

type ListThumbnailRequest_EpisodeId struct {
	// ID of the episode containing the thumbnails to list.
	EpisodeId string `protobuf:"bytes,1003,opt,name=episode_id,json=episodeId,proto3,oneof"`
}

type ListThumbnailRequest_VideoId struct {
	// ID of the video containing the thumbnails to list.
	VideoId string `protobuf:"bytes,1004,opt,name=video_id,json=videoId,proto3,oneof"`
}

func (*ListThumbnailRequest_EpisodeId) isListThumbnailRequest_ParentId() {}

func (*ListThumbnailRequest_VideoId) isListThumbnailRequest_ParentId() {}

type ListThumbnailResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of thumbnails matching the request criteria.
	// May be empty if no thumbnails match the criteria or if the parent resource has no thumbnails.
	Thumbnails []*Thumbnail `protobuf:"bytes,1,rep,name=thumbnails,proto3" json:"thumbnails,omitempty"`
	// Token for retrieving the next page of results.
	// Empty if there are no more results available.
	NextPageToken string `protobuf:"bytes,100,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListThumbnailResponse) Reset() {
	*x = ListThumbnailResponse{}
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListThumbnailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThumbnailResponse) ProtoMessage() {}

func (x *ListThumbnailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThumbnailResponse.ProtoReflect.Descriptor instead.
func (*ListThumbnailResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListThumbnailResponse) GetThumbnails() []*Thumbnail {
	if x != nil {
		return x.Thumbnails
	}
	return nil
}

func (x *ListThumbnailResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateThumbnailRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// [Deprecated] ID of the channel.
	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// Types that are valid to be assigned to ParentId:
	//
	//	*CreateThumbnailRequest_EpisodeId
	//	*CreateThumbnailRequest_VideoId
	ParentId      isCreateThumbnailRequest_ParentId `protobuf_oneof:"parent_id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateThumbnailRequest) Reset() {
	*x = CreateThumbnailRequest{}
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateThumbnailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateThumbnailRequest) ProtoMessage() {}

func (x *CreateThumbnailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateThumbnailRequest.ProtoReflect.Descriptor instead.
func (*CreateThumbnailRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateThumbnailRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *CreateThumbnailRequest) GetParentId() isCreateThumbnailRequest_ParentId {
	if x != nil {
		return x.ParentId
	}
	return nil
}

func (x *CreateThumbnailRequest) GetEpisodeId() string {
	if x != nil {
		if x, ok := x.ParentId.(*CreateThumbnailRequest_EpisodeId); ok {
			return x.EpisodeId
		}
	}
	return ""
}

func (x *CreateThumbnailRequest) GetVideoId() string {
	if x != nil {
		if x, ok := x.ParentId.(*CreateThumbnailRequest_VideoId); ok {
			return x.VideoId
		}
	}
	return ""
}

type isCreateThumbnailRequest_ParentId interface {
	isCreateThumbnailRequest_ParentId()
}

type CreateThumbnailRequest_EpisodeId struct {
	// ID of the episode to associate the thumbnail with.
	EpisodeId string `protobuf:"bytes,1003,opt,name=episode_id,json=episodeId,proto3,oneof"`
}

type CreateThumbnailRequest_VideoId struct {
	// ID of the video to associate the thumbnail with.
	VideoId string `protobuf:"bytes,1004,opt,name=video_id,json=videoId,proto3,oneof"`
}

func (*CreateThumbnailRequest_EpisodeId) isCreateThumbnailRequest_ParentId() {}

func (*CreateThumbnailRequest_VideoId) isCreateThumbnailRequest_ParentId() {}

type CreateThumbnailMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the thumbnail being created.
	ThumbnailId   string `protobuf:"bytes,1,opt,name=thumbnail_id,json=thumbnailId,proto3" json:"thumbnail_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateThumbnailMetadata) Reset() {
	*x = CreateThumbnailMetadata{}
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateThumbnailMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateThumbnailMetadata) ProtoMessage() {}

func (x *CreateThumbnailMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateThumbnailMetadata.ProtoReflect.Descriptor instead.
func (*CreateThumbnailMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateThumbnailMetadata) GetThumbnailId() string {
	if x != nil {
		return x.ThumbnailId
	}
	return ""
}

type BatchGenerateDownloadURLsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the channel containing the thumbnails.
	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// List of thumbnail IDs for which to generate download URLs.
	ThumbnailIds  []string `protobuf:"bytes,2,rep,name=thumbnail_ids,json=thumbnailIds,proto3" json:"thumbnail_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGenerateDownloadURLsRequest) Reset() {
	*x = BatchGenerateDownloadURLsRequest{}
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGenerateDownloadURLsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGenerateDownloadURLsRequest) ProtoMessage() {}

func (x *BatchGenerateDownloadURLsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGenerateDownloadURLsRequest.ProtoReflect.Descriptor instead.
func (*BatchGenerateDownloadURLsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescGZIP(), []int{5}
}

func (x *BatchGenerateDownloadURLsRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *BatchGenerateDownloadURLsRequest) GetThumbnailIds() []string {
	if x != nil {
		return x.ThumbnailIds
	}
	return nil
}

type BatchGenerateDownloadURLsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of download URLs for the requested thumbnails.
	// Each entry contains URLs for both the original image and various scaled versions.
	DownloadUrls  []*ThumbnailDownloadURL `protobuf:"bytes,1,rep,name=download_urls,json=downloadUrls,proto3" json:"download_urls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGenerateDownloadURLsResponse) Reset() {
	*x = BatchGenerateDownloadURLsResponse{}
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGenerateDownloadURLsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGenerateDownloadURLsResponse) ProtoMessage() {}

func (x *BatchGenerateDownloadURLsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGenerateDownloadURLsResponse.ProtoReflect.Descriptor instead.
func (*BatchGenerateDownloadURLsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescGZIP(), []int{6}
}

func (x *BatchGenerateDownloadURLsResponse) GetDownloadUrls() []*ThumbnailDownloadURL {
	if x != nil {
		return x.DownloadUrls
	}
	return nil
}

type ThumbnailDownloadURL struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the thumbnail for which download URLs are provided.
	ThumbnailId string `protobuf:"bytes,1,opt,name=thumbnail_id,json=thumbnailId,proto3" json:"thumbnail_id,omitempty"`
	// URL for downloading the original, unmodified thumbnail image.
	// This provides access to the image at its original resolution and format.
	OriginalUrl string `protobuf:"bytes,2,opt,name=original_url,json=originalUrl,proto3" json:"original_url,omitempty"`
	// List of URLs for downloading scaled versions of the thumbnail.
	// Different scaled versions are optimized for different display sizes and purposes.
	ScaledUrls    []*ThumbnailDownloadURL_ScaledURL `protobuf:"bytes,3,rep,name=scaled_urls,json=scaledUrls,proto3" json:"scaled_urls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThumbnailDownloadURL) Reset() {
	*x = ThumbnailDownloadURL{}
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThumbnailDownloadURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThumbnailDownloadURL) ProtoMessage() {}

func (x *ThumbnailDownloadURL) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThumbnailDownloadURL.ProtoReflect.Descriptor instead.
func (*ThumbnailDownloadURL) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescGZIP(), []int{7}
}

func (x *ThumbnailDownloadURL) GetThumbnailId() string {
	if x != nil {
		return x.ThumbnailId
	}
	return ""
}

func (x *ThumbnailDownloadURL) GetOriginalUrl() string {
	if x != nil {
		return x.OriginalUrl
	}
	return ""
}

func (x *ThumbnailDownloadURL) GetScaledUrls() []*ThumbnailDownloadURL_ScaledURL {
	if x != nil {
		return x.ScaledUrls
	}
	return nil
}

type GenerateThumbnailUploadURLRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the thumbnail for which to generate an upload URL.
	// The thumbnail record must already exist, typically created using the Create method.
	ThumbnailId   string `protobuf:"bytes,1,opt,name=thumbnail_id,json=thumbnailId,proto3" json:"thumbnail_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateThumbnailUploadURLRequest) Reset() {
	*x = GenerateThumbnailUploadURLRequest{}
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateThumbnailUploadURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateThumbnailUploadURLRequest) ProtoMessage() {}

func (x *GenerateThumbnailUploadURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateThumbnailUploadURLRequest.ProtoReflect.Descriptor instead.
func (*GenerateThumbnailUploadURLRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescGZIP(), []int{8}
}

func (x *GenerateThumbnailUploadURLRequest) GetThumbnailId() string {
	if x != nil {
		return x.ThumbnailId
	}
	return ""
}

type GenerateThumbnailUploadURLResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pre-signed URL for uploading the thumbnail image.
	// This URL can be used with an HTTP PUT request to upload the image file.
	// The URL has a limited validity period and will expire after a certain time.
	UploadUrl     string `protobuf:"bytes,1,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateThumbnailUploadURLResponse) Reset() {
	*x = GenerateThumbnailUploadURLResponse{}
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateThumbnailUploadURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateThumbnailUploadURLResponse) ProtoMessage() {}

func (x *GenerateThumbnailUploadURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateThumbnailUploadURLResponse.ProtoReflect.Descriptor instead.
func (*GenerateThumbnailUploadURLResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescGZIP(), []int{9}
}

func (x *GenerateThumbnailUploadURLResponse) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

type DeleteThumbnailRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the thumbnail to delete.
	ThumbnailId   string `protobuf:"bytes,1,opt,name=thumbnail_id,json=thumbnailId,proto3" json:"thumbnail_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteThumbnailRequest) Reset() {
	*x = DeleteThumbnailRequest{}
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteThumbnailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteThumbnailRequest) ProtoMessage() {}

func (x *DeleteThumbnailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteThumbnailRequest.ProtoReflect.Descriptor instead.
func (*DeleteThumbnailRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteThumbnailRequest) GetThumbnailId() string {
	if x != nil {
		return x.ThumbnailId
	}
	return ""
}

type DeleteThumbnailMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the thumbnail being deleted.
	// This identifier can be used to track the thumbnail deletion operation.
	ThumbnailId   string `protobuf:"bytes,1,opt,name=thumbnail_id,json=thumbnailId,proto3" json:"thumbnail_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteThumbnailMetadata) Reset() {
	*x = DeleteThumbnailMetadata{}
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteThumbnailMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteThumbnailMetadata) ProtoMessage() {}

func (x *DeleteThumbnailMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteThumbnailMetadata.ProtoReflect.Descriptor instead.
func (*DeleteThumbnailMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteThumbnailMetadata) GetThumbnailId() string {
	if x != nil {
		return x.ThumbnailId
	}
	return ""
}

// Represents a URL for a specific scaled version of a thumbnail image.
type ThumbnailDownloadURL_ScaledURL struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// URL for downloading this scaled version of the thumbnail.
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// Maximum width in pixels of the scaled image.
	// The actual width may be smaller to maintain the aspect ratio.
	MaxWidth int64 `protobuf:"varint,2,opt,name=max_width,json=maxWidth,proto3" json:"max_width,omitempty"`
	// Maximum height in pixels of the scaled image.
	// The actual height may be smaller to maintain the aspect ratio.
	MaxHeight int64 `protobuf:"varint,3,opt,name=max_height,json=maxHeight,proto3" json:"max_height,omitempty"`
	// Format of the scaled image (JPEG, WebP, etc.).
	// Different formats offer different trade-offs between quality and file size.
	ImageFormat   ThumbnailDownloadURL_ImageFormat `protobuf:"varint,4,opt,name=image_format,json=imageFormat,proto3,enum=yandex.cloud.video.v1.ThumbnailDownloadURL_ImageFormat" json:"image_format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThumbnailDownloadURL_ScaledURL) Reset() {
	*x = ThumbnailDownloadURL_ScaledURL{}
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThumbnailDownloadURL_ScaledURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThumbnailDownloadURL_ScaledURL) ProtoMessage() {}

func (x *ThumbnailDownloadURL_ScaledURL) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThumbnailDownloadURL_ScaledURL.ProtoReflect.Descriptor instead.
func (*ThumbnailDownloadURL_ScaledURL) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ThumbnailDownloadURL_ScaledURL) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ThumbnailDownloadURL_ScaledURL) GetMaxWidth() int64 {
	if x != nil {
		return x.MaxWidth
	}
	return 0
}

func (x *ThumbnailDownloadURL_ScaledURL) GetMaxHeight() int64 {
	if x != nil {
		return x.MaxHeight
	}
	return 0
}

func (x *ThumbnailDownloadURL_ScaledURL) GetImageFormat() ThumbnailDownloadURL_ImageFormat {
	if x != nil {
		return x.ImageFormat
	}
	return ThumbnailDownloadURL_IMAGE_FORMAT_UNSPECIFIED
}

var File_yandex_cloud_video_v1_thumbnail_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_video_v1_thumbnail_service_proto_rawDesc = "" +
	"\n" +
	"-yandex/cloud/video/v1/thumbnail_service.proto\x12\x15yandex.cloud.video.v1\x1a\x1cgoogle/api/annotations.proto\x1a yandex/cloud/api/operation.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\x1a%yandex/cloud/video/v1/thumbnail.proto\"F\n" +
	"\x13GetThumbnailRequest\x12/\n" +
	"\fthumbnail_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\vthumbnailId\"\x81\x02\n" +
	"\x14ListThumbnailRequest\x12'\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tB\b\x8a\xc81\x04<=50R\tchannelId\x12*\n" +
	"\n" +
	"episode_id\x18\xeb\a \x01(\tB\b\x8a\xc81\x04<=50H\x00R\tepisodeId\x12&\n" +
	"\bvideo_id\x18\xec\a \x01(\tB\b\x8a\xc81\x04<=50H\x00R\avideoId\x12&\n" +
	"\tpage_size\x18d \x01(\x03B\t\xfa\xc71\x05<=100R\bpageSize\x12*\n" +
	"\n" +
	"page_token\x18e \x01(\tB\v\x8a\xc81\a<=15000R\tpageTokenB\v\n" +
	"\tparent_idJ\x04\b\x02\x10dJ\x05\bf\x10\xeb\a\"\x87\x01\n" +
	"\x15ListThumbnailResponse\x12@\n" +
	"\n" +
	"thumbnails\x18\x01 \x03(\v2 .yandex.cloud.video.v1.ThumbnailR\n" +
	"thumbnails\x12&\n" +
	"\x0fnext_page_token\x18d \x01(\tR\rnextPageTokenJ\x04\b\x02\x10d\"\xa9\x01\n" +
	"\x16CreateThumbnailRequest\x12'\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tB\b\x8a\xc81\x04<=50R\tchannelId\x12*\n" +
	"\n" +
	"episode_id\x18\xeb\a \x01(\tB\b\x8a\xc81\x04<=50H\x00R\tepisodeId\x12&\n" +
	"\bvideo_id\x18\xec\a \x01(\tB\b\x8a\xc81\x04<=50H\x00R\avideoIdB\v\n" +
	"\tparent_idJ\x05\b\x02\x10\xeb\a\"<\n" +
	"\x17CreateThumbnailMetadata\x12!\n" +
	"\fthumbnail_id\x18\x01 \x01(\tR\vthumbnailId\"\x87\x01\n" +
	" BatchGenerateDownloadURLsRequest\x12+\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tchannelId\x126\n" +
	"\rthumbnail_ids\x18\x02 \x03(\tB\x11\x82\xc81\x051-100\x8a\xc81\x04<=50R\fthumbnailIds\"u\n" +
	"!BatchGenerateDownloadURLsResponse\x12P\n" +
	"\rdownload_urls\x18\x01 \x03(\v2+.yandex.cloud.video.v1.ThumbnailDownloadURLR\fdownloadUrls\"\xad\x03\n" +
	"\x14ThumbnailDownloadURL\x12!\n" +
	"\fthumbnail_id\x18\x01 \x01(\tR\vthumbnailId\x12!\n" +
	"\foriginal_url\x18\x02 \x01(\tR\voriginalUrl\x12V\n" +
	"\vscaled_urls\x18\x03 \x03(\v25.yandex.cloud.video.v1.ThumbnailDownloadURL.ScaledURLR\n" +
	"scaledUrls\x1a\xb5\x01\n" +
	"\tScaledURL\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x1b\n" +
	"\tmax_width\x18\x02 \x01(\x03R\bmaxWidth\x12\x1d\n" +
	"\n" +
	"max_height\x18\x03 \x01(\x03R\tmaxHeight\x12Z\n" +
	"\fimage_format\x18\x04 \x01(\x0e27.yandex.cloud.video.v1.ThumbnailDownloadURL.ImageFormatR\vimageFormat\"?\n" +
	"\vImageFormat\x12\x1c\n" +
	"\x18IMAGE_FORMAT_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04JPEG\x10\x01\x12\b\n" +
	"\x04WEBP\x10\x02\"T\n" +
	"!GenerateThumbnailUploadURLRequest\x12/\n" +
	"\fthumbnail_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\vthumbnailId\"C\n" +
	"\"GenerateThumbnailUploadURLResponse\x12\x1d\n" +
	"\n" +
	"upload_url\x18\x01 \x01(\tR\tuploadUrl\"I\n" +
	"\x16DeleteThumbnailRequest\x12/\n" +
	"\fthumbnail_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\vthumbnailId\"<\n" +
	"\x17DeleteThumbnailMetadata\x12!\n" +
	"\fthumbnail_id\x18\x01 \x01(\tR\vthumbnailId2\x93\b\n" +
	"\x10ThumbnailService\x12\x80\x01\n" +
	"\x03Get\x12*.yandex.cloud.video.v1.GetThumbnailRequest\x1a .yandex.cloud.video.v1.Thumbnail\"+\x82\xd3\xe4\x93\x02%\x12#/video/v1/thumbnails/{thumbnail_id}\x12\x7f\n" +
	"\x04List\x12+.yandex.cloud.video.v1.ListThumbnailRequest\x1a,.yandex.cloud.video.v1.ListThumbnailResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/video/v1/thumbnails\x12\xa3\x01\n" +
	"\x06Create\x12-.yandex.cloud.video.v1.CreateThumbnailRequest\x1a!.yandex.cloud.operation.Operation\"G\xb2\xd2*$\n" +
	"\x17CreateThumbnailMetadata\x12\tThumbnail\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/video/v1/thumbnails\x12\xc9\x01\n" +
	"\x19BatchGenerateDownloadURLs\x127.yandex.cloud.video.v1.BatchGenerateDownloadURLsRequest\x1a8.yandex.cloud.video.v1.BatchGenerateDownloadURLsResponse\"9\x82\xd3\xe4\x93\x023:\x01*\"./video/v1/thumbnails:batchGenerateDownloadURLs\x12\xca\x01\n" +
	"\x11GenerateUploadURL\x128.yandex.cloud.video.v1.GenerateThumbnailUploadURLRequest\x1a9.yandex.cloud.video.v1.GenerateThumbnailUploadURLResponse\"@\x82\xd3\xe4\x93\x02::\x01*\"5/video/v1/thumbnails/{thumbnail_id}:generateUploadURL\x12\xbb\x01\n" +
	"\x06Delete\x12-.yandex.cloud.video.v1.DeleteThumbnailRequest\x1a!.yandex.cloud.operation.Operation\"_\xb2\xd2*0\n" +
	"\x17DeleteThumbnailMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02%*#/video/v1/thumbnails/{thumbnail_id}B\\\n" +
	"\x19yandex.cloud.api.video.v1Z?github.com/yandex-cloud/go-genproto/yandex/cloud/video/v1;videob\x06proto3"

var (
	file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescData []byte
)

func file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_video_v1_thumbnail_service_proto_rawDesc), len(file_yandex_cloud_video_v1_thumbnail_service_proto_rawDesc)))
	})
	return file_yandex_cloud_video_v1_thumbnail_service_proto_rawDescData
}

var file_yandex_cloud_video_v1_thumbnail_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_yandex_cloud_video_v1_thumbnail_service_proto_goTypes = []any{
	(ThumbnailDownloadURL_ImageFormat)(0),      // 0: yandex.cloud.video.v1.ThumbnailDownloadURL.ImageFormat
	(*GetThumbnailRequest)(nil),                // 1: yandex.cloud.video.v1.GetThumbnailRequest
	(*ListThumbnailRequest)(nil),               // 2: yandex.cloud.video.v1.ListThumbnailRequest
	(*ListThumbnailResponse)(nil),              // 3: yandex.cloud.video.v1.ListThumbnailResponse
	(*CreateThumbnailRequest)(nil),             // 4: yandex.cloud.video.v1.CreateThumbnailRequest
	(*CreateThumbnailMetadata)(nil),            // 5: yandex.cloud.video.v1.CreateThumbnailMetadata
	(*BatchGenerateDownloadURLsRequest)(nil),   // 6: yandex.cloud.video.v1.BatchGenerateDownloadURLsRequest
	(*BatchGenerateDownloadURLsResponse)(nil),  // 7: yandex.cloud.video.v1.BatchGenerateDownloadURLsResponse
	(*ThumbnailDownloadURL)(nil),               // 8: yandex.cloud.video.v1.ThumbnailDownloadURL
	(*GenerateThumbnailUploadURLRequest)(nil),  // 9: yandex.cloud.video.v1.GenerateThumbnailUploadURLRequest
	(*GenerateThumbnailUploadURLResponse)(nil), // 10: yandex.cloud.video.v1.GenerateThumbnailUploadURLResponse
	(*DeleteThumbnailRequest)(nil),             // 11: yandex.cloud.video.v1.DeleteThumbnailRequest
	(*DeleteThumbnailMetadata)(nil),            // 12: yandex.cloud.video.v1.DeleteThumbnailMetadata
	(*ThumbnailDownloadURL_ScaledURL)(nil),     // 13: yandex.cloud.video.v1.ThumbnailDownloadURL.ScaledURL
	(*Thumbnail)(nil),                          // 14: yandex.cloud.video.v1.Thumbnail
	(*operation.Operation)(nil),                // 15: yandex.cloud.operation.Operation
}
var file_yandex_cloud_video_v1_thumbnail_service_proto_depIdxs = []int32{
	14, // 0: yandex.cloud.video.v1.ListThumbnailResponse.thumbnails:type_name -> yandex.cloud.video.v1.Thumbnail
	8,  // 1: yandex.cloud.video.v1.BatchGenerateDownloadURLsResponse.download_urls:type_name -> yandex.cloud.video.v1.ThumbnailDownloadURL
	13, // 2: yandex.cloud.video.v1.ThumbnailDownloadURL.scaled_urls:type_name -> yandex.cloud.video.v1.ThumbnailDownloadURL.ScaledURL
	0,  // 3: yandex.cloud.video.v1.ThumbnailDownloadURL.ScaledURL.image_format:type_name -> yandex.cloud.video.v1.ThumbnailDownloadURL.ImageFormat
	1,  // 4: yandex.cloud.video.v1.ThumbnailService.Get:input_type -> yandex.cloud.video.v1.GetThumbnailRequest
	2,  // 5: yandex.cloud.video.v1.ThumbnailService.List:input_type -> yandex.cloud.video.v1.ListThumbnailRequest
	4,  // 6: yandex.cloud.video.v1.ThumbnailService.Create:input_type -> yandex.cloud.video.v1.CreateThumbnailRequest
	6,  // 7: yandex.cloud.video.v1.ThumbnailService.BatchGenerateDownloadURLs:input_type -> yandex.cloud.video.v1.BatchGenerateDownloadURLsRequest
	9,  // 8: yandex.cloud.video.v1.ThumbnailService.GenerateUploadURL:input_type -> yandex.cloud.video.v1.GenerateThumbnailUploadURLRequest
	11, // 9: yandex.cloud.video.v1.ThumbnailService.Delete:input_type -> yandex.cloud.video.v1.DeleteThumbnailRequest
	14, // 10: yandex.cloud.video.v1.ThumbnailService.Get:output_type -> yandex.cloud.video.v1.Thumbnail
	3,  // 11: yandex.cloud.video.v1.ThumbnailService.List:output_type -> yandex.cloud.video.v1.ListThumbnailResponse
	15, // 12: yandex.cloud.video.v1.ThumbnailService.Create:output_type -> yandex.cloud.operation.Operation
	7,  // 13: yandex.cloud.video.v1.ThumbnailService.BatchGenerateDownloadURLs:output_type -> yandex.cloud.video.v1.BatchGenerateDownloadURLsResponse
	10, // 14: yandex.cloud.video.v1.ThumbnailService.GenerateUploadURL:output_type -> yandex.cloud.video.v1.GenerateThumbnailUploadURLResponse
	15, // 15: yandex.cloud.video.v1.ThumbnailService.Delete:output_type -> yandex.cloud.operation.Operation
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_yandex_cloud_video_v1_thumbnail_service_proto_init() }
func file_yandex_cloud_video_v1_thumbnail_service_proto_init() {
	if File_yandex_cloud_video_v1_thumbnail_service_proto != nil {
		return
	}
	file_yandex_cloud_video_v1_thumbnail_proto_init()
	file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[1].OneofWrappers = []any{
		(*ListThumbnailRequest_EpisodeId)(nil),
		(*ListThumbnailRequest_VideoId)(nil),
	}
	file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes[3].OneofWrappers = []any{
		(*CreateThumbnailRequest_EpisodeId)(nil),
		(*CreateThumbnailRequest_VideoId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_video_v1_thumbnail_service_proto_rawDesc), len(file_yandex_cloud_video_v1_thumbnail_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_video_v1_thumbnail_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_video_v1_thumbnail_service_proto_depIdxs,
		EnumInfos:         file_yandex_cloud_video_v1_thumbnail_service_proto_enumTypes,
		MessageInfos:      file_yandex_cloud_video_v1_thumbnail_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_video_v1_thumbnail_service_proto = out.File
	file_yandex_cloud_video_v1_thumbnail_service_proto_goTypes = nil
	file_yandex_cloud_video_v1_thumbnail_service_proto_depIdxs = nil
}

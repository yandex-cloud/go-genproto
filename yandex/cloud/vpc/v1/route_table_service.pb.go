// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: yandex/cloud/vpc/v1/route_table_service.proto

package vpc

import (
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRouteTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the RouteTable resource to return.
	// To get the route table ID use a [RouteTableService.List] request.
	RouteTableId  string `protobuf:"bytes,1,opt,name=route_table_id,json=routeTableId,proto3" json:"route_table_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRouteTableRequest) Reset() {
	*x = GetRouteTableRequest{}
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRouteTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteTableRequest) ProtoMessage() {}

func (x *GetRouteTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteTableRequest.ProtoReflect.Descriptor instead.
func (*GetRouteTableRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetRouteTableRequest) GetRouteTableId() string {
	if x != nil {
		return x.RouteTableId
	}
	return ""
}

type ListRouteTablesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder that the route table belongs to.
	// To get the folder ID use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// The maximum number of results per page to return. If the number of available
	// results is larger than [page_size],
	// the service returns a [ListRouteTablesResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests. Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token] to the
	// [ListRouteTablesResponse.next_page_token] returned by a previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A filter expression that filters resources listed in the response.
	// The expression must specify:
	// 1. The field name. Currently you can use filtering only on [RouteTable.name] field.
	// 2. An `=` operator.
	// 3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
	Filter        string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRouteTablesRequest) Reset() {
	*x = ListRouteTablesRequest{}
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRouteTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRouteTablesRequest) ProtoMessage() {}

func (x *ListRouteTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRouteTablesRequest.ProtoReflect.Descriptor instead.
func (*ListRouteTablesRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListRouteTablesRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *ListRouteTablesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRouteTablesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListRouteTablesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListRouteTablesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of RouteTable resources.
	RouteTables []*RouteTable `protobuf:"bytes,1,rep,name=route_tables,json=routeTables,proto3" json:"route_tables,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListRouteTablesRequest.page_size], use
	// the [next_page_token] as the value
	// for the [ListRouteTablesRequest.page_token] query parameter
	// in the next list request. Subsequent list requests will have their own
	// [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRouteTablesResponse) Reset() {
	*x = ListRouteTablesResponse{}
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRouteTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRouteTablesResponse) ProtoMessage() {}

func (x *ListRouteTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRouteTablesResponse.ProtoReflect.Descriptor instead.
func (*ListRouteTablesResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListRouteTablesResponse) GetRouteTables() []*RouteTable {
	if x != nil {
		return x.RouteTables
	}
	return nil
}

func (x *ListRouteTablesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateRouteTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the folder that the route table belongs to.
	// To get the folder ID use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
	FolderId string `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Name of the route table.
	// The name must be unique within the folder.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the route table.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels, “ key:value “ pairs.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// ID of the network the route table belongs to.
	NetworkId string `protobuf:"bytes,5,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// List of static routes.
	StaticRoutes  []*StaticRoute `protobuf:"bytes,6,rep,name=static_routes,json=staticRoutes,proto3" json:"static_routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRouteTableRequest) Reset() {
	*x = CreateRouteTableRequest{}
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRouteTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouteTableRequest) ProtoMessage() {}

func (x *CreateRouteTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouteTableRequest.ProtoReflect.Descriptor instead.
func (*CreateRouteTableRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRouteTableRequest) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *CreateRouteTableRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRouteTableRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateRouteTableRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateRouteTableRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *CreateRouteTableRequest) GetStaticRoutes() []*StaticRoute {
	if x != nil {
		return x.StaticRoutes
	}
	return nil
}

type CreateRouteTableMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the route table that is being created.
	RouteTableId  string `protobuf:"bytes,1,opt,name=route_table_id,json=routeTableId,proto3" json:"route_table_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRouteTableMetadata) Reset() {
	*x = CreateRouteTableMetadata{}
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRouteTableMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouteTableMetadata) ProtoMessage() {}

func (x *CreateRouteTableMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouteTableMetadata.ProtoReflect.Descriptor instead.
func (*CreateRouteTableMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRouteTableMetadata) GetRouteTableId() string {
	if x != nil {
		return x.RouteTableId
	}
	return ""
}

type UpdateRouteTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the RouteTable resource to update.
	RouteTableId string `protobuf:"bytes,1,opt,name=route_table_id,json=routeTableId,proto3" json:"route_table_id,omitempty"`
	// Field mask that specifies which fields of the RouteTable resource are going to be updated.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// Name of the route table.
	// The name must be unique within the folder.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the route table.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Resource labels as “ key:value “ pairs.
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// List of static routes.
	StaticRoutes  []*StaticRoute `protobuf:"bytes,6,rep,name=static_routes,json=staticRoutes,proto3" json:"static_routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRouteTableRequest) Reset() {
	*x = UpdateRouteTableRequest{}
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRouteTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRouteTableRequest) ProtoMessage() {}

func (x *UpdateRouteTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRouteTableRequest.ProtoReflect.Descriptor instead.
func (*UpdateRouteTableRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateRouteTableRequest) GetRouteTableId() string {
	if x != nil {
		return x.RouteTableId
	}
	return ""
}

func (x *UpdateRouteTableRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateRouteTableRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRouteTableRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateRouteTableRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateRouteTableRequest) GetStaticRoutes() []*StaticRoute {
	if x != nil {
		return x.StaticRoutes
	}
	return nil
}

type UpdateRouteTableMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the RouteTable resource that is being updated.
	RouteTableId  string `protobuf:"bytes,1,opt,name=route_table_id,json=routeTableId,proto3" json:"route_table_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRouteTableMetadata) Reset() {
	*x = UpdateRouteTableMetadata{}
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRouteTableMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRouteTableMetadata) ProtoMessage() {}

func (x *UpdateRouteTableMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRouteTableMetadata.ProtoReflect.Descriptor instead.
func (*UpdateRouteTableMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateRouteTableMetadata) GetRouteTableId() string {
	if x != nil {
		return x.RouteTableId
	}
	return ""
}

type DeleteRouteTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the route table to delete.
	// To get the route table ID use a [RouteTableService.List] request.
	RouteTableId  string `protobuf:"bytes,1,opt,name=route_table_id,json=routeTableId,proto3" json:"route_table_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRouteTableRequest) Reset() {
	*x = DeleteRouteTableRequest{}
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRouteTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRouteTableRequest) ProtoMessage() {}

func (x *DeleteRouteTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRouteTableRequest.ProtoReflect.Descriptor instead.
func (*DeleteRouteTableRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteRouteTableRequest) GetRouteTableId() string {
	if x != nil {
		return x.RouteTableId
	}
	return ""
}

type DeleteRouteTableMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the RouteTable resource that is being deleted.
	RouteTableId  string `protobuf:"bytes,1,opt,name=route_table_id,json=routeTableId,proto3" json:"route_table_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRouteTableMetadata) Reset() {
	*x = DeleteRouteTableMetadata{}
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRouteTableMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRouteTableMetadata) ProtoMessage() {}

func (x *DeleteRouteTableMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRouteTableMetadata.ProtoReflect.Descriptor instead.
func (*DeleteRouteTableMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteRouteTableMetadata) GetRouteTableId() string {
	if x != nil {
		return x.RouteTableId
	}
	return ""
}

type ListRouteTableOperationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the RouteTable resource to list operations for.
	RouteTableId string `protobuf:"bytes,1,opt,name=route_table_id,json=routeTableId,proto3" json:"route_table_id,omitempty"`
	// The maximum number of results per page that should be returned. If the number of available
	// results is larger than [page_size], the service returns a [ListRouteTableOperationsResponse.next_page_token]
	// that can be used to get the next page of results in subsequent list requests. Default value: 100.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. To get the next page of results, set [page_token] to the
	// [ListRouteTableOperationsResponse.next_page_token] returned by a previous list request.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRouteTableOperationsRequest) Reset() {
	*x = ListRouteTableOperationsRequest{}
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRouteTableOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRouteTableOperationsRequest) ProtoMessage() {}

func (x *ListRouteTableOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRouteTableOperationsRequest.ProtoReflect.Descriptor instead.
func (*ListRouteTableOperationsRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListRouteTableOperationsRequest) GetRouteTableId() string {
	if x != nil {
		return x.RouteTableId
	}
	return ""
}

func (x *ListRouteTableOperationsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRouteTableOperationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListRouteTableOperationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of operations for the specified RouteTable resource.
	Operations []*operation.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	// This token allows you to get the next page of results for list requests. If the number of results
	// is larger than [ListRouteTableOperationsRequest.page_size], use the [next_page_token] as the value
	// for the [ListRouteTableOperationsRequest.page_token] query parameter in the next list request.
	// Each subsequent list request will have its own [next_page_token] to continue paging through the results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRouteTableOperationsResponse) Reset() {
	*x = ListRouteTableOperationsResponse{}
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRouteTableOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRouteTableOperationsResponse) ProtoMessage() {}

func (x *ListRouteTableOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRouteTableOperationsResponse.ProtoReflect.Descriptor instead.
func (*ListRouteTableOperationsResponse) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListRouteTableOperationsResponse) GetOperations() []*operation.Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ListRouteTableOperationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type MoveRouteTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the RouteTable resource to move.
	RouteTableId string `protobuf:"bytes,1,opt,name=route_table_id,json=routeTableId,proto3" json:"route_table_id,omitempty"`
	// ID of the destination folder.
	DestinationFolderId string `protobuf:"bytes,2,opt,name=destination_folder_id,json=destinationFolderId,proto3" json:"destination_folder_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MoveRouteTableRequest) Reset() {
	*x = MoveRouteTableRequest{}
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveRouteTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRouteTableRequest) ProtoMessage() {}

func (x *MoveRouteTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRouteTableRequest.ProtoReflect.Descriptor instead.
func (*MoveRouteTableRequest) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescGZIP(), []int{11}
}

func (x *MoveRouteTableRequest) GetRouteTableId() string {
	if x != nil {
		return x.RouteTableId
	}
	return ""
}

func (x *MoveRouteTableRequest) GetDestinationFolderId() string {
	if x != nil {
		return x.DestinationFolderId
	}
	return ""
}

type MoveRouteTableMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the RouteTable resource that is being moved.
	RouteTableId  string `protobuf:"bytes,1,opt,name=route_table_id,json=routeTableId,proto3" json:"route_table_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveRouteTableMetadata) Reset() {
	*x = MoveRouteTableMetadata{}
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveRouteTableMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRouteTableMetadata) ProtoMessage() {}

func (x *MoveRouteTableMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRouteTableMetadata.ProtoReflect.Descriptor instead.
func (*MoveRouteTableMetadata) Descriptor() ([]byte, []int) {
	return file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescGZIP(), []int{12}
}

func (x *MoveRouteTableMetadata) GetRouteTableId() string {
	if x != nil {
		return x.RouteTableId
	}
	return ""
}

var File_yandex_cloud_vpc_v1_route_table_service_proto protoreflect.FileDescriptor

const file_yandex_cloud_vpc_v1_route_table_service_proto_rawDesc = "" +
	"\n" +
	"-yandex/cloud/vpc/v1/route_table_service.proto\x12\x13yandex.cloud.vpc.v1\x1a\x1cgoogle/api/annotations.proto\x1a google/protobuf/field_mask.proto\x1a yandex/cloud/api/operation.proto\x1a%yandex/cloud/vpc/v1/route_table.proto\x1a&yandex/cloud/operation/operation.proto\x1a\x1dyandex/cloud/validation.proto\"J\n" +
	"\x14GetRouteTableRequest\x122\n" +
	"\x0eroute_table_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\frouteTableId\"\xba\x01\n" +
	"\x16ListRouteTablesRequest\x12)\n" +
	"\tfolder_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\x12\"\n" +
	"\x06filter\x18\x04 \x01(\tB\n" +
	"\x8a\xc81\x06<=1000R\x06filter\"\x85\x01\n" +
	"\x17ListRouteTablesResponse\x12B\n" +
	"\froute_tables\x18\x01 \x03(\v2\x1f.yandex.cloud.vpc.v1.RouteTableR\vrouteTables\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xf4\x03\n" +
	"\x17CreateRouteTableRequest\x12)\n" +
	"\tfolder_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\bfolderId\x12B\n" +
	"\x04name\x18\x02 \x01(\tB.\xf2\xc71*|[a-zA-Z]([-_a-zA-Z0-9]{0,61}[a-zA-Z0-9])?R\x04name\x12+\n" +
	"\vdescription\x18\x03 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x8d\x01\n" +
	"\x06labels\x18\x04 \x03(\v28.yandex.cloud.vpc.v1.CreateRouteTableRequest.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x041-63R\x06labels\x12+\n" +
	"\n" +
	"network_id\x18\x05 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\tnetworkId\x12E\n" +
	"\rstatic_routes\x18\x06 \x03(\v2 .yandex.cloud.vpc.v1.StaticRouteR\fstaticRoutes\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"@\n" +
	"\x18CreateRouteTableMetadata\x12$\n" +
	"\x0eroute_table_id\x18\x01 \x01(\tR\frouteTableId\"\x8d\x04\n" +
	"\x17UpdateRouteTableRequest\x122\n" +
	"\x0eroute_table_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\frouteTableId\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12B\n" +
	"\x04name\x18\x03 \x01(\tB.\xf2\xc71*|[a-zA-Z]([-_a-zA-Z0-9]{0,61}[a-zA-Z0-9])?R\x04name\x12+\n" +
	"\vdescription\x18\x04 \x01(\tB\t\x8a\xc81\x05<=256R\vdescription\x12\x8d\x01\n" +
	"\x06labels\x18\x05 \x03(\v28.yandex.cloud.vpc.v1.UpdateRouteTableRequest.LabelsEntryB;\xf2\xc71\v[-_0-9a-z]*\x82\xc81\x04<=64\x8a\xc81\x04<=63\xb2\xc81\x18\x12\x10[a-z][-_0-9a-z]*\x1a\x041-63R\x06labels\x12E\n" +
	"\rstatic_routes\x18\x06 \x03(\v2 .yandex.cloud.vpc.v1.StaticRouteR\fstaticRoutes\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"@\n" +
	"\x18UpdateRouteTableMetadata\x12$\n" +
	"\x0eroute_table_id\x18\x01 \x01(\tR\frouteTableId\"M\n" +
	"\x17DeleteRouteTableRequest\x122\n" +
	"\x0eroute_table_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\frouteTableId\"@\n" +
	"\x18DeleteRouteTableMetadata\x12$\n" +
	"\x0eroute_table_id\x18\x01 \x01(\tR\frouteTableId\"\xa8\x01\n" +
	"\x1fListRouteTableOperationsRequest\x122\n" +
	"\x0eroute_table_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\frouteTableId\x12'\n" +
	"\tpage_size\x18\x02 \x01(\x03B\n" +
	"\xfa\xc71\x06<=1000R\bpageSize\x12(\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tB\t\x8a\xc81\x05<=100R\tpageToken\"\x8d\x01\n" +
	" ListRouteTableOperationsResponse\x12A\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2!.yandex.cloud.operation.OperationR\n" +
	"operations\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x8d\x01\n" +
	"\x15MoveRouteTableRequest\x122\n" +
	"\x0eroute_table_id\x18\x01 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\frouteTableId\x12@\n" +
	"\x15destination_folder_id\x18\x02 \x01(\tB\f\xe8\xc71\x01\x8a\xc81\x04<=50R\x13destinationFolderId\">\n" +
	"\x16MoveRouteTableMetadata\x12$\n" +
	"\x0eroute_table_id\x18\x01 \x01(\tR\frouteTableId2\x9f\t\n" +
	"\x11RouteTableService\x12\x7f\n" +
	"\x03Get\x12).yandex.cloud.vpc.v1.GetRouteTableRequest\x1a\x1f.yandex.cloud.vpc.v1.RouteTable\",\x82\xd3\xe4\x93\x02&\x12$/vpc/v1/routeTables/{route_table_id}\x12~\n" +
	"\x04List\x12+.yandex.cloud.vpc.v1.ListRouteTablesRequest\x1a,.yandex.cloud.vpc.v1.ListRouteTablesResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/vpc/v1/routeTables\x12\xa3\x01\n" +
	"\x06Create\x12,.yandex.cloud.vpc.v1.CreateRouteTableRequest\x1a!.yandex.cloud.operation.Operation\"H\xb2\xd2*&\n" +
	"\x18CreateRouteTableMetadata\x12\n" +
	"RouteTable\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/vpc/v1/routeTables\x12\xb4\x01\n" +
	"\x06Update\x12,.yandex.cloud.vpc.v1.UpdateRouteTableRequest\x1a!.yandex.cloud.operation.Operation\"Y\xb2\xd2*&\n" +
	"\x18UpdateRouteTableMetadata\x12\n" +
	"RouteTable\x82\xd3\xe4\x93\x02):\x01*2$/vpc/v1/routeTables/{route_table_id}\x12\xbc\x01\n" +
	"\x06Delete\x12,.yandex.cloud.vpc.v1.DeleteRouteTableRequest\x1a!.yandex.cloud.operation.Operation\"a\xb2\xd2*1\n" +
	"\x18DeleteRouteTableMetadata\x12\x15google.protobuf.Empty\x82\xd3\xe4\x93\x02&*$/vpc/v1/routeTables/{route_table_id}\x12\xb6\x01\n" +
	"\x0eListOperations\x124.yandex.cloud.vpc.v1.ListRouteTableOperationsRequest\x1a5.yandex.cloud.vpc.v1.ListRouteTableOperationsResponse\"7\x82\xd3\xe4\x93\x021\x12//vpc/v1/routeTables/{route_table_id}/operations\x12\xb3\x01\n" +
	"\x04Move\x12*.yandex.cloud.vpc.v1.MoveRouteTableRequest\x1a!.yandex.cloud.operation.Operation\"\\\xb2\xd2*$\n" +
	"\x16MoveRouteTableMetadata\x12\n" +
	"RouteTable\x82\xd3\xe4\x93\x02.:\x01*\")/vpc/v1/routeTables/{route_table_id}:moveBV\n" +
	"\x17yandex.cloud.api.vpc.v1Z;github.com/yandex-cloud/go-genproto/yandex/cloud/vpc/v1;vpcb\x06proto3"

var (
	file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescOnce sync.Once
	file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescData []byte
)

func file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescGZIP() []byte {
	file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescOnce.Do(func() {
		file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yandex_cloud_vpc_v1_route_table_service_proto_rawDesc), len(file_yandex_cloud_vpc_v1_route_table_service_proto_rawDesc)))
	})
	return file_yandex_cloud_vpc_v1_route_table_service_proto_rawDescData
}

var file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_yandex_cloud_vpc_v1_route_table_service_proto_goTypes = []any{
	(*GetRouteTableRequest)(nil),             // 0: yandex.cloud.vpc.v1.GetRouteTableRequest
	(*ListRouteTablesRequest)(nil),           // 1: yandex.cloud.vpc.v1.ListRouteTablesRequest
	(*ListRouteTablesResponse)(nil),          // 2: yandex.cloud.vpc.v1.ListRouteTablesResponse
	(*CreateRouteTableRequest)(nil),          // 3: yandex.cloud.vpc.v1.CreateRouteTableRequest
	(*CreateRouteTableMetadata)(nil),         // 4: yandex.cloud.vpc.v1.CreateRouteTableMetadata
	(*UpdateRouteTableRequest)(nil),          // 5: yandex.cloud.vpc.v1.UpdateRouteTableRequest
	(*UpdateRouteTableMetadata)(nil),         // 6: yandex.cloud.vpc.v1.UpdateRouteTableMetadata
	(*DeleteRouteTableRequest)(nil),          // 7: yandex.cloud.vpc.v1.DeleteRouteTableRequest
	(*DeleteRouteTableMetadata)(nil),         // 8: yandex.cloud.vpc.v1.DeleteRouteTableMetadata
	(*ListRouteTableOperationsRequest)(nil),  // 9: yandex.cloud.vpc.v1.ListRouteTableOperationsRequest
	(*ListRouteTableOperationsResponse)(nil), // 10: yandex.cloud.vpc.v1.ListRouteTableOperationsResponse
	(*MoveRouteTableRequest)(nil),            // 11: yandex.cloud.vpc.v1.MoveRouteTableRequest
	(*MoveRouteTableMetadata)(nil),           // 12: yandex.cloud.vpc.v1.MoveRouteTableMetadata
	nil,                                      // 13: yandex.cloud.vpc.v1.CreateRouteTableRequest.LabelsEntry
	nil,                                      // 14: yandex.cloud.vpc.v1.UpdateRouteTableRequest.LabelsEntry
	(*RouteTable)(nil),                       // 15: yandex.cloud.vpc.v1.RouteTable
	(*StaticRoute)(nil),                      // 16: yandex.cloud.vpc.v1.StaticRoute
	(*fieldmaskpb.FieldMask)(nil),            // 17: google.protobuf.FieldMask
	(*operation.Operation)(nil),              // 18: yandex.cloud.operation.Operation
}
var file_yandex_cloud_vpc_v1_route_table_service_proto_depIdxs = []int32{
	15, // 0: yandex.cloud.vpc.v1.ListRouteTablesResponse.route_tables:type_name -> yandex.cloud.vpc.v1.RouteTable
	13, // 1: yandex.cloud.vpc.v1.CreateRouteTableRequest.labels:type_name -> yandex.cloud.vpc.v1.CreateRouteTableRequest.LabelsEntry
	16, // 2: yandex.cloud.vpc.v1.CreateRouteTableRequest.static_routes:type_name -> yandex.cloud.vpc.v1.StaticRoute
	17, // 3: yandex.cloud.vpc.v1.UpdateRouteTableRequest.update_mask:type_name -> google.protobuf.FieldMask
	14, // 4: yandex.cloud.vpc.v1.UpdateRouteTableRequest.labels:type_name -> yandex.cloud.vpc.v1.UpdateRouteTableRequest.LabelsEntry
	16, // 5: yandex.cloud.vpc.v1.UpdateRouteTableRequest.static_routes:type_name -> yandex.cloud.vpc.v1.StaticRoute
	18, // 6: yandex.cloud.vpc.v1.ListRouteTableOperationsResponse.operations:type_name -> yandex.cloud.operation.Operation
	0,  // 7: yandex.cloud.vpc.v1.RouteTableService.Get:input_type -> yandex.cloud.vpc.v1.GetRouteTableRequest
	1,  // 8: yandex.cloud.vpc.v1.RouteTableService.List:input_type -> yandex.cloud.vpc.v1.ListRouteTablesRequest
	3,  // 9: yandex.cloud.vpc.v1.RouteTableService.Create:input_type -> yandex.cloud.vpc.v1.CreateRouteTableRequest
	5,  // 10: yandex.cloud.vpc.v1.RouteTableService.Update:input_type -> yandex.cloud.vpc.v1.UpdateRouteTableRequest
	7,  // 11: yandex.cloud.vpc.v1.RouteTableService.Delete:input_type -> yandex.cloud.vpc.v1.DeleteRouteTableRequest
	9,  // 12: yandex.cloud.vpc.v1.RouteTableService.ListOperations:input_type -> yandex.cloud.vpc.v1.ListRouteTableOperationsRequest
	11, // 13: yandex.cloud.vpc.v1.RouteTableService.Move:input_type -> yandex.cloud.vpc.v1.MoveRouteTableRequest
	15, // 14: yandex.cloud.vpc.v1.RouteTableService.Get:output_type -> yandex.cloud.vpc.v1.RouteTable
	2,  // 15: yandex.cloud.vpc.v1.RouteTableService.List:output_type -> yandex.cloud.vpc.v1.ListRouteTablesResponse
	18, // 16: yandex.cloud.vpc.v1.RouteTableService.Create:output_type -> yandex.cloud.operation.Operation
	18, // 17: yandex.cloud.vpc.v1.RouteTableService.Update:output_type -> yandex.cloud.operation.Operation
	18, // 18: yandex.cloud.vpc.v1.RouteTableService.Delete:output_type -> yandex.cloud.operation.Operation
	10, // 19: yandex.cloud.vpc.v1.RouteTableService.ListOperations:output_type -> yandex.cloud.vpc.v1.ListRouteTableOperationsResponse
	18, // 20: yandex.cloud.vpc.v1.RouteTableService.Move:output_type -> yandex.cloud.operation.Operation
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_yandex_cloud_vpc_v1_route_table_service_proto_init() }
func file_yandex_cloud_vpc_v1_route_table_service_proto_init() {
	if File_yandex_cloud_vpc_v1_route_table_service_proto != nil {
		return
	}
	file_yandex_cloud_vpc_v1_route_table_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yandex_cloud_vpc_v1_route_table_service_proto_rawDesc), len(file_yandex_cloud_vpc_v1_route_table_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yandex_cloud_vpc_v1_route_table_service_proto_goTypes,
		DependencyIndexes: file_yandex_cloud_vpc_v1_route_table_service_proto_depIdxs,
		MessageInfos:      file_yandex_cloud_vpc_v1_route_table_service_proto_msgTypes,
	}.Build()
	File_yandex_cloud_vpc_v1_route_table_service_proto = out.File
	file_yandex_cloud_vpc_v1_route_table_service_proto_goTypes = nil
	file_yandex_cloud_vpc_v1_route_table_service_proto_depIdxs = nil
}

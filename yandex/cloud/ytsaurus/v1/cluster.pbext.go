// Code generated by protoc-gen-goext. DO NOT EDIT.

package ytsaurus

import (
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

func (m *Cluster) SetId(v string) {
	m.Id = v
}

func (m *Cluster) SetFolderId(v string) {
	m.FolderId = v
}

func (m *Cluster) SetZoneId(v string) {
	m.ZoneId = v
}

func (m *Cluster) SetName(v string) {
	m.Name = v
}

func (m *Cluster) SetDescription(v string) {
	m.Description = v
}

func (m *Cluster) SetLabels(v map[string]string) {
	m.Labels = v
}

func (m *Cluster) SetSubnetId(v string) {
	m.SubnetId = v
}

func (m *Cluster) SetSecurityGroupIds(v []string) {
	m.SecurityGroupIds = v
}

func (m *Cluster) SetSpec(v *ClusterSpec) {
	m.Spec = v
}

func (m *Cluster) SetCreatedAt(v *timestamppb.Timestamp) {
	m.CreatedAt = v
}

func (m *Cluster) SetCreatedBy(v string) {
	m.CreatedBy = v
}

func (m *Cluster) SetUpdatedAt(v *timestamppb.Timestamp) {
	m.UpdatedAt = v
}

func (m *Cluster) SetUpdatedBy(v string) {
	m.UpdatedBy = v
}

func (m *Cluster) SetStatus(v Cluster_Status) {
	m.Status = v
}

func (m *Cluster) SetHealth(v Cluster_Health) {
	m.Health = v
}

func (m *Cluster) SetEndpoints(v *Cluster_Endpoints) {
	m.Endpoints = v
}

func (m *Cluster_Endpoints) SetUi(v string) {
	m.Ui = v
}

func (m *Cluster_Endpoints) SetExternalHttpProxyBalancer(v string) {
	m.ExternalHttpProxyBalancer = v
}

func (m *Cluster_Endpoints) SetInternalHttpProxyAlias(v string) {
	m.InternalHttpProxyAlias = v
}

func (m *Cluster_Endpoints) SetInternalRpcProxyAlias(v string) {
	m.InternalRpcProxyAlias = v
}

func (m *StorageSpec) SetHdd(v *StorageSpec_HddSpec) {
	m.Hdd = v
}

func (m *StorageSpec) SetSsd(v *StorageSpec_SsdSpec) {
	m.Ssd = v
}

func (m *StorageSpec_HddSpec) SetSizeGb(v int64) {
	m.SizeGb = v
}

func (m *StorageSpec_HddSpec) SetCount(v int64) {
	m.Count = v
}

func (m *StorageSpec_SsdSpec) SetSizeGb(v int64) {
	m.SizeGb = v
}

func (m *StorageSpec_SsdSpec) SetType(v string) {
	m.Type = v
}

func (m *StorageSpec_SsdSpec) SetCount(v int64) {
	m.Count = v
}

func (m *ComputeSpec) SetPreset(v string) {
	m.Preset = v
}

func (m *ComputeSpec) SetDisks(v []*ComputeSpec_DiskSpec) {
	m.Disks = v
}

func (m *ComputeSpec) SetScalePolicy(v *ComputeSpec_ScalePolicy) {
	m.ScalePolicy = v
}

func (m *ComputeSpec) SetName(v string) {
	m.Name = v
}

func (m *ComputeSpec_DiskSpec) SetType(v string) {
	m.Type = v
}

func (m *ComputeSpec_DiskSpec) SetSizeGb(v int64) {
	m.SizeGb = v
}

func (m *ComputeSpec_DiskSpec) SetLocations(v []string) {
	m.Locations = v
}

type ComputeSpec_ScalePolicy_Policy = isComputeSpec_ScalePolicy_Policy

func (m *ComputeSpec_ScalePolicy) SetPolicy(v ComputeSpec_ScalePolicy_Policy) {
	m.Policy = v
}

func (m *ComputeSpec_ScalePolicy) SetFixed(v *ComputeSpec_ScalePolicy_FixedScale) {
	m.Policy = &ComputeSpec_ScalePolicy_Fixed{
		Fixed: v,
	}
}

func (m *ComputeSpec_ScalePolicy) SetAuto(v *ComputeSpec_ScalePolicy_AutoScale) {
	m.Policy = &ComputeSpec_ScalePolicy_Auto{
		Auto: v,
	}
}

func (m *ComputeSpec_ScalePolicy_FixedScale) SetSize(v int64) {
	m.Size = v
}

func (m *ComputeSpec_ScalePolicy_AutoScale) SetMinSize(v int64) {
	m.MinSize = v
}

func (m *ComputeSpec_ScalePolicy_AutoScale) SetMaxSize(v int64) {
	m.MaxSize = v
}

func (m *HttpProxySpec) SetCount(v int64) {
	m.Count = v
}

func (m *RpcProxySpec) SetCount(v int64) {
	m.Count = v
}

func (m *TabletSpec) SetPreset(v string) {
	m.Preset = v
}

func (m *TabletSpec) SetCount(v int64) {
	m.Count = v
}

func (m *ProxySpec) SetHttp(v *HttpProxySpec) {
	m.Http = v
}

func (m *ProxySpec) SetRpc(v *RpcProxySpec) {
	m.Rpc = v
}

func (m *OdinSpec) SetChecksTtl(v *durationpb.Duration) {
	m.ChecksTtl = v
}

func (m *ClusterSpec) SetStorage(v *StorageSpec) {
	m.Storage = v
}

func (m *ClusterSpec) SetCompute(v []*ComputeSpec) {
	m.Compute = v
}

func (m *ClusterSpec) SetTablet(v *TabletSpec) {
	m.Tablet = v
}

func (m *ClusterSpec) SetProxy(v *ProxySpec) {
	m.Proxy = v
}

func (m *ClusterSpec) SetOdin(v *OdinSpec) {
	m.Odin = v
}

func (m *ClusterSpec) SetFlavor(v ClusterSpec_Flavor) {
	m.Flavor = v
}
